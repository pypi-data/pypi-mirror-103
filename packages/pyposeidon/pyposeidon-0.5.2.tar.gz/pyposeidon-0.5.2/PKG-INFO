Metadata-Version: 2.1
Name: pyposeidon
Version: 0.5.2
Summary: Framework for Sea Level Hydrodynamic simulations
Home-page: https://github.com/ec-jrc/pyposeidon
Keywords: Hydrodynamic,Sea,Simulation,Visualization
Author: George Breyiannis
Author-email: breyiannis@gmail.com
Requires-Python: >=3.7,<3.10
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Scientific/Engineering :: Hydrology
Classifier: Topic :: Scientific/Engineering :: Visualization
Classifier: Topic :: Software Development :: Libraries
Requires-Dist: Cartopy (>=0.18.0,<0.19.0)
Requires-Dist: Shapely (>=1.7.1,<2.0.0)
Requires-Dist: branca (>=0.4.2,<0.5.0)
Requires-Dist: cfgrib (>=0.9.8,<0.10.0)
Requires-Dist: colorlog (>=4.7.2,<5.0.0)
Requires-Dist: dask (>=2021.2.0,<2022.0.0)
Requires-Dist: datashader (>=0.12.0,<0.13.0)
Requires-Dist: eccodes (>=1.1.0,<2.0.0)
Requires-Dist: f90nml (>=1.2,<2.0)
Requires-Dist: geopandas (>=0.8.2,<0.9.0)
Requires-Dist: geoviews (>=1.8.1,<2.0.0)
Requires-Dist: gmsh (>=4.7.1,<5.0.0)
Requires-Dist: holoviews (>=1.14.1,<2.0.0)
Requires-Dist: hvplot (>=0.7.0,<0.8.0)
Requires-Dist: ipython (>=7.20.0,<8.0.0)
Requires-Dist: llvmlite (>=0.36.0,<0.37.0)
Requires-Dist: matplotlib (>=3.3.4,<4.0.0)
Requires-Dist: moviepy (>=1.0.3,<2.0.0)
Requires-Dist: netCDF4 (>=1.5.6,<2.0.0)
Requires-Dist: numpy (>=1.20.1,<2.0.0)
Requires-Dist: panel (>=0.10.3,<0.11.0)
Requires-Dist: pygeos (>=0.9,<0.10)
Requires-Dist: pyresample (>=1.17.0,<2.0.0)
Requires-Dist: rasterio (>=1.2.0,<2.0.0)
Requires-Dist: requests (>=2.25.1,<3.0.0)
Requires-Dist: scipy (>=1.6.1,<2.0.0)
Requires-Dist: seaborn (>=0.11.1,<0.12.0)
Requires-Dist: tqdm (>=4.58.0,<5.0.0)
Requires-Dist: xarray (>=0.16.2,<0.17.0)
Description-Content-Type: text/markdown

Framework for Sea Level Hydrodynamic simulations
================================================

[![Documentation Status](https://readthedocs.org/projects/pyposeidon/badge/?version=latest)](https://pyposeidon.readthedocs.io/en/latest/?badge=latest) ![GitHub release (latest by date)](https://img.shields.io/github/v/release/ec-jrc/pyPoseidon) ![CI](https://github.com/ec-jrc/pyPoseidon/actions/workflows/conda_and_nested_venv.yml/badge.svg) ![CI](https://github.com/ec-jrc/pyPoseidon/actions/workflows/conda.yml/badge.svg) ![CI](https://github.com/ec-jrc/pyPoseidon/actions/workflows/code_quality.yml/badge.svg) [![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/ec-jrc/pyPoseidon/master?urlpath=%2Flab)

This is a development project utilising multiple solvers (currently DELFT3D & SCHISM) for simulating sea level height (currently only storm surge). The purpose is to create a simple, portable and transparent way of setting up, running and analysing hydrodynamic computations through python scripts and Jupyter Notebooks (http://jupyter.org). See Notebooks in Tutorial/ for relevant prototypes.

## Installation


`conda install -c gbrey pyposeidon`

Afterwards, for now, one needs to install gmsh manually with

`pip install gmsh`

**Note**: Due to an upstream issue, *pydap* needs to be installed manually. See *environment.yml* for info.

### Prerequisities

DELFT3D needs to be compiled for your system. You can download it from http://oss.deltares.nl/web/delft3d/source-code. See Wiki for more details.

SCHISM needs to be compiled for your system. You can download it from  http://columbia.vims.edu/schism/tags/. See http://ccrm.vims.edu/schismweb/ for more info.


You can also install the solvers easily with conda

`conda install -c gbrey pschism delft3d4`


## Tests

There are several sets of tests. You can run pyPoseidon unitests with

`pytest`

In order to test also the solver integration use

`pytest --runschism`

or

`python --rundelft`

if you are using a local installation of the solvers please specify the PATH to the executables in your system such as

`export D3D = '/path_to_folder_bin/lnx64/flow2d3d/'`

`export LD3D = '/path_to_folder_bin/lnx64/flow2d3d/'`

`export SCHISM = '/path_to_schism_executable'`

## docs

```
mkdocs build
mkdocs serve
```

## License
* The project is released under the EUPL v1.2 license.

