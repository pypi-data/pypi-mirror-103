{"version":3,"sources":["webpack:///./app/components/platformPicker.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/projectInstall/overview.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"names":["PLATFORM_CATEGORIES","categoryList","id","name","t","PlatformPicker","keydown","category","props","defaultCategory","filter","noAutoFilter","platform","split","debounce","state","analytics","query","toLowerCase","num_results","platformList","length","React","this","currentCategory","filtered","platforms","includes","filterAliases","some","alias","sort","a","b","localeCompare","showOther","e","target","searchInput","current","focus","preventDefault","setPlatform","listProps","listClassName","NavContainer","CategoryNav","map","key","onClick","setState","to","isActive","SearchBar","size","type","ref","value","placeholder","onChange","logSearch","PlatformList","className","PlatformCard","data-test-id","selected","onClear","stopPropagation","icon","title","tct","search","href","space","p","theme","border","inputStyles","subText","NavTabs","StyledPlatformIcon","PlatformIcon","ClearButton","Button","background","textColor","defaultProps","isCircled","borderless","radius","withLanguageIcon","format","alert","info","backgroundLight","muted","fontSizeExtraSmall","SentryDocumentTitle","orgSlug","projectSlug","children","docTitle","recreateRoute","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","path","indexOf","findLastIndex","slice","baseRoute","hash","fullRoute","join","replaceRouterParams","ProjectInstallOverview","orgId","projectId","installUrl","isGettingStarted","browserHistory","showDsn","window","keyList","issueStreamLink","DsnInfo","DsnContainer","DsnValue","dsn","priority","link","toggleDsn","redirectToDocs","docLink","AsyncComponent","withOrganization","UnstyledSettingsPageHeader","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","gray400","fontSizeLarge","SettingsPageHeader"],"mappings":"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","file":"ProjectInstallOverview.0ccc47f174ee44c1db4b.js","sourcesContent":["import React from 'react';\nimport keydown from 'react-keydown';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport {PlatformIcon} from 'platformicons';\n\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport categoryList, {filterAliases, PlatformKey} from 'app/data/platformCategories';\nimport platforms from 'app/data/platforms';\nimport {IconClose, IconProject, IconSearch} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\nimport {PlatformIntegration} from 'app/types';\nimport {analytics} from 'app/utils/analytics';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\nconst PLATFORM_CATEGORIES = [...categoryList, {id: 'all', name: t('All')}] as const;\n\ntype Category = typeof PLATFORM_CATEGORIES[number]['id'];\n\ntype Props = {\n  setPlatform: (key: PlatformKey | null) => void;\n  platform?: string | null;\n  showOther?: boolean;\n  listClassName?: string;\n  listProps?: React.HTMLProps<HTMLDivElement>;\n  noAutoFilter?: boolean;\n  defaultCategory?: Category;\n};\n\ntype State = {\n  category: Category;\n  filter: string;\n};\n\nclass PlatformPicker extends React.Component<Props, State> {\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state: State = {\n    category: this.props.defaultCategory ?? PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const filter = this.state.filter.toLowerCase();\n\n    const subsetMatch = (platform: PlatformIntegration) =>\n      platform.id.includes(filter) ||\n      platform.name.toLowerCase().includes(filter) ||\n      filterAliases[platform.id as PlatformKey]?.some(alias => alias.includes(filter));\n\n    const categoryMatch = (platform: PlatformIntegration) =>\n      category === 'all' ||\n      (currentCategory?.platforms as undefined | string[])?.includes(platform.id);\n\n    const filtered = platforms\n      .filter(this.state.filter ? subsetMatch : categoryMatch)\n      .sort((a, b) => a.id.localeCompare(b.id));\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      analytics('platformpicker.search', {\n        query: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n      });\n    }\n  }, 300);\n\n  @keydown('/')\n  focusSearch(e: KeyboardEvent) {\n    if (e.target !== this.searchInput.current) {\n      this.searchInput?.current?.focus();\n      e.preventDefault();\n    }\n  }\n\n  searchInput = React.createRef<HTMLInputElement>();\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps, listClassName} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <React.Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={(e: React.MouseEvent) => {\n                  analytics('platformpicker.select_tab', {category: id});\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <IconSearch size=\"xs\" />\n            <input\n              type=\"text\"\n              ref={this.searchInput}\n              value={filter}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList className={listClassName} {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={(e: React.MouseEvent) => {\n                setPlatform(null);\n                e.stopPropagation();\n              }}\n              onClick={() => {\n                analytics('platformpicker.select_platform', {platform: platform.id});\n                setPlatform(platform.id as PlatformKey);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon={<IconProject size=\"xl\" />}\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  margin-bottom: ${space(2)};\n  display: grid;\n  grid-gap: ${space(2)};\n  grid-template-columns: 1fr minmax(0, 300px);\n  align-items: start;\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst SearchBar = styled('div')`\n  ${p => inputStyles(p)};\n  padding: 0 8px;\n  color: ${p => p.theme.subText};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n  margin-top: -${space(0.75)};\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n  white-space: nowrap;\n\n  > li {\n    float: none;\n    display: inline-block;\n  }\n`;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPlatformIcon = styled(PlatformIcon)`\n  margin: ${space(2)};\n`;\n\nconst ClearButton = styled(Button)`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  height: 22px;\n  width: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background: ${p => p.theme.background};\n  color: ${p => p.theme.textColor};\n`;\n\nClearButton.defaultProps = {\n  icon: <IconClose isCircled size=\"xs\" />,\n  borderless: true,\n  size: 'xsmall',\n};\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIcon\n      platform={platform.id}\n      size={56}\n      radius={5}\n      withLanguageIcon\n      format=\"lg\"\n    />\n\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && p.theme.alert.info.backgroundLight};\n\n  &:hover {\n    background: ${p => p.theme.alert.muted.backgroundLight};\n  }\n\n  h3 {\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    color: ${p => (p.selected ? p.theme.textColor : p.theme.subText)};\n    text-align: center;\n    font-size: ${p => p.theme.fontSizeExtraSmall};\n    text-transform: uppercase;\n    margin: 0;\n    padding: 0 ${space(0.5)};\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport PlatformPicker from 'app/components/platformPicker';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {PlatformKey} from 'app/data/platformCategories';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withOrganization from 'app/utils/withOrganization';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'app/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<{orgId: string; projectId: string}, {}> & {\n  organization: Organization;\n} & AsyncComponent['props'];\n\ntype State = {\n  keyList: Array<ProjectKey> | null;\n} & AsyncComponent['state'];\n\nclass ProjectInstallOverview extends AsyncComponent<Props, State> {\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  redirectToDocs = (platform: PlatformKey | null) => {\n    const {orgId, projectId} = this.props.params;\n\n    const installUrl = this.isGettingStarted\n      ? `/organizations/${orgId}/projects/${projectId}/getting-started/${platform}/`\n      : recreateRoute(`install/${platform}/`, {\n          ...this.props,\n          stepBack: -3,\n        });\n\n    browserHistory.push(installUrl);\n  };\n\n  toggleDsn = () => {\n    this.setState(state => ({showDsn: !state.showDsn}));\n  };\n\n  render() {\n    const {orgId, projectId} = this.props.params;\n    const {keyList, showDsn} = this.state;\n\n    const issueStreamLink = `/organizations/${orgId}/issues/#welcome`;\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Instrumentation')} projectSlug={projectId} />\n        <SettingsPageHeader title={t('Configure your application')} />\n        <TextBlock>\n          {t(\n            'Get started by selecting the platform or language that powers your application.'\n          )}\n        </TextBlock>\n\n        {showDsn ? (\n          <DsnInfo>\n            <DsnContainer>\n              <strong>{t('DSN')}</strong>\n              <DsnValue>{keyList?.[0].dsn.public}</DsnValue>\n            </DsnContainer>\n\n            <Button priority=\"primary\" to={issueStreamLink}>\n              {t('Got it! Take me to the Issue Stream.')}\n            </Button>\n          </DsnInfo>\n        ) : (\n          <p>\n            <small>\n              {tct('Already have things setup? [link:Get your DSN]', {\n                link: <Button priority=\"link\" onClick={this.toggleDsn} />,\n              })}\n              .\n            </small>\n          </p>\n        )}\n        <PlatformPicker setPlatform={this.redirectToDocs} showOther={false} />\n        <p>\n          {tct(\n            `For a complete list of client integrations, please see\n             [docLink:our in-depth documentation].`,\n            {docLink: <ExternalLink href=\"https://docs.sentry.io\" />}\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst DsnValue = styled(p => (\n  <code {...p}>\n    <AutoSelectText>{p.children}</AutoSelectText>\n  </code>\n))`\n  overflow: hidden;\n`;\n\nconst DsnInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst DsnContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  grid-gap: ${space(1.5)} ${space(2)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(ProjectInstallOverview);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"sourceRoot":""}