{"version":3,"sources":["webpack:///./app/views/settings/components/forms/apiForm.tsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.tsx","webpack:///./app/views/settings/components/forms/form.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"names":["ApiForm","Client","data","onSuccess","onError","props","onSubmit","addLoadingMessage","t","api","request","apiEndpoint","method","apiMethod","success","response","clearIndicators","error","this","clear","otherProps","React","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","selectedValue","e","value","onChange","target","checked","filter","v","disabled","choices","map","choiceValue","choiceLabel","LabelContainer","key","type","bind","defined","indexOf","p","theme","breakpoints","Form","context","model","FormModel","skipPreventDefault","preventDefault","isSaving","onPreSubmit","getData","onSubmitSuccess","onSubmitError","saveForm","submitSuccess","submitError","saveOnBlur","resetOnError","onFieldChange","initialData","allowUndo","setInitialData","setFormOptions","form","reset","className","children","footerClass","footerStyle","submitDisabled","submitLabel","submitPriority","cancelLabel","onCancel","extraButton","requireChanges","hideFooter","shouldShowFooter","data-test-id","isRenderFunc","StyledFooter","style","DefaultButtons","onClick","marginLeft","priority","isError","formChanged","PropTypes","Panel","space","UnstyledSettingsPageHeader","icon","title","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","gray400","fontSizeLarge","SettingsPageHeader"],"mappings":"8lCAaqBA,E,snBAKL,IAAIC,O,8BAEP,SACTC,EACAC,EACAC,GAEA,EAAKC,MAAMC,UAAY,EAAKD,MAAMC,SAASJ,IAC3CK,SAAkBC,OAAE,oBACpB,EAAKC,IAAIC,QAAQ,EAAKL,MAAMM,YAAa,CACvCC,OAAQ,EAAKP,MAAMQ,UACnBX,OACAY,QAAS,SAAAC,IACPC,UACAb,EAAUY,IAEZE,MAAO,SAAF,oGAAE,WAAAA,IACLD,UACAZ,EAAQa,W,qDAtBd,WACEC,KAAKT,IAAIU,U,oBA0BX,WAAS,MAMHD,KAAKb,MADJe,GALE,EAELd,SAFK,EAGLO,UAHK,EAILF,aAJK,kDAQP,OAAO,QAAC,KAAD,QAAML,SAAUY,KAAKZ,UAAcc,Q,GApCTC,aAAhBrB,E,+7BCPrB,IAAMsB,GAA0B,OAAO,MAAP,sDAAH,uDAKvBC,GAAQ,OAAO,QAAP,oCAAH,iHAQLC,GAAgB,OAAO,OAAP,4CAAH,2CAabC,E,4nBACO,SAACC,EAAgCC,GAA2C,MAC3D,EAAKtB,MAAxBuB,EAD8E,EAC9EA,MAAOC,EADuE,EACvEA,SAGU,mBAAbA,GAUXA,EANIF,EAAEG,OAAOC,QACAH,EAAQ,GAAH,eAAOA,GAAP,CAAcF,IAAiB,CAACE,GAErCA,EAAMI,QAAO,SAAAC,GAAC,OAAIA,IAAMP,KAGlBC,M,uCAGrB,WAAS,aAC4BT,KAAKb,MAAjC6B,EADA,EACAA,SAAUC,EADV,EACUA,QAASP,EADnB,EACmBA,MAE1B,OACE,QAACN,EAAD,KACGa,EAAQC,KAAI,+BAAEC,EAAF,KAAeC,EAAf,YACX,QAACC,EAAD,CAAgBC,IAAKH,IACnB,QAACd,EAAD,MACE,iBACEkB,KAAK,WACLb,MAAOS,EACPR,SAAU,EAAKA,SAASa,KAAK,EAAML,GACnCH,SAAUA,EACVH,SAASY,QAAQf,KAA0C,IAAhCA,EAAMgB,QAAQP,MAE3C,QAACb,EAAD,KAAgBc,a,GAjCCjB,aAAzBI,E,+BA0CN,UAEA,IAAMc,GAAiB,OAAO,MAAP,6CAAH,iCAGG,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KAH5B,mCAMG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KAN5B,uCASG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,YAAY,KAT5B,kB,0jCCZCC,E,wcAMnB,WAAY3C,EAAc4C,GAAkB,sBAC1C,cAAM5C,EAAO4C,IAD6B,0BAsCzB,EAAK5C,MAAM6C,OAAS,IAAIC,MAtCC,8BAwCjC,SAAAxB,GAAK,SACb,EAAKtB,MAAM+C,oBAAsBzB,EAAE0B,iBAChC,EAAKH,MAAMI,WAIf,eAAKjD,OAAMkD,mBAAX,iBAEI,EAAKlD,MAAMC,SACb,EAAKD,MAAMC,SACT,EAAK4C,MAAMM,UACX,EAAKC,gBACL,EAAKC,cACL/B,EACA,EAAKuB,OAGP,EAAKA,MAAMS,gBAzD6B,qCA6D1B,SAAAzD,GAAQ,IACjBuD,EAAmB,EAAKpD,MAAxBoD,gBACP,EAAKP,MAAMU,cAAc1D,GAErBuD,GACFA,EAAgBvD,EAAM,EAAKgD,WAlEa,mCAsE5B,SAAAjC,GAAS,IAChByC,EAAiB,EAAKrD,MAAtBqD,cACP,EAAKR,MAAMW,YAAY5C,GAEnByC,GACFA,EAAczC,EAAO,EAAKiC,UA3Ec,IAGxCY,EASEzD,EATFyD,WACAnD,EAQEN,EARFM,YACAE,EAOER,EAPFQ,UACAkD,EAME1D,EANF0D,aACAN,EAKEpD,EALFoD,gBACAC,EAIErD,EAJFqD,cACAM,EAGE3D,EAHF2D,cACAC,EAEE5D,EAFF4D,YACAC,EACE7D,EADF6D,UAXwC,OAc1C,EAAKhB,MAAMiB,eAAeF,GAC1B,EAAKf,MAAMkB,eAAe,CACxBL,eACAG,YACAF,gBACAP,kBACAC,gBACAI,aACAnD,cACAE,cAvBwC,E,8CA2B5C,WACE,MAAO,CACLiD,WAAY5C,KAAKb,MAAMyD,WACvBO,KAAMnD,KAAKgC,S,kCAIf,WACEhC,KAAKgC,MAAMoB,U,oBA4Cb,WAAS,aAeHpD,KAAKb,MAbPkE,EAFK,EAELA,UACAC,EAHK,EAGLA,SACAC,EAJK,EAILA,YACAC,EALK,EAKLA,YACAC,EANK,EAMLA,eACAC,EAPK,EAOLA,YACAC,EARK,EAQLA,eACAC,EATK,EASLA,YACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,YACAC,EAZK,EAYLA,eACAnB,EAbK,EAaLA,WACAoB,EAdK,EAcLA,WAEIC,OACkB,IAAfD,GAA8BA,GAAcpB,EAErD,OACE,gBACExD,SAAUY,KAAKZ,SACfiE,UAAWA,UAAa,eACxBa,eAAclE,KAAKb,MAAM,kBAEzB,oBACGgF,OAAyBb,GAAYA,EAAS,CAACtB,MAAOhC,KAAKgC,QAAUsB,GAGvEW,IACC,QAACG,EAAD,CACEf,UAAWE,EACXc,MAAOb,EACPZ,WAAYA,GAEXkB,GACD,QAACQ,EAAD,KACGT,IACC,QAAC,KAAD,MACG,kBACC,QAAC,KAAD,CACEtC,KAAK,SACLP,SAAU,EAAKgB,MAAMI,SACrBmC,QAASV,EACTQ,MAAO,CAACG,WAAY,IAEnBZ,WAAetE,OAAE,eAM1B,QAAC,KAAD,MACG,kBACC,QAAC,KAAD,CACE4E,eAAa,cACbO,SAAUd,UAAkB,UAC5B3C,SACE,EAAKgB,MAAM0C,SACX,EAAK1C,MAAMI,UACXqB,KACCM,IAAkB,EAAK/B,MAAM2C,YAEhCpD,KAAK,UAEJmC,WAAepE,OAAE,2B,GAtJJa,aAAb2B,E,2BAAAA,E,oBACQ,CACzBc,WAAYgC,SACZzB,KAAMyB,aA+JV,IAAMR,GAAe,OAAO,MAAP,2CAAH,2IASd,SAAAzC,GAAC,OACAA,EAAEiB,YAAH,cAEAiC,IAFA,4SAVc,KA6BZP,GAAiB,OAAO,MAAP,6CAAH,0BAENQ,OAAM,GAFA,4D,m0BCrOdC,E,wiBAKJ,WAAS,MAUH/E,KAAKb,MARP6F,EAFK,EAELA,KACAC,EAHK,EAGLA,MACAC,EAJK,EAILA,SACAC,EALK,EAKLA,OACAC,EANK,EAMLA,KACAC,EAPK,EAOLA,cACAC,EARK,EAQLA,KACGnG,GATE,6EAeDoG,GAAYL,EAElB,OACE,cAAS/F,GACP,QAACqG,EAAD,CAAiBD,SAAUA,IACzB,QAACE,EAAD,KACGT,IAAQ,QAACU,EAAD,KAAOV,GACfC,IACC,QAACU,EAAD,CAAOP,KAAMA,EAAMQ,OAAQP,IACzB,QAAC,KAAD,KAAcJ,GACbC,IAAY,QAACW,EAAD,KAAWX,KAI7BC,IAAU,QAACW,EAAD,CAAQP,SAAUA,GAAWJ,IAGzCG,IAAQ,QAACS,EAAD,KAAcT,GACtBF,IAAQ,QAACY,EAAD,KAAcZ,Q,GAtCUjF,aAAnC4E,E,iDAAAA,E,eACkB,CACpBM,eAAe,IA+CnB,IAAMG,GAAkB,OAAO,MAAP,8CAAH,6BAEJ,SAAA7D,GAAC,OAAKA,EAAE4D,SAAW,SAAW,eAF1B,KAIfE,GAAe,OAAO,MAAP,2CAAH,mCAIZE,GAAQ,OAAO,MAAP,qCACV,SAAAhE,GAAC,OAAKA,EAAEiE,QAAH,uCADE,YAECd,OAAM,GAFP,KAEaA,OAAM,GAFnB,KAEyBA,OAAM,GAF/B,OAILe,GAAW,OAAO,MAAP,uCAAH,UACH,SAAAlE,GAAC,OAAIA,EAAEC,MAAMqE,UADV,+BAGC,SAAAtE,GAAC,OAAIA,EAAEC,MAAMsE,gBAHd,aAIDpB,OAAM,KAJL,SAORY,GAAO,OAAO,MAAP,mCAAH,iBACQZ,OAAM,GADd,KAIJgB,GAAS,OAAO,MAAP,qCAAH,eACI,SAAAnE,GAAC,OAAKA,EAAE4D,SAAW,KAAMT,OAAM,KADnC,KAINqB,GAAqB,OAAOpB,EAAP,iDAAH,+BAIPD,OAAM,GAJC,KAOlBiB,GAAc,OAAO,MAAP,0CAAH,sBAEDjB,OAAM,GAFL,KAIXkB,GAAc,OAAO,MAAP,0CAAH,2CAKjB","file":"app_views_settings_components_forms_apiForm_tsx-app_views_settings_components_forms_controls_-57b7f5.23d26636e3ff67381b8d.js","sourcesContent":["import React from 'react';\n\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t} from 'app/locale';\nimport Form from 'app/views/settings/components/forms/form';\n\ntype Props = Form['props'] & {\n  onSubmit?: (data: Record<string, any>) => void;\n  apiMethod: string;\n  apiEndpoint: string;\n};\n\nexport default class ApiForm extends React.Component<Props> {\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  api: Client = new Client();\n\n  onSubmit = (\n    data: Record<string, any>,\n    onSuccess: (response: Record<string, any>) => void,\n    onError: (error: any) => void\n  ) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    addLoadingMessage(t('Saving changes\\u2026'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: response => {\n        clearIndicators();\n        onSuccess(response);\n      },\n      error: error => {\n        clearIndicators();\n        onError(error);\n      },\n    });\n  };\n\n  render() {\n    const {\n      onSubmit: _onSubmit,\n      apiMethod: _apiMethod,\n      apiEndpoint: _apiEndpoint,\n      ...otherProps\n    } = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Choices} from 'app/types';\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\ntype SelectedValue = (string | number)[];\n\ntype Props = {\n  value: (string | number)[];\n  choices: Choices;\n  onChange?: (value: SelectedValue, event: React.ChangeEvent<HTMLInputElement>) => void;\n  disabled?: boolean;\n};\n\nclass MultipleCheckbox extends React.Component<Props> {\n  onChange = (selectedValue: string | number, e: React.ChangeEvent<HTMLInputElement>) => {\n    const {value, onChange} = this.props;\n    let newValue: SelectedValue = [];\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => (\n          <LabelContainer key={choiceValue}>\n            <Label>\n              <input\n                type=\"checkbox\"\n                value={choiceValue}\n                onChange={this.onChange.bind(this, choiceValue)}\n                disabled={disabled}\n                checked={defined(value) && value.indexOf(choiceValue) !== -1}\n              />\n              <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n            </Label>\n          </LabelContainer>\n        ))}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n\nexport default MultipleCheckbox;\n\nconst LabelContainer = styled('div')`\n  width: 100%;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    width: 50%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    width: 33.333%;\n  }\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    width: 25%;\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {Observer} from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nimport {APIRequestMethod} from 'app/api';\nimport Button from 'app/components/button';\nimport Panel from 'app/components/panels/panel';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport FormModel, {FormOptions} from 'app/views/settings/components/forms/model';\n\ntype Data = Record<string, any>;\n\ntype RenderProps = {\n  model: FormModel;\n};\n\ntype RenderFunc = (props: RenderProps) => React.ReactNode;\n\ntype Props = {\n  apiMethod?: APIRequestMethod;\n  apiEndpoint?: string;\n  children?: React.ReactNode | RenderFunc;\n  className?: string;\n  cancelLabel?: string;\n  submitDisabled?: boolean;\n  submitLabel?: string;\n  submitPriority?: React.ComponentProps<typeof Button>['priority'];\n  footerClass?: string;\n  footerStyle?: React.CSSProperties;\n  extraButton?: React.ReactNode;\n  initialData?: Data;\n  // Require changes before able to submit form\n  requireChanges?: boolean;\n  // Reset form when there are errors; after submit\n  resetOnError?: boolean;\n  hideFooter?: boolean;\n  allowUndo?: boolean;\n  // Save field on control blur\n  saveOnBlur?: boolean;\n  model?: FormModel;\n  // if set to true, preventDefault is not called\n  skipPreventDefault?: boolean;\n  additionalFieldProps?: {[key: string]: any};\n  'data-test-id'?: string;\n\n  onCancel?: (e: React.MouseEvent) => void;\n  onSubmit?: (\n    data: Data,\n    onSubmitSuccess: (data: Data) => void,\n    onSubmitError: (error: any) => void,\n    e: React.FormEvent,\n    model: FormModel\n  ) => void;\n  onPreSubmit?: () => void;\n} & Pick<FormOptions, 'onSubmitSuccess' | 'onSubmitError' | 'onFieldChange'>;\n\ntype Context = {\n  saveOnBlur: boolean;\n  form: FormModel;\n};\n\nexport default class Form extends React.Component<Props> {\n  static childContextTypes = {\n    saveOnBlur: PropTypes.bool,\n    form: PropTypes.object,\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    const {\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n      resetOnError,\n      onSubmitSuccess,\n      onSubmitError,\n      onFieldChange,\n      initialData,\n      allowUndo,\n    } = props;\n\n    this.model.setInitialData(initialData);\n    this.model.setFormOptions({\n      resetOnError,\n      allowUndo,\n      onFieldChange,\n      onSubmitSuccess,\n      onSubmitError,\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n    });\n  }\n\n  getChildContext() {\n    return {\n      saveOnBlur: this.props.saveOnBlur,\n      form: this.model,\n    };\n  }\n\n  componentWillUnmount() {\n    this.model.reset();\n  }\n\n  model: FormModel = this.props.model || new FormModel();\n\n  onSubmit = e => {\n    !this.props.skipPreventDefault && e.preventDefault();\n    if (this.model.isSaving) {\n      return;\n    }\n\n    this.props.onPreSubmit?.();\n\n    if (this.props.onSubmit) {\n      this.props.onSubmit(\n        this.model.getData(),\n        this.onSubmitSuccess,\n        this.onSubmitError,\n        e,\n        this.model\n      );\n    } else {\n      this.model.saveForm();\n    }\n  };\n\n  onSubmitSuccess = data => {\n    const {onSubmitSuccess} = this.props;\n    this.model.submitSuccess(data);\n\n    if (onSubmitSuccess) {\n      onSubmitSuccess(data, this.model);\n    }\n  };\n\n  onSubmitError = error => {\n    const {onSubmitError} = this.props;\n    this.model.submitError(error);\n\n    if (onSubmitError) {\n      onSubmitError(error, this.model);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      footerClass,\n      footerStyle,\n      submitDisabled,\n      submitLabel,\n      submitPriority,\n      cancelLabel,\n      onCancel,\n      extraButton,\n      requireChanges,\n      saveOnBlur,\n      hideFooter,\n    } = this.props;\n    const shouldShowFooter =\n      typeof hideFooter !== 'undefined' ? !hideFooter : !saveOnBlur;\n\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={className ?? 'form-stacked'}\n        data-test-id={this.props['data-test-id']}\n      >\n        <div>\n          {isRenderFunc<RenderFunc>(children) ? children({model: this.model}) : children}\n        </div>\n\n        {shouldShowFooter && (\n          <StyledFooter\n            className={footerClass}\n            style={footerStyle}\n            saveOnBlur={saveOnBlur}\n          >\n            {extraButton}\n            <DefaultButtons>\n              {onCancel && (\n                <Observer>\n                  {() => (\n                    <Button\n                      type=\"button\"\n                      disabled={this.model.isSaving}\n                      onClick={onCancel}\n                      style={{marginLeft: 5}}\n                    >\n                      {cancelLabel ?? t('Cancel')}\n                    </Button>\n                  )}\n                </Observer>\n              )}\n\n              <Observer>\n                {() => (\n                  <Button\n                    data-test-id=\"form-submit\"\n                    priority={submitPriority ?? 'primary'}\n                    disabled={\n                      this.model.isError ||\n                      this.model.isSaving ||\n                      submitDisabled ||\n                      (requireChanges ? !this.model.formChanged : false)\n                    }\n                    type=\"submit\"\n                  >\n                    {submitLabel ?? t('Save Changes')}\n                  </Button>\n                )}\n              </Observer>\n            </DefaultButtons>\n          </StyledFooter>\n        )}\n      </form>\n    );\n  }\n}\n\nconst StyledFooter = styled('div')<{saveOnBlur?: boolean}>`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 25px;\n  border-top: 1px solid #e9ebec;\n  background: none;\n  padding: 16px 0 0;\n  margin-bottom: 16px;\n\n  ${p =>\n    !p.saveOnBlur &&\n    `\n  ${Panel} & {\n    margin-top: 0;\n    padding-right: 36px;\n  }\n\n  /* Better padding with form inside of a modal */\n  .modal-content & {\n    padding-right: 30px;\n    margin-left: -30px;\n    margin-right: -30px;\n    margin-bottom: -30px;\n    margin-top: 16px;\n    padding-bottom: 16px;\n  }\n  `};\n`;\n\nconst DefaultButtons = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  flex: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"sourceRoot":""}