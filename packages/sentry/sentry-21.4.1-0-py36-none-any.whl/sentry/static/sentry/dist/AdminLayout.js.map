{"version":3,"sources":["webpack:///./app/views/admin/adminLayout.tsx","webpack:///./app/views/settings/components/settingsNavItem.tsx","webpack:///./app/views/settings/components/settingsNavigationGroup.tsx","webpack:///./app/views/settings/components/settingsNavigation.tsx"],"names":["AdminNavigation","stickyTop","navigationObjects","name","items","path","index","title","AdminLayout","children","props","Page","renderNavigation","SettingsNavItem","badge","label","id","LabelHook","HookOrDefault","hookName","defaultComponent","renderedBadge","type","text","StyledNavItem","onlyActiveOnIndex","activeClassName","Link","p","theme","gray300","textColor","active","backgroundSecondary","SettingsNavigationGroup","organization","project","NavSection","data-test-id","SettingsHeading","map","show","recordAnalytics","badgeResult","to","replaceRouterParams","orgId","slug","projectId","key","onClick","window","location","pathname","trackAnalyticsEvent","organization_id","project_id","eventName","eventKey","sidebar_item_id","dest","subText","SettingsNavigation","error","errorInfo","Sentry","scope","Object","keys","forEach","setExtra","href","this","hooks","hookConfigs","otherProps","navWithHooks","concat","PositionStickyWrapper","config","Hook","i","React","space","breakpoints"],"mappings":"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","file":"AdminLayout.39430863dd3dc1999356.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport SettingsLayout from 'app/views/settings/components/settingsLayout';\nimport SettingsNavigation from 'app/views/settings/components/settingsNavigation';\n\nconst AdminNavigation = () => (\n  <SettingsNavigation\n    stickyTop=\"0\"\n    navigationObjects={[\n      {\n        name: 'System Status',\n        items: [\n          {path: '/manage/', index: true, title: 'Overview'},\n          {path: '/manage/buffer/', title: 'Buffer'},\n          {path: '/manage/queue/', title: 'Queue'},\n          {path: '/manage/quotas/', title: 'Quotas'},\n          {path: '/manage/status/environment/', title: 'Environment'},\n          {path: '/manage/status/packages/', title: 'Packages'},\n          {path: '/manage/status/mail/', title: 'Mail'},\n          {path: '/manage/status/warnings/', title: 'Warnings'},\n          {path: '/manage/settings/', title: 'Settings'},\n        ],\n      },\n      {\n        name: 'Manage',\n        items: [\n          {path: '/manage/organizations/', title: 'Organizations'},\n          {path: '/manage/projects/', title: 'Projects'},\n          {path: '/manage/users/', title: 'Users'},\n        ],\n      },\n    ]}\n  />\n);\n\ntype Props = {\n  children: React.ReactNode;\n} & RouteComponentProps<{}, {}>;\n\nfunction AdminLayout({children, ...props}: Props) {\n  return (\n    <DocumentTitle title=\"Sentry Admin\">\n      <Page>\n        <SettingsLayout renderNavigation={AdminNavigation} {...props}>\n          {children}\n        </SettingsLayout>\n      </Page>\n    </DocumentTitle>\n  );\n}\n\nexport default AdminLayout;\n\nconst Page = styled('div')`\n  display: flex;\n  flex-grow: 1;\n  margin-bottom: -20px;\n`;\n","import React from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Badge from 'app/components/badge';\nimport FeatureBadge from 'app/components/featureBadge';\nimport HookOrDefault from 'app/components/hookOrDefault';\n\ntype Props = {\n  to: React.ComponentProps<Link>['to'];\n  label: React.ReactNode;\n  badge?: string | number | null;\n  index?: boolean;\n  id?: string;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\nconst SettingsNavItem = ({badge, label, index, id, ...props}: Props) => {\n  const LabelHook = HookOrDefault({\n    hookName: 'sidebar:item-label',\n    defaultComponent: ({children}) => <React.Fragment>{children}</React.Fragment>,\n  });\n\n  const renderedBadge =\n    badge === 'new' ? <FeatureBadge type=\"new\" /> : <Badge text={badge} />;\n\n  return (\n    <StyledNavItem onlyActiveOnIndex={index} activeClassName=\"active\" {...props}>\n      <LabelHook id={id}>{label}</LabelHook>\n\n      {badge ? renderedBadge : null}\n    </StyledNavItem>\n  );\n};\n\nconst StyledNavItem = styled(Link)`\n  display: block;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  line-height: 30px;\n  position: relative;\n\n  &.active {\n    color: ${p => p.theme.textColor};\n\n    &:before {\n      background: ${p => p.theme.active};\n    }\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n    outline: none;\n  }\n\n  &.focus-visible {\n    outline: none;\n    background: ${p => p.theme.backgroundSecondary};\n    padding-left: 15px;\n    margin-left: -15px;\n    border-radius: 3px;\n\n    &:before {\n      left: -15px;\n    }\n  }\n\n  &:before {\n    position: absolute;\n    content: '';\n    display: block;\n    top: 4px;\n    left: -30px;\n    height: 20px;\n    width: 4px;\n    background: transparent;\n    border-radius: 0 2px 2px 0;\n  }\n`;\n\nexport default SettingsNavItem;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport SettingsNavItem from 'app/views/settings/components/settingsNavItem';\nimport {NavigationGroupProps} from 'app/views/settings/types';\n\nconst SettingsNavigationGroup = (props: NavigationGroupProps) => {\n  const {organization, project, name, items} = props;\n\n  return (\n    <NavSection data-test-id={name}>\n      <SettingsHeading>{name}</SettingsHeading>\n      {items.map(({path, title, index, show, badge, id, recordAnalytics}) => {\n        if (typeof show === 'function' && !show(props)) {\n          return null;\n        }\n        if (typeof show !== 'undefined' && !show) {\n          return null;\n        }\n        const badgeResult = typeof badge === 'function' ? badge(props) : null;\n        const to = replaceRouterParams(path, {\n          ...(organization ? {orgId: organization.slug} : {}),\n          ...(project ? {projectId: project.slug} : {}),\n        });\n\n        const handleClick = () => {\n          //only call the analytics event if the URL is changing\n          if (recordAnalytics && to !== window.location.pathname) {\n            trackAnalyticsEvent({\n              organization_id: organization && organization.id,\n              project_id: project && project.id,\n              eventName: 'Sidebar Item Clicked',\n              eventKey: 'sidebar.item_clicked',\n              sidebar_item_id: id,\n              dest: path,\n            });\n          }\n        };\n\n        return (\n          <SettingsNavItem\n            key={title}\n            to={to}\n            label={title}\n            index={index}\n            badge={badgeResult}\n            id={id}\n            onClick={handleClick}\n          />\n        );\n      })}\n    </NavSection>\n  );\n};\n\nconst NavSection = styled('div')`\n  margin-bottom: 20px;\n`;\n\nconst SettingsHeading = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\n\nexport default SettingsNavigationGroup;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport space from 'app/styles/space';\nimport SettingsNavigationGroup from 'app/views/settings/components/settingsNavigationGroup';\nimport {NavigationProps, NavigationSection} from 'app/views/settings/types';\n\ntype DefaultProps = {\n  /**\n   * Additional navigation configuration driven by hooks\n   */\n  hookConfigs: NavigationSection[];\n  /**\n   * Additional navigation elements driven from hooks\n   */\n  hooks: React.ReactElement[];\n  /**\n   * How far from the top of the page should the navigation be when stickied.\n   */\n  stickyTop: string;\n};\n\ntype Props = DefaultProps &\n  NavigationProps & {\n    /**\n     * The configuration for this navigation panel\n     */\n    navigationObjects: NavigationSection[];\n  };\n\nclass SettingsNavigation extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    hooks: [],\n    hookConfigs: [],\n    stickyTop: '69px',\n  };\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      scope.setExtra('url', window.location.href);\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    const {navigationObjects, hooks, hookConfigs, stickyTop, ...otherProps} = this.props;\n    const navWithHooks = navigationObjects.concat(hookConfigs);\n\n    return (\n      <PositionStickyWrapper stickyTop={stickyTop}>\n        {navWithHooks.map(config => (\n          <SettingsNavigationGroup key={config.name} {...otherProps} {...config} />\n        ))}\n        {hooks.map((Hook, i) => React.cloneElement(Hook, {key: `hook-${i}`}))}\n      </PositionStickyWrapper>\n    );\n  }\n}\n\nconst PositionStickyWrapper = styled('div')<{stickyTop: string}>`\n  padding: ${space(4)};\n  padding-right: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    position: sticky;\n    top: ${p => p.stickyTop};\n    overflow: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nexport default SettingsNavigation;\n"],"sourceRoot":""}