{"version":3,"sources":["webpack:///./app/components/well.tsx","webpack:///./app/components/avatarCropper.tsx","webpack:///./app/components/avatarChooser.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"names":["p","theme","border","backgroundSecondary","hasImage","centered","resizerPositions","nw","ne","se","sw","AvatarCropper","file","objectURL","mousePosition","pageX","pageY","resizeDimensions","top","left","size","resizeDirection","React","ev","target","files","test","type","revokeObjectUrl","updateDataUrlState","props","window","URL","createObjectURL","setState","savedDataUrl","addErrorMessage","t","state","revokeObjectURL","error","validateImage","image","current","Math","min","clientHeight","clientWidth","drawToCanvas","cropContainer","preventDefault","document","addEventListener","updateDimensions","onMouseUp","removeEventListener","direction","stopPropagation","updateSize","stopResize","yDiff","xDiff","getNewDimensions","container","oldDimensions","diff","toUpperCase","height","width","editingTop","editingLeft","newDimensions","maxSize","MIN_DIMENSION","click","this","img","naturalWidth","naturalHeight","tct","MAX_DIMENSION","canvas","ratio","getContext","drawImage","dataUrl","toDataURL","model","uuid","avatar","avatarUuid","photoUrl","AVATAR_URL_MAP","src","imageSrc","style","ImageCropper","CropContainer","ref","onLoad","onImageLoad","onDragStart","e","Cropper","onMouseDown","Object","keys","map","pos","Resizer","key","position","startResize","bind","upload","onClick","uploadClick","uploader","HiddenCanvas","renderImageCrop","className","UploadInput","accept","ALLOWED_MIMETYPES","onChange","onSelectFile","background","gray300","AvatarChooser","hasError","endpoint","api","data","avatarType","undefined","avatar_photo","split","avatar_type","request","method","success","resp","handleSuccess","handleError","id","updateState","nextProps","msg","onSave","addSuccessMessage","allowGravatar","allowUpload","allowLetter","isUser","disabled","isLetter","isTeam","isOrganization","choices","push","AvatarForm","AvatarGroup","inline","flex","value","label","handleChange","gravatar","user","organization","team","AvatarUploadSection","href","dataState","AvatarSubmit","priority","handleSaveSettings","withApi","FormPanel","title","fields","access","additionalFieldProps","renderFooter","renderHeader","otherProps","sanitizeQuerySelector","field","defaultValue","fieldWithoutDefaultValue","disabledReason","name","highlighted","JsonForm","getLocation","context","hash","scrollToHash","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","location","formGroup","i","renderForm","PropTypes","UnstyledSettingsPageHeader","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","space","gray400","fontSizeLarge","SettingsPageHeader"],"mappings":"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","file":"app_components_avatarChooser_tsx-app_views_settings_components_forms_jsonForm_tsx-app_views_s-d0030a.bb16253a9f274bfa8299.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  hasImage?: boolean;\n  centered?: boolean;\n  children: React.ReactNode;\n  theme?: any;\n};\n\ntype WellProps = Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props;\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: none;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nexport default Well;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport Well from 'app/components/well';\nimport {AVATAR_URL_MAP} from 'app/constants';\nimport {t, tct} from 'app/locale';\nimport {AvatarUser} from 'app/types';\n\nconst resizerPositions = {\n  nw: ['top', 'left'],\n  ne: ['top', 'right'],\n  se: ['bottom', 'right'],\n  sw: ['bottom', 'left'],\n};\n\ntype Position = keyof typeof resizerPositions;\n\ntype Model = Pick<AvatarUser, 'avatar'>;\n\ntype Props = {\n  model: Model;\n  updateDataUrlState: (opts: {savedDataUrl?: string | null; dataUrl?: string}) => void;\n  type: 'user' | 'team' | 'organization' | 'project';\n  savedDataUrl?: string;\n};\n\ntype State = {\n  file: File | null;\n  objectURL: string | null;\n  mousePosition: {pageX: number; pageY: number};\n  resizeDimensions: {top: number; left: number; size: number};\n  resizeDirection: Position | null;\n};\n\nclass AvatarCropper extends React.Component<Props, State> {\n  state: State = {\n    file: null,\n    objectURL: null,\n    mousePosition: {pageX: 0, pageY: 0},\n    resizeDimensions: {top: 0, left: 0, size: 0},\n    resizeDirection: null,\n  };\n\n  componentWillUnmount() {\n    this.revokeObjectUrl();\n  }\n\n  file = React.createRef<HTMLInputElement>();\n  canvas = React.createRef<HTMLCanvasElement>();\n  image = React.createRef<HTMLImageElement>();\n  cropContainer = React.createRef<HTMLDivElement>();\n\n  // These values must be synced with the avatar endpoint in backend.\n  MIN_DIMENSION = 256;\n  MAX_DIMENSION = 1024;\n  ALLOWED_MIMETYPES = 'image/gif,image/jpeg,image/png';\n\n  onSelectFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const file = ev.target.files && ev.target.files[0];\n\n    // No file selected (e.g. user clicked \"cancel\")\n    if (!file) {\n      return;\n    }\n\n    if (!/^image\\//.test(file.type)) {\n      addErrorMessage(t('That is not a supported file type.'));\n      return;\n    }\n\n    this.revokeObjectUrl();\n\n    const {updateDataUrlState} = this.props;\n    const objectURL = window.URL.createObjectURL(file);\n    this.setState({file, objectURL}, () => updateDataUrlState({savedDataUrl: null}));\n  };\n\n  revokeObjectUrl = () =>\n    this.state.objectURL && window.URL.revokeObjectURL(this.state.objectURL);\n\n  onImageLoad = () => {\n    const error = this.validateImage();\n    if (error) {\n      this.revokeObjectUrl();\n      this.setState({objectURL: null});\n      addErrorMessage(error);\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const dimension = Math.min(image.clientHeight, image.clientWidth);\n    const state = {resizeDimensions: {size: dimension, top: 0, left: 0}};\n\n    this.setState(state, this.drawToCanvas);\n  };\n\n  updateDimensions = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition, resizeDimensions} = this.state;\n\n    let pageY = ev.pageY;\n    let pageX = ev.pageX;\n    let top = resizeDimensions.top + (pageY - mousePosition.pageY);\n    let left = resizeDimensions.left + (pageX - mousePosition.pageX);\n\n    if (top < 0) {\n      top = 0;\n      pageY = mousePosition.pageY;\n    } else if (top + resizeDimensions.size > cropContainer.clientHeight) {\n      top = cropContainer.clientHeight - resizeDimensions.size;\n      pageY = mousePosition.pageY;\n    }\n\n    if (left < 0) {\n      left = 0;\n      pageX = mousePosition.pageX;\n    } else if (left + resizeDimensions.size > cropContainer.clientWidth) {\n      left = cropContainer.clientWidth - resizeDimensions.size;\n      pageX = mousePosition.pageX;\n    }\n\n    this.setState(state => ({\n      resizeDimensions: {...state.resizeDimensions, top, left},\n      mousePosition: {pageX, pageY},\n    }));\n  };\n\n  onMouseDown = (ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.preventDefault();\n    this.setState({mousePosition: {pageY: ev.pageY, pageX: ev.pageX}});\n\n    document.addEventListener('mousemove', this.updateDimensions);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (ev: MouseEvent) => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateDimensions);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    this.drawToCanvas();\n  };\n\n  startResize = (direction: Position, ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.addEventListener('mousemove', this.updateSize);\n    document.addEventListener('mouseup', this.stopResize);\n\n    this.setState({\n      resizeDirection: direction,\n      mousePosition: {pageY: ev.pageY, pageX: ev.pageX},\n    });\n  };\n\n  stopResize = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateSize);\n    document.removeEventListener('mouseup', this.stopResize);\n\n    this.setState({resizeDirection: null});\n    this.drawToCanvas();\n  };\n\n  updateSize = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition} = this.state;\n\n    const yDiff = ev.pageY - mousePosition.pageY;\n    const xDiff = ev.pageX - mousePosition.pageX;\n\n    this.setState({\n      resizeDimensions: this.getNewDimensions(cropContainer, yDiff, xDiff),\n      mousePosition: {pageX: ev.pageX, pageY: ev.pageY},\n    });\n  };\n\n  // Normalize diff across dimensions so that negative diffs are always making\n  // the cropper smaller and positive ones are making the cropper larger\n  getDiffNW = (yDiff: number, xDiff: number) =>\n    (yDiff - yDiff * 2 + (xDiff - xDiff * 2)) / 2;\n\n  getDiffNE = (yDiff: number, xDiff: number) => (yDiff - yDiff * 2 + xDiff) / 2;\n\n  getDiffSW = (yDiff: number, xDiff: number) => (yDiff + (xDiff - xDiff * 2)) / 2;\n\n  getDiffSE = (yDiff: number, xDiff: number) => (yDiff + xDiff) / 2;\n\n  getNewDimensions = (container: HTMLDivElement, yDiff: number, xDiff: number) => {\n    const {resizeDimensions: oldDimensions, resizeDirection} = this.state;\n\n    const diff = this['getDiff' + resizeDirection!.toUpperCase()](yDiff, xDiff);\n\n    let height = container.clientHeight - oldDimensions.top;\n    let width = container.clientWidth - oldDimensions.left;\n\n    // Depending on the direction, we update different dimensions:\n    // nw: size, top, left\n    // ne: size, top\n    // sw: size, left\n    // se: size\n    const editingTop = resizeDirection === 'nw' || resizeDirection === 'ne';\n    const editingLeft = resizeDirection === 'nw' || resizeDirection === 'sw';\n\n    const newDimensions = {\n      top: 0,\n      left: 0,\n      size: oldDimensions.size + diff,\n    };\n\n    if (editingTop) {\n      newDimensions.top = oldDimensions.top - diff;\n      height = container.clientHeight - newDimensions.top;\n    }\n\n    if (editingLeft) {\n      newDimensions.left = oldDimensions.left - diff;\n      width = container.clientWidth - newDimensions.left;\n    }\n\n    if (newDimensions.top < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.top;\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left - newDimensions.top;\n      }\n      newDimensions.top = 0;\n    }\n\n    if (newDimensions.left < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.left;\n      if (editingTop) {\n        newDimensions.top = newDimensions.top - newDimensions.left;\n      }\n      newDimensions.left = 0;\n    }\n\n    const maxSize = Math.min(width, height);\n    if (newDimensions.size > maxSize) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - maxSize;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - maxSize;\n      }\n      newDimensions.size = maxSize;\n    } else if (newDimensions.size < this.MIN_DIMENSION) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - this.MIN_DIMENSION;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - this.MIN_DIMENSION;\n      }\n      newDimensions.size = this.MIN_DIMENSION;\n    }\n\n    return {...oldDimensions, ...newDimensions};\n  };\n\n  validateImage() {\n    const img = this.image.current;\n\n    if (!img) {\n      return null;\n    }\n\n    if (img.naturalWidth < this.MIN_DIMENSION || img.naturalHeight < this.MIN_DIMENSION) {\n      return tct('Please upload an image larger than [size]px by [size]px.', {\n        size: this.MIN_DIMENSION - 1,\n      });\n    }\n\n    if (img.naturalWidth > this.MAX_DIMENSION || img.naturalHeight > this.MAX_DIMENSION) {\n      return tct('Please upload an image smaller than [size]px by [size]px.', {\n        size: this.MAX_DIMENSION,\n      });\n    }\n\n    return null;\n  }\n\n  drawToCanvas() {\n    const canvas = this.canvas.current;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const {left, top, size} = this.state.resizeDimensions;\n    // Calculate difference between natural dimensions and rendered dimensions\n    const ratio =\n      (image.naturalHeight / image.clientHeight +\n        image.naturalWidth / image.clientWidth) /\n      2;\n    canvas.width = size * ratio;\n    canvas.height = size * ratio;\n\n    canvas\n      .getContext('2d')!\n      .drawImage(\n        image,\n        left * ratio,\n        top * ratio,\n        size * ratio,\n        size * ratio,\n        0,\n        0,\n        size * ratio,\n        size * ratio\n      );\n\n    this.props.updateDataUrlState({dataUrl: canvas.toDataURL()});\n  }\n\n  get imageSrc() {\n    const {savedDataUrl, model, type} = this.props;\n    const uuid = model.avatar?.avatarUuid;\n    const photoUrl = uuid && `/${AVATAR_URL_MAP[type] || 'avatar'}/${uuid}/`;\n\n    return savedDataUrl || this.state.objectURL || photoUrl;\n  }\n\n  uploadClick = (ev: React.MouseEvent<HTMLAnchorElement>) => {\n    ev.preventDefault();\n    this.file.current && this.file.current.click();\n  };\n\n  renderImageCrop() {\n    const src = this.imageSrc;\n    if (!src) {\n      return null;\n    }\n\n    const {resizeDimensions, resizeDirection} = this.state;\n    const style = {\n      top: resizeDimensions.top,\n      left: resizeDimensions.left,\n      width: resizeDimensions.size,\n      height: resizeDimensions.size,\n    };\n\n    return (\n      <ImageCropper resizeDirection={resizeDirection}>\n        <CropContainer ref={this.cropContainer}>\n          <img\n            ref={this.image}\n            src={src}\n            onLoad={this.onImageLoad}\n            onDragStart={e => e.preventDefault()}\n          />\n          <Cropper style={style} onMouseDown={this.onMouseDown}>\n            {Object.keys(resizerPositions).map(pos => (\n              <Resizer\n                key={pos}\n                position={pos as Position}\n                onMouseDown={this.startResize.bind(this, pos)}\n              />\n            ))}\n          </Cropper>\n        </CropContainer>\n      </ImageCropper>\n    );\n  }\n\n  render() {\n    const src = this.imageSrc;\n\n    const upload = <a onClick={this.uploadClick} />;\n    const uploader = (\n      <Well hasImage centered>\n        <p>{tct('[upload:Upload a photo] to get started.', {upload})}</p>\n      </Well>\n    );\n\n    return (\n      <React.Fragment>\n        {!src && uploader}\n        {src && <HiddenCanvas ref={this.canvas} />}\n        {this.renderImageCrop()}\n        <div className=\"form-group\">\n          {src && <a onClick={this.uploadClick}>{t('Change Photo')}</a>}\n          <UploadInput\n            ref={this.file}\n            type=\"file\"\n            accept={this.ALLOWED_MIMETYPES}\n            onChange={this.onSelectFile}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AvatarCropper;\n\nconst UploadInput = styled('input')`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageCropper = styled('div')<{resizeDirection: Position | null}>`\n  cursor: ${p => (p.resizeDirection ? `${p.resizeDirection}-resize` : 'default')};\n  text-align: center;\n  margin-bottom: 20px;\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  background-color: ${p => p.theme.background};\n  background-image: linear-gradient(\n      45deg,\n      ${p => p.theme.backgroundSecondary} 25%,\n      rgba(0, 0, 0, 0) 25%\n    ),\n    linear-gradient(-45deg, ${p => p.theme.backgroundSecondary} 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%);\n`;\n\nconst CropContainer = styled('div')`\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n`;\n\nconst Cropper = styled('div')`\n  position: absolute;\n  border: 2px dashed ${p => p.theme.gray300};\n`;\n\nconst Resizer = styled('div')<{position: Position}>`\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: ${p => p.theme.gray300};\n  cursor: ${p => `${p.position}-resize`};\n  ${p => resizerPositions[p.position].map(pos => `${pos}: -5px;`)}\n`;\n\nconst HiddenCanvas = styled('canvas')`\n  display: none;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Avatar from 'app/components/avatar';\nimport AvatarCropper from 'app/components/avatarCropper';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Well from 'app/components/well';\nimport {t} from 'app/locale';\nimport {AvatarUser, Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\n\ntype Model = Pick<AvatarUser, 'avatar'>;\ntype AvatarType = Required<Model>['avatar']['avatarType'];\ntype AvatarChooserType = 'user' | 'team' | 'organization';\n\ntype DefaultProps = {\n  onSave: (model: Model) => void;\n  allowGravatar?: boolean;\n  allowLetter?: boolean;\n  allowUpload?: boolean;\n  type?: AvatarChooserType;\n};\n\ntype Props = {\n  api: Client;\n  endpoint: string;\n  model: Model;\n  disabled?: boolean;\n  savedDataUrl?: string;\n  isUser?: boolean;\n} & DefaultProps;\n\ntype State = {\n  model: Model;\n  hasError: boolean;\n  savedDataUrl?: string | null;\n  dataUrl?: string | null;\n};\n\nclass AvatarChooser extends React.Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    allowGravatar: true,\n    allowLetter: true,\n    allowUpload: true,\n    type: 'user',\n    onSave: () => {},\n  };\n\n  state: State = {\n    model: this.props.model,\n    savedDataUrl: null,\n    dataUrl: null,\n    hasError: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    // Update local state if defined in props\n    if (typeof nextProps.model !== 'undefined') {\n      this.setState({model: nextProps.model});\n    }\n  }\n\n  updateState(model: Model) {\n    this.setState({model});\n  }\n\n  handleError(msg: string) {\n    addErrorMessage(msg);\n  }\n\n  handleSuccess(model: Model) {\n    const {onSave} = this.props;\n    this.setState({model});\n    onSave(model);\n    addSuccessMessage(t('Successfully saved avatar preferences'));\n  }\n\n  handleSaveSettings = (ev: React.MouseEvent) => {\n    const {endpoint, api} = this.props;\n    const {model, dataUrl} = this.state;\n    ev.preventDefault();\n    let data = {};\n    const avatarType = model && model.avatar ? model.avatar.avatarType : undefined;\n    const avatarPhoto = dataUrl ? dataUrl.split(',')[1] : undefined;\n\n    data = {\n      avatar_photo: avatarPhoto,\n      avatar_type: avatarType,\n    };\n\n    api.request(endpoint, {\n      method: 'PUT',\n      data,\n      success: resp => {\n        this.setState({savedDataUrl: this.state.dataUrl});\n        this.handleSuccess(resp);\n      },\n      error: this.handleError.bind(this, 'There was an error saving your preferences.'),\n    });\n  };\n\n  handleChange = (id: AvatarType) =>\n    this.updateState({\n      ...this.state.model,\n      avatar: {avatarUuid: this.state.model.avatar?.avatarUuid ?? '', avatarType: id},\n    });\n\n  render() {\n    const {\n      allowGravatar,\n      allowUpload,\n      allowLetter,\n      savedDataUrl,\n      type,\n      isUser,\n      disabled,\n    } = this.props;\n    const {hasError, model} = this.state;\n\n    if (hasError) {\n      return <LoadingError />;\n    }\n    if (!model) {\n      return <LoadingIndicator />;\n    }\n\n    const avatarType = model.avatar?.avatarType ?? 'letter_avatar';\n    const isLetter = avatarType === 'letter_avatar';\n\n    const isTeam = type === 'team';\n    const isOrganization = type === 'organization';\n    const choices: [AvatarType, string][] = [];\n\n    if (allowLetter) {\n      choices.push(['letter_avatar', t('Use initials')]);\n    }\n    if (allowUpload) {\n      choices.push(['upload', t('Upload an image')]);\n    }\n    if (allowGravatar) {\n      choices.push(['gravatar', t('Use Gravatar')]);\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Avatar')}</PanelHeader>\n        <PanelBody>\n          <AvatarForm>\n            <AvatarGroup inline={isLetter}>\n              <RadioGroup\n                style={{flex: 1}}\n                choices={choices}\n                value={avatarType}\n                label={t('Avatar Type')}\n                onChange={this.handleChange}\n                disabled={disabled}\n              />\n              {isLetter && (\n                <Avatar\n                  gravatar={false}\n                  style={{width: 90, height: 90}}\n                  user={isUser ? (model as AvatarUser) : undefined}\n                  organization={isOrganization ? (model as Organization) : undefined}\n                  team={isTeam ? (model as Team) : undefined}\n                />\n              )}\n            </AvatarGroup>\n\n            <AvatarUploadSection>\n              {allowGravatar && avatarType === 'gravatar' && (\n                <Well>\n                  {t('Gravatars are managed through ')}\n                  <ExternalLink href=\"http://gravatar.com\">Gravatar.com</ExternalLink>\n                </Well>\n              )}\n\n              {model.avatar && avatarType === 'upload' && (\n                <AvatarCropper\n                  {...this.props}\n                  type={type!}\n                  model={model}\n                  savedDataUrl={savedDataUrl}\n                  updateDataUrlState={dataState => this.setState(dataState)}\n                />\n              )}\n              <AvatarSubmit className=\"form-actions\">\n                <Button\n                  type=\"button\"\n                  priority=\"primary\"\n                  onClick={this.handleSaveSettings}\n                  disabled={disabled}\n                >\n                  {t('Save Avatar')}\n                </Button>\n              </AvatarSubmit>\n            </AvatarUploadSection>\n          </AvatarForm>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst AvatarGroup = styled('div')<{inline: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.inline ? 'row' : 'column')};\n`;\n\nconst AvatarForm = styled('div')`\n  line-height: 1.5em;\n  padding: 1em 1.25em;\n`;\n\nconst AvatarSubmit = styled('fieldset')`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1em;\n`;\n\nconst AvatarUploadSection = styled('div')`\n  margin-top: 1em;\n`;\n\nexport default withApi(AvatarChooser);\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\nimport {Box} from 'reflexbox'; // eslint-disable-line no-restricted-imports\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"sourceRoot":""}