{"version":3,"sources":["webpack:///./app/components/radio.tsx","webpack:///./app/views/settings/components/forms/controls/radioGroup.tsx"],"names":["checkedCss","p","css","radioSize","theme","active","growIn","disabled","Radio","border","defaultProps","type","RadioGroup","value","choices","label","onChange","orientInline","props","Container","role","aria-labelledby","map","index","id","name","description","RadioLineItem","key","aria-checked","aria-label","checked","e","RadioLineText","Description","shouldForwardProp","includes","isPropValid","space","gray300","fontSizeRelativeSmall"],"mappings":"8TAaMA,EAAa,SAACC,GAAD,OAAqBC,QAApB,uBAEO,UAAhBD,EAAEE,UAAwB,MAAQ,OAF1B,WAGS,UAAhBF,EAAEE,UAAwB,MAAQ,OAH3B,uCAKGF,EAAEG,MAAMC,OALX,mBAMCC,KAND,iBAONL,EAAEM,SAAW,GAAM,KAPb,MAUbC,GAAQ,OAAO,QAAP,mCAAH,iCAGA,SAAAP,GAAC,MAAqB,UAAhBA,EAAEE,UAAwB,OAAS,UAHzC,YAIC,SAAAF,GAAC,MAAqB,UAAhBA,EAAEE,UAAwB,OAAS,UAJ1C,oGASW,SAAAF,GAAC,OAAIA,EAAEG,MAAMK,SATxB,sKAoBa,SAAAR,GAAC,OAAIA,EAAEG,MAAMK,SApB1B,2EA0BLT,EA1BK,KA8BXQ,EAAME,aAAe,CACnBC,KAAM,SAGR,W,ioBChCMC,EAAa,gBACjBC,EADiB,EACjBA,MACAN,EAFiB,EAEjBA,SACAO,EAHiB,EAGjBA,QACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,SACAC,EANiB,EAMjBA,aACGC,GAPc,kFASjB,QAACC,GAAD,QACEF,aAAcA,GACVC,EAFN,CAGEE,KAAK,aACLC,kBAAiBN,KAEfD,GAAW,IAAIQ,KAAI,WAA0BC,GAA1B,mBAAEC,EAAF,KAAMC,EAAN,KAAYC,EAAZ,YACnB,QAACC,EAAD,CACEC,IAAKL,EACLH,KAAK,QACLG,MAAOA,EACPM,eAAchB,IAAUW,EACxBjB,SAAUA,IAEV,QAAC,IAAD,CACEuB,aAAYN,EACZjB,SAAUA,EACVwB,QAASlB,IAAUW,EACnBR,SAAU,SAACgB,GAAD,OACPzB,GAAYS,EAASQ,EAAIQ,OAG9B,QAACC,EAAD,CAAe1B,SAAUA,GAAWkB,GACnCC,IACC,QAAC,WAAD,MAEE,qBACA,QAACQ,EAAD,KAAcR,UApCpBd,E,yBA4CN,IAAMuB,EAAoB,SAAAlC,GAAC,OAAK,CAAC,WAAY,WAAWmC,SAASnC,KAAMoC,OAAYpC,IAEtE0B,GAAgB,OAAO,QAAP,CAAiBQ,oBAAjB,0CAAH,wGAQd,SAAAlC,GAAC,OAAKA,EAAEM,SAAW,UAAY,YARjB,8CAcpBY,GAAY,OAAO,MAAP,uCAAH,0BAED,SAAAlB,GAAC,OAAIqC,OAAMrC,EAAEgB,aAAe,EAAI,KAF/B,oBAGK,SAAAhB,GAAC,OAAKA,EAAEgB,aAAe,SAAW,QAHvC,8DAQTgB,GAAgB,OAAO,MAAP,CAAeE,oBAAf,0CAAH,YACN,SAAAlC,GAAC,OAAKA,EAAEM,SAAW,GAAM,OADnB,KAIb2B,GAAc,OAAO,MAAP,yCAAH,UACN,SAAAjC,GAAC,OAAIA,EAAEG,MAAMmC,UADP,eAEF,SAAAtC,GAAC,OAAIA,EAAEG,MAAMoC,wBAFX,uBAMjB","file":"PerformanceLanding.5b93b1a732ab206bb1be.js","sourcesContent":["import React from 'react';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {growIn} from 'app/styles/animations';\nimport {Theme} from 'app/utils/theme';\n\ntype Props = {radioSize?: 'small'};\n\ntype CheckedProps = React.HTMLProps<HTMLInputElement> & {\n  theme: Theme;\n} & Props;\n\nconst checkedCss = (p: CheckedProps) => css`\n  display: block;\n  width: ${p.radioSize === 'small' ? '8px' : '1rem'};\n  height: ${p.radioSize === 'small' ? '8px' : '1rem'};\n  border-radius: 50%;\n  background-color: ${p.theme.active};\n  animation: 0.2s ${growIn} ease;\n  opacity: ${p.disabled ? 0.4 : null};\n`;\n\nconst Radio = styled('input')<{radioSize?: 'small'}>`\n  display: flex;\n  padding: 0;\n  width: ${p => (p.radioSize === 'small' ? '16px' : '1.5em')};\n  height: ${p => (p.radioSize === 'small' ? '16px' : '1.5em')};\n  position: relative;\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  background: none;\n  appearance: none;\n\n  /* TODO(bootstrap): Our bootstrap CSS adds this, we can remove when we remove that */\n  margin: 0 !important;\n\n  &:focus,\n  &.focus-visible {\n    outline: none !important;\n    border: 1px solid ${p => p.theme.border};\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n\n  &:checked:after {\n    content: '';\n    ${checkedCss}\n  }\n`;\n\nRadio.defaultProps = {\n  type: 'radio',\n};\n\nexport default Radio;\n","import React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Radio from 'app/components/radio';\nimport space from 'app/styles/space';\n\ntype RadioGroupProps<C extends string> = {\n  label: string;\n  disabled?: boolean;\n  /**\n   * An array of [id, name, description]\n   */\n  choices: [C, React.ReactNode, React.ReactNode?][];\n  value: string | number | null;\n  onChange: (id: C, e: React.FormEvent<HTMLInputElement>) => void;\n  /**\n   * Switch the radio items to flow left to right, instead of vertically.\n   */\n  orientInline?: boolean;\n};\n\ntype Props<C extends string> = RadioGroupProps<C> &\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof RadioGroupProps<C>>;\n\nconst RadioGroup = <C extends string>({\n  value,\n  disabled,\n  choices,\n  label,\n  onChange,\n  orientInline,\n  ...props\n}: Props<C>) => (\n  <Container\n    orientInline={orientInline}\n    {...props}\n    role=\"radiogroup\"\n    aria-labelledby={label}\n  >\n    {(choices || []).map(([id, name, description], index) => (\n      <RadioLineItem\n        key={index}\n        role=\"radio\"\n        index={index}\n        aria-checked={value === id}\n        disabled={disabled}\n      >\n        <Radio\n          aria-label={id}\n          disabled={disabled}\n          checked={value === id}\n          onChange={(e: React.FormEvent<HTMLInputElement>) =>\n            !disabled && onChange(id, e)\n          }\n        />\n        <RadioLineText disabled={disabled}>{name}</RadioLineText>\n        {description && (\n          <React.Fragment>\n            {/* If there is a description then we want to have a 2x2 grid so the first column width aligns with Radio Button */}\n            <div />\n            <Description>{description}</Description>\n          </React.Fragment>\n        )}\n      </RadioLineItem>\n    ))}\n  </Container>\n);\n\nconst shouldForwardProp = p => !['disabled', 'animate'].includes(p) && isPropValid(p);\n\nexport const RadioLineItem = styled('label', {shouldForwardProp})<{\n  disabled?: boolean;\n  index: number;\n}>`\n  display: grid;\n  grid-gap: 0.25em 0.5em;\n  grid-template-columns: max-content auto;\n  align-items: center;\n  cursor: ${p => (p.disabled ? 'default' : 'pointer')};\n  outline: none;\n  font-weight: normal;\n  margin: 0;\n`;\n\nconst Container = styled('div')<{orientInline?: boolean}>`\n  display: grid;\n  grid-gap: ${p => space(p.orientInline ? 3 : 1)};\n  grid-auto-flow: ${p => (p.orientInline ? 'column' : 'row')};\n  grid-auto-rows: max-content;\n  grid-auto-columns: max-content;\n`;\n\nconst RadioLineText = styled('div', {shouldForwardProp})<{disabled?: boolean}>`\n  opacity: ${p => (p.disabled ? 0.4 : null)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4em;\n`;\n\nexport default RadioGroup;\n"],"sourceRoot":""}