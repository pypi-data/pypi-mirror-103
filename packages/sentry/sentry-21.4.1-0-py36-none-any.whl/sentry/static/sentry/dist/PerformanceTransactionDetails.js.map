{"version":3,"sources":["webpack:///./app/views/performance/breadcrumb.tsx","webpack:///./app/views/performance/transactionDetails/content.tsx","webpack:///./app/views/performance/transactionDetails/index.tsx","webpack:///./app/views/performance/transactionVitals/utils.tsx"],"names":["Breadcrumb","crumbs","this","props","organization","location","transactionName","vitalName","eventSlug","traceSlug","transactionComparison","realUserMonitoring","performanceTarget","pathname","getPerformanceLandingUrl","query","transaction","undefined","push","to","label","t","preserveGlobalSelection","rumTarget","vitalDetailRouteWithQuery","orgSlug","slug","projectID","decodeScalar","project","vitalsRouteWithQuery","summaryTarget","transactionSummaryRouteWithQuery","getCrumbs","React","loading","reloading","error","errors","event","isSidebarVisible","setState","state","tag","newQuery","appendTagCondition","key","value","title","params","split","renderContent","trackAnalyticsEvent","eventKey","eventName","event_type","type","organization_id","parseInt","id","eventJsonUrl","projectId","eventID","results","metaResults","data-test-id","gap","onClick","toggleSidebar","icon","href","external","bytes","size","fullWidth","quickTrace","meta","errorDest","transactionDest","orgId","slugs","projects","getViewChildTransactionTarget","childTransactionProps","getTransactionDetailsUrl","showExampleCommit","showTagSummary","api","generateUrl","generateTagUrl","features","includes","traceId","contexts","trace","trace_id","getTraceTimeRangeFromEvent","start","end","notFound","Object","values","find","resp","status","permissionDenied","message","AsyncComponent","EventDetails","trim","documentTitle","getEventSlug","projectSlug","StyledPageContent","withOrganization","PageContent","environment","statsPeriod","findNearestBucketIndex","chartData","xAxis","width","getBucketWidth","length","bin","Math","floor","getRefRect","i","data1","j","data2","count","point1","x","y","min","point2","max","asPixelRect","chartRef","dataRect","convertToPixel","xAxisIndex","yAxisIndex","isNaN","mapPoint","point","srcRect","destRect","xPercentage","yPercentage"],"mappings":"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","file":"PerformanceTransactionDetails.31d93104083a7e9fb35c.js","sourcesContent":["import React from 'react';\nimport {Location, LocationDescriptor} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'app/components/breadcrumbs';\nimport {t} from 'app/locale';\nimport {Organization} from 'app/types';\nimport {decodeScalar} from 'app/utils/queryString';\n\nimport {transactionSummaryRouteWithQuery} from './transactionSummary/utils';\nimport {vitalsRouteWithQuery} from './transactionVitals/utils';\nimport {vitalDetailRouteWithQuery} from './vitalDetail/utils';\nimport {getPerformanceLandingUrl} from './utils';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  transactionName?: string;\n  vitalName?: string;\n  eventSlug?: string;\n  traceSlug?: string;\n  transactionComparison?: boolean;\n  realUserMonitoring?: boolean;\n};\n\nclass Breadcrumb extends React.Component<Props> {\n  getCrumbs() {\n    const crumbs: Crumb[] = [];\n    const {\n      organization,\n      location,\n      transactionName,\n      vitalName,\n      eventSlug,\n      traceSlug,\n      transactionComparison,\n      realUserMonitoring,\n    } = this.props;\n\n    const performanceTarget: LocationDescriptor = {\n      pathname: getPerformanceLandingUrl(organization),\n      query: {\n        ...location.query,\n        // clear out the transaction name\n        transaction: undefined,\n      },\n    };\n\n    crumbs.push({\n      to: performanceTarget,\n      label: t('Performance'),\n      preserveGlobalSelection: true,\n    });\n\n    if (vitalName) {\n      const rumTarget = vitalDetailRouteWithQuery({\n        orgSlug: organization.slug,\n        vitalName: 'fcp',\n        projectID: decodeScalar(location.query.project),\n        query: location.query,\n      });\n      crumbs.push({\n        to: rumTarget,\n        label: t('Vital Detail'),\n        preserveGlobalSelection: true,\n      });\n    } else if (transactionName) {\n      if (realUserMonitoring) {\n        const rumTarget = vitalsRouteWithQuery({\n          orgSlug: organization.slug,\n          transaction: transactionName,\n          projectID: decodeScalar(location.query.project),\n          query: location.query,\n        });\n\n        crumbs.push({\n          to: rumTarget,\n          label: t('Web Vitals'),\n          preserveGlobalSelection: true,\n        });\n      } else {\n        const summaryTarget = transactionSummaryRouteWithQuery({\n          orgSlug: organization.slug,\n          transaction: transactionName,\n          projectID: decodeScalar(location.query.project),\n          query: location.query,\n        });\n\n        crumbs.push({\n          to: summaryTarget,\n          label: t('Transaction Summary'),\n          preserveGlobalSelection: true,\n        });\n      }\n    }\n\n    if (transactionName && eventSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Event Details'),\n      });\n    } else if (transactionComparison) {\n      crumbs.push({\n        to: '',\n        label: t('Compare to Baseline'),\n      });\n    } else if (traceSlug) {\n      crumbs.push({\n        to: '',\n        label: t('Trace View'),\n      });\n    }\n\n    return crumbs;\n  }\n\n  render() {\n    return <Breadcrumbs crumbs={this.getCrumbs()} />;\n  }\n}\n\nexport default Breadcrumb;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport {Location} from 'history';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport NotFound from 'app/components/errors/notFound';\nimport {BorderlessEventEntries} from 'app/components/events/eventEntries';\nimport EventMetadata from 'app/components/events/eventMetadata';\nimport EventVitals from 'app/components/events/eventVitals';\nimport * as SpanEntryContext from 'app/components/events/interfaces/spans/context';\nimport OpsBreakdown from 'app/components/events/opsBreakdown';\nimport RootSpanStatus from 'app/components/events/rootSpanStatus';\nimport FileSize from 'app/components/fileSize';\nimport * as Layout from 'app/components/layouts/thirds';\nimport LoadingError from 'app/components/loadingError';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport TagsTable from 'app/components/tagsTable';\nimport {IconOpen} from 'app/icons';\nimport {t} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {Event, EventTag} from 'app/types/event';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport * as QuickTraceContext from 'app/utils/performance/quickTrace/quickTraceContext';\nimport QuickTraceQuery from 'app/utils/performance/quickTrace/quickTraceQuery';\nimport TraceMetaQuery, {\n  TraceMetaQueryChildrenProps,\n} from 'app/utils/performance/quickTrace/traceMetaQuery';\nimport {QuickTraceQueryChildrenProps} from 'app/utils/performance/quickTrace/types';\nimport {getTraceTimeRangeFromEvent} from 'app/utils/performance/quickTrace/utils';\nimport Projects from 'app/utils/projects';\nimport {appendTagCondition, decodeScalar} from 'app/utils/queryString';\nimport Breadcrumb from 'app/views/performance/breadcrumb';\n\nimport {transactionSummaryRouteWithQuery} from '../transactionSummary/utils';\nimport {getTransactionDetailsUrl} from '../utils';\n\nimport EventMetas from './eventMetas';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n  eventSlug: string;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params} = this.props;\n    const {eventSlug} = params;\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    return [['event', url]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagUrl = (tag: EventTag) => {\n    const {location, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const query = decodeScalar(location.query.query, '');\n    const newQuery = {\n      ...location.query,\n      query: appendTagCondition(query, tag.key, tag.value),\n    };\n    return transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction: event.title,\n      projectID: decodeScalar(location.query.project),\n      query: newQuery,\n    });\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventSlug} = this.props;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'performance.event_details',\n      eventName: 'Performance: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const {isSidebarVisible} = this.state;\n    const transactionName = event.title;\n    const query = decodeScalar(location.query.query, '');\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n\n    const renderContent = (\n      results?: QuickTraceQueryChildrenProps,\n      metaResults?: TraceMetaQueryChildrenProps\n    ) => (\n      <React.Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <Breadcrumb\n              organization={organization}\n              location={location}\n              transactionName={transactionName}\n              eventSlug={eventSlug}\n            />\n            <Layout.Title data-test-id=\"event-header\">{event.title}</Layout.Title>\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              {results && (\n                <Button icon={<IconOpen />} href={eventJsonUrl} external>\n                  {t('JSON')} (<FileSize bytes={event.size} />)\n                </Button>\n              )}\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          {results && (\n            <Layout.Main fullWidth>\n              <EventMetas\n                quickTrace={results}\n                meta={metaResults?.meta ?? null}\n                event={event}\n                organization={organization}\n                projectId={this.projectId}\n                location={location}\n                errorDest=\"issue\"\n                transactionDest=\"performance\"\n              />\n            </Layout.Main>\n          )}\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects}) => (\n                <SpanEntryContext.Provider\n                  value={{\n                    getViewChildTransactionTarget: childTransactionProps => {\n                      return getTransactionDetailsUrl(\n                        organization,\n                        childTransactionProps.eventSlug,\n                        childTransactionProps.transaction,\n                        location.query\n                      );\n                    },\n                  }}\n                >\n                  <QuickTraceContext.Provider value={results}>\n                    <BorderlessEventEntries\n                      organization={organization}\n                      event={event}\n                      project={projects[0] as Project}\n                      showExampleCommit={false}\n                      showTagSummary={false}\n                      location={location}\n                      api={this.api}\n                    />\n                  </QuickTraceContext.Provider>\n                </SpanEntryContext.Provider>\n              )}\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              {results === undefined && (\n                <React.Fragment>\n                  <EventMetadata\n                    event={event}\n                    organization={organization}\n                    projectId={this.projectId}\n                  />\n                  <RootSpanStatus event={event} />\n                  <OpsBreakdown event={event} />\n                </React.Fragment>\n              )}\n              <EventVitals event={event} />\n              <TagsTable event={event} query={query} generateUrl={this.generateTagUrl} />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </React.Fragment>\n    );\n\n    const hasQuickTraceView =\n      organization.features.includes('trace-view-quick') ||\n      organization.features.includes('trace-view-summary');\n\n    if (hasQuickTraceView) {\n      const traceId = event.contexts?.trace?.trace_id ?? '';\n      const {start, end} = getTraceTimeRangeFromEvent(event);\n\n      return (\n        <TraceMetaQuery\n          location={location}\n          orgSlug={organization.slug}\n          traceId={traceId}\n          start={start}\n          end={end}\n        >\n          {metaResults => (\n            <QuickTraceQuery\n              event={event}\n              location={location}\n              orgSlug={organization.slug}\n            >\n              {results => renderContent(results, metaResults)}\n            </QuickTraceQuery>\n          )}\n        </TraceMetaQuery>\n      );\n    }\n\n    return renderContent();\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true, true);\n  }\n\n  renderComponent() {\n    const {organization} = this.props;\n\n    return (\n      <SentryDocumentTitle\n        title={t('Performance - Event Details')}\n        orgSlug={organization.slug}\n      >\n        {super.renderComponent()}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default EventDetailsContent;\n","import React from 'react';\nimport {Params} from 'react-router/lib/Router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n  params: Params;\n};\n\nclass EventDetails extends React.Component<Props> {\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n    return typeof eventSlug === 'string' ? eventSlug.trim() : '';\n  };\n\n  render() {\n    const {organization, location, params} = this.props;\n    const documentTitle = t('Performance Details');\n    const eventSlug = this.getEventSlug();\n    const projectSlug = eventSlug.split(':')[0];\n\n    return (\n      <SentryDocumentTitle\n        title={documentTitle}\n        orgSlug={organization.slug}\n        projectSlug={projectSlug}\n      >\n        <StyledPageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <EventDetailsContent\n              organization={organization}\n              location={location}\n              params={params}\n              eventSlug={eventSlug}\n            />\n          </LightWeightNoProjectMessage>\n        </StyledPageContent>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n","import {ECharts} from 'echarts';\nimport {Query} from 'history';\n\nimport {HistogramData} from 'app/utils/performance/histogram/types';\nimport {getBucketWidth} from 'app/utils/performance/histogram/utils';\n\nimport {Point, Rectangle} from './types';\n\nexport function generateVitalsRoute({orgSlug}: {orgSlug: String}): string {\n  return `/organizations/${orgSlug}/performance/summary/vitals/`;\n}\n\nexport function vitalsRouteWithQuery({\n  orgSlug,\n  transaction,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  transaction: string;\n  query: Query;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalsRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      transaction,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\n/**\n * Given a value on the x-axis, return the index of the nearest bucket or null\n * if it cannot be found.\n *\n * A bucket contains a range of values, and nearest is defined as the bucket the\n * value will fall in.\n */\nexport function findNearestBucketIndex(\n  chartData: HistogramData,\n  xAxis: number\n): number | null {\n  const width = getBucketWidth(chartData);\n  // it's possible that the data is not available yet or the x axis is out of range\n  if (!chartData.length || xAxis >= chartData[chartData.length - 1].bin + width) {\n    return null;\n  } else if (xAxis < chartData[0].bin) {\n    return -1;\n  }\n\n  return Math.floor((xAxis - chartData[0].bin) / width);\n}\n\n/**\n * To compute pixel coordinates, we need at least 2 unique points on the chart.\n * The two points must have different x axis and y axis values for it to work.\n *\n * If all bars have the same y value, pick the most naive reference rect. This\n * may result in floating point errors, but should be okay for our purposes.\n */\nexport function getRefRect(chartData: HistogramData): Rectangle | null {\n  // not enough points to construct 2 reference points\n  if (chartData.length < 2) {\n    return null;\n  }\n\n  for (let i = 0; i < chartData.length; i++) {\n    const data1 = chartData[i];\n    for (let j = i + 1; j < chartData.length; j++) {\n      const data2 = chartData[j];\n\n      if (data1.bin !== data2.bin && data1.count !== data2.count) {\n        return {\n          point1: {x: i, y: Math.min(data1.count, data2.count)},\n          point2: {x: j, y: Math.max(data1.count, data2.count)},\n        };\n      }\n    }\n  }\n\n  // all data points have the same count, just pick any 2 histogram bins\n  // and use 0 and 1 as the count as we can rely on them being on the graph\n  return {\n    point1: {x: 0, y: 0},\n    point2: {x: 1, y: 1},\n  };\n}\n\n/**\n * Given an ECharts instance and a rectangle defined in terms of the x and y axis,\n * compute the corresponding pixel coordinates. If it cannot be done, return null.\n */\nexport function asPixelRect(chartRef: ECharts, dataRect: Rectangle): Rectangle | null {\n  const point1 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point1.x,\n    dataRect.point1.y,\n  ]);\n\n  if (isNaN(point1?.[0]) || isNaN(point1?.[1])) {\n    return null;\n  }\n\n  const point2 = chartRef.convertToPixel({xAxisIndex: 0, yAxisIndex: 0}, [\n    dataRect.point2.x,\n    dataRect.point2.y,\n  ]);\n\n  if (isNaN(point2?.[0]) || isNaN(point2?.[1])) {\n    return null;\n  }\n\n  return {\n    point1: {x: point1[0], y: point1[1]},\n    point2: {x: point2[0], y: point2[1]},\n  };\n}\n\n/**\n * Given a point on a source rectangle, map it to the corresponding point on the\n * destination rectangle. Assumes that the two rectangles are related by a simple\n * transformation containing only translations and scaling.\n */\nexport function mapPoint(\n  point: Point,\n  srcRect: Rectangle,\n  destRect: Rectangle\n): Point | null {\n  if (\n    srcRect.point1.x === srcRect.point2.x ||\n    srcRect.point1.y === srcRect.point2.y ||\n    destRect.point1.x === destRect.point2.x ||\n    destRect.point1.y === destRect.point2.y\n  ) {\n    return null;\n  }\n\n  const xPercentage =\n    (point.x - srcRect.point1.x) / (srcRect.point2.x - srcRect.point1.x);\n  const yPercentage =\n    (point.y - srcRect.point1.y) / (srcRect.point2.y - srcRect.point1.y);\n\n  return {\n    x: destRect.point1.x + (destRect.point2.x - destRect.point1.x) * xPercentage,\n    y: destRect.point1.y + (destRect.point2.y - destRect.point1.y) * yPercentage,\n  };\n}\n"],"sourceRoot":""}