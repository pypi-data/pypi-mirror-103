{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountAuthorizations.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","authorization","oldData","state","data","setState","filter","id","api","requestPromise","method","addSuccessMessage","t","addErrorMessage","isEmpty","length","Description","tct","link","Link","to","map","PanelItemCenter","key","ApplicationDetails","ApplicationName","application","name","homepageUrl","Url","href","Scopes","scopes","join","size","onClick","handleRevoke","icon","p","theme","fontSizeRelativeSmall","space","PanelItem","gray300","UnstyledSettingsPageHeader","props","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","gray400","fontSizeLarge","SettingsPageHeader"],"mappings":"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","file":"AccountAuthorizations.918b00d6cb3ebf716044.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport {Link, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {ApiApplication} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\ntype Authorization = {\n  application: ApiApplication;\n  homepageUrl: string;\n  id: string;\n  scopes: string[];\n};\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype State = {\n  data: Authorization[];\n} & AsyncView['state'];\n\nclass AccountAuthorizations extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', '/api-authorizations/']];\n  }\n\n  getTitle() {\n    return 'Approved Applications';\n  }\n\n  handleRevoke = authorization => {\n    const oldData = this.state.data;\n\n    this.setState(\n      state => ({\n        data: state.data.filter(({id}) => id !== authorization.id),\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-authorizations/', {\n            method: 'DELETE',\n            data: {authorization: authorization.id},\n          });\n\n          addSuccessMessage(t('Saved changes'));\n        } catch (_err) {\n          this.setState({\n            data: oldData,\n          });\n          addErrorMessage(t('Unable to save changes, please try again'));\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {data} = this.state;\n    const isEmpty = data.length === 0;\n    return (\n      <div>\n        <SettingsPageHeader title=\"Authorized Applications\" />\n        <Description>\n          {tct('You can manage your own applications via the [link:API dashboard].', {\n            link: <Link to=\"/settings/account/api/\" />,\n          })}\n        </Description>\n\n        <Panel>\n          <PanelHeader>{t('Approved Applications')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't approved any third party applications.\")}\n              </EmptyMessage>\n            )}\n\n            {!isEmpty && (\n              <div>\n                {data.map(authorization => (\n                  <PanelItemCenter key={authorization.id}>\n                    <ApplicationDetails>\n                      <ApplicationName>{authorization.application.name}</ApplicationName>\n                      {authorization.homepageUrl && (\n                        <Url>\n                          <a href={authorization.homepageUrl}>\n                            {authorization.homepageUrl}\n                          </a>\n                        </Url>\n                      )}\n                      <Scopes>{authorization.scopes.join(', ')}</Scopes>\n                    </ApplicationDetails>\n                    <Button\n                      size=\"small\"\n                      onClick={() => this.handleRevoke(authorization)}\n                      icon={<IconDelete />}\n                    />\n                  </PanelItemCenter>\n                ))}\n              </div>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default AccountAuthorizations;\n\nconst Description = styled('p')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  margin-bottom: ${space(4)};\n`;\n\nconst PanelItemCenter = styled(PanelItem)`\n  align-items: center;\n`;\n\nconst ApplicationDetails = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst ApplicationName = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\n/**\n * Intentionally wrap <a> so that it does not take up full width and cause\n * hit box issues\n */\nconst Url = styled('div')`\n  margin-bottom: ${space(0.5)};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n\nconst Scopes = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"sourceRoot":""}