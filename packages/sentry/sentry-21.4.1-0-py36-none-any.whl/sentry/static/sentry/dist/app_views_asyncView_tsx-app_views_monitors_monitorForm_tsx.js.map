{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/monitors/monitorModel.tsx","webpack:///./app/views/monitors/monitorForm.tsx","webpack:///./app/views/settings/components/forms/form.tsx","webpack:///./app/views/settings/components/forms/numberField.tsx","webpack:///./app/views/settings/components/forms/textField.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","MonitorModel","fields","toJSON","reduce","data","k","v","indexOf","config","Array","isArray","schedule","parseInt","substr","id","getValue","FormModel","SCHEDULE_TYPES","MONITOR_TYPES","INTERVALS","MonitorForm","type","rv","schedule_type","checkin_margin","max_runtime","monitor","props","selectedProjectId","selection","projects","selectedProject","organization","find","p","access","hasAccess","allowUndo","requireChanges","apiEndpoint","apiMethod","model","form","initialData","name","project","slug","formDataFromConfig","onSubmitSuccess","t","label","className","disabled","choices","filter","isMember","map","required","placeholder","help","tct","link","href","Component","withGlobalSelection","withOrganization","Form","context","e","skipPreventDefault","preventDefault","isSaving","onPreSubmit","onSubmit","getData","onSubmitError","saveForm","submitSuccess","error","submitError","saveOnBlur","resetOnError","onFieldChange","setInitialData","setFormOptions","reset","children","footerClass","footerStyle","submitDisabled","submitLabel","submitPriority","cancelLabel","onCancel","extraButton","hideFooter","shouldShowFooter","data-test-id","isRenderFunc","StyledFooter","style","DefaultButtons","onClick","marginLeft","priority","isError","formChanged","React","PropTypes","Panel","space","NumberField","TextField"],"mappings":"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","file":"app_views_asyncView_tsx-app_views_monitors_monitorForm_tsx.3e3df1ace6c37c9cf7de.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import FormModel from 'app/views/settings/components/forms/model';\n\nimport {MonitorConfig} from './types';\n\ntype TransformedData = {\n  config?: Partial<MonitorConfig>;\n};\n\nexport default class MonitorModel extends FormModel {\n  getTransformedData() {\n    return this.fields.toJSON().reduce<TransformedData>((data, [k, v]) => {\n      if (k.indexOf('config.') !== 0) {\n        data[k] = v;\n        return data;\n      }\n\n      if (!data.config) {\n        data.config = {};\n      }\n      if (k === 'config.schedule.frequency' || k === 'config.schedule.interval') {\n        if (!Array.isArray(data.config.schedule)) {\n          data.config.schedule = [null, null];\n        }\n      }\n\n      if (k === 'config.schedule.frequency') {\n        data.config!.schedule![0] = parseInt(v as string, 10);\n      } else if (k === 'config.schedule.interval') {\n        data.config!.schedule![1] = v;\n      } else {\n        data.config[k.substr(7)] = v;\n      }\n\n      return data;\n    }, {});\n  }\n\n  getTransformedValue(id: string) {\n    return id.indexOf('config') === 0 ? this.getValue(id) : super.getTransformedValue(id);\n  }\n}\n","import React, {Component} from 'react';\nimport {Observer} from 'mobx-react';\n\nimport Access from 'app/components/acl/access';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {Choices, GlobalSelection, Organization} from 'app/types';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization from 'app/utils/withOrganization';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport NumberField from 'app/views/settings/components/forms/numberField';\nimport SelectField from 'app/views/settings/components/forms/selectField';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\nimport TextField from 'app/views/settings/components/forms/textField';\n\nimport MonitorModel from './monitorModel';\nimport {Monitor, MonitorConfig, MonitorTypes, ScheduleType} from './types';\n\nconst SCHEDULE_TYPES: [ScheduleType, string][] = [\n  ['crontab', 'Crontab'],\n  ['interval', 'Interval'],\n];\n\nconst MONITOR_TYPES: Choices = [['cron_job', 'Cron Job']];\n\nconst INTERVALS = [\n  ['minute', 'minute(s)'],\n  ['hour', 'hour(s)'],\n  ['day', 'day(s)'],\n  ['week', 'week(s)'],\n  ['month', 'month(s)'],\n  ['year', 'year(s)'],\n];\n\ntype Props = {\n  monitor?: Monitor;\n  organization: Organization;\n  selection: GlobalSelection;\n  apiEndpoint: string;\n  apiMethod: Form['props']['apiMethod'];\n  onSubmitSuccess: Form['props']['onSubmitSuccess'];\n};\n\nclass MonitorForm extends Component<Props> {\n  form = new MonitorModel();\n\n  formDataFromConfig(type: MonitorTypes, config: MonitorConfig) {\n    const rv = {};\n    switch (type) {\n      case 'cron_job':\n        rv['config.schedule_type'] = config.schedule_type;\n        rv['config.checkin_margin'] = config.checkin_margin;\n        rv['config.max_runtime'] = config.max_runtime;\n\n        switch (config.schedule_type) {\n          case 'interval':\n            rv['config.schedule.frequency'] = config.schedule[0];\n            rv['config.schedule.interval'] = config.schedule[1];\n            break;\n          case 'crontab':\n          default:\n            rv['config.schedule'] = config.schedule;\n        }\n        break;\n      default:\n    }\n    return rv;\n  }\n\n  render() {\n    const {monitor} = this.props;\n    const selectedProjectId = this.props.selection.projects[0];\n    const selectedProject = selectedProjectId\n      ? this.props.organization.projects.find(p => p.id === selectedProjectId + '')\n      : null;\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Form\n            allowUndo\n            requireChanges\n            apiEndpoint={this.props.apiEndpoint}\n            apiMethod={this.props.apiMethod}\n            model={this.form}\n            initialData={\n              monitor\n                ? {\n                    name: monitor.name,\n                    type: monitor.type,\n                    project: monitor.project.slug,\n                    ...this.formDataFromConfig(monitor.type, monitor.config),\n                  }\n                : {\n                    project: selectedProject ? selectedProject.slug : null,\n                  }\n            }\n            onSubmitSuccess={this.props.onSubmitSuccess}\n          >\n            <Panel>\n              <PanelHeader>{t('Details')}</PanelHeader>\n\n              <PanelBody>\n                {monitor && (\n                  <Field label={t('ID')}>\n                    <div className=\"controls\">\n                      <TextCopyInput>{monitor.id}</TextCopyInput>\n                    </div>\n                  </Field>\n                )}\n                <SelectField\n                  name=\"project\"\n                  label={t('Project')}\n                  disabled={!hasAccess}\n                  choices={this.props.organization.projects\n                    .filter(p => p.isMember)\n                    .map(p => [p.slug, p.slug])}\n                  required\n                />\n                <TextField\n                  name=\"name\"\n                  placeholder={t('My Cron Job')}\n                  label={t('Name')}\n                  disabled={!hasAccess}\n                  required\n                />\n              </PanelBody>\n            </Panel>\n            <Panel>\n              <PanelHeader>{t('Config')}</PanelHeader>\n\n              <PanelBody>\n                <SelectField\n                  name=\"type\"\n                  label={t('Type')}\n                  disabled={!hasAccess}\n                  choices={MONITOR_TYPES}\n                  required\n                />\n                <Observer>\n                  {() => {\n                    switch (this.form.getValue('type')) {\n                      case 'cron_job':\n                        return (\n                          <React.Fragment>\n                            <NumberField\n                              name=\"config.max_runtime\"\n                              label={t('Max Runtime')}\n                              disabled={!hasAccess}\n                              help={t(\n                                \"The maximum runtime (in minutes) a check-in is allowed before it's marked as a failure.\"\n                              )}\n                              placeholder=\"e.g. 30\"\n                            />\n                            <SelectField\n                              name=\"config.schedule_type\"\n                              label={t('Schedule Type')}\n                              disabled={!hasAccess}\n                              choices={SCHEDULE_TYPES}\n                              required\n                            />\n                          </React.Fragment>\n                        );\n                      default:\n                        return null;\n                    }\n                  }}\n                </Observer>\n                <Observer>\n                  {() => {\n                    switch (this.form.getValue('config.schedule_type')) {\n                      case 'crontab':\n                        return (\n                          <React.Fragment>\n                            <TextField\n                              name=\"config.schedule\"\n                              label={t('Schedule')}\n                              disabled={!hasAccess}\n                              placeholder=\"*/5 * * * *\"\n                              required\n                              help={tct(\n                                'Changes to the schedule will apply on the next check-in. See [link:Wikipedia] for crontab syntax.',\n                                {\n                                  link: <a href=\"https://en.wikipedia.org/wiki/Cron\" />,\n                                }\n                              )}\n                            />\n                            <NumberField\n                              name=\"config.checkin_margin\"\n                              label={t('Check-in Margin')}\n                              disabled={!hasAccess}\n                              help={t(\n                                \"The margin (in minutes) a check-in is allowed to exceed it's scheduled window before being treated as missed.\"\n                              )}\n                              placeholder=\"e.g. 30\"\n                            />\n                          </React.Fragment>\n                        );\n                      case 'interval':\n                        return (\n                          <React.Fragment>\n                            <NumberField\n                              name=\"config.schedule.frequency\"\n                              label={t('Frequency')}\n                              disabled={!hasAccess}\n                              placeholder=\"e.g. 1\"\n                              required\n                            />\n                            <SelectField\n                              name=\"config.schedule.interval\"\n                              label={t('Interval')}\n                              disabled={!hasAccess}\n                              choices={INTERVALS}\n                              required\n                            />\n                            <NumberField\n                              name=\"config.checkin_margin\"\n                              label={t('Check-in Margin')}\n                              disabled={!hasAccess}\n                              help={t(\n                                \"The margin (in minutes) a check-in is allowed to exceed it's scheduled window before being treated as missed.\"\n                              )}\n                              placeholder=\"e.g. 30\"\n                            />\n                          </React.Fragment>\n                        );\n                      default:\n                        return null;\n                    }\n                  }}\n                </Observer>\n              </PanelBody>\n            </Panel>\n          </Form>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default withGlobalSelection(withOrganization(MonitorForm));\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {Observer} from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nimport {APIRequestMethod} from 'app/api';\nimport Button from 'app/components/button';\nimport Panel from 'app/components/panels/panel';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport FormModel, {FormOptions} from 'app/views/settings/components/forms/model';\n\ntype Data = Record<string, any>;\n\ntype RenderProps = {\n  model: FormModel;\n};\n\ntype RenderFunc = (props: RenderProps) => React.ReactNode;\n\ntype Props = {\n  apiMethod?: APIRequestMethod;\n  apiEndpoint?: string;\n  children?: React.ReactNode | RenderFunc;\n  className?: string;\n  cancelLabel?: string;\n  submitDisabled?: boolean;\n  submitLabel?: string;\n  submitPriority?: React.ComponentProps<typeof Button>['priority'];\n  footerClass?: string;\n  footerStyle?: React.CSSProperties;\n  extraButton?: React.ReactNode;\n  initialData?: Data;\n  // Require changes before able to submit form\n  requireChanges?: boolean;\n  // Reset form when there are errors; after submit\n  resetOnError?: boolean;\n  hideFooter?: boolean;\n  allowUndo?: boolean;\n  // Save field on control blur\n  saveOnBlur?: boolean;\n  model?: FormModel;\n  // if set to true, preventDefault is not called\n  skipPreventDefault?: boolean;\n  additionalFieldProps?: {[key: string]: any};\n  'data-test-id'?: string;\n\n  onCancel?: (e: React.MouseEvent) => void;\n  onSubmit?: (\n    data: Data,\n    onSubmitSuccess: (data: Data) => void,\n    onSubmitError: (error: any) => void,\n    e: React.FormEvent,\n    model: FormModel\n  ) => void;\n  onPreSubmit?: () => void;\n} & Pick<FormOptions, 'onSubmitSuccess' | 'onSubmitError' | 'onFieldChange'>;\n\ntype Context = {\n  saveOnBlur: boolean;\n  form: FormModel;\n};\n\nexport default class Form extends React.Component<Props> {\n  static childContextTypes = {\n    saveOnBlur: PropTypes.bool,\n    form: PropTypes.object,\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    const {\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n      resetOnError,\n      onSubmitSuccess,\n      onSubmitError,\n      onFieldChange,\n      initialData,\n      allowUndo,\n    } = props;\n\n    this.model.setInitialData(initialData);\n    this.model.setFormOptions({\n      resetOnError,\n      allowUndo,\n      onFieldChange,\n      onSubmitSuccess,\n      onSubmitError,\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n    });\n  }\n\n  getChildContext() {\n    return {\n      saveOnBlur: this.props.saveOnBlur,\n      form: this.model,\n    };\n  }\n\n  componentWillUnmount() {\n    this.model.reset();\n  }\n\n  model: FormModel = this.props.model || new FormModel();\n\n  onSubmit = e => {\n    !this.props.skipPreventDefault && e.preventDefault();\n    if (this.model.isSaving) {\n      return;\n    }\n\n    this.props.onPreSubmit?.();\n\n    if (this.props.onSubmit) {\n      this.props.onSubmit(\n        this.model.getData(),\n        this.onSubmitSuccess,\n        this.onSubmitError,\n        e,\n        this.model\n      );\n    } else {\n      this.model.saveForm();\n    }\n  };\n\n  onSubmitSuccess = data => {\n    const {onSubmitSuccess} = this.props;\n    this.model.submitSuccess(data);\n\n    if (onSubmitSuccess) {\n      onSubmitSuccess(data, this.model);\n    }\n  };\n\n  onSubmitError = error => {\n    const {onSubmitError} = this.props;\n    this.model.submitError(error);\n\n    if (onSubmitError) {\n      onSubmitError(error, this.model);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      footerClass,\n      footerStyle,\n      submitDisabled,\n      submitLabel,\n      submitPriority,\n      cancelLabel,\n      onCancel,\n      extraButton,\n      requireChanges,\n      saveOnBlur,\n      hideFooter,\n    } = this.props;\n    const shouldShowFooter =\n      typeof hideFooter !== 'undefined' ? !hideFooter : !saveOnBlur;\n\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={className ?? 'form-stacked'}\n        data-test-id={this.props['data-test-id']}\n      >\n        <div>\n          {isRenderFunc<RenderFunc>(children) ? children({model: this.model}) : children}\n        </div>\n\n        {shouldShowFooter && (\n          <StyledFooter\n            className={footerClass}\n            style={footerStyle}\n            saveOnBlur={saveOnBlur}\n          >\n            {extraButton}\n            <DefaultButtons>\n              {onCancel && (\n                <Observer>\n                  {() => (\n                    <Button\n                      type=\"button\"\n                      disabled={this.model.isSaving}\n                      onClick={onCancel}\n                      style={{marginLeft: 5}}\n                    >\n                      {cancelLabel ?? t('Cancel')}\n                    </Button>\n                  )}\n                </Observer>\n              )}\n\n              <Observer>\n                {() => (\n                  <Button\n                    data-test-id=\"form-submit\"\n                    priority={submitPriority ?? 'primary'}\n                    disabled={\n                      this.model.isError ||\n                      this.model.isSaving ||\n                      submitDisabled ||\n                      (requireChanges ? !this.model.formChanged : false)\n                    }\n                    type=\"submit\"\n                  >\n                    {submitLabel ?? t('Save Changes')}\n                  </Button>\n                )}\n              </Observer>\n            </DefaultButtons>\n          </StyledFooter>\n        )}\n      </form>\n    );\n  }\n}\n\nconst StyledFooter = styled('div')<{saveOnBlur?: boolean}>`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 25px;\n  border-top: 1px solid #e9ebec;\n  background: none;\n  padding: 16px 0 0;\n  margin-bottom: 16px;\n\n  ${p =>\n    !p.saveOnBlur &&\n    `\n  ${Panel} & {\n    margin-top: 0;\n    padding-right: 36px;\n  }\n\n  /* Better padding with form inside of a modal */\n  .modal-content & {\n    padding-right: 30px;\n    margin-left: -30px;\n    margin-right: -30px;\n    margin-bottom: -30px;\n    margin-top: 16px;\n    padding-bottom: 16px;\n  }\n  `};\n`;\n\nconst DefaultButtons = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  flex: 1;\n`;\n","import React from 'react';\n\nimport InputField from './inputField';\n\ntype Props = InputField['props'];\n\nexport default function NumberField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"number\" />;\n}\n","import React from 'react';\n\nimport InputField from 'app/views/settings/components/forms/inputField';\n\ntype Props = InputField['props'];\n\nexport default function TextField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"text\" />;\n}\n"],"sourceRoot":""}