{"version":3,"sources":["webpack:///./app/actionCreators/integrations.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/components/repositoryRow.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/organizationRepositories/organizationRepositories.tsx","webpack:///./app/views/settings/organizationRepositories/index.tsx"],"names":["deleteRepository","client","orgId","repositoryId","addLoadingMessage","promise","requestPromise","method","then","clearIndicators","addErrorMessage","t","cancelDeleteRepository","data","status","applyRepositoryAddComplete","repo","message","tct","name","addSuccessMessage","errorData","text","responseJSON","errors","__all__","migrateRepository","integration","integrationId","id","addRepository","installation","identifier","provider","key","Client","AlertLink","this","props","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","data-test-id","IconWrapper","AlertLinkText","IconLink","direction","React","linkProps","omit","p","theme","alert","backgroundLight","textColor","border","space","RepositoryRow","api","repository","onRepositoryChange","RepositoryStatus","showProvider","isActive","access","hasAccess","StyledPanelItem","RepositoryTitleAndUrl","RepositoryTitle","getStatusLabel","StyledButton","cancelDelete","disabled","url","replace","title","onConfirm","deleteRepo","label","PanelItem","Button","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","gray400","fontSizeLarge","SettingsPageHeader","OrganizationRepositories","itemList","params","hasItemList","length","className","link","map","description","OrganizationRepositoriesContainer","state","forEach","item","setState","query","routeTitleGen","itemListPageLinks","pageLinks"],"mappings":"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","file":"OrganizationRepositories.c36a2e95c148f74bc896.js","sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport {t, tct} from 'app/locale';\nimport {Integration, Repository} from 'app/types';\n\nconst api = new Client();\n\n/**\n * Removes an integration from a project.\n *\n * @param {String} orgId Organization Slug\n * @param {String} projectId Project Slug\n * @param {Object} integration The organization integration to remove\n */\nexport function removeIntegrationFromProject(\n  orgId: string,\n  projectId: string,\n  integration: Integration\n) {\n  const endpoint = `/projects/${orgId}/${projectId}/integrations/${integration.id}/`;\n  addLoadingMessage();\n\n  return api.requestPromise(endpoint, {method: 'DELETE'}).then(\n    () => {\n      addSuccessMessage(t('Disabled %s for %s', integration.name, projectId));\n    },\n    () => {\n      addErrorMessage(t('Failed to disable %s for %s', integration.name, projectId));\n    }\n  );\n}\n\n/**\n * Add an integration to a project\n *\n * @param {String} orgId Organization Slug\n * @param {String} projectId Project Slug\n * @param {Object} integration The organization integration to add\n */\nexport function addIntegrationToProject(\n  orgId: string,\n  projectId: string,\n  integration: Integration\n) {\n  const endpoint = `/projects/${orgId}/${projectId}/integrations/${integration.id}/`;\n  addLoadingMessage();\n\n  return api.requestPromise(endpoint, {method: 'PUT'}).then(\n    () => {\n      addSuccessMessage(t('Enabled %s for %s', integration.name, projectId));\n    },\n    () => {\n      addErrorMessage(t('Failed to enabled %s for %s', integration.name, projectId));\n    }\n  );\n}\n\n/**\n * Delete a respository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n */\nexport function deleteRepository(client: Client, orgId: string, repositoryId: string) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to delete repository.'))\n  );\n  return promise;\n}\n\n/**\n * Cancel the deletion of a respository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n */\nexport function cancelDeleteRepository(\n  client: Client,\n  orgId: string,\n  repositoryId: string\n) {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      method: 'PUT',\n      data: {status: 'visible'},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t('Unable to cancel deletion.'))\n  );\n  return promise;\n}\n\nfunction applyRepositoryAddComplete(promise: Promise<Repository>) {\n  promise.then(\n    (repo: Repository) => {\n      const message = tct('[repo] has been successfully added.', {\n        repo: repo.name,\n      });\n      addSuccessMessage(message);\n    },\n    errorData => {\n      const text = errorData.responseJSON.errors\n        ? errorData.responseJSON.errors.__all__\n        : t('Unable to add repository.');\n      addErrorMessage(text);\n    }\n  );\n  return promise;\n}\n\n/**\n * Migrate a repository to a new integration.\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} repositoryId Repository ID\n * @param {Object} integration Integration provider data.\n */\nexport function migrateRepository(\n  client: Client,\n  orgId: string,\n  repositoryId: string,\n  integration: Integration\n) {\n  const data = {integrationId: integration.id};\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/repos/${repositoryId}/`,\n    {\n      data,\n      method: 'PUT',\n    }\n  );\n  return applyRepositoryAddComplete(promise);\n}\n\n/**\n * Add a repository\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {String} name Repository identifier/name to add\n * @param {Object} integration Integration provider data.\n */\nexport function addRepository(\n  client: Client,\n  orgId: string,\n  name: string,\n  integration: Integration\n) {\n  const data = {\n    installation: integration.id,\n    identifier: name,\n    provider: `integrations:${integration.provider.key}`,\n  };\n  addLoadingMessage();\n  const promise = client.requestPromise(`/organizations/${orgId}/repos/`, {\n    method: 'POST',\n    data,\n  });\n  return applyRepositoryAddComplete(promise);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport Link from 'app/components/links/link';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n\n    return (\n      <StyledLink\n        data-test-id={dataTestId}\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && <IconWrapper>{icon}</IconWrapper>}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {cancelDeleteRepository, deleteRepository} from 'app/actionCreators/integrations';\nimport {Client} from 'app/api';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Repository, RepositoryStatus} from 'app/types';\n\ntype DefaultProps = {\n  showProvider?: boolean;\n};\n\ntype Props = DefaultProps & {\n  repository: Repository;\n  api: Client;\n  orgId: string;\n  onRepositoryChange?: (data: {id: string; status: RepositoryStatus}) => void;\n};\n\nclass RepositoryRow extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    showProvider: false,\n  };\n\n  getStatusLabel(repo: Repository) {\n    switch (repo.status) {\n      case RepositoryStatus.PENDING_DELETION:\n        return 'Deletion Queued';\n      case RepositoryStatus.DELETION_IN_PROGRESS:\n        return 'Deletion in Progress';\n      case RepositoryStatus.DISABLED:\n        return 'Disabled';\n      case RepositoryStatus.HIDDEN:\n        return 'Disabled';\n      default:\n        return null;\n    }\n  }\n\n  cancelDelete = () => {\n    const {api, orgId, repository, onRepositoryChange} = this.props;\n    cancelDeleteRepository(api, orgId, repository.id).then(\n      data => {\n        if (onRepositoryChange) {\n          onRepositoryChange(data);\n        }\n      },\n      () => {}\n    );\n  };\n\n  deleteRepo = () => {\n    const {api, orgId, repository, onRepositoryChange} = this.props;\n    deleteRepository(api, orgId, repository.id).then(\n      data => {\n        if (onRepositoryChange) {\n          onRepositoryChange(data);\n        }\n      },\n      () => {}\n    );\n  };\n\n  get isActive() {\n    return this.props.repository.status === RepositoryStatus.ACTIVE;\n  }\n\n  render() {\n    const {repository, showProvider} = this.props;\n    const isActive = this.isActive;\n\n    return (\n      <Access access={['org:integrations']}>\n        {({hasAccess}) => (\n          <StyledPanelItem status={repository.status}>\n            <RepositoryTitleAndUrl>\n              <RepositoryTitle>\n                <strong>{repository.name}</strong>\n                {!isActive && <small> &mdash; {this.getStatusLabel(repository)}</small>}\n                {repository.status === RepositoryStatus.PENDING_DELETION && (\n                  <StyledButton\n                    size=\"xsmall\"\n                    onClick={this.cancelDelete}\n                    disabled={!hasAccess}\n                    data-test-id=\"repo-cancel\"\n                  >\n                    {t('Cancel')}\n                  </StyledButton>\n                )}\n              </RepositoryTitle>\n              <div>\n                {showProvider && <small>{repository.provider.name}</small>}\n                {showProvider && repository.url && <span>&nbsp;&mdash;&nbsp;</span>}\n                {repository.url && (\n                  <small>\n                    <a href={repository.url}>{repository.url.replace('https://', '')}</a>\n                  </small>\n                )}\n              </div>\n            </RepositoryTitleAndUrl>\n\n            <Tooltip\n              title={t(\n                'You must be an organization owner, manager or admin to remove a repository.'\n              )}\n              disabled={hasAccess}\n            >\n              <Confirm\n                disabled={\n                  !hasAccess ||\n                  (!isActive && repository.status !== RepositoryStatus.DISABLED)\n                }\n                onConfirm={this.deleteRepo}\n                message={t(\n                  'Are you sure you want to remove this repository? All associated commit data will be removed in addition to the repository.'\n                )}\n              >\n                <Button\n                  size=\"xsmall\"\n                  icon={<IconDelete size=\"xs\" />}\n                  label={t('delete')}\n                  disabled={!hasAccess}\n                />\n              </Confirm>\n            </Tooltip>\n          </StyledPanelItem>\n        )}\n      </Access>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)<{status: RepositoryStatus}>`\n  /* shorter top padding because of title lineheight */\n  padding: ${space(1)} ${space(2)} ${space(2)};\n  justify-content: space-between;\n  align-items: center;\n  flex: 1;\n\n  ${p =>\n    p.status === RepositoryStatus.DISABLED &&\n    `\n    filter: grayscale(1);\n    opacity: 0.4;\n  `};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst RepositoryTitleAndUrl = styled('div')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst RepositoryTitle = styled('div')`\n  margin-bottom: ${space(1)};\n  /* accommodate cancel button height */\n  line-height: 26px;\n`;\n\nexport default RepositoryRow;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Client} from 'app/api';\nimport AlertLink from 'app/components/alertLink';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport RepositoryRow from 'app/components/repositoryRow';\nimport {IconCommit} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport {Repository, RepositoryStatus} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  itemList: Repository[];\n  onRepositoryChange: (data: {id: string; status: RepositoryStatus}) => void;\n  api: Client;\n};\n\nconst OrganizationRepositories = ({itemList, onRepositoryChange, api, params}: Props) => {\n  const {orgId} = params;\n  const hasItemList = itemList && itemList.length > 0;\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Repositories')} />\n      <AlertLink to={`/settings/${orgId}/integrations/`}>\n        {t(\n          'Want to add a repository to start tracking commits? Install or configure your version control integration here.'\n        )}\n      </AlertLink>\n      {!hasItemList && (\n        <div className=\"m-b-2\">\n          <TextBlock>\n            {t(\n              'Connecting a repository allows Sentry to capture commit data via webhooks. ' +\n                'This enables features like suggested assignees and resolving issues via commit message. ' +\n                \"Once you've connected a repository, you can associate commits with releases via the API.\"\n            )}\n            &nbsp;\n            {tct('See our [link:documentation] for more details.', {\n              link: <a href=\"https://docs.sentry.io/learn/releases/\" />,\n            })}\n          </TextBlock>\n        </div>\n      )}\n\n      {hasItemList ? (\n        <Panel>\n          <PanelHeader>{t('Added Repositories')}</PanelHeader>\n          <PanelBody>\n            <div>\n              {itemList.map(repo => (\n                <RepositoryRow\n                  key={repo.id}\n                  repository={repo}\n                  api={api}\n                  showProvider\n                  orgId={orgId}\n                  onRepositoryChange={onRepositoryChange}\n                />\n              ))}\n            </div>\n          </PanelBody>\n        </Panel>\n      ) : (\n        <Panel>\n          <EmptyMessage\n            icon={<IconCommit size=\"xl\" />}\n            title={t('Sentry is better with commit data')}\n            description={t(\n              'Adding one or more repositories will enable enhanced releases and the ability to resolve Sentry Issues via git message.'\n            )}\n            action={\n              <Button href=\"https://docs.sentry.io/learn/releases/\">\n                {t('Learn more')}\n              </Button>\n            }\n          />\n        </Panel>\n      )}\n    </div>\n  );\n};\n\nexport default OrganizationRepositories;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Pagination from 'app/components/pagination';\nimport {t} from 'app/locale';\nimport {Repository} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\n\nimport OrganizationRepositories from './organizationRepositories';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  itemList: Repository[] | null;\n};\n\nexport default class OrganizationRepositoriesContainer extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n    return [['itemList', `/organizations/${orgId}/repos/`, {query: {status: ''}}]];\n  }\n\n  // Callback used by child component to signal state change\n  onRepositoryChange = (data: Pick<Repository, 'id' | 'status'>) => {\n    const itemList = this.state.itemList;\n    itemList?.forEach(item => {\n      if (item.id === data.id) {\n        item.status = data.status;\n      }\n    });\n    this.setState({itemList});\n  };\n\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitleGen(t('Repositories'), orgId, false);\n  }\n\n  renderBody() {\n    const {itemList, itemListPageLinks} = this.state;\n\n    return (\n      <React.Fragment>\n        <OrganizationRepositories\n          {...this.props}\n          itemList={itemList!}\n          api={this.api}\n          onRepositoryChange={this.onRepositoryChange}\n        />\n        {itemListPageLinks && (\n          <Pagination pageLinks={itemListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}