{"version":3,"sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/components/deviceName.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/attachmentUrl.tsx","webpack:///./app/components/eventsTable/eventsTableRow.tsx","webpack:///./app/components/eventsTable/eventsTable.tsx","webpack:///./app/views/organizationGroupDetails/groupEvents.tsx"],"names":["Role","user","ConfigStore","this","props","organization","role","availableRoles","currentRole","isSuperuser","Cookies","undefined","Array","isArray","roleIds","map","r","id","includes","requiredIndex","indexOf","children","hasRole","isRenderFunc","React","withOrganization","deviceNameMapper","model","iOSDeviceList","modelIdentifier","split","modelId","splice","join","modelName","generationByIdentifier","loadDeviceListModule","DeviceName","state","_isMounted","then","setState","value","deviceName","data-test-id","FileSize","className","bytes","getDynamicText","formatBytesBase2","fixed","SearchBar","query","defaultQuery","dropdownVisible","searchInputRef","current","blur","evt","preventDefault","onSearch","callIfFunction","onChange","target","nextProps","width","classNames","onSubmit","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","onQueryBlur","onQueryChange","StyledIconSearch","size","color","SearchClearButton","priority","onClick","clearSearch","icon","label","t","Input","p","IconSearch","Button","theme","fontSizeLarge","gray200","gray300","AttachmentUrl","attachment","eventId","projectId","slug","attachmentsRole","getDownloadUrl","EventsTableRow","event","crashFile","crashFileType","url","href","orgId","groupId","tagList","hasUser","tagMap","tags","forEach","tag","key","link","to","date","dateCreated","title","substr","renderCrashFileLink","gravatar","email","EventsTable","events","find","GroupEvents","targetQueryParams","location","params","browserHistory","pathname","loading","error","pick","limit","api","request","method","success","data","_","jqXHR","eventList","pageLinks","getResponseHeader","err","parseApiError","queryParams","fetchData","search","group","filter","project","message","onRetry","length","renderResults","renderNoQueryResults","renderEmpty","style","marginBottom","handleSearch","renderBody","withApi"],"mappings":"wrBAiCMA,E,yiBACJ,WAAU,MACFC,EAAOC,QAAgB,QADrB,EAEqBC,KAAKC,MAA3BC,EAFC,EAEDA,aAAcC,EAFb,EAEaA,KACdC,EAAkBF,EAAlBE,eACDC,EAAW,UAAGH,EAAaC,YAAhB,QAAwB,GAEzC,IAAKL,EACH,OAAO,EAGT,ICjCoBC,QAAgB,SAAW,IAA1CO,cAQLC,QAf0B,KAeS,aAEQC,IAAvCD,QAjBsB,ODyCxB,OAAO,EAGT,IAAKE,MAAMC,QAAQN,GACjB,OAAO,EAGT,IAAMO,EAAUP,EAAeQ,KAAI,SAAAC,GAAC,OAAIA,EAAEC,MAE1C,IAAKH,EAAQI,SAASZ,KAAUQ,EAAQI,SAASV,GAC/C,OAAO,EAGT,IAAMW,EAAgBL,EAAQM,QAAQd,GAEtC,OADqBQ,EAAQM,QAAQZ,IACdW,I,oBAGzB,WAAS,IACAE,EAAYlB,KAAKC,MAAjBiB,SACDC,EAAUnB,KAAKmB,UAErB,OAAIC,OAA+BF,GAC1BA,EAAS,CAACC,YAGZA,GAAWD,EAAWA,EAAW,S,GAtCzBG,aAAbxB,E,mBA0CN,SAAeyB,OAAiBzB,I,mzBEvEzB,SAAS0B,EAAiBC,EAAeC,GAC9C,IAAMC,EAAkBF,EAAMG,MAAM,KAAK,GACnCC,EAAUJ,EAAMG,MAAM,KAAKE,OAAO,GAAGC,KAAK,KAC1CC,EAAYN,EAAcO,uBAAuBN,GACvD,YAAqBlB,IAAduB,EAA0BP,EAAQO,EAAY,IAAMH,EAGtD,SAAeK,IAAtB,+B,wCAAO,uGACE,yGADF,4C,0BAgBcC,E,wcACnB,WAAYjC,GAAO,4BACjB,cAAMA,IADW,uCAGjB,EAAKkC,MAAQ,CACXV,cAAe,MAJA,E,gDAQnB,WAAoB,WAGlBzB,KAAKoC,YAAa,EAIlBH,IAAuBI,MAAK,SAAAZ,GACrB,EAAKW,YAIV,EAAKE,SAAS,CAACb,uB,kCAInB,WACEzB,KAAKoC,YAAa,I,oBAKpB,WAAS,MACmBpC,KAAKC,MAAxBsC,EADA,EACAA,MAAOrB,EADP,EACOA,SACPO,EAAiBzB,KAAKmC,MAAtBV,cAGP,IAAKc,EACH,OAAO,KAIT,IAAKd,EACH,OAAOc,EAGT,IAAMC,EAAajB,EAAiBgB,EAAOd,GAE3C,OACE,gBAAMgB,eAAa,sBAChBvB,EAAWA,EAASsB,GAAcA,O,GAjDHnB,aAAnBa,E,qQCjBrB,SAASQ,EAASzC,GAAc,IACvB0C,EAAoB1C,EAApB0C,UAAWC,EAAS3C,EAAT2C,MAElB,OACE,gBAAMD,UAAWA,IACdE,OAAe,CAACN,OAAOO,OAAiBF,GAAQG,MAAO,WALrDL,E,uBAUT,W,y/BCSMM,E,wnBAOI,CACNC,MAAO,EAAKhD,MAAMgD,OAAS,EAAKhD,MAAMiD,aACtCC,iBAAiB,K,mCAWF9B,gB,0BAEV,WACD,EAAK+B,eAAeC,SACtB,EAAKD,eAAeC,QAAQC,W,8BAIrB,SAACC,GACVA,EAAIC,iBACJ,EAAKF,OACL,EAAKrD,MAAMwD,SAAS,EAAKtB,MAAMc,W,iCAGnB,WACZ,EAAKX,SAAS,CAACW,MAAO,EAAKhD,MAAMiD,eAAe,WAC9C,EAAKjD,MAAMwD,SAAS,EAAKtB,MAAMc,QAC/BS,OAAe,EAAKzD,MAAM0D,SAAU,EAAKxB,MAAMc,c,kCAIpC,WACb,EAAKX,SAAS,CACZa,iBAAiB,Q,iCAIP,WACZ,EAAKb,SAAS,CAACa,iBAAiB,Q,mCAGlB,SAACI,GAA6C,IACrDhB,EAASgB,EAAIK,OAAbrB,MAEP,EAAKD,SAAS,CAACW,MAAOV,KACtBmB,OAAe,EAAKzD,MAAM0D,SAAUpB,M,iEA3CtC,SAAiCsB,GAC3BA,EAAUZ,QAAUjD,KAAKC,MAAMgD,OACjCjD,KAAKsC,SAAS,CACZW,MAAOY,EAAUZ,U,oBA2CvB,WAAS,MACoBjD,KAAKC,MAAzB0C,EADA,EACAA,UAAWmB,EADX,EACWA,MAElB,OACE,eAAKnB,UAAWoB,IAAW,SAAUpB,KACnC,gBAAMA,UAAU,kBAAkBqB,SAAUhE,KAAKgE,WAC/C,oBACE,QAACC,EAAD,CACEC,KAAK,OACLvB,UAAU,eACVwB,YAAanE,KAAKC,MAAMkE,YACxBC,KAAK,QACLC,IAAKrE,KAAKoD,eACVkB,aAAa,MACb/B,MAAOvC,KAAKmC,MAAMc,MAClBsB,OAAQvE,KAAKwE,YACbb,SAAU3D,KAAKyE,cACfX,MAAOA,KAET,QAACY,EAAD,CAAkB/B,UAAU,oBAAoBgC,KAAK,KAAKC,MAAM,YAC/D5E,KAAKmC,MAAMc,QAAUjD,KAAKC,MAAMiD,eAC/B,QAAC2B,EAAD,CACEX,KAAK,SACLvB,UAAU,oBACVmC,SAAS,OACTC,QAAS/E,KAAKgF,YACdL,KAAK,SACLM,MAAM,QAAC,IAAD,MACNC,OAAOC,OAAE,kB,GAtFD9D,iBAAlB2B,E,gCAAAA,E,eACgC,CAClCC,MAAO,GACPC,aAAc,GACdO,SAAU,eA4Fd,IAAMQ,GAAc,OAAOmB,IAAP,yCAAH,UACN,SAAAC,GAAC,OAAKA,EAAEvB,MAAQuB,EAAEvB,WAAQtD,IADpB,gIASXkE,GAAmB,OAAOY,KAAP,8CAAH,0FAOhBT,GAAoB,OAAOU,KAAP,+CAAH,0FAMR,SAAAF,GAAC,OAAIA,EAAEG,MAAMC,gBANL,WAOZ,SAAAJ,GAAC,OAAIA,EAAEG,MAAME,UAPD,mBAUV,SAAAL,GAAC,OAAIA,EAAEG,MAAMG,UAVH,MAcvB,W,ulBC7IMC,E,gjBACJ,WAAiB,MACwC5F,KAAKC,MAArD4F,EADQ,EACRA,WAAY3F,EADJ,EACIA,aAAc4F,EADlB,EACkBA,QAASC,EAD3B,EAC2BA,UAC1C,gCAA0B7F,EAAa8F,KAAvC,YAA+CD,EAA/C,mBAAmED,EAAnE,wBAA0FD,EAAW/E,GAArG,O,oBAGF,WAAS,aAC0Bd,KAAKC,MAA/BiB,EADA,EACAA,SAAUhB,EADV,EACUA,aACjB,OACE,QAAC,IAAD,CAAMC,KAAMD,EAAa+F,kBACtB,gBAAE9E,EAAF,EAAEA,QAAF,OAAeD,EAASC,EAAU,EAAK+E,iBAAmB,a,GAVvC7E,iBAAtBuE,E,4BAgBN,SAAetE,OAAiBsE,I,wnCCR1BO,E,qjBACJ,WAAsB,MACOnG,KAAKC,MAAzBmG,EADa,EACbA,MAAOL,EADM,EACNA,UACd,IAAKK,EAAMC,UACT,OAAO,KAGT,IAAMC,EACqB,mBAAzBF,EAAMC,UAAUnC,KAA4B,WAAa,aAE3D,OACE,QAAC,IAAD,CACE6B,UAAWA,EACXD,QAASM,EAAMtF,GACf+E,WAAYO,EAAMC,YAEjB,SAAAE,GAAG,eACFA,IACE,qBACGD,EADH,MACmB,aAAGE,KAAI,UAAKD,EAAL,gBAAP,UAA+BH,EAAMC,iBAArC,aAA+B,EAAiBjC,MADnE,MAEE,QAAC,IAAD,CAAUxB,OAAO,UAAAwD,EAAMC,iBAAN,eAAiB1B,OAAQ,IAF5C,U,oBAUV,WAAS,MACsD3E,KAAKC,MAA3D0C,EADA,EACAA,UAAWyD,EADX,EACWA,MAAOK,EADlB,EACkBA,MAAOC,EADzB,EACyBA,QAASC,EADlC,EACkCA,QAASC,EAD3C,EAC2CA,QAC5CC,EAAS,GACfT,EAAMU,KAAKC,SAAQ,SAAAC,GACjBH,EAAOG,EAAIC,KAAOD,EAAIzE,SAExB,IAAM2E,EAAO,kBAAH,OAAqBT,EAArB,mBAAqCC,EAArC,mBAAuDN,EAAMtF,GAA7D,KAEV,OACE,cAAImG,IAAKb,EAAMtF,GAAI6B,UAAWA,IAC5B,mBACE,mBACE,QAAC,IAAD,CAAqBwE,GAAID,IACvB,QAAC,IAAD,CAAUE,KAAMhB,EAAMiB,gBAExB,qBAAQjB,EAAMkB,MAAMC,OAAO,EAAG,MAC7BvH,KAAKwH,wBAITZ,IACC,cAAIjE,UAAU,8BACXyD,EAAMtG,MACL,oBACE,QAAC,IAAD,CACEA,KAAMsG,EAAMtG,KACZ6E,KAAM,GACNhC,UAAU,SACV8E,UAAU,IAEXrB,EAAMtG,KAAK4H,QAGd,0BAKLf,EAAQ/F,KAAI,SAAAoG,GAAG,OACd,cAAIC,IAAKD,EAAIC,MACX,mBACe,WAAZD,EAAIC,KACH,QAAC,KAAD,CAAY1E,MAAOsE,EAAOG,EAAIC,OAE9BJ,EAAOG,EAAIC,e,GAxEE5F,aAAvB8E,E,6BAmFN,SAAe7E,OAAiB6E,G,gCC3F1BwB,E,wiBACJ,WAAS,MAC8C3H,KAAKC,MAAnD2H,EADA,EACAA,OAAQjB,EADR,EACQA,QAASF,EADjB,EACiBA,MAAOV,EADxB,EACwBA,UAAWW,EADnC,EACmCA,QAEpCE,IAAYgB,EAAOC,MAAK,SAAAzB,GAAK,OAAIA,EAAMtG,QAE7C,OACE,iBAAO6C,UAAU,uBACf,sBACE,mBACE,mBAAKwC,OAAE,OACNyB,IAAW,mBAAKzB,OAAE,SAElBwB,EAAQ/F,KAAI,SAAAoG,GAAG,OACd,cAAIC,IAAKD,EAAIC,KAAMD,EAAI5C,YAI7B,qBACGwD,EAAOhH,KAAI,SAAAwF,GAAK,OACf,QAAC,EAAD,CACEa,IAAKb,EAAMtF,GACXsF,MAAOA,EACPK,MAAOA,EACPV,UAAWA,EACXW,QAASA,EACTC,QAASA,EACTC,QAASA,a,GA3BGvF,aAApBsG,E,0BAoCN,U,61BCnBMG,E,wcACJ,WAAY7H,GAAc,sBACxB,cAAMA,IADkB,kCA8BX,SAACgD,GACd,IAAM8E,EAAoB,EAAH,GAAO,EAAK9H,MAAM+H,SAAS/E,OAClD8E,EAAkB9E,MAAQA,EAFM,MAGP,EAAKhD,MAAMgI,OAA7BvB,EAHyB,EAGzBA,QAASD,EAHgB,EAGhBA,MAEhByB,sBAAoB,CAClBC,SAAU,kBAAF,OAAoB1B,EAApB,mBAAoCC,EAApC,YACRzD,MAAO8E,QArCe,+BAyCd,WACV,EAAKzF,SAAS,CACZ8F,SAAS,EACTC,OAAO,IAGT,IAAMpF,EAAQ,EAAH,KACNqF,IAAK,EAAKrI,MAAM+H,SAAS/E,MAAO,CAAC,SAAU,iBADrC,IAETsF,MAAO,GACPtF,MAAO,EAAKd,MAAMc,QAGpB,EAAKhD,MAAMuI,IAAIC,QAAf,kBAAkC,EAAKxI,MAAMgI,OAAOvB,QAApD,YAAuE,CACrEzD,QACAyF,OAAQ,MACRC,QAAS,SAACC,EAAMC,EAAGC,GAAU,MAC3B,EAAKxG,SAAS,CACZyG,UAAWH,EACXP,OAAO,EACPD,SAAS,EACTY,UAAS,UAAEF,aAAF,EAAEA,EAAOG,kBAAkB,eAA3B,QAAsC,MAGnDZ,MAAO,SAAAa,GACL,EAAK5G,SAAS,CACZ+F,OAAOc,OAAcD,GACrBd,SAAS,UAhEf,IAAMgB,EAAc,EAAKnJ,MAAM+H,SAAS/E,MAHhB,OAIxB,EAAKd,MAAQ,CACX4G,UAAW,GACXX,SAAS,EACTC,OAAO,EACPW,UAAW,GACX/F,MAAOmG,EAAYnG,OAAS,IATN,E,wDAa1B,WACEjD,KAAKqJ,c,8CAGP,SAAiCxF,GAC/B,GAAI7D,KAAKC,MAAM+H,SAASsB,SAAWzF,EAAUmE,SAASsB,OAAQ,CAC5D,IAAMF,EAAcvF,EAAUmE,SAAS/E,MAEvCjD,KAAKsC,SACH,CACEW,MAAOmG,EAAYnG,OAErBjD,KAAKqJ,c,kCAgDX,WACE,OACE,QAAC,IAAD,MACE,kBAAIlE,OAAE,iD,yBAKZ,WACE,OACE,QAAC,IAAD,MACE,kBAAIA,OAAE,8C,2BAKZ,WAAgB,MACUnF,KAAKC,MAAtBsJ,EADO,EACPA,MAAOtB,EADA,EACAA,OACRtB,EAAU4C,EAAMzC,KAAK0C,QAAO,SAAAxC,GAAG,MAAgB,SAAZA,EAAIC,QAAmB,GAEhE,OACE,QAAC,EAAD,CACEN,QAASA,EACTiB,OAAQ5H,KAAKmC,MAAM4G,UACnBtC,MAAOwB,EAAOxB,MACdV,UAAWwD,EAAME,QAAQzD,KACzBU,QAASuB,EAAOvB,Y,wBAKtB,WAeE,OAZI1G,KAAKmC,MAAMiG,SACN,QAAC,IAAD,MACEpI,KAAKmC,MAAMkG,OACb,QAAC,IAAD,CAAcqB,QAAS1J,KAAKmC,MAAMkG,MAAOsB,QAAS3J,KAAKqJ,YACrDrJ,KAAKmC,MAAM4G,UAAUa,OAAS,EAChC5J,KAAK6J,gBACH7J,KAAKmC,MAAMc,OAA8B,KAArBjD,KAAKmC,MAAMc,MACjCjD,KAAK8J,uBAEL9J,KAAK+J,gB,oBAMhB,WACE,OACE,oBACE,eAAKC,MAAO,CAACC,aAAc,MACzB,QAAC,IAAD,CACE/G,aAAa,GACbiB,aAAagB,OAAE,qCACflC,MAAOjD,KAAKmC,MAAMc,MAClBQ,SAAUzD,KAAKkK,iBAGnB,QAAC,KAAD,CAAOvH,UAAU,eACf,QAAC,IAAD,KAAY3C,KAAKmK,gBAEnB,QAAC,IAAD,CAAYnB,UAAWhJ,KAAKmC,MAAM6G,iB,GAzIhB3H,aAApByG,E,0BAiJN,SAAesC,OAAQtC","file":"GroupEvents.ec5c82eecd5f0e2d8570.js","sourcesContent":["import React from 'react';\n\nimport ConfigStore from 'app/stores/configStore';\nimport {Organization} from 'app/types';\nimport {isActiveSuperuser} from 'app/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactNode;\n\ntype Props = {\n  /**\n   * Minimum required role\n   */\n  role: string;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactNode | ChildrenRenderFn;\n};\n\nclass Role extends React.Component<Props> {\n  hasRole() {\n    const user = ConfigStore.get('user');\n    const {organization, role} = this.props;\n    const {availableRoles} = organization;\n    const currentRole = organization.role ?? '';\n\n    if (!user) {\n      return false;\n    }\n\n    if (isActiveSuperuser()) {\n      return true;\n    }\n\n    if (!Array.isArray(availableRoles)) {\n      return false;\n    }\n\n    const roleIds = availableRoles.map(r => r.id);\n\n    if (!roleIds.includes(role) || !roleIds.includes(currentRole)) {\n      return false;\n    }\n\n    const requiredIndex = roleIds.indexOf(role);\n    const currentIndex = roleIds.indexOf(currentRole);\n    return currentIndex >= requiredIndex;\n  }\n\n  render() {\n    const {children} = this.props;\n    const hasRole = this.hasRole();\n\n    if (isRenderFunc<ChildrenRenderFn>(children)) {\n      return children({hasRole});\n    }\n\n    return hasRole && children ? children : null;\n  }\n}\n\nexport default withOrganization(Role);\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'app/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import React from 'react';\n\nimport {IOSDeviceList} from 'app/types/iOSDeviceList';\n\nexport function deviceNameMapper(model: string, iOSDeviceList): string {\n  const modelIdentifier = model.split(' ')[0];\n  const modelId = model.split(' ').splice(1).join(' ');\n  const modelName = iOSDeviceList.generationByIdentifier(modelIdentifier);\n  return modelName === undefined ? model : modelName + ' ' + modelId;\n}\n\nexport async function loadDeviceListModule() {\n  return import(/* webpackChunkName: \"iOSDeviceList\" */ 'ios-device-list');\n}\n\ntype Props = {\n  value: string;\n  children?: (name: string) => React.ReactNode;\n};\n\ntype State = {\n  iOSDeviceList: IOSDeviceList | null;\n};\n/**\n * This is used to map iOS Device Names to model name.\n * This asynchronously loads the ios-device-list library because of its size\n */\nexport default class DeviceName extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      iOSDeviceList: null,\n    };\n  }\n\n  componentDidMount() {\n    // This is to handle react's warning on calling setState for unmounted components\n    // Since we can't cancel promises, we need to do this\n    this._isMounted = true;\n\n    // This library is very big, so we are codesplitting it based on size and\n    // the relatively small utility this library provides\n    loadDeviceListModule().then(iOSDeviceList => {\n      if (!this._isMounted) {\n        return;\n      }\n\n      this.setState({iOSDeviceList});\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  private _isMounted?: boolean;\n\n  render() {\n    const {value, children} = this.props;\n    const {iOSDeviceList} = this.state;\n\n    // value can be undefined, need to return null or else react throws\n    if (!value) {\n      return null;\n    }\n\n    // If library has not loaded yet, then just render the raw model string, better than empty\n    if (!iOSDeviceList) {\n      return value;\n    }\n\n    const deviceName = deviceNameMapper(value, iOSDeviceList);\n\n    return (\n      <span data-test-id=\"loaded-device-name\">\n        {children ? children(deviceName) : deviceName}\n      </span>\n    );\n  }\n}\n","import React from 'react';\n\nimport {formatBytesBase2} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytesBase2(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nexport default FileSize;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","import React from 'react';\n\nimport Role from 'app/components/acl/role';\nimport {EventAttachment, Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  projectId: string;\n  eventId: string;\n  attachment: EventAttachment;\n  children: (downloadUrl: string | null) => React.ReactNode;\n};\n\nclass AttachmentUrl extends React.PureComponent<Props> {\n  getDownloadUrl() {\n    const {attachment, organization, eventId, projectId} = this.props;\n    return `/api/0/projects/${organization.slug}/${projectId}/events/${eventId}/attachments/${attachment.id}/`;\n  }\n\n  render() {\n    const {children, organization} = this.props;\n    return (\n      <Role role={organization.attachmentsRole}>\n        {({hasRole}) => children(hasRole ? this.getDownloadUrl() : null)}\n      </Role>\n    );\n  }\n}\n\nexport default withOrganization(AttachmentUrl);\n","import React from 'react';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport DateTime from 'app/components/dateTime';\nimport DeviceName from 'app/components/deviceName';\nimport FileSize from 'app/components/fileSize';\nimport GlobalSelectionLink from 'app/components/globalSelectionLink';\nimport {AvatarUser, Organization, Tag} from 'app/types';\nimport {Event} from 'app/types/event';\nimport AttachmentUrl from 'app/utils/attachmentUrl';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  hasUser?: boolean;\n  orgId: string;\n  groupId: string;\n  projectId: string;\n  event: Event;\n  tagList: Tag[];\n  organization: Organization;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nclass EventsTableRow extends React.Component<Props> {\n  renderCrashFileLink() {\n    const {event, projectId} = this.props;\n    if (!event.crashFile) {\n      return null;\n    }\n\n    const crashFileType =\n      event.crashFile.type === 'event.minidump' ? 'Minidump' : 'Crash file';\n\n    return (\n      <AttachmentUrl\n        projectId={projectId}\n        eventId={event.id}\n        attachment={event.crashFile}\n      >\n        {url =>\n          url && (\n            <small>\n              {crashFileType}: <a href={`${url}?download=1`}>{event.crashFile?.name}</a> (\n              <FileSize bytes={event.crashFile?.size || 0} />)\n            </small>\n          )\n        }\n      </AttachmentUrl>\n    );\n  }\n\n  render() {\n    const {className, event, orgId, groupId, tagList, hasUser} = this.props;\n    const tagMap = {};\n    event.tags.forEach(tag => {\n      tagMap[tag.key] = tag.value;\n    });\n    const link = `/organizations/${orgId}/issues/${groupId}/events/${event.id}/`;\n\n    return (\n      <tr key={event.id} className={className}>\n        <td>\n          <h5>\n            <GlobalSelectionLink to={link}>\n              <DateTime date={event.dateCreated} />\n            </GlobalSelectionLink>\n            <small>{event.title.substr(0, 100)}</small>\n            {this.renderCrashFileLink()}\n          </h5>\n        </td>\n\n        {hasUser && (\n          <td className=\"event-user table-user-info\">\n            {event.user ? (\n              <div>\n                <UserAvatar\n                  user={event.user as AvatarUser} // TODO(ts): Some of the user fields are optional from event, this cast can probably be removed in the future\n                  size={24}\n                  className=\"avatar\"\n                  gravatar={false}\n                />\n                {event.user.email}\n              </div>\n            ) : (\n              <span>—</span>\n            )}\n          </td>\n        )}\n\n        {tagList.map(tag => (\n          <td key={tag.key}>\n            <div>\n              {tag.key === 'device' ? (\n                <DeviceName value={tagMap[tag.key]} />\n              ) : (\n                tagMap[tag.key]\n              )}\n            </div>\n          </td>\n        ))}\n      </tr>\n    );\n  }\n}\n\nexport {EventsTableRow};\nexport default withOrganization(EventsTableRow);\n","import React from 'react';\n\nimport EventsTableRow from 'app/components/eventsTable/eventsTableRow';\nimport {t} from 'app/locale';\nimport {Tag} from 'app/types';\nimport {Event} from 'app/types/event';\n\ntype Props = {\n  events: Event[];\n  tagList: Tag[];\n  orgId: string;\n  projectId: string;\n  groupId: string;\n};\nclass EventsTable extends React.Component<Props> {\n  render() {\n    const {events, tagList, orgId, projectId, groupId} = this.props;\n\n    const hasUser = !!events.find(event => event.user);\n\n    return (\n      <table className=\"table events-table\">\n        <thead>\n          <tr>\n            <th>{t('ID')}</th>\n            {hasUser && <th>{t('User')}</th>}\n\n            {tagList.map(tag => (\n              <th key={tag.key}>{tag.name}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {events.map(event => (\n            <EventsTableRow\n              key={event.id}\n              event={event}\n              orgId={orgId}\n              projectId={projectId}\n              groupId={groupId}\n              tagList={tagList}\n              hasUser={hasUser}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default EventsTable;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport pick from 'lodash/pick';\n\nimport {Client} from 'app/api';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport EventsTable from 'app/components/eventsTable/eventsTable';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport {t} from 'app/locale';\nimport {Group} from 'app/types';\nimport {Event} from 'app/types/event';\nimport parseApiError from 'app/utils/parseApiError';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  group: Group;\n} & RouteComponentProps<{groupId: string; orgId: string}, {}>;\n\ntype State = {\n  eventList: Event[];\n  loading: boolean;\n  error: string | false;\n  pageLinks: string;\n  query: string;\n};\n\nclass GroupEvents extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const queryParams = this.props.location.query;\n    this.state = {\n      eventList: [],\n      loading: true,\n      error: false,\n      pageLinks: '',\n      query: queryParams.query || '',\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.search !== nextProps.location.search) {\n      const queryParams = nextProps.location.query;\n\n      this.setState(\n        {\n          query: queryParams.query,\n        },\n        this.fetchData\n      );\n    }\n  }\n\n  handleSearch = (query: string) => {\n    const targetQueryParams = {...this.props.location.query};\n    targetQueryParams.query = query;\n    const {groupId, orgId} = this.props.params;\n\n    browserHistory.push({\n      pathname: `/organizations/${orgId}/issues/${groupId}/events/`,\n      query: targetQueryParams,\n    });\n  };\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    const query = {\n      ...pick(this.props.location.query, ['cursor', 'environment']),\n      limit: 50,\n      query: this.state.query,\n    };\n\n    this.props.api.request(`/issues/${this.props.params.groupId}/events/`, {\n      query,\n      method: 'GET',\n      success: (data, _, jqXHR) => {\n        this.setState({\n          eventList: data,\n          error: false,\n          loading: false,\n          pageLinks: jqXHR?.getResponseHeader('Link') ?? '',\n        });\n      },\n      error: err => {\n        this.setState({\n          error: parseApiError(err),\n          loading: false,\n        });\n      },\n    });\n  };\n\n  renderNoQueryResults() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Sorry, no events match your search query.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t(\"There don't seem to be any events yet.\")}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderResults() {\n    const {group, params} = this.props;\n    const tagList = group.tags.filter(tag => tag.key !== 'user') || [];\n\n    return (\n      <EventsTable\n        tagList={tagList}\n        events={this.state.eventList}\n        orgId={params.orgId}\n        projectId={group.project.slug}\n        groupId={params.groupId}\n      />\n    );\n  }\n\n  renderBody() {\n    let body: React.ReactNode;\n\n    if (this.state.loading) {\n      body = <LoadingIndicator />;\n    } else if (this.state.error) {\n      body = <LoadingError message={this.state.error} onRetry={this.fetchData} />;\n    } else if (this.state.eventList.length > 0) {\n      body = this.renderResults();\n    } else if (this.state.query && this.state.query !== '') {\n      body = this.renderNoQueryResults();\n    } else {\n      body = this.renderEmpty();\n    }\n\n    return body;\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{marginBottom: 20}}>\n          <SearchBar\n            defaultQuery=\"\"\n            placeholder={t('search event id, message, or tags')}\n            query={this.state.query}\n            onSearch={this.handleSearch}\n          />\n        </div>\n        <Panel className=\"event-list\">\n          <PanelBody>{this.renderBody()}</PanelBody>\n        </Panel>\n        <Pagination pageLinks={this.state.pageLinks} />\n      </div>\n    );\n  }\n}\n\nexport {GroupEvents};\n\nexport default withApi(GroupEvents);\n"],"sourceRoot":""}