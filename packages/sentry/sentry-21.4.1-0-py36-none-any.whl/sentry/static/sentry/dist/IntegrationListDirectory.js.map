{"version":3,"sources":["webpack:///./app/components/searchBar.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/createFuzzySearch.tsx","webpack:///./app/views/organizationIntegrations/integrationRow.tsx","webpack:///./app/views/organizationIntegrations/integrationListDirectory.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/organization/permissionAlert.tsx"],"names":["SearchBar","query","props","defaultQuery","dropdownVisible","React","searchInputRef","current","blur","evt","preventDefault","onSearch","state","setState","callIfFunction","onChange","value","target","nextProps","this","className","width","classNames","onSubmit","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","onQueryBlur","onQueryChange","StyledIconSearch","size","color","SearchClearButton","priority","onClick","clearSearch","icon","label","t","Input","p","undefined","IconSearch","Button","theme","fontSizeLarge","gray200","gray300","SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","loadFuzzySearch","createFuzzySearch","objects","options","keys","Error","Fuse","opts","DEFAULT_FUSE_OPTIONS","urlMap","plugin","firstParty","sentryApp","documentIntegration","IntegrationRow","organization","slug","displayName","status","publishStatus","configurations","categories","alertText","baseUrl","flexDirection","data-test-id","FlexContainer","pluginId","Container","IntegrationName","to","IntegrationDetails","LearnMore","PublishStatus","StyledLink","InternalContainer","map","category","CategoryTag","key","startCase","AlertContainer","ResolveNowButton","href","trackIntegrationEvent","integration_type","convertIntegrationTypeToSnakeCase","integration","space","Link","success","purple200","gray100","white","gray500","subText","fuseOptions","threshold","location","distance","includeScore","IntegrationListDirectory","app","appInstalls","find","i","POPULARITY_WEIGHT","a","b","localeCompare","weightA","getPopularityWeight","getInstallValue","debounce","search","numResults","view","search_term","num_results","queryString","selectedCategory","Array","isArray","searchInput","searchString","browserHistory","pathname","fuzzy","list","displayedList","searchResults","sortIntegrations","item","filter","getCategoriesForIntegration","includes","updateQueryString","result","updateDisplayedList","debouncedTrackIntegrationSearch","length","provider","integrations","isLegacy","isHidden","projectList","id","getSentryAppInstallStatus","getAppInstall","isSentryApp","renderSentryApp","isPlugin","renderPlugin","isDocumentIntegration","renderDocumentIntegration","renderProvider","publishedApps","orgOwnedApps","extraApp","plugins","published","push","orgOwned","combined","concat","providers","Object","values","documentIntegrations","getFilterParameters","trackPageViewed","integrationsInstalled","Set","forEach","add","integrations_installed","startSession","orgId","params","baseEndpoints","includeConfig","extraAppSlug","URLSearchParams","get","groupBy","unmigratableRepos","repo","split","config","install","sort","diffWeight","sortByInstalled","diffPop","sortByPopularity","sortByName","_","prevState","createSearch","categoryList","uniq","flatten","hideHeader","action","ActionContainer","onCategorySelect","choices","handleSearchChange","access","renderIntegration","EmptyResultsContainer","EmptyResultsBody","tct","searchTerm","EmptyResultsBodyBold","link","AsyncComponent","withOrganization","UnstyledSettingsPageHeader","subtitle","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","gray400","SettingsPageHeader","PermissionAlert","hasAccess"],"mappings":"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","file":"IntegrationListDirectory.4376a640f711776b0734.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {DEFAULT_FUSE_OPTIONS} from 'app/constants';\n\nexport function loadFuzzySearch() {\n  return import(/* webpackChunkName: \"Fuse\" */ 'fuse.js');\n}\n\nexport async function createFuzzySearch<\n  T = string,\n  Options extends Fuse.FuseOptions<T> = Fuse.FuseOptions<T>\n>(objects: any[], options: Options): Promise<Fuse<T, Options>> {\n  if (!options.keys) {\n    throw new Error('You need to define `options.keys`');\n  }\n\n  const {default: Fuse} = await loadFuzzySearch();\n  const opts = {\n    ...DEFAULT_FUSE_OPTIONS,\n    ...options,\n  };\n  return new Fuse(objects, opts);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport startCase from 'lodash/startCase';\n\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport space from 'app/styles/space';\nimport {IntegrationInstallationStatus, Organization, SentryApp} from 'app/types';\nimport {\n  convertIntegrationTypeToSnakeCase,\n  trackIntegrationEvent,\n} from 'app/utils/integrationUtil';\n\nimport IntegrationStatus from './integrationStatus';\n\ntype Props = {\n  organization: Organization;\n  type: 'plugin' | 'firstParty' | 'sentryApp' | 'documentIntegration';\n  slug: string;\n  displayName: string;\n  status?: IntegrationInstallationStatus;\n  publishStatus: 'unpublished' | 'published' | 'internal';\n  configurations: number;\n  categories: string[];\n  alertText?: string;\n};\n\nconst urlMap = {\n  plugin: 'plugins',\n  firstParty: 'integrations',\n  sentryApp: 'sentry-apps',\n  documentIntegration: 'document-integrations',\n};\n\nconst IntegrationRow = (props: Props) => {\n  const {\n    organization,\n    type,\n    slug,\n    displayName,\n    status,\n    publishStatus,\n    configurations,\n    categories,\n    alertText,\n  } = props;\n\n  const baseUrl =\n    publishStatus === 'internal'\n      ? `/settings/${organization.slug}/developer-settings/${slug}/`\n      : `/settings/${organization.slug}/${urlMap[type]}/${slug}/`;\n\n  const renderDetails = () => {\n    if (type === 'sentryApp') {\n      return publishStatus !== 'published' && <PublishStatus status={publishStatus} />;\n    }\n    //TODO: Use proper translations\n    return configurations > 0 ? (\n      <StyledLink to={`${baseUrl}?tab=configurations`}>{`${configurations} Configuration${\n        configurations > 1 ? 's' : ''\n      }`}</StyledLink>\n    ) : null;\n  };\n\n  const renderStatus = () => {\n    //status should be undefined for document integrations\n    if (status) {\n      return <IntegrationStatus status={status} />;\n    }\n    return <LearnMore to={baseUrl}>{t('Learn More')}</LearnMore>;\n  };\n\n  return (\n    <PanelItem p={0} flexDirection=\"column\" data-test-id={slug}>\n      <FlexContainer>\n        <PluginIcon size={36} pluginId={slug} />\n        <Container>\n          <IntegrationName to={baseUrl}>{displayName}</IntegrationName>\n          <IntegrationDetails>\n            {renderStatus()}\n            {renderDetails()}\n          </IntegrationDetails>\n        </Container>\n        <InternalContainer>\n          {categories?.map(category => (\n            <CategoryTag\n              key={category}\n              category={startCase(category)}\n              priority={category === publishStatus}\n            />\n          ))}\n        </InternalContainer>\n      </FlexContainer>\n      {alertText && (\n        <AlertContainer>\n          <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />}>\n            <span>{alertText}</span>\n            <ResolveNowButton\n              href={`${baseUrl}?tab=configurations&referrer=directory_resolve_now`}\n              size=\"xsmall\"\n              onClick={() =>\n                trackIntegrationEvent(\n                  'integrations.resolve_now_clicked',\n                  {\n                    integration_type: convertIntegrationTypeToSnakeCase(type),\n                    integration: slug,\n                  },\n                  organization\n                )\n              }\n            >\n              {t('Resolve Now')}\n            </ResolveNowButton>\n          </Alert>\n        </AlertContainer>\n      )}\n    </PanelItem>\n  );\n};\n\nconst FlexContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n\nconst InternalContainer = styled(FlexContainer)`\n  padding: 0 ${space(2)};\n`;\n\nconst Container = styled('div')`\n  flex: 1;\n  padding: 0 16px;\n`;\n\nconst IntegrationName = styled(Link)`\n  font-weight: bold;\n`;\n\nconst IntegrationDetails = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-top: 6px;\n  font-size: 0.8em;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.gray300};\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(0.75)};\n    font-weight: normal;\n  }\n`;\n\nconst LearnMore = styled(Link)`\n  color: ${p => p.theme.gray300};\n`;\n\ntype PublishStatusProps = {status: SentryApp['status']; theme?: any};\n\nconst PublishStatus = styled(({status, ...props}: PublishStatusProps) => (\n  <div {...props}>{t(`${status}`)}</div>\n))`\n  color: ${(props: PublishStatusProps) =>\n    props.status === 'published' ? props.theme.success : props.theme.gray300};\n  font-weight: light;\n  margin-right: ${space(0.75)};\n  text-transform: capitalize;\n  &:before {\n    content: '|';\n    color: ${p => p.theme.gray200};\n    margin-right: ${space(0.75)};\n    font-weight: normal;\n  }\n`;\n\n// TODO(Priscila): Replace this component with the Tag component\nconst CategoryTag = styled(\n  ({\n    priority: _priority,\n    category,\n    ...p\n  }: {\n    category: string;\n    priority: boolean;\n    theme?: any;\n  }) => <div {...p}>{category}</div>\n)`\n  display: flex;\n  flex-direction: row;\n  padding: 1px 10px;\n  background: ${p => (p.priority ? p.theme.purple200 : p.theme.gray100)};\n  border-radius: 20px;\n  font-size: ${space(1.5)};\n  margin-right: ${space(1)};\n  line-height: ${space(3)};\n  text-align: center;\n  color: ${p => (p.priority ? p.theme.white : p.theme.gray500)};\n`;\n\nconst ResolveNowButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  float: right;\n`;\n\nconst AlertContainer = styled('div')`\n  padding: 0px ${space(3)} 0px 68px;\n`;\n\nexport default IntegrationRow;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\nimport groupBy from 'lodash/groupBy';\nimport startCase from 'lodash/startCase';\nimport uniq from 'lodash/uniq';\nimport * as queryString from 'query-string';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {\n  AppOrProviderOrPlugin,\n  DocumentIntegration,\n  Integration,\n  IntegrationProvider,\n  Organization,\n  PluginWithProjectList,\n  SentryApp,\n  SentryAppInstallation,\n} from 'app/types';\nimport {createFuzzySearch} from 'app/utils/createFuzzySearch';\nimport {\n  getCategoriesForIntegration,\n  getSentryAppInstallStatus,\n  isDocumentIntegration,\n  isPlugin,\n  isSentryApp,\n  trackIntegrationEvent,\n} from 'app/utils/integrationUtil';\nimport withOrganization from 'app/utils/withOrganization';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/organization/permissionAlert';\n\nimport {documentIntegrations, POPULARITY_WEIGHT} from './constants';\nimport IntegrationRow from './integrationRow';\n\nconst fuseOptions = {\n  threshold: 0.3,\n  location: 0,\n  distance: 100,\n  includeScore: true as const,\n  keys: ['slug', 'key', 'name', 'id'],\n};\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n  hideHeader: boolean;\n};\n\ntype State = {\n  integrations: Integration[] | null;\n  plugins: PluginWithProjectList[] | null;\n  appInstalls: SentryAppInstallation[] | null;\n  orgOwnedApps: SentryApp[] | null;\n  publishedApps: SentryApp[] | null;\n  config: {providers: IntegrationProvider[]} | null;\n  extraApp?: SentryApp;\n  searchInput: string;\n  list: AppOrProviderOrPlugin[];\n  displayedList: AppOrProviderOrPlugin[];\n  selectedCategory: string;\n  fuzzy?: Fuse<AppOrProviderOrPlugin, typeof fuseOptions>;\n};\n\nconst TEXT_SEARCH_ANALYTICS_DEBOUNCE_IN_MS = 1000;\n\nexport class IntegrationListDirectory extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  // Some integrations require visiting a different website to add them. When\n  // we come back to the tab we want to show our integrations as soon as we can.\n  shouldReload = true;\n  reloadOnVisible = true;\n  shouldReloadOnVisible = true;\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      list: [],\n      displayedList: [],\n      selectedCategory: '',\n    };\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {publishedApps, orgOwnedApps, extraApp, plugins} = this.state;\n    const published = publishedApps || [];\n    // If we have an extra app in state from query parameter, add it as org owned app\n    if (orgOwnedApps !== null && extraApp) {\n      orgOwnedApps.push(extraApp);\n    }\n\n    // we dont want the app to render twice if its the org that created\n    // the published app.\n    const orgOwned = orgOwnedApps?.filter(\n      app => !published.find(p => p.slug === app.slug)\n    );\n\n    /**\n     * We should have three sections:\n     * 1. Public apps and integrations available to everyone\n     * 2. Unpublished apps available to that org\n     * 3. Internal apps available to that org\n     */\n\n    const combined = ([] as AppOrProviderOrPlugin[])\n      .concat(published)\n      .concat(orgOwned ?? [])\n      .concat(this.providers)\n      .concat(plugins ?? [])\n      .concat(Object.values(documentIntegrations));\n\n    const list = this.sortIntegrations(combined);\n\n    const {searchInput, selectedCategory} = this.getFilterParameters();\n\n    this.setState({list, searchInput, selectedCategory}, () => {\n      this.updateDisplayedList();\n      this.trackPageViewed();\n    });\n  }\n\n  trackPageViewed() {\n    //count the number of installed apps\n\n    const {integrations, publishedApps, plugins} = this.state;\n    const integrationsInstalled = new Set();\n    //add installed integrations\n    integrations?.forEach((integration: Integration) => {\n      integrationsInstalled.add(integration.provider.key);\n    });\n    //add sentry apps\n    publishedApps?.filter(this.getAppInstall).forEach((sentryApp: SentryApp) => {\n      integrationsInstalled.add(sentryApp.slug);\n    });\n    //add plugins\n    plugins?.forEach((plugin: PluginWithProjectList) => {\n      if (plugin.projectList.length) {\n        integrationsInstalled.add(plugin.slug);\n      }\n    });\n    trackIntegrationEvent(\n      'integrations.index_viewed',\n      {\n        integrations_installed: integrationsInstalled.size,\n        view: 'integrations_directory',\n      },\n      this.props.organization,\n      {startSession: true}\n    );\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId} = this.props.params;\n    const baseEndpoints: ([string, string, any] | [string, string])[] = [\n      ['config', `/organizations/${orgId}/config/integrations/`],\n      [\n        'integrations',\n        `/organizations/${orgId}/integrations/`,\n        {query: {includeConfig: 0}},\n      ],\n      ['orgOwnedApps', `/organizations/${orgId}/sentry-apps/`],\n      ['publishedApps', '/sentry-apps/', {query: {status: 'published'}}],\n      ['appInstalls', `/organizations/${orgId}/sentry-app-installations/`],\n      ['plugins', `/organizations/${orgId}/plugins/configs/`],\n    ];\n    /**\n     * optional app to load for super users\n     * should only be done for unpublished integrations from another org\n     * but no checks are in place to ensure the above condition\n     */\n    const extraAppSlug = new URLSearchParams(this.props.location.search).get('extra_app');\n    if (extraAppSlug) {\n      baseEndpoints.push(['extraApp', `/sentry-apps/${extraAppSlug}/`]);\n    }\n\n    return baseEndpoints;\n  }\n\n  // State\n\n  get unmigratableReposByOrg() {\n    // Group by [GitHub|BitBucket|VSTS] Org name\n    return groupBy(this.state.unmigratableRepos, repo => repo.name.split('/')[0]);\n  }\n\n  get providers(): IntegrationProvider[] {\n    return this.state.config?.providers ?? [];\n  }\n\n  getAppInstall = (app: SentryApp) =>\n    this.state.appInstalls?.find(i => i.app.slug === app.slug);\n\n  //Returns 0 if uninstalled, 1 if pending, and 2 if installed\n  getInstallValue(integration: AppOrProviderOrPlugin) {\n    const {integrations} = this.state;\n\n    if (isPlugin(integration)) {\n      return integration.projectList.length > 0 ? 2 : 0;\n    }\n\n    if (isSentryApp(integration)) {\n      const install = this.getAppInstall(integration);\n      if (install) {\n        return install.status === 'pending' ? 1 : 2;\n      }\n      return 0;\n    }\n\n    if (isDocumentIntegration(integration)) {\n      return 0;\n    }\n\n    return integrations?.find(i => i.provider.key === integration.key) ? 2 : 0;\n  }\n\n  getPopularityWeight = (integration: AppOrProviderOrPlugin) =>\n    POPULARITY_WEIGHT[integration.slug] ?? 1;\n\n  sortByName = (a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) =>\n    a.slug.localeCompare(b.slug);\n\n  sortByPopularity = (a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) => {\n    const weightA = this.getPopularityWeight(a);\n    const weightB = this.getPopularityWeight(b);\n    return weightB - weightA;\n  };\n\n  sortByInstalled = (a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) =>\n    this.getInstallValue(b) - this.getInstallValue(a);\n\n  sortIntegrations(integrations: AppOrProviderOrPlugin[]) {\n    return integrations.sort((a: AppOrProviderOrPlugin, b: AppOrProviderOrPlugin) => {\n      //sort by whether installed first\n      const diffWeight = this.sortByInstalled(a, b);\n      if (diffWeight !== 0) {\n        return diffWeight;\n      }\n      //then sort by popularity\n      const diffPop = this.sortByPopularity(a, b);\n      if (diffPop !== 0) {\n        return diffPop;\n      }\n      //then sort by name\n      return this.sortByName(a, b);\n    });\n  }\n\n  async componentDidUpdate(_: Props, prevState: State) {\n    if (this.state.list.length !== prevState.list.length) {\n      await this.createSearch();\n    }\n  }\n\n  async createSearch() {\n    const {list} = this.state;\n    this.setState({\n      fuzzy: await createFuzzySearch(list || [], fuseOptions),\n    });\n  }\n\n  debouncedTrackIntegrationSearch = debounce((search: string, numResults: number) => {\n    trackIntegrationEvent(\n      'integrations.directory_item_searched',\n      {\n        view: 'integrations_directory',\n        search_term: search,\n        num_results: numResults,\n      },\n      this.props.organization\n    );\n  }, TEXT_SEARCH_ANALYTICS_DEBOUNCE_IN_MS);\n\n  /**\n   * Get filter parameters and guard against `queryString.parse` returning arrays.\n   */\n  getFilterParameters = (): {searchInput: string; selectedCategory: string} => {\n    const {category, search} = queryString.parse(this.props.location.search);\n\n    const selectedCategory = Array.isArray(category) ? category[0] : category || '';\n    const searchInput = Array.isArray(search) ? search[0] : search || '';\n\n    return {searchInput, selectedCategory};\n  };\n\n  /**\n   * Update the query string with the current filter parameter values.\n   */\n  updateQueryString = () => {\n    const {searchInput, selectedCategory} = this.state;\n\n    const searchString = queryString.stringify({\n      ...queryString.parse(this.props.location.search),\n      search: searchInput ? searchInput : undefined,\n      category: selectedCategory ? selectedCategory : undefined,\n    });\n\n    browserHistory.replace({\n      pathname: this.props.location.pathname,\n      search: searchString ? `?${searchString}` : undefined,\n    });\n  };\n\n  /**\n   * Filter the integrations list by ANDing together the search query and the category select.\n   */\n  updateDisplayedList = (): AppOrProviderOrPlugin[] => {\n    const {fuzzy, list, searchInput, selectedCategory} = this.state;\n\n    let displayedList = list;\n\n    if (searchInput && fuzzy) {\n      const searchResults = fuzzy.search(searchInput);\n      displayedList = this.sortIntegrations(searchResults.map(i => i.item));\n    }\n\n    if (selectedCategory) {\n      displayedList = displayedList.filter(integration =>\n        getCategoriesForIntegration(integration).includes(selectedCategory)\n      );\n    }\n\n    this.setState({displayedList});\n\n    return displayedList;\n  };\n\n  handleSearchChange = async (value: string) => {\n    this.setState({searchInput: value}, () => {\n      this.updateQueryString();\n      const result = this.updateDisplayedList();\n      if (value) {\n        this.debouncedTrackIntegrationSearch(value, result.length);\n      }\n    });\n  };\n\n  onCategorySelect = ({value: category}: {value: string}) => {\n    this.setState({selectedCategory: category}, () => {\n      this.updateQueryString();\n      this.updateDisplayedList();\n\n      if (category) {\n        trackIntegrationEvent(\n          'integrations.directory_category_selected',\n          {\n            view: 'integrations_directory',\n            category,\n          },\n          this.props.organization\n        );\n      }\n    });\n  };\n\n  // Rendering\n  renderProvider = (provider: IntegrationProvider) => {\n    const {organization} = this.props;\n    //find the integration installations for that provider\n    const integrations =\n      this.state.integrations?.filter(i => i.provider.key === provider.key) ?? [];\n\n    return (\n      <IntegrationRow\n        key={`row-${provider.key}`}\n        data-test-id=\"integration-row\"\n        organization={organization}\n        type=\"firstParty\"\n        slug={provider.slug}\n        displayName={provider.name}\n        status={integrations.length ? 'Installed' : 'Not Installed'}\n        publishStatus=\"published\"\n        configurations={integrations.length}\n        categories={getCategoriesForIntegration(provider)}\n      />\n    );\n  };\n\n  renderPlugin = (plugin: PluginWithProjectList) => {\n    const {organization} = this.props;\n\n    const isLegacy = plugin.isHidden;\n    const displayName = `${plugin.name} ${isLegacy ? '(Legacy)' : ''}`;\n    //hide legacy integrations if we don't have any projects with them\n    if (isLegacy && !plugin.projectList.length) {\n      return null;\n    }\n    return (\n      <IntegrationRow\n        key={`row-plugin-${plugin.id}`}\n        data-test-id=\"integration-row\"\n        organization={organization}\n        type=\"plugin\"\n        slug={plugin.slug}\n        displayName={displayName}\n        status={plugin.projectList.length ? 'Installed' : 'Not Installed'}\n        publishStatus=\"published\"\n        configurations={plugin.projectList.length}\n        categories={getCategoriesForIntegration(plugin)}\n      />\n    );\n  };\n\n  //render either an internal or non-internal app\n  renderSentryApp = (app: SentryApp) => {\n    const {organization} = this.props;\n    const status = getSentryAppInstallStatus(this.getAppInstall(app));\n    const categories = getCategoriesForIntegration(app);\n\n    return (\n      <IntegrationRow\n        key={`sentry-app-row-${app.slug}`}\n        data-test-id=\"integration-row\"\n        organization={organization}\n        type=\"sentryApp\"\n        slug={app.slug}\n        displayName={app.name}\n        status={status}\n        publishStatus={app.status}\n        configurations={0}\n        categories={categories}\n      />\n    );\n  };\n\n  renderDocumentIntegration = (integration: DocumentIntegration) => {\n    const {organization} = this.props;\n    return (\n      <IntegrationRow\n        key={`doc-int-${integration.slug}`}\n        organization={organization}\n        type=\"documentIntegration\"\n        slug={integration.slug}\n        displayName={integration.name}\n        publishStatus=\"published\"\n        configurations={0}\n        categories={getCategoriesForIntegration(integration)}\n      />\n    );\n  };\n\n  renderIntegration = (integration: AppOrProviderOrPlugin) => {\n    if (isSentryApp(integration)) {\n      return this.renderSentryApp(integration);\n    }\n    if (isPlugin(integration)) {\n      return this.renderPlugin(integration);\n    }\n    if (isDocumentIntegration(integration)) {\n      return this.renderDocumentIntegration(integration);\n    }\n    return this.renderProvider(integration);\n  };\n\n  renderBody() {\n    const {orgId} = this.props.params;\n    const {displayedList, list, searchInput, selectedCategory} = this.state;\n\n    const title = t('Integrations');\n    const categoryList = uniq(flatten(list.map(getCategoriesForIntegration))).sort();\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle title={title} orgSlug={orgId} />\n\n        {!this.props.hideHeader && (\n          <SettingsPageHeader\n            title={title}\n            action={\n              <ActionContainer>\n                <SelectControl\n                  name=\"select-categories\"\n                  onChange={this.onCategorySelect}\n                  value={selectedCategory}\n                  choices={[\n                    ['', t('All Categories')],\n                    ...categoryList.map(category => [category, startCase(category)]),\n                  ]}\n                />\n                <SearchBar\n                  query={searchInput || ''}\n                  onChange={this.handleSearchChange}\n                  placeholder={t('Filter Integrations...')}\n                  width=\"25em\"\n                />\n              </ActionContainer>\n            }\n          />\n        )}\n\n        <PermissionAlert access={['org:integrations']} />\n        <Panel>\n          <PanelBody>\n            {displayedList.length ? (\n              displayedList.map(this.renderIntegration)\n            ) : (\n              <EmptyResultsContainer>\n                <EmptyResultsBody>\n                  {tct('No Integrations found for \"[searchTerm]\".', {\n                    searchTerm: searchInput,\n                  })}\n                </EmptyResultsBody>\n                <EmptyResultsBodyBold>\n                  {t(\"Not seeing what you're looking for?\")}\n                </EmptyResultsBodyBold>\n                <EmptyResultsBody>\n                  {tct('[link:Build it on the Sentry Integration Platform.]', {\n                    link: (\n                      <a href=\"https://docs.sentry.io/product/integrations/integration-platform/\" />\n                    ),\n                  })}\n                </EmptyResultsBody>\n              </EmptyResultsContainer>\n            )}\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ActionContainer = styled('div')`\n  display: grid;\n  grid-template-columns: 240px max-content;\n  grid-gap: ${space(2)};\n`;\n\nconst EmptyResultsContainer = styled('div')`\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst EmptyResultsBody = styled('div')`\n  font-size: 16px;\n  line-height: 28px;\n  color: ${p => p.theme.gray300};\n  padding-bottom: ${space(2)};\n`;\n\nconst EmptyResultsBodyBold = styled(EmptyResultsBody)`\n  font-weight: bold;\n`;\n\nexport default withOrganization(IntegrationListDirectory);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['org:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"sm\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner or manager role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n"],"sourceRoot":""}