{"version":3,"sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/projects/missingProjectMembership.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/organizationGroupDetails/constants.tsx","webpack:///./app/views/organizationGroupDetails/groupDetails.tsx","webpack:///./app/views/organizationGroupDetails/index.tsx"],"names":["doCallback","params","name","args","callIfFunction","fetchTeamDetails","api","options","TeamActions","teamId","request","orgId","success","data","error","updateTeamSuccess","updateTeam","endpoint","method","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","addSuccessMessage","tct","slug","organization","err","addErrorMessage","removeTeam","MissingProjectMembership","props","teamObj","value","setState","label","DisabledLabel","t","projectSlug","project","projects","find","p","state","loading","teamSlug","this","features","TeamStore","has","busy","isPending","disabled","priority","type","onClick","bind","pending","teams","forEach","push","Set","teamAccess","getTeamsForAccess","map","getPendingTeamOption","StyledPanel","length","icon","size","title","description","action","Field","StyledSelectControl","placeholder","onChange","handleChangeTeam","renderJoinTeam","React","Panel","space","SelectControl","withApi","recreateRoute","to","lastRootIndex","routeIndex","routes","location","stepBack","paths","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","ERROR_TYPES","GroupDetails","initialState","fetchData","loadingGroup","loadingEvent","group","status","ReprocessingStatus","groupDetailsEndpoint","query","getGroupQuery","updatedGroup","reprocessingNewRoute","getReprocessingNewRoute","ReactRouter","handleRequestError","GroupStore","itemIds","onGroupChange","undefined","updateReprocessingProgress","prevProps","prevState","isGlobalSelectionReady","pathname","canLoadEventEarly","eventId","getEvent","listener","interval","clearInterval","eventError","errorType","includes","groupId","environments","orgSlug","projectId","fetchGroupEvent","event","Sentry","currentTab","baseUrl","isEventRoute","hasReprocessingV2Feature","setInterval","refetchGroup","nextGroupId","reprocessingStatus","getGroupReprocessingStatus","getCurrentRouteInfo","TAB","environment","expand","getFetchDataRequestErrorType","eventPromise","groupPromise","Promise","all","markEventSeen","locationWithProject","_allp","Error","stale","defaultTitle","getTitle","message","getMessage","eventDetails","proj","onRetry","remountComponent","children","groupReprocessingStatus","childProps","isError","renderError","slugs","data-test-id","initiallyLoaded","fetchError","renderContent","skipLoadLastUsed","forceProject","showDateSelector","shouldForceProject","lockedMessageSubject","showIssueStreamLink","showProjectSettingsLink","renderPageContent","SentryTypes","PropTypes","OrganizationGroupDetails","startMetricCollection","analytics","group_id","parseInt","org_id","startType","isLightweightOrganization","metric","start_type","selection","key","withOrganization","withGlobalSelection"],"mappings":"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","file":"GroupDetails.a86c8bfea37dfe45947a.js","sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {Panel} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype SelectOption = Record<'value' | 'label', string>;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  projectSlug?: string;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  project?: Project;\n  team: string | null;\n};\n\nclass MissingProjectMembership extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const {organization, projectSlug} = this.props;\n    const project = organization.projects?.find(p => p.slug === projectSlug);\n\n    this.state = {\n      loading: false,\n      error: false,\n      project,\n      team: '',\n    };\n  }\n\n  joinTeam(teamSlug: string) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: teamSlug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(t('Request to join team sent.'));\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(t('There was an error while trying to request access.'));\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(teamSlug: string, features: Set<string>) {\n    const team = TeamStore.getBySlug(teamSlug);\n\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      if (features.has('open-membership')) {\n        return <Button busy>{t('Join Team')}</Button>;\n      }\n      return <Button busy>{t('Request Access')}</Button>;\n    } else if (team?.isPending) {\n      return <Button disabled>{t('Request Pending')}</Button>;\n    } else if (features.has('open-membership')) {\n      return (\n        <Button\n          priority=\"primary\"\n          type=\"button\"\n          onClick={this.joinTeam.bind(this, teamSlug)}\n        >\n          {t('Join Team')}\n        </Button>\n      );\n    }\n    return (\n      <Button\n        priority=\"primary\"\n        type=\"button\"\n        onClick={this.joinTeam.bind(this, teamSlug)}\n      >\n        {t('Request Access')}\n      </Button>\n    );\n  }\n\n  getTeamsForAccess() {\n    const request: string[] = [];\n    const pending: string[] = [];\n    const teams = this.state.project?.teams ?? [];\n    teams.forEach(({slug}) => {\n      const team = TeamStore.getBySlug(slug);\n      if (!team) {\n        return;\n      }\n      team.isPending ? pending.push(team.slug) : request.push(team.slug);\n    });\n\n    return [request, pending];\n  }\n\n  handleChangeTeam = (teamObj: SelectOption | null) => {\n    const team = teamObj ? teamObj.value : null;\n    this.setState({team});\n  };\n\n  getPendingTeamOption = (team: string) => {\n    return {\n      value: team,\n      label: <DisabledLabel>{t(`#${team}`)}</DisabledLabel>,\n    };\n  };\n\n  render() {\n    const {organization} = this.props;\n    const teamSlug = this.state.team;\n    const teams = this.state.project?.teams ?? [];\n    const features = new Set(organization.features);\n\n    const teamAccess = [\n      {\n        label: t('Request Access'),\n        options: this.getTeamsForAccess()[0].map(request => ({\n          value: request,\n          label: t(`#${request}`),\n        })),\n      },\n      {\n        label: t('Pending Requests'),\n        options: this.getTeamsForAccess()[1].map(pending =>\n          this.getPendingTeamOption(pending)\n        ),\n      },\n    ];\n\n    return (\n      <StyledPanel>\n        {!teams.length ? (\n          <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n            {t(\n              'No teams have access to this project yet. Ask an admin to add your team to this project.'\n            )}\n          </EmptyMessage>\n        ) : (\n          <EmptyMessage\n            icon={<IconFlag size=\"xl\" />}\n            title={t(\"You're not a member of this project.\")}\n            description={t(\n              `You'll need to join a team with access before you can view this data.`\n            )}\n            action={\n              <Field>\n                <StyledSelectControl\n                  name=\"select\"\n                  placeholder={t('Select a Team')}\n                  options={teamAccess}\n                  onChange={this.handleChangeTeam}\n                />\n                {teamSlug ? (\n                  this.renderJoinTeam(teamSlug, features)\n                ) : (\n                  <Button disabled>{t('Select a Team')}</Button>\n                )}\n              </Field>\n            }\n          />\n        )}\n      </StyledPanel>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  margin: ${space(2)} 0;\n`;\n\nconst Field = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  text-align: left;\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 250px;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden;\n`;\n\nexport {MissingProjectMembership};\n\nexport default withApi(MissingProjectMembership);\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","export const ERROR_TYPES = {\n  GROUP_NOT_FOUND: 'GROUP_NOT_FOUND',\n  MISSING_MEMBERSHIP: 'MISSING_MEMBERSHIP',\n} as const;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport * as ReactRouter from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport PropTypes from 'prop-types';\n\nimport {Client} from 'app/api';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport MissingProjectMembership from 'app/components/projects/missingProjectMembership';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport GroupStore from 'app/stores/groupStore';\nimport {PageContent} from 'app/styles/organization';\nimport {AvatarProject, Group, Organization, Project} from 'app/types';\nimport {Event} from 'app/types/event';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {getMessage, getTitle} from 'app/utils/events';\nimport Projects from 'app/utils/projects';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withApi from 'app/utils/withApi';\n\nimport {ERROR_TYPES} from './constants';\nimport GroupHeader, {TAB} from './header';\nimport {\n  fetchGroupEvent,\n  getGroupReprocessingStatus,\n  markEventSeen,\n  ReprocessingStatus,\n} from './utils';\n\ntype Error = typeof ERROR_TYPES[keyof typeof ERROR_TYPES] | null;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  environments: string[];\n  children: React.ReactNode;\n  isGlobalSelectionReady: boolean;\n} & ReactRouter.RouteComponentProps<\n  {orgId: string; groupId: string; eventId?: string},\n  {}\n>;\n\ntype State = {\n  group: Group | null;\n  loading: boolean;\n  loadingEvent: boolean;\n  loadingGroup: boolean;\n  error: boolean;\n  eventError: boolean;\n  errorType: Error;\n  project: null | (Pick<Project, 'id' | 'slug'> & Partial<Pick<Project, 'platform'>>);\n  event?: Event;\n};\n\nclass GroupDetails extends React.Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n    location: PropTypes.object,\n  };\n\n  state = this.initialState;\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n      location: this.props.location,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.updateReprocessingProgress();\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (\n      prevProps.isGlobalSelectionReady !== this.props.isGlobalSelectionReady ||\n      prevProps.location.pathname !== this.props.location.pathname\n    ) {\n      this.fetchData();\n    }\n\n    if (\n      (!this.canLoadEventEarly(prevProps) && !prevState?.group && this.state.group) ||\n      (prevProps.params?.eventId !== this.props.params?.eventId && this.state.group)\n    ) {\n      this.getEvent(this.state.group);\n    }\n  }\n\n  componentWillUnmount() {\n    GroupStore.reset();\n    callIfFunction(this.listener);\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  get initialState(): State {\n    return {\n      group: null,\n      loading: true,\n      loadingEvent: true,\n      loadingGroup: true,\n      error: false,\n      eventError: false,\n      errorType: null,\n      project: null,\n    };\n  }\n\n  remountComponent = () => {\n    this.setState(this.initialState);\n    this.fetchData();\n  };\n\n  canLoadEventEarly(props: Props) {\n    return !props.params.eventId || ['oldest', 'latest'].includes(props.params.eventId);\n  }\n\n  get groupDetailsEndpoint() {\n    return `/issues/${this.props.params.groupId}/`;\n  }\n\n  async getEvent(group?: Group) {\n    if (group) {\n      this.setState({loadingEvent: true, eventError: false});\n    }\n\n    const {params, environments, api} = this.props;\n    const orgSlug = params.orgId;\n    const groupId = params.groupId;\n    const eventId = params?.eventId || 'latest';\n    const projectId = group?.project?.slug;\n    try {\n      const event = await fetchGroupEvent(\n        api,\n        orgSlug,\n        groupId,\n        eventId,\n        environments,\n        projectId\n      );\n      this.setState({event, loading: false, eventError: false, loadingEvent: false});\n    } catch (err) {\n      // This is an expected error, capture to Sentry so that it is not considered as an unhandled error\n      Sentry.captureException(err);\n      this.setState({eventError: true, loading: false, loadingEvent: false});\n    }\n  }\n\n  getCurrentRouteInfo(group: Group): {currentTab: keyof typeof TAB; baseUrl: string} {\n    const {routes, organization} = this.props;\n    const {event} = this.state;\n\n    // All the routes under /organizations/:orgId/issues/:groupId have a defined props\n    const {currentTab, isEventRoute} = routes[routes.length - 1].props as {\n      currentTab: keyof typeof TAB;\n      isEventRoute: boolean;\n    };\n\n    const baseUrl =\n      isEventRoute && event\n        ? `/organizations/${organization.slug}/issues/${group.id}/events/${event.id}/`\n        : `/organizations/${organization.slug}/issues/${group.id}/`;\n\n    return {currentTab, baseUrl};\n  }\n\n  updateReprocessingProgress() {\n    const hasReprocessingV2Feature = this.hasReprocessingV2Feature();\n    if (!hasReprocessingV2Feature) {\n      return;\n    }\n    this.interval = setInterval(this.refetchGroup, 30000);\n  }\n\n  hasReprocessingV2Feature() {\n    const {organization} = this.props;\n    return organization.features?.includes('reprocessing-v2');\n  }\n\n  getReprocessingNewRoute(data: Group) {\n    const {routes, location, params} = this.props;\n    const {groupId} = params;\n\n    const {id: nextGroupId} = data;\n\n    const hasReprocessingV2Feature = this.hasReprocessingV2Feature();\n\n    const reprocessingStatus = getGroupReprocessingStatus(data);\n    const {currentTab, baseUrl} = this.getCurrentRouteInfo(data);\n\n    if (groupId !== nextGroupId) {\n      if (hasReprocessingV2Feature) {\n        // Redirects to the Activities tab\n        if (\n          reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n          currentTab !== TAB.ACTIVITY\n        ) {\n          return {\n            pathname: `${baseUrl}${TAB.ACTIVITY}/`,\n            query: {...params, groupId: nextGroupId},\n          };\n        }\n      }\n\n      return recreateRoute('', {\n        routes,\n        location,\n        params: {...params, groupId: nextGroupId},\n      });\n    }\n\n    if (hasReprocessingV2Feature) {\n      if (\n        reprocessingStatus === ReprocessingStatus.REPROCESSING &&\n        currentTab !== TAB.DETAILS\n      ) {\n        return {\n          pathname: baseUrl,\n          query: params,\n        };\n      }\n\n      if (\n        reprocessingStatus === ReprocessingStatus.REPROCESSED_AND_HASNT_EVENT &&\n        currentTab !== TAB.ACTIVITY &&\n        currentTab !== TAB.USER_FEEDBACK\n      ) {\n        return {\n          pathname: `${baseUrl}${TAB.ACTIVITY}/`,\n          query: params,\n        };\n      }\n    }\n\n    return undefined;\n  }\n\n  getGroupQuery(): Record<string, string | string[]> {\n    const {environments, organization} = this.props;\n\n    // Note, we do not want to include the environment key at all if there are no environments\n    const query: Record<string, string | string[]> = {\n      ...(environments ? {environment: environments} : {}),\n    };\n\n    if (organization?.features?.includes('inbox')) {\n      query.expand = 'inbox';\n    }\n\n    return query;\n  }\n\n  getFetchDataRequestErrorType(status: any): Error {\n    if (!status) {\n      return null;\n    }\n\n    if (status === 404) {\n      return ERROR_TYPES.GROUP_NOT_FOUND;\n    }\n\n    if (status === 403) {\n      return ERROR_TYPES.MISSING_MEMBERSHIP;\n    }\n\n    return null;\n  }\n\n  handleRequestError(error: any) {\n    Sentry.captureException(error);\n    const errorType = this.getFetchDataRequestErrorType(error?.status);\n\n    this.setState({\n      loadingGroup: false,\n      loading: false,\n      error: true,\n      errorType,\n    });\n  }\n\n  refetchGroup = async () => {\n    const {loadingGroup, loading, loadingEvent, group} = this.state;\n\n    if (\n      group?.status !== ReprocessingStatus.REPROCESSING ||\n      loadingGroup ||\n      loading ||\n      loadingEvent\n    ) {\n      return;\n    }\n\n    const {api} = this.props;\n\n    this.setState({loadingGroup: true});\n\n    try {\n      const updatedGroup = await api.requestPromise(this.groupDetailsEndpoint, {\n        query: this.getGroupQuery(),\n      });\n\n      const reprocessingNewRoute = this.getReprocessingNewRoute(updatedGroup);\n\n      if (reprocessingNewRoute) {\n        ReactRouter.browserHistory.push(reprocessingNewRoute);\n        return;\n      }\n\n      this.setState({group: updatedGroup, loadingGroup: false});\n    } catch (error) {\n      this.handleRequestError(error);\n    }\n  };\n\n  async fetchData() {\n    const {api, isGlobalSelectionReady, params} = this.props;\n\n    // Need to wait for global selection store to be ready before making request\n    if (!isGlobalSelectionReady) {\n      return;\n    }\n\n    try {\n      const eventPromise = this.canLoadEventEarly(this.props)\n        ? this.getEvent()\n        : undefined;\n\n      const groupPromise = await api.requestPromise(this.groupDetailsEndpoint, {\n        query: this.getGroupQuery(),\n      });\n\n      const [data] = await Promise.all([groupPromise, eventPromise]);\n\n      const reprocessingNewRoute = this.getReprocessingNewRoute(data);\n\n      if (reprocessingNewRoute) {\n        ReactRouter.browserHistory.push(reprocessingNewRoute);\n        return;\n      }\n\n      const project = data.project;\n\n      markEventSeen(api, params.orgId, project.slug, params.groupId);\n\n      if (!project) {\n        Sentry.withScope(() => {\n          Sentry.captureException(new Error('Project not found'));\n        });\n      } else {\n        const locationWithProject = {...this.props.location};\n        if (\n          locationWithProject.query.project === undefined &&\n          locationWithProject.query._allp === undefined\n        ) {\n          //We use _allp as a temporary measure to know they came from the issue list page with no project selected (all projects included in filter).\n          //If it is not defined, we add the locked project id to the URL (this is because if someone navigates directly to an issue on single-project priveleges, then goes back - they were getting assigned to the first project).\n          //If it is defined, we do not so that our back button will bring us to the issue list page with no project selected instead of the locked project.\n          locationWithProject.query.project = project.id;\n        }\n        delete locationWithProject.query._allp; //We delete _allp from the URL to keep the hack a bit cleaner, but this is not an ideal solution and will ultimately be replaced with something smarter.\n        ReactRouter.browserHistory.replace(locationWithProject);\n      }\n\n      this.setState({project, loadingGroup: false});\n\n      GroupStore.loadInitialData([data]);\n    } catch (error) {\n      this.handleRequestError(error);\n    }\n  }\n\n  listener = GroupStore.listen(itemIds => this.onGroupChange(itemIds), undefined);\n  interval: ReturnType<typeof setInterval> | undefined = undefined;\n\n  onGroupChange(itemIds: Set<string>) {\n    const id = this.props.params.groupId;\n    if (itemIds.has(id)) {\n      const group = GroupStore.get(id) as Group;\n      if (group) {\n        // TODO(ts) This needs a better approach. issueActions is splicing attributes onto\n        // group objects to cheat here.\n        if ((group as Group & {stale?: boolean}).stale) {\n          this.fetchData();\n          return;\n        }\n        this.setState({\n          group,\n        });\n      }\n    }\n  }\n\n  getTitle() {\n    const {organization} = this.props;\n    const {group} = this.state;\n    const defaultTitle = 'Sentry';\n\n    if (!group) {\n      return defaultTitle;\n    }\n\n    const {title} = getTitle(group, organization);\n    const message = getMessage(group);\n\n    const {project} = group;\n    const eventDetails = `${organization.slug} - ${project.slug}`;\n\n    if (title && message) {\n      return `${title}: ${message} - ${eventDetails}`;\n    }\n\n    return `${title || message || defaultTitle} - ${eventDetails}`;\n  }\n\n  renderError() {\n    const {organization, location} = this.props;\n    const projects = organization.projects ?? [];\n    const projectId = location.query.project;\n\n    const projectSlug = projects.find(proj => proj.id === projectId)?.slug;\n\n    switch (this.state.errorType) {\n      case ERROR_TYPES.GROUP_NOT_FOUND:\n        return (\n          <LoadingError message={t('The issue you were looking for was not found.')} />\n        );\n\n      case ERROR_TYPES.MISSING_MEMBERSHIP:\n        return (\n          <MissingProjectMembership\n            organization={this.props.organization}\n            projectSlug={projectSlug}\n          />\n        );\n      default:\n        return <LoadingError onRetry={this.remountComponent} />;\n    }\n  }\n\n  renderContent(project: AvatarProject, group: Group) {\n    const {children, environments} = this.props;\n    const {loadingEvent, eventError, event} = this.state;\n\n    const {currentTab, baseUrl} = this.getCurrentRouteInfo(group);\n    const groupReprocessingStatus = getGroupReprocessingStatus(group);\n\n    let childProps: Record<string, any> = {\n      environments,\n      group,\n      project,\n    };\n\n    if (currentTab === TAB.DETAILS) {\n      childProps = {\n        ...childProps,\n        event,\n        loadingEvent,\n        eventError,\n        groupReprocessingStatus,\n        onRetry: () => this.remountComponent(),\n      };\n    }\n\n    if (currentTab === TAB.TAGS) {\n      childProps = {...childProps, event, baseUrl};\n    }\n\n    return (\n      <React.Fragment>\n        <GroupHeader\n          groupReprocessingStatus={groupReprocessingStatus}\n          project={project as Project}\n          event={event}\n          group={group}\n          currentTab={currentTab}\n          baseUrl={baseUrl}\n        />\n        {React.isValidElement(children)\n          ? React.cloneElement(children, childProps)\n          : children}\n      </React.Fragment>\n    );\n  }\n\n  renderPageContent() {\n    const {error: isError, group, project, loading} = this.state;\n    const isLoading = loading || (!group && !isError);\n\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    if (isError) {\n      return this.renderError();\n    }\n\n    const {organization} = this.props;\n\n    return (\n      <Projects\n        orgId={organization.slug}\n        slugs={[project?.slug ?? '']}\n        data-test-id=\"group-projects-container\"\n      >\n        {({projects, initiallyLoaded, fetchError}) =>\n          initiallyLoaded ? (\n            fetchError ? (\n              <LoadingError message={t('Error loading the specified project')} />\n            ) : (\n              this.renderContent(projects[0], group!) // TODO(ts): Update renderContent function to deal with empty group\n            )\n          ) : (\n            <LoadingIndicator />\n          )\n        }\n      </Projects>\n    );\n  }\n\n  render() {\n    const {project} = this.state;\n\n    return (\n      <DocumentTitle title={this.getTitle()}>\n        <GlobalSelectionHeader\n          skipLoadLastUsed\n          forceProject={project}\n          showDateSelector={false}\n          shouldForceProject\n          lockedMessageSubject={t('issue')}\n          showIssueStreamLink\n          showProjectSettingsLink\n        >\n          <PageContent>{this.renderPageContent()}</PageContent>\n        </GlobalSelectionHeader>\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default withApi(Sentry.withProfiler(GroupDetails));\n","import React from 'react';\nimport * as ReactRouter from 'react-router';\n\nimport {GlobalSelection, Organization} from 'app/types';\nimport {analytics, metric} from 'app/utils/analytics';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization, {isLightweightOrganization} from 'app/utils/withOrganization';\n\nimport GroupDetails from './groupDetails';\n\ntype Props = {\n  selection: GlobalSelection;\n  isGlobalSelectionReady: boolean;\n  organization: Organization;\n  children: React.ReactNode;\n} & ReactRouter.RouteComponentProps<{orgId: string; groupId: string}, {}>;\n\nclass OrganizationGroupDetails extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    // Setup in the constructor as render() may be expensive\n    this.startMetricCollection();\n  }\n\n  componentDidMount() {\n    analytics('issue_page.viewed', {\n      group_id: parseInt(this.props.params.groupId, 10),\n      org_id: parseInt(this.props.organization.id, 10),\n    });\n  }\n\n  /**\n   * See \"page-issue-list-start\" for explanation on hot/cold-starts\n   */\n  startMetricCollection() {\n    const startType = isLightweightOrganization(this.props.organization)\n      ? 'cold-start'\n      : 'warm-start';\n    metric.mark({name: 'page-issue-details-start', data: {start_type: startType}});\n  }\n\n  render() {\n    const {selection, ...props} = this.props;\n\n    return (\n      <GroupDetails\n        key={`${this.props.params.groupId}-envs:${selection.environments.join(',')}`}\n        environments={selection.environments}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default withOrganization(withGlobalSelection(OrganizationGroupDetails));\n"],"sourceRoot":""}