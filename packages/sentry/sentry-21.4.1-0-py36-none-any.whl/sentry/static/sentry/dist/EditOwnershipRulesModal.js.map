{"version":3,"sources":["webpack:///./app/views/settings/project/projectOwnership/editRulesModal.tsx","webpack:///./app/components/modals/editOwnershipRulesModal.tsx"],"names":["EditOwnershipRulesModal","ownership","this","props","Block","t","CodeBlock","initialText","raw","React","TextBlock","Body","Header","closeModal","onSave","closeButton","onHide","modalCss","css","theme"],"mappings":"khCAWMA,E,wiBACJ,WAAS,IACAC,EAAaC,KAAKC,MAAlBF,UACP,OACE,QAAC,WAAD,MACE,QAACG,EAAD,MACGC,OAAE,8BADL,KACoC,+CAEpC,QAACD,EAAD,MACGC,OAAE,oEAEL,QAACD,EAAD,MACGC,OAAE,qBACH,QAACC,EAAD,KAAY,0DAEd,QAACF,EAAD,MACGC,OAAE,aACH,QAACC,EAAD,oEAEG,KAFH,6CAIG,KAJH,0CAQDL,IAAa,QAAC,KAAD,UAAgBC,KAAKC,MAArB,CAA4BI,YAAaN,EAAUO,KAAO,W,GAzB1CC,aAAhCT,E,sCA+BN,IAAMI,GAAQ,OAAOM,IAAP,oCAAH,8CAILJ,GAAY,OAAO,MAAP,wCAAH,sEAKf,UCzCA,IAAMN,EAA0B,SAAC,GAAwD,IAAvDW,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,OAAWX,GAAkB,kDACvF,OACE,QAAC,WAAD,MACE,QAACS,EAAD,CAAQG,aAAW,EAACC,OAAQH,IACzBR,OAAE,0BAEL,QAACM,EAAD,MACE,QAAC,GAAD,UAAoBR,EAApB,CAA2BW,OAAQA,QAPrCd,E,sCAaC,IAAMiB,GAAWC,QAAH,qBACEC,oBADF,iJAiBrB","file":"EditOwnershipRulesModal.27330e71c69c2a5f2167.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {EditOwnershipRulesModalOptions} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport OwnerInput from 'app/views/settings/project/projectOwnership/ownerInput';\n\ntype Props = EditOwnershipRulesModalOptions;\ntype State = {};\n\nclass EditOwnershipRulesModal extends React.Component<Props, State> {\n  render() {\n    const {ownership} = this.props;\n    return (\n      <React.Fragment>\n        <Block>\n          {t('Rules follow the pattern: ')} <code>type:glob owner owner</code>\n        </Block>\n        <Block>\n          {t('Owners can be team identifiers starting with #, or user emails')}\n        </Block>\n        <Block>\n          {t('Globbing Syntax:')}\n          <CodeBlock>{'* matches everything\\n? matches any single character'}</CodeBlock>\n        </Block>\n        <Block>\n          {t('Examples')}\n          <CodeBlock>\n            path:src/example/pipeline/* person@sentry.io #infrastructure\n            {'\\n'}\n            url:http://example.com/settings/* #product\n            {'\\n'}\n            tags.sku_class:enterprise #enterprise\n          </CodeBlock>\n        </Block>\n        {ownership && <OwnerInput {...this.props} initialText={ownership.raw || ''} />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst Block = styled(TextBlock)`\n  margin-bottom: 16px;\n`;\n\nconst CodeBlock = styled('pre')`\n  word-break: break-all;\n  white-space: pre-wrap;\n`;\n\nexport default EditOwnershipRulesModal;\n","import React from 'react';\nimport {css} from '@emotion/core';\n\nimport {EditOwnershipRulesModalOptions, ModalRenderProps} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\nimport theme from 'app/utils/theme';\nimport OwnershipModal from 'app/views/settings/project/projectOwnership/editRulesModal';\n\ntype Props = ModalRenderProps & EditOwnershipRulesModalOptions;\n\nconst EditOwnershipRulesModal = ({Body, Header, closeModal, onSave, ...props}: Props) => {\n  return (\n    <React.Fragment>\n      <Header closeButton onHide={closeModal}>\n        {t('Edit Ownership Rules')}\n      </Header>\n      <Body>\n        <OwnershipModal {...props} onSave={onSave} />\n      </Body>\n    </React.Fragment>\n  );\n};\n\nexport const modalCss = css`\n  @media (min-width: ${theme.breakpoints[0]}) {\n    .modal-dialog {\n      width: 80%;\n      margin-left: -40%;\n    }\n  }\n  .modal-content {\n    overflow: initial;\n  }\n\n  .modal-header {\n    font-size: 20px;\n    font-weight: bold;\n  }\n`;\n\nexport default EditOwnershipRulesModal;\n"],"sourceRoot":""}