{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectOwnership/rulesPanel.tsx","webpack:///./app/views/settings/project/projectOwnership/codeowners.tsx","webpack:///./app/views/settings/project/projectOwnership/index.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","FormPanel","props","fields","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","id","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","key","name","highlighted","React","JsonForm","getLocation","context","hash","scrollToHash","nextProps","setState","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","forms","features","location","state","formGroup","i","renderForm","PropTypes","UnstyledSettingsPageHeader","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","PermissionAlert","hasAccess","type","size","t","RulesPanel","provider","raw","dateUpdated","repoName","readOnly","placeholder","detail","controls","dataTestId","Container","data-test-id","RulesHeader","TitleContainer","renderIcon","renderTitle","ReadOnlyTag","Repository","Detail","RulesView","InnerPanel","InnerPanelHeader","SyncDate","moment","fromNow","Controls","c","n","InnerPanelBody","StyledTextArea","value","spellCheck","autoComplete","autoCorrect","autoCapitalize","withTheme","Tag","Panel","PanelHeader","PanelBody","TextareaAutosize","inputStyles","text","familyMono","codeowner","organization","project","endpoint","slug","api","requestPromise","method","codeowners","config","addSuccessMessage","addErrorMessage","codeMapping","onConfirm","handleDelete","message","prevState","ownership","routeTitleGen","tct","link","href","includes","to","pathname","query","lastUpdated","getPlaceholder","getDetail","onClick","openEditOwnershipRules","onSave","handleOwnershipSave","apiEndpoint","apiMethod","saveOnBlur","initialData","fallthrough","hideFooter","label","help","autoAssignment"],"mappings":"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","file":"ProjectOwnership.824fd8570f2626744f55.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\nimport {Box} from 'reflexbox'; // eslint-disable-line no-restricted-imports\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\nimport {withTheme} from 'emotion-theming';\nimport moment from 'moment';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport Tag from 'app/components/tag';\nimport {IconGithub, IconGitlab, IconSentry} from 'app/icons';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\n\ntype Props = {\n  raw: string;\n  dateUpdated: string | null;\n  provider?: string;\n  repoName?: string;\n  readOnly?: boolean;\n  type: 'codeowners' | 'issueowners';\n  placeholder?: string;\n  detail?: React.ReactNode;\n  controls?: React.ReactNode[];\n  'data-test-id': string;\n};\n\ntype State = {};\n\nclass RulesPanel extends React.Component<Props, State> {\n  renderIcon(provider: string) {\n    switch (provider) {\n      case 'github':\n        return <IconGithub size=\"md\" />;\n      case 'gitlab':\n        return <IconGitlab size=\"md\" />;\n      default:\n        return <IconSentry size=\"md\" />;\n    }\n  }\n  renderTitle() {\n    switch (this.props.type) {\n      case 'codeowners':\n        return 'CODEOWNERS';\n      case 'issueowners':\n        return 'Ownership Rules';\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const {\n      raw,\n      dateUpdated,\n      provider,\n      repoName,\n      readOnly,\n      placeholder,\n      detail,\n      controls,\n      ['data-test-id']: dataTestId,\n    } = this.props;\n    return (\n      <Container data-test-id={dataTestId}>\n        <RulesHeader>\n          <TitleContainer>\n            {this.renderIcon(provider ?? '')}\n            <Title>{this.renderTitle()}</Title>\n          </TitleContainer>\n          {readOnly && <ReadOnlyTag type=\"default\">{'Read Only'}</ReadOnlyTag>}\n          {repoName && <Repository>{repoName}</Repository>}\n          {detail && <Detail>{detail}</Detail>}\n        </RulesHeader>\n        <RulesView>\n          <InnerPanel>\n            <InnerPanelHeader>\n              <SyncDate>\n                {dateUpdated && `Last synced ${moment(dateUpdated).fromNow()}`}\n              </SyncDate>\n              <Controls>\n                {(controls || []).map((c, n) => (\n                  <span key={n}> {c}</span>\n                ))}\n              </Controls>\n            </InnerPanelHeader>\n            <InnerPanelBody>\n              <StyledTextArea\n                value={raw}\n                spellCheck=\"false\"\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"off\"\n                placeholder={placeholder}\n              />\n            </InnerPanelBody>\n          </InnerPanel>\n        </RulesView>\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(RulesPanel);\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-template-areas: 'rules-header rules-view';\n  margin-bottom: ${space(3)};\n`;\n\nconst RulesHeader = styled('div')`\n  grid-area: rules-header;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-rows: 45px 1fr 1fr 1fr 1fr;\n  grid-template-areas: 'title tag' 'repository repository' '. .' '. .' 'detail detail';\n  border: 1px solid #c6becf;\n  border-radius: 4px 0 0 4px;\n  border-right: none;\n  box-shadow: 0 2px 0 rgb(37 11 54 / 4%);\n  background-color: #ffffff;\n`;\nconst TitleContainer = styled('div')`\n  grid-area: title;\n  align-self: center;\n  padding-left: ${space(2)};\n  display: flex;\n  * {\n    padding-right: ${space(0.5)};\n  }\n`;\nconst Title = styled('div')`\n  align-self: center;\n`;\nconst ReadOnlyTag = styled(Tag)`\n  grid-area: tag;\n  align-self: center;\n  justify-self: end;\n  padding-right: ${space(1)};\n`;\nconst Repository = styled('div')`\n  grid-area: repository;\n  padding-left: calc(${space(2)} + ${space(3)});\n  color: #9386a0;\n  font-size: 14px;\n`;\nconst Detail = styled('div')`\n  grid-area: detail;\n  align-self: end;\n  padding: 0 ${space(2)} ${space(2)} ${space(2)};\n  color: #9386a0;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n\nconst RulesView = styled('div')`\n  grid-area: rules-view;\n`;\n\nconst InnerPanel = styled(Panel)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0px;\n  margin: 0px;\n  height: 100%;\n`;\n\nconst InnerPanelHeader = styled(PanelHeader)`\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  grid-template-areas: 'sync-date controis';\n  text-transform: none;\n  font-size: 16px;\n  font-weight: 400;\n`;\n\nconst InnerPanelBody = styled(PanelBody)`\n  height: auto;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${p => inputStyles(p)};\n  height: 350px !important;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  line-height: ${space(3)};\n  border: none;\n  box-shadow: none;\n  padding: ${space(2)};\n  color: transparent;\n  text-shadow: 0 0 0 #9386a0;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: none;\n  }\n`;\n\nconst SyncDate = styled('div')`\n  grid-area: sync-date;\n`;\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n`;\n","import React from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport {CodeOwners, Organization, Project} from 'app/types';\nimport RulesPanel from 'app/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = AsyncComponent['props'] & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = {} & AsyncComponent['state'];\n\nclass CodeOwnersPanel extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [\n      [\n        'codeowners',\n        `/projects/${organization.slug}/${project.slug}/codeowners/?expand=codeMapping`,\n      ],\n    ];\n  }\n\n  handleDelete = async (codeowner: CodeOwners) => {\n    const {organization, project} = this.props;\n    const endpoint = `/api/0/projects/${organization.slug}/${project.slug}/codeowners/${codeowner.id}/`;\n    try {\n      await this.api.requestPromise(endpoint, {\n        method: 'DELETE',\n      });\n      // remove config and update state\n      const {codeowners} = this.state;\n      this.setState({\n        codeowners: codeowners.filter(config => config.id !== codeowner.id),\n      });\n      addSuccessMessage(t('Deletion successful'));\n    } catch {\n      //no 4xx errors should happen on delete\n      addErrorMessage(t('An error occurred'));\n    }\n  };\n\n  renderBody() {\n    const {codeowners} = this.state;\n    return codeowners.map(codeowner => {\n      const {\n        raw,\n        dateUpdated,\n        provider,\n        codeMapping: {repoName},\n      } = codeowner;\n      return (\n        <React.Fragment key={codeowner.id}>\n          <RulesPanel\n            data-test-id=\"codeowners-panel\"\n            type=\"codeowners\"\n            raw={raw}\n            dateUpdated={dateUpdated}\n            provider={provider}\n            repoName={repoName}\n            readOnly\n            controls={[\n              <Confirm\n                onConfirm={() => this.handleDelete(codeowner)}\n                message={t('Are you sure you want to remove this CODEOWNERS file?')}\n                key=\"confirm-delete\"\n              >\n                <Button key=\"delete\" icon={<IconDelete size=\"xs\" />} size=\"xsmall\" />\n              </Confirm>,\n            ]}\n          />\n        </React.Fragment>\n      );\n    });\n  }\n}\n\nexport default CodeOwnersPanel;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {openEditOwnershipRules} from 'app/actionCreators/modal';\nimport Feature from 'app/components/acl/feature';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {t, tct} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport CodeOwnersPanel from 'app/views/settings/project/projectOwnership/codeowners';\nimport RulesPanel from 'app/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  ownership: null | any;\n} & AsyncView['state'];\n\nclass ProjectOwnership extends AsyncView<Props, State> {\n  getTitle() {\n    const {project} = this.props;\n    return routeTitleGen(t('Issue Owners'), project.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`]];\n  }\n\n  getPlaceholder() {\n    return `#example usage\npath:src/example/pipeline/* person@sentry.io #infra\nurl:http://example.com/settings/* #product\ntags.sku_class:enterprise #enterprise`;\n  }\n\n  getDetail() {\n    return tct(\n      `Automatically assign issues and send alerts to the right people based on issue properties. [link:Learn more].`,\n      {\n        link: (\n          <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\" />\n        ),\n      }\n    );\n  }\n\n  handleOwnershipSave = (text: string | null) => {\n    this.setState(prevState => ({\n      ownership: {\n        ...prevState.ownership,\n        raw: text,\n      },\n    }));\n  };\n\n  renderBody() {\n    const {project, organization} = this.props;\n    const {ownership} = this.state;\n\n    const disabled = !organization.access.includes('project:write');\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={t('Issue Owners')}\n          action={\n            <Button\n              to={{\n                pathname: `/organizations/${organization.slug}/issues/`,\n                query: {project: project.id},\n              }}\n              size=\"small\"\n            >\n              {t('View Issues')}\n            </Button>\n          }\n        />\n        <PermissionAlert />\n        <RulesPanel\n          data-test-id=\"issueowners-panel\"\n          type=\"issueowners\"\n          raw={ownership.raw || ''}\n          dateUpdated={ownership.lastUpdated}\n          placeholder={this.getPlaceholder()}\n          detail={this.getDetail()}\n          controls={[\n            <Button\n              key=\"edit\"\n              size=\"small\"\n              onClick={() =>\n                openEditOwnershipRules({\n                  organization,\n                  project,\n                  ownership,\n                  onSave: this.handleOwnershipSave,\n                })\n              }\n              disabled={disabled}\n            >\n              {t('Edit')}\n            </Button>,\n          ]}\n        />\n        <Feature features={['import-codeowners']}>\n          <CodeOwnersPanel {...this.props} />\n        </Feature>\n        <Form\n          apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n          apiMethod=\"PUT\"\n          saveOnBlur\n          initialData={{fallthrough: ownership.fallthrough}}\n          hideFooter\n        >\n          <JsonForm\n            forms={[\n              {\n                title: t('If ownership cannot be determined for an issue...'),\n                fields: [\n                  {\n                    name: 'fallthrough',\n                    type: 'boolean',\n                    label: t('All users with access to this project are issue owners'),\n                    help: t(\n                      'Issue owners will receive notifications for issues they are responsible for.'\n                    ),\n                    disabled,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form>\n\n        <Form\n          apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n          apiMethod=\"PUT\"\n          saveOnBlur\n          initialData={{autoAssignment: ownership.autoAssignment}}\n          hideFooter\n        >\n          <JsonForm\n            forms={[\n              {\n                title: t('If a new event matches any of the ownership rules...'),\n                fields: [\n                  {\n                    name: 'autoAssignment',\n                    type: 'boolean',\n                    label: t('The issue is assigned to the team or user'),\n                    help: t('Issue owners will be automatically assigned.'),\n                    disabled,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectOwnership;\n"],"sourceRoot":""}