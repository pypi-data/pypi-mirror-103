{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/discover/charts.tsx","webpack:///./app/components/resourceCard.tsx","webpack:///./app/views/projectsDashboard/resources.tsx","webpack:///./app/views/projectsDashboard/noEvents.tsx","webpack:///./app/views/projectsDashboard/chart.tsx","webpack:///./app/views/projectsDashboard/deploys.tsx","webpack:///./app/views/projectsDashboard/projectCard.tsx","webpack:///./app/views/projectsDashboard/teamMembers.tsx","webpack:///./app/views/projectsDashboard/teamSection.tsx","webpack:///./app/views/projectsDashboard/index.tsx","webpack:///./app/utils/withTeamsForUser.tsx","webpack:///./app/utils/getProjectsByTeams.tsx","webpack:///./images/spot/breadcrumbs-generic.svg","webpack:///./images/spot/code-arguments-tags-mirrored.svg","webpack:///./images/spot/releases.svg"],"names":["SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","tooltipFormatter","value","seriesName","aggregateOutputType","toLocaleString","formatPercentage","getDuration","toString","axisLabelFormatter","abbreviation","formatAbbreviatedNumber","axisDuration","WEEK","label","toFixed","t","DAY","HOUR","MINUTE","SECOND","ResourceCard","link","imgUrl","ResourceCardWrapper","onClick","analytics","StyledLink","href","StyledImg","src","alt","StyledTitle","Panel","space","ExternalLink","p","theme","textColor","fontSizeLarge","Resources","organization","this","props","trackAnalyticsEvent","eventKey","eventName","id","ResourcesWrapper","data-test-id","withMargins","ResourceCards","releasesImg","breadcrumbsImg","docsImg","React","border","breakpoints","NoEvents","seriesCount","Container","EmptyText","gray300","Chart","firstEvent","stats","transactionStats","series","hasTransactions","undefined","transactionSeries","map","push","cursor","name","type","data","barMinHeight","xAxisIndex","yAxisIndex","itemStyle","color","gray200","opacity","emphasis","purple300","chartOptions","colors","height","isGroupedByDate","showTimeInTooltip","grid","top","bottom","left","right","tooltip","trigger","xAxes","Array","from","length","_i","index","gridIndex","boundaryGap","axisLine","show","axisTick","axisLabel","axisPointer","lineStyle","width","yAxes","interval","Infinity","max","Math","margin","showMaxLabel","showMinLabel","chartLabel","fontFamily","text","family","inside","lineHeight","formatter","textBorderColor","backgroundSecondary","textBorderWidth","splitLine","zlevel","zIndex","header","options","animation","withTheme","Deploys","project","deploys","Object","entries","latestDeploys","environment","sort","a","b","Date","dateFinished","getTime","slice","DeployRows","deploy","Deploy","key","version","NoDeploys","size","Environment","projectId","tooltipRawVersion","truncate","DeployTime","getDynamicText","fixed","date","GetStarted","external","DeployContainer","fontSizeMedium","ProjectCard","api","loadStatsForProject","orgId","slug","query","hasPerformance","features","includes","hasProjectAccess","totalErrors","reduce","sum","totalTransactions","zeroTransactions","hasFirstEvent","Boolean","firstTransactionEvent","StyledProjectCard","CardHeader","HeaderRow","StyledIdBadge","avatarSize","hideOverflow","disableLink","SummaryLinks","to","tn","TransactionsLink","position","ChartContainer","LoadingCard","ProjectCardContainer","getInitialState","ProjectsStatsStore","itemsBySlug","onProjectStoreUpdate","projectDetails","listeners","forEach","callIfFunction","state","setState","background","borderRadius","dropShadowLight","IdBadge","subText","formText","Link","withOrganization","withApi","teamId","renderBody","members","users","filter","user","AsyncComponent","TeamSection","team","projects","showBorder","access","hasTeamAccess","has","TeamSectionWrapper","TeamTitleBar","TeamName","ProjectCards","PageHeading","Dashboard","teams","params","loadingTeams","error","message","filteredTeams","team1","team2","localeCompare","uniqBy","flatten","teamObj","favorites","isBookmarked","Set","canCreateProjects","hasTeamAdminAccess","showEmptyMessage","showResources","superuserNeedsToBeProjectMember","ProjectsHeader","disabled","icon","isCircled","once","debounce","offset","TeamLink","sortProjects","OrganizationDashboard","OrganizationDashboardWrapper","WrappedComponent","withProfiler","fetchTeams","metric","requestPromise","getUsersTeamsEndpoint","teamsWithProjects","start","route","organization_id","parseInt","projectsByTeam","isSuperuser","teamlessProjects","usersTeams","isMember","hasOwnProperty","getProjectsByTeams","ConfigStore","teamProjects","getDisplayName","module","exports"],"mappings":"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","file":"ProjectsDashboard.b7a545c3f0e5f05fc6c8.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {t} from 'app/locale';\nimport {aggregateOutputType} from 'app/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'app/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover result values\n */\nexport function tooltipFormatter(value: number, seriesName: string = ''): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  seriesName: string,\n  abbreviation: boolean = false\n): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number): string {\n  if (value === 0) {\n    return '0';\n  }\n  if (value >= WEEK) {\n    const label = (value / WEEK).toFixed(0);\n    return t('%swk', label);\n  }\n  if (value >= DAY) {\n    const label = (value / DAY).toFixed(0);\n    return t('%sd', label);\n  }\n  if (value >= HOUR) {\n    const label = (value / HOUR).toFixed(0);\n    return t('%shr', label);\n  }\n  if (value >= MINUTE) {\n    const label = (value / MINUTE).toFixed(0);\n    return t('%smin', label);\n  }\n  if (value >= SECOND) {\n    const label = (value / SECOND).toFixed(0);\n    return t('%ss', label);\n  }\n  const label = value.toFixed(0);\n  return t('%sms', label);\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\nimport {analytics} from 'app/utils/analytics';\n\ntype Props = {\n  title: string;\n  link: string;\n  imgUrl: string;\n};\n\nconst ResourceCard = ({title, link, imgUrl}: Props) => (\n  <ResourceCardWrapper\n    onClick={() => analytics('orgdash.resource_clicked', {link, title})}\n  >\n    <StyledLink href={link}>\n      <StyledImg src={imgUrl} alt={title} />\n      <StyledTitle>{title}</StyledTitle>\n    </StyledLink>\n  </ResourceCardWrapper>\n);\n\nexport default ResourceCard;\n\nconst ResourceCardWrapper = styled(Panel)`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  padding: ${space(3)};\n  margin-bottom: 0;\n`;\n\nconst StyledLink = styled(ExternalLink)`\n  flex: 1;\n`;\n\nconst StyledImg = styled('img')`\n  display: block;\n  margin: 0 auto ${space(3)} auto;\n  height: 160px;\n`;\n\nconst StyledTitle = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeLarge};\n  text-align: center;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport breadcrumbsImg from 'sentry-images/spot/breadcrumbs-generic.svg';\nimport docsImg from 'sentry-images/spot/code-arguments-tags-mirrored.svg';\nimport releasesImg from 'sentry-images/spot/releases.svg';\n\nimport PageHeading from 'app/components/pageHeading';\nimport ResourceCard from 'app/components/resourceCard';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization} from 'app/types';\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\n\ntype Props = {\n  organization: Organization;\n};\n\nclass Resources extends React.Component<Props> {\n  componentDidMount() {\n    const {organization} = this.props;\n    trackAnalyticsEvent({\n      eventKey: 'orgdash.resources_shown',\n      eventName: 'Projects Dashboard: Resources Shown',\n      organization: organization.id,\n    });\n  }\n\n  render() {\n    return (\n      <ResourcesWrapper data-test-id=\"resources\">\n        <PageHeading withMargins>{t('Resources')}</PageHeading>\n        <ResourceCards>\n          <ResourceCard\n            link=\"https://blog.sentry.io/2018/03/06/the-sentry-workflow\"\n            imgUrl={releasesImg}\n            title={t('The Sentry Workflow')}\n          />\n          <ResourceCard\n            link=\"https://sentry.io/vs/logging/\"\n            imgUrl={breadcrumbsImg}\n            title={t('Sentry vs Logging')}\n          />\n          <ResourceCard\n            link=\"https://docs.sentry.io/\"\n            imgUrl={docsImg}\n            title={t('Docs')}\n          />\n        </ResourceCards>\n      </ResourcesWrapper>\n    );\n  }\n}\n\nexport default Resources;\n\nconst ResourcesWrapper = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  padding: 25px 30px 10px 30px;\n`;\n\nconst ResourceCards = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\n\ntype Props = {\n  seriesCount: number;\n};\n\nconst NoEvents = ({seriesCount}: Props) => (\n  <Container>\n    <EmptyText seriesCount={seriesCount}>{t('No activity yet.')}</EmptyText>\n  </Container>\n);\n\nexport default NoEvents;\n\nconst Container = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\n\nconst EmptyText = styled('div')<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 4px;\n  margin-right: 4px;\n  height: ${p => (p.seriesCount > 1 ? '90px' : '150px')};\n  color: ${p => p.theme.gray300};\n`;\n","import React from 'react';\nimport {withTheme} from 'emotion-theming';\n\nimport BaseChart from 'app/components/charts/baseChart';\nimport {t} from 'app/locale';\nimport {Project} from 'app/types';\nimport {axisLabelFormatter} from 'app/utils/discover/charts';\nimport {Theme} from 'app/utils/theme';\n\nimport NoEvents from './noEvents';\n\ntype BaseChartProps = React.ComponentProps<typeof BaseChart>;\n\ntype Props = {\n  theme: Theme;\n  firstEvent: boolean;\n  stats: Project['stats'];\n  transactionStats?: Project['transactionStats'];\n};\n\nconst Chart = ({theme, firstEvent, stats, transactionStats}: Props) => {\n  const series: BaseChartProps['series'] = [];\n  const hasTransactions = transactionStats !== undefined;\n\n  if (transactionStats) {\n    const transactionSeries = transactionStats.map(([timestamp, value]) => [\n      timestamp * 1000,\n      value,\n    ]);\n\n    series.push({\n      cursor: 'normal' as const,\n      name: t('Transactions'),\n      type: 'bar',\n      data: transactionSeries,\n      barMinHeight: 1,\n      xAxisIndex: 1,\n      yAxisIndex: 1,\n      itemStyle: {\n        color: theme.gray200,\n        opacity: 0.8,\n        emphasis: {\n          color: theme.gray200,\n          opacity: 1.0,\n        },\n      },\n    });\n  }\n\n  if (stats) {\n    series.push({\n      cursor: 'normal' as const,\n      name: t('Errors'),\n      type: 'bar',\n      data: stats.map(([timestamp, value]) => [timestamp * 1000, value]),\n      barMinHeight: 1,\n      xAxisIndex: 0,\n      yAxisIndex: 0,\n      itemStyle: {\n        color: theme.purple300,\n        opacity: 0.6,\n        emphasis: {\n          color: theme.purple300,\n          opacity: 0.8,\n        },\n      },\n    });\n  }\n  const grid = hasTransactions\n    ? [\n        {\n          top: 10,\n          bottom: 60,\n          left: 2,\n          right: 2,\n        },\n        {\n          top: 105,\n          bottom: 0,\n          left: 2,\n          right: 2,\n        },\n      ]\n    : [\n        {\n          top: 10,\n          bottom: 0,\n          left: 2,\n          right: 2,\n        },\n      ];\n\n  const chartOptions = {\n    series,\n    colors: [],\n    height: 150,\n    isGroupedByDate: true,\n    showTimeInTooltip: true,\n    grid,\n    tooltip: {\n      trigger: 'axis' as const,\n    },\n    xAxes: Array.from(new Array(series.length)).map((_i, index) => ({\n      gridIndex: index,\n      boundaryGap: true,\n      axisLine: {\n        show: false,\n      },\n      axisTick: {\n        show: false,\n      },\n      axisLabel: {\n        show: false,\n      },\n      axisPointer: {\n        type: 'line' as const,\n        label: {\n          show: false,\n        },\n        lineStyle: {\n          width: 0,\n        },\n      },\n    })),\n    yAxes: Array.from(new Array(series.length)).map((_i, index) => ({\n      gridIndex: index,\n      interval: Infinity,\n      max(value: {max: number}) {\n        // This keeps small datasets from looking 'scary'\n        // by having full bars for < 10 values.\n        return Math.max(10, value.max);\n      },\n      axisLabel: {\n        margin: 2,\n        showMaxLabel: true,\n        showMinLabel: false,\n        color: theme.chartLabel,\n        fontFamily: theme.text.family,\n        inside: true,\n        lineHeight: 12,\n        formatter: (value: number) => axisLabelFormatter(value, 'count()', true),\n        textBorderColor: theme.backgroundSecondary,\n        textBorderWidth: 1,\n      },\n      splitLine: {\n        show: false,\n      },\n      zlevel: theme.zIndex.header,\n    })),\n    axisPointer: {\n      // Link each x-axis together.\n      link: [{xAxisIndex: [0, 1]}],\n    },\n    options: {\n      animation: false,\n    },\n  };\n\n  return (\n    <React.Fragment>\n      <BaseChart {...chartOptions} />\n      {!firstEvent && <NoEvents seriesCount={series.length} />}\n    </React.Fragment>\n  );\n};\n\nexport default withTheme(Chart);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport TextOverflow from 'app/components/textOverflow';\nimport TimeSince from 'app/components/timeSince';\nimport Version from 'app/components/version';\nimport {IconReleases} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Deploy as DeployType, Project} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nconst DEPLOY_COUNT = 2;\n\ntype Props = {\n  project: Project;\n};\n\nconst Deploys = ({project}: Props) => {\n  const flattenedDeploys = Object.entries(project.latestDeploys || {}).map(\n    ([environment, value]): Pick<\n      DeployType,\n      'version' | 'dateFinished' | 'environment'\n    > => ({environment, ...value})\n  );\n\n  const deploys = (flattenedDeploys || [])\n    .sort(\n      (a, b) => new Date(b.dateFinished).getTime() - new Date(a.dateFinished).getTime()\n    )\n    .slice(0, DEPLOY_COUNT);\n\n  if (!deploys.length) {\n    return <NoDeploys />;\n  }\n\n  return (\n    <DeployRows>\n      {deploys.map(deploy => (\n        <Deploy\n          key={`${deploy.environment}-${deploy.version}`}\n          deploy={deploy}\n          project={project}\n        />\n      ))}\n    </DeployRows>\n  );\n};\n\nexport default Deploys;\n\ntype DeployProps = Props & {\n  deploy: Pick<DeployType, 'version' | 'dateFinished' | 'environment'>;\n};\n\nconst Deploy = ({deploy, project}: DeployProps) => (\n  <React.Fragment>\n    <IconReleases size=\"sm\" />\n    <TextOverflow>\n      <Environment>{deploy.environment}</Environment>\n      <Version\n        version={deploy.version}\n        projectId={project.id}\n        tooltipRawVersion\n        truncate\n      />\n    </TextOverflow>\n\n    <DeployTime>\n      {getDynamicText({\n        fixed: '3 hours ago',\n        value: <TimeSince date={deploy.dateFinished} />,\n      })}\n    </DeployTime>\n  </React.Fragment>\n);\n\nconst NoDeploys = () => (\n  <GetStarted>\n    <Button size=\"small\" href=\"https://docs.sentry.io/product/releases/\" external>\n      {t('Track deploys')}\n    </Button>\n  </GetStarted>\n);\nconst DeployContainer = styled('div')`\n  padding: ${space(2)};\n  height: 115px;\n`;\n\nconst DeployRows = styled(DeployContainer)`\n  display: grid;\n  grid-template-columns: 30px 1fr 1fr;\n  grid-template-rows: auto;\n  grid-column-gap: ${space(1)};\n  grid-row-gap: ${space(1)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1.2;\n`;\n\nconst Environment = styled('div')`\n  color: ${p => p.theme.textColor};\n  margin: 0;\n`;\n\nconst DeployTime = styled('div')`\n  color: ${p => p.theme.gray300};\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`;\n\nconst GetStarted = styled(DeployContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {loadStatsForProject} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport IdBadge from 'app/components/idBadge';\nimport Link from 'app/components/links/link';\nimport BookmarkStar from 'app/components/projects/bookmarkStar';\nimport QuestionTooltip from 'app/components/questionTooltip';\nimport {t, tn} from 'app/locale';\nimport ProjectsStatsStore from 'app/stores/projectsStatsStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {formatAbbreviatedNumber} from 'app/utils/formatters';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport Chart from './chart';\nimport Deploys from './deploys';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project: Project;\n  hasProjectAccess: boolean;\n};\n\nclass ProjectCard extends React.Component<Props> {\n  componentDidMount() {\n    const {organization, project, api} = this.props;\n\n    // fetch project stats\n    loadStatsForProject(api, project.id, {\n      orgId: organization.slug,\n      projectId: project.id,\n      query: {\n        transactionStats: this.hasPerformance ? '1' : undefined,\n      },\n    });\n  }\n\n  get hasPerformance() {\n    return this.props.organization.features.includes('performance-view');\n  }\n\n  render() {\n    const {organization, project, hasProjectAccess} = this.props;\n    const {stats, slug, transactionStats} = project;\n    const totalErrors =\n      stats !== undefined\n        ? formatAbbreviatedNumber(stats.reduce((sum, [_, value]) => sum + value, 0))\n        : '0';\n\n    const totalTransactions =\n      transactionStats !== undefined\n        ? formatAbbreviatedNumber(\n            transactionStats.reduce((sum, [_, value]) => sum + value, 0)\n          )\n        : '0';\n    const zeroTransactions = totalTransactions === '0';\n    const hasFirstEvent = Boolean(project.firstEvent || project.firstTransactionEvent);\n\n    return (\n      <div data-test-id={slug}>\n        {stats ? (\n          <StyledProjectCard>\n            <CardHeader>\n              <HeaderRow>\n                <StyledIdBadge\n                  project={project}\n                  avatarSize={18}\n                  hideOverflow\n                  disableLink={!hasProjectAccess}\n                />\n                <BookmarkStar organization={organization} project={project} />\n              </HeaderRow>\n              <SummaryLinks>\n                <Link\n                  data-test-id=\"project-errors\"\n                  to={`/organizations/${organization.slug}/issues/?project=${project.id}`}\n                >\n                  {tn('%s error', '%s errors', totalErrors)}\n                </Link>\n                {this.hasPerformance && (\n                  <React.Fragment>\n                    <em>|</em>\n                    <TransactionsLink\n                      data-test-id=\"project-transactions\"\n                      to={`/organizations/${organization.slug}/performance/?project=${project.id}`}\n                    >\n                      {tn('%s transaction', '%s transactions', totalTransactions)}\n\n                      {zeroTransactions && (\n                        <QuestionTooltip\n                          title={t(\n                            'Click here to learn more about performance monitoring'\n                          )}\n                          position=\"top\"\n                          size=\"xs\"\n                        />\n                      )}\n                    </TransactionsLink>\n                  </React.Fragment>\n                )}\n              </SummaryLinks>\n            </CardHeader>\n            <ChartContainer>\n              <Chart\n                firstEvent={hasFirstEvent}\n                stats={stats}\n                transactionStats={transactionStats}\n              />\n            </ChartContainer>\n            <Deploys project={project} />\n          </StyledProjectCard>\n        ) : (\n          <LoadingCard />\n        )}\n      </div>\n    );\n  }\n}\n\ntype ContainerProps = {\n  api: Client;\n  project: Project;\n  organization: Organization;\n  hasProjectAccess: boolean;\n};\n\ntype ContainerState = {\n  projectDetails: Project | null;\n};\n\nclass ProjectCardContainer extends React.Component<ContainerProps, ContainerState> {\n  state = this.getInitialState();\n\n  getInitialState(): ContainerState {\n    const {project} = this.props;\n    const initialState = ProjectsStatsStore.getInitialState() || {};\n    return {\n      projectDetails: initialState[project.slug] || null,\n    };\n  }\n\n  componentWillUnmount() {\n    this.listeners.forEach(callIfFunction);\n  }\n\n  listeners = [\n    ProjectsStatsStore.listen(itemsBySlug => {\n      this.onProjectStoreUpdate(itemsBySlug);\n    }, undefined),\n  ];\n\n  onProjectStoreUpdate(itemsBySlug: typeof ProjectsStatsStore['itemsBySlug']) {\n    const {project} = this.props;\n\n    // Don't update state if we already have stats\n    if (!itemsBySlug[project.slug]) {\n      return;\n    }\n    if (itemsBySlug[project.slug] === this.state.projectDetails) {\n      return;\n    }\n\n    this.setState({\n      projectDetails: itemsBySlug[project.slug],\n    });\n  }\n\n  render() {\n    const {project, ...props} = this.props;\n    const {projectDetails} = this.state;\n    return (\n      <ProjectCard\n        {...props}\n        project={{\n          ...project,\n          ...(projectDetails || {}),\n        }}\n      />\n    );\n  }\n}\n\nconst ChartContainer = styled('div')`\n  position: relative;\n  background: ${p => p.theme.backgroundSecondary};\n`;\n\nconst CardHeader = styled('div')`\n  margin: ${space(1.5)} ${space(2)};\n`;\n\nconst HeaderRow = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledProjectCard = styled('div')`\n  background-color: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowLight};\n`;\n\nconst LoadingCard = styled('div')`\n  border: 1px solid transparent;\n  background-color: ${p => p.theme.backgroundSecondary};\n  height: 334px;\n`;\n\nconst StyledIdBadge = styled(IdBadge)`\n  overflow: hidden;\n  white-space: nowrap;\n  flex-shrink: 1;\n`;\n\nconst SummaryLinks = styled('div')`\n  display: flex;\n  align-items: center;\n\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  /* Need to offset for the project icon and margin */\n  margin-left: 26px;\n\n  a {\n    color: ${p => p.theme.formText};\n    :hover {\n      color: ${p => p.theme.subText};\n    }\n  }\n  em {\n    font-style: normal;\n    margin: 0 ${space(0.5)};\n  }\n`;\n\nconst TransactionsLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  > span {\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport {ProjectCard};\nexport default withOrganization(withApi(ProjectCardContainer));\n","import React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AvatarList from 'app/components/avatar/avatarList';\nimport {Member} from 'app/types';\n\ntype Props = AsyncComponent['props'] & {\n  teamId: string;\n  orgId: string;\n};\n\ntype State = AsyncComponent['state'] & {\n  members?: Member[];\n};\n\nclass TeamMembers extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, teamId} = this.props;\n    return [['members', `/teams/${orgId}/${teamId}/members/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderBody(): React.ReactNode {\n    const {members} = this.state;\n    if (!members) {\n      return null;\n    }\n\n    const users = members.filter(({user}) => !!user).map(({user}) => user);\n    return <AvatarList users={users} />;\n  }\n}\n\nexport default TeamMembers;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport PageHeading from 'app/components/pageHeading';\nimport space from 'app/styles/space';\nimport {Project, Scope, Team} from 'app/types';\n\nimport ProjectCard from './projectCard';\nimport TeamMembers from './teamMembers';\n\ntype Props = {\n  team: Team;\n  orgId: string;\n  showBorder: boolean;\n  access: Set<Scope>;\n  title: React.ReactNode;\n  projects: Project[];\n};\n\nconst TeamSection = ({team, projects, title, showBorder, orgId, access}: Props) => {\n  const hasTeamAccess = access.has('team:read');\n  const hasProjectAccess = access.has('project:read');\n\n  return (\n    <TeamSectionWrapper data-test-id=\"team\" showBorder={showBorder}>\n      <TeamTitleBar>\n        <TeamName>{title}</TeamName>\n        {hasTeamAccess && team && <TeamMembers teamId={team.slug} orgId={orgId} />}\n      </TeamTitleBar>\n      <ProjectCards>\n        {projects.map(project => (\n          <ProjectCard\n            data-test-id={project.slug}\n            key={project.slug}\n            project={project}\n            hasProjectAccess={hasProjectAccess}\n          />\n        ))}\n      </ProjectCards>\n    </TeamSectionWrapper>\n  );\n};\n\nconst ProjectCards = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr);\n  grid-gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[2]}) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n`;\n\nconst TeamSectionWrapper = styled('div')<{showBorder: boolean}>`\n  border-bottom: ${p => (p.showBorder ? '1px solid ' + p.theme.border : 0)};\n  padding: 0 ${space(4)} ${space(4)};\n`;\n\nconst TeamTitleBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(3)} 0 ${space(2)};\n`;\n\nconst TeamName = styled(PageHeading)`\n  font-size: 20px;\n  line-height: 24px; /* We need this so that header doesn't flicker when lazy loading because avatarList height > this */\n`;\n\nexport default TeamSection;\n","import React from 'react';\nimport LazyLoad from 'react-lazyload';\nimport {Link, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport flatten from 'lodash/flatten';\nimport uniqBy from 'lodash/uniqBy';\n\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport PageHeading from 'app/components/pageHeading';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport ProjectsStatsStore from 'app/stores/projectsStatsStore';\nimport space from 'app/styles/space';\nimport {Organization, TeamWithProjects} from 'app/types';\nimport {sortProjects} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeamsForUser from 'app/utils/withTeamsForUser';\n\nimport Resources from './resources';\nimport TeamSection from './teamSection';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  teams: TeamWithProjects[];\n  loadingTeams: boolean;\n  error: Error | null;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nclass Dashboard extends React.Component<Props> {\n  componentWillUnmount() {\n    ProjectsStatsStore.reset();\n  }\n\n  render() {\n    const {teams, params, organization, loadingTeams, error} = this.props;\n\n    if (loadingTeams) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError message=\"An error occurred while fetching your projects\" />;\n    }\n\n    const filteredTeams = teams.filter(team => team.projects.length);\n    filteredTeams.sort((team1, team2) => team1.slug.localeCompare(team2.slug));\n\n    const projects = uniqBy(flatten(teams.map(teamObj => teamObj.projects)), 'id');\n    const favorites = projects.filter(project => project.isBookmarked);\n\n    const access = new Set(organization.access);\n    const canCreateProjects = access.has('project:admin');\n    const hasTeamAdminAccess = access.has('team:admin');\n\n    const showEmptyMessage = projects.length === 0 && favorites.length === 0;\n    const showResources = projects.length === 1 && !projects[0].firstEvent;\n\n    if (showEmptyMessage) {\n      return (\n        <NoProjectMessage\n          organization={organization}\n          projects={projects}\n          superuserNeedsToBeProjectMember\n        >\n          {null}\n        </NoProjectMessage>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle\n          title={t('Projects Dashboard')}\n          orgSlug={organization.slug}\n        />\n        {projects.length > 0 && (\n          <ProjectsHeader>\n            <PageHeading>Projects</PageHeading>\n            <Button\n              size=\"small\"\n              disabled={!canCreateProjects}\n              title={\n                !canCreateProjects\n                  ? t('You do not have permission to create projects')\n                  : undefined\n              }\n              to={`/organizations/${organization.slug}/projects/new/`}\n              icon={<IconAdd size=\"xs\" isCircled />}\n              data-test-id=\"create-project\"\n            >\n              {t('Create Project')}\n            </Button>\n          </ProjectsHeader>\n        )}\n\n        {filteredTeams.map((team, index) => {\n          const showBorder = index !== teams.length - 1;\n          return (\n            <LazyLoad key={team.slug} once debounce={50} height={300} offset={300}>\n              <TeamSection\n                orgId={params.orgId}\n                team={team}\n                showBorder={showBorder}\n                title={\n                  hasTeamAdminAccess ? (\n                    <TeamLink to={`/settings/${organization.slug}/teams/${team.slug}/`}>\n                      <IdBadge team={team} avatarSize={22} />\n                    </TeamLink>\n                  ) : (\n                    <IdBadge team={team} avatarSize={22} />\n                  )\n                }\n                projects={sortProjects(team.projects)}\n                access={access}\n              />\n            </LazyLoad>\n          );\n        })}\n\n        {showResources && <Resources organization={organization} />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst OrganizationDashboard = (props: Props) => (\n  <OrganizationDashboardWrapper>\n    <Dashboard {...props} />\n  </OrganizationDashboardWrapper>\n);\n\nconst TeamLink = styled(Link)`\n  display: flex;\n  align-items: center;\n`;\n\nconst ProjectsHeader = styled('div')`\n  padding: ${space(3)} ${space(4)} 0 ${space(4)};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst OrganizationDashboardWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport {Dashboard};\nexport default withApi(\n  withOrganization(withTeamsForUser(withProfiler(OrganizationDashboard)))\n);\n","import React from 'react';\n\nimport {Client} from 'app/api';\nimport ConfigStore from 'app/stores/configStore';\nimport {Organization, Project, Team, TeamWithProjects} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport getProjectsByTeams from 'app/utils/getProjectsByTeams';\n\nimport {metric} from './analytics';\n\n// We require these props when using this HOC\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedTeamsProps = {\n  teams: TeamWithProjects[];\n  loadingTeams: boolean;\n  error: Error | null;\n};\n\nconst withTeamsForUser = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends React.Component<\n    Omit<P, keyof InjectedTeamsProps> & Partial<InjectedTeamsProps> & DependentProps,\n    InjectedTeamsProps\n  > {\n    static displayName = `withUsersTeams(${getDisplayName(WrappedComponent)})`;\n\n    state = {\n      teams: [],\n      loadingTeams: true,\n      error: null,\n    };\n\n    componentDidMount() {\n      this.fetchTeams();\n    }\n\n    async fetchTeams() {\n      this.setState({\n        loadingTeams: true,\n      });\n\n      try {\n        metric.mark({name: 'user-teams-fetch-start'});\n        const teamsWithProjects: TeamWithProjects[] = await this.props.api.requestPromise(\n          this.getUsersTeamsEndpoint()\n        );\n        this.setState(\n          {\n            teams: teamsWithProjects,\n            loadingTeams: false,\n          },\n          () => {\n            metric.measure({\n              name: 'app.component.perf',\n              start: 'user-teams-fetch-start',\n              data: {\n                name: 'user-teams',\n                route: '/organizations/:orgid/user-teams',\n                organization_id: parseInt(this.props.organization.id, 10),\n              },\n            });\n          }\n        );\n      } catch (error) {\n        this.setState({\n          error,\n          loadingTeams: false,\n        });\n      }\n    }\n\n    populateTeamsWithProjects(teams: Team[], projects: Project[]) {\n      const {isSuperuser} = ConfigStore.get('user');\n      const {projectsByTeam} = getProjectsByTeams(teams, projects, isSuperuser);\n      const teamsWithProjects: TeamWithProjects[] = teams.map(team => {\n        const teamProjects = projectsByTeam[team.slug] || [];\n        return {...team, projects: teamProjects};\n      });\n      this.setState({\n        teams: teamsWithProjects,\n        loadingTeams: false,\n      });\n    }\n\n    getUsersTeamsEndpoint() {\n      return `/organizations/${this.props.organization.slug}/user-teams/`;\n    }\n\n    render() {\n      return <WrappedComponent {...(this.props as P & DependentProps)} {...this.state} />;\n    }\n  };\n\nexport default withTeamsForUser;\n","import {Project, Team} from 'app/types';\n\nexport default function getProjectsByTeams(\n  teams: Team[],\n  projects: Project[],\n  isSuperuser: boolean = false\n): {projectsByTeam: {[teamSlug: string]: Project[]}; teamlessProjects: Project[]} {\n  const projectsByTeam = {};\n  const teamlessProjects: Project[] = [];\n  let usersTeams = new Set(teams.filter(team => team.isMember).map(team => team.slug));\n\n  if (usersTeams.size === 0 && isSuperuser) {\n    usersTeams = new Set(teams.map(team => team.slug));\n  }\n\n  projects.forEach(project => {\n    if (!project.teams.length && project.isMember) {\n      teamlessProjects.push(project);\n    } else {\n      project.teams.forEach(team => {\n        if (!usersTeams.has(team.slug)) {\n          return;\n        }\n        if (!projectsByTeam.hasOwnProperty(team.slug)) {\n          projectsByTeam[team.slug] = [];\n        }\n        projectsByTeam[team.slug].push(project);\n      });\n    }\n  });\n\n  return {projectsByTeam, teamlessProjects};\n}\n","module.exports = __webpack_public_path__ + \"spot/breadcrumbs-generic.d27a0c.svg\";","module.exports = __webpack_public_path__ + \"spot/code-arguments-tags-mirrored.ad554f.svg\";","module.exports = __webpack_public_path__ + \"spot/releases.70c2a2.svg\";"],"sourceRoot":""}