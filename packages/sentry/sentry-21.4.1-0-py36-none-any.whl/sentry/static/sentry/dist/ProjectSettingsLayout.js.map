{"version":3,"sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/projects/missingProjectMembership.tsx","webpack:///./app/views/settings/components/settingsNavItem.tsx","webpack:///./app/views/settings/components/settingsNavigationGroup.tsx","webpack:///./app/views/settings/components/settingsNavigation.tsx","webpack:///./app/views/projects/projectContext.tsx","webpack:///./app/views/settings/project/projectSettingsNavigation.tsx","webpack:///./app/views/settings/project/projectSettingsLayout.tsx"],"names":["doCallback","params","name","args","callIfFunction","fetchTeamDetails","api","options","TeamActions","teamId","request","orgId","success","data","error","updateTeamSuccess","updateTeam","endpoint","method","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","addSuccessMessage","tct","slug","organization","err","addErrorMessage","removeTeam","MissingProjectMembership","props","teamObj","value","setState","label","DisabledLabel","t","projectSlug","project","projects","find","p","state","loading","teamSlug","this","features","TeamStore","has","busy","isPending","disabled","priority","type","onClick","bind","pending","teams","forEach","push","Set","teamAccess","getTeamsForAccess","map","getPendingTeamOption","StyledPanel","length","icon","size","title","description","action","Field","StyledSelectControl","placeholder","onChange","handleChangeTeam","renderJoinTeam","React","Panel","space","SelectControl","withApi","SettingsNavItem","badge","index","LabelHook","HookOrDefault","hookName","defaultComponent","children","renderedBadge","text","StyledNavItem","onlyActiveOnIndex","activeClassName","Link","theme","gray300","textColor","active","backgroundSecondary","SettingsNavigationGroup","items","NavSection","data-test-id","SettingsHeading","path","show","recordAnalytics","badgeResult","to","replaceRouterParams","projectId","key","window","location","pathname","trackAnalyticsEvent","organization_id","project_id","eventName","eventKey","sidebar_item_id","dest","subText","SettingsNavigation","errorInfo","Sentry","scope","Object","keys","setExtra","href","navigationObjects","hooks","hookConfigs","stickyTop","otherProps","navWithHooks","concat","PositionStickyWrapper","config","Hook","i","breakpoints","ErrorTypes","ProjectContext","createReactClass","displayName","childContextTypes","SentryTypes","mixins","Reflux","MemberListStore","ProjectsStore","getInitialState","errorType","memberList","getChildContext","componentWillMount","fetchData","componentWillReceiveProps","nextProps","skipReload","remountComponent","componentDidUpdate","prevProps","prevState","docTitle","docTitleRef","forceUpdate","getTitle","onProjectChange","projectIds","identifyProject","activeProject","hasAccess","setActiveProject","projectRequest","UNKNOWN","fetchOrgMembers","isMember","MISSING_MEMBERSHIP","PROJECT_NOT_FOUND","renderBody","className","style","margin","ErrorWrapper","onRetry","render","ref","withOrganization","withProjects","ProjectSettingsNavigation","getConfiguration","access","withProject","ProjectSettingsLayout","renderNavigation"],"mappings":"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","file":"ProjectSettingsLayout.693eb2790569dd273fe7.js","sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {Panel} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype SelectOption = Record<'value' | 'label', string>;\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  projectSlug?: string;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  project?: Project;\n  team: string | null;\n};\n\nclass MissingProjectMembership extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const {organization, projectSlug} = this.props;\n    const project = organization.projects?.find(p => p.slug === projectSlug);\n\n    this.state = {\n      loading: false,\n      error: false,\n      project,\n      team: '',\n    };\n  }\n\n  joinTeam(teamSlug: string) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: teamSlug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(t('Request to join team sent.'));\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(t('There was an error while trying to request access.'));\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(teamSlug: string, features: Set<string>) {\n    const team = TeamStore.getBySlug(teamSlug);\n\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      if (features.has('open-membership')) {\n        return <Button busy>{t('Join Team')}</Button>;\n      }\n      return <Button busy>{t('Request Access')}</Button>;\n    } else if (team?.isPending) {\n      return <Button disabled>{t('Request Pending')}</Button>;\n    } else if (features.has('open-membership')) {\n      return (\n        <Button\n          priority=\"primary\"\n          type=\"button\"\n          onClick={this.joinTeam.bind(this, teamSlug)}\n        >\n          {t('Join Team')}\n        </Button>\n      );\n    }\n    return (\n      <Button\n        priority=\"primary\"\n        type=\"button\"\n        onClick={this.joinTeam.bind(this, teamSlug)}\n      >\n        {t('Request Access')}\n      </Button>\n    );\n  }\n\n  getTeamsForAccess() {\n    const request: string[] = [];\n    const pending: string[] = [];\n    const teams = this.state.project?.teams ?? [];\n    teams.forEach(({slug}) => {\n      const team = TeamStore.getBySlug(slug);\n      if (!team) {\n        return;\n      }\n      team.isPending ? pending.push(team.slug) : request.push(team.slug);\n    });\n\n    return [request, pending];\n  }\n\n  handleChangeTeam = (teamObj: SelectOption | null) => {\n    const team = teamObj ? teamObj.value : null;\n    this.setState({team});\n  };\n\n  getPendingTeamOption = (team: string) => {\n    return {\n      value: team,\n      label: <DisabledLabel>{t(`#${team}`)}</DisabledLabel>,\n    };\n  };\n\n  render() {\n    const {organization} = this.props;\n    const teamSlug = this.state.team;\n    const teams = this.state.project?.teams ?? [];\n    const features = new Set(organization.features);\n\n    const teamAccess = [\n      {\n        label: t('Request Access'),\n        options: this.getTeamsForAccess()[0].map(request => ({\n          value: request,\n          label: t(`#${request}`),\n        })),\n      },\n      {\n        label: t('Pending Requests'),\n        options: this.getTeamsForAccess()[1].map(pending =>\n          this.getPendingTeamOption(pending)\n        ),\n      },\n    ];\n\n    return (\n      <StyledPanel>\n        {!teams.length ? (\n          <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n            {t(\n              'No teams have access to this project yet. Ask an admin to add your team to this project.'\n            )}\n          </EmptyMessage>\n        ) : (\n          <EmptyMessage\n            icon={<IconFlag size=\"xl\" />}\n            title={t(\"You're not a member of this project.\")}\n            description={t(\n              `You'll need to join a team with access before you can view this data.`\n            )}\n            action={\n              <Field>\n                <StyledSelectControl\n                  name=\"select\"\n                  placeholder={t('Select a Team')}\n                  options={teamAccess}\n                  onChange={this.handleChangeTeam}\n                />\n                {teamSlug ? (\n                  this.renderJoinTeam(teamSlug, features)\n                ) : (\n                  <Button disabled>{t('Select a Team')}</Button>\n                )}\n              </Field>\n            }\n          />\n        )}\n      </StyledPanel>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  margin: ${space(2)} 0;\n`;\n\nconst Field = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  text-align: left;\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 250px;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden;\n`;\n\nexport {MissingProjectMembership};\n\nexport default withApi(MissingProjectMembership);\n","import React from 'react';\nimport {Link} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Badge from 'app/components/badge';\nimport FeatureBadge from 'app/components/featureBadge';\nimport HookOrDefault from 'app/components/hookOrDefault';\n\ntype Props = {\n  to: React.ComponentProps<Link>['to'];\n  label: React.ReactNode;\n  badge?: string | number | null;\n  index?: boolean;\n  id?: string;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\nconst SettingsNavItem = ({badge, label, index, id, ...props}: Props) => {\n  const LabelHook = HookOrDefault({\n    hookName: 'sidebar:item-label',\n    defaultComponent: ({children}) => <React.Fragment>{children}</React.Fragment>,\n  });\n\n  const renderedBadge =\n    badge === 'new' ? <FeatureBadge type=\"new\" /> : <Badge text={badge} />;\n\n  return (\n    <StyledNavItem onlyActiveOnIndex={index} activeClassName=\"active\" {...props}>\n      <LabelHook id={id}>{label}</LabelHook>\n\n      {badge ? renderedBadge : null}\n    </StyledNavItem>\n  );\n};\n\nconst StyledNavItem = styled(Link)`\n  display: block;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  line-height: 30px;\n  position: relative;\n\n  &.active {\n    color: ${p => p.theme.textColor};\n\n    &:before {\n      background: ${p => p.theme.active};\n    }\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n    outline: none;\n  }\n\n  &.focus-visible {\n    outline: none;\n    background: ${p => p.theme.backgroundSecondary};\n    padding-left: 15px;\n    margin-left: -15px;\n    border-radius: 3px;\n\n    &:before {\n      left: -15px;\n    }\n  }\n\n  &:before {\n    position: absolute;\n    content: '';\n    display: block;\n    top: 4px;\n    left: -30px;\n    height: 20px;\n    width: 4px;\n    background: transparent;\n    border-radius: 0 2px 2px 0;\n  }\n`;\n\nexport default SettingsNavItem;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {trackAnalyticsEvent} from 'app/utils/analytics';\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport SettingsNavItem from 'app/views/settings/components/settingsNavItem';\nimport {NavigationGroupProps} from 'app/views/settings/types';\n\nconst SettingsNavigationGroup = (props: NavigationGroupProps) => {\n  const {organization, project, name, items} = props;\n\n  return (\n    <NavSection data-test-id={name}>\n      <SettingsHeading>{name}</SettingsHeading>\n      {items.map(({path, title, index, show, badge, id, recordAnalytics}) => {\n        if (typeof show === 'function' && !show(props)) {\n          return null;\n        }\n        if (typeof show !== 'undefined' && !show) {\n          return null;\n        }\n        const badgeResult = typeof badge === 'function' ? badge(props) : null;\n        const to = replaceRouterParams(path, {\n          ...(organization ? {orgId: organization.slug} : {}),\n          ...(project ? {projectId: project.slug} : {}),\n        });\n\n        const handleClick = () => {\n          //only call the analytics event if the URL is changing\n          if (recordAnalytics && to !== window.location.pathname) {\n            trackAnalyticsEvent({\n              organization_id: organization && organization.id,\n              project_id: project && project.id,\n              eventName: 'Sidebar Item Clicked',\n              eventKey: 'sidebar.item_clicked',\n              sidebar_item_id: id,\n              dest: path,\n            });\n          }\n        };\n\n        return (\n          <SettingsNavItem\n            key={title}\n            to={to}\n            label={title}\n            index={index}\n            badge={badgeResult}\n            id={id}\n            onClick={handleClick}\n          />\n        );\n      })}\n    </NavSection>\n  );\n};\n\nconst NavSection = styled('div')`\n  margin-bottom: 20px;\n`;\n\nconst SettingsHeading = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n`;\n\nexport default SettingsNavigationGroup;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport space from 'app/styles/space';\nimport SettingsNavigationGroup from 'app/views/settings/components/settingsNavigationGroup';\nimport {NavigationProps, NavigationSection} from 'app/views/settings/types';\n\ntype DefaultProps = {\n  /**\n   * Additional navigation configuration driven by hooks\n   */\n  hookConfigs: NavigationSection[];\n  /**\n   * Additional navigation elements driven from hooks\n   */\n  hooks: React.ReactElement[];\n  /**\n   * How far from the top of the page should the navigation be when stickied.\n   */\n  stickyTop: string;\n};\n\ntype Props = DefaultProps &\n  NavigationProps & {\n    /**\n     * The configuration for this navigation panel\n     */\n    navigationObjects: NavigationSection[];\n  };\n\nclass SettingsNavigation extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    hooks: [],\n    hookConfigs: [],\n    stickyTop: '69px',\n  };\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    Sentry.withScope(scope => {\n      Object.keys(errorInfo).forEach(key => {\n        scope.setExtra(key, errorInfo[key]);\n      });\n      scope.setExtra('url', window.location.href);\n      Sentry.captureException(error);\n    });\n  }\n\n  render() {\n    const {navigationObjects, hooks, hookConfigs, stickyTop, ...otherProps} = this.props;\n    const navWithHooks = navigationObjects.concat(hookConfigs);\n\n    return (\n      <PositionStickyWrapper stickyTop={stickyTop}>\n        {navWithHooks.map(config => (\n          <SettingsNavigationGroup key={config.name} {...otherProps} {...config} />\n        ))}\n        {hooks.map((Hook, i) => React.cloneElement(Hook, {key: `hook-${i}`}))}\n      </PositionStickyWrapper>\n    );\n  }\n}\n\nconst PositionStickyWrapper = styled('div')<{stickyTop: string}>`\n  padding: ${space(4)};\n  padding-right: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    position: sticky;\n    top: ${p => p.stickyTop};\n    overflow: scroll;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n`;\n\nexport default SettingsNavigation;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\nimport styled from '@emotion/styled';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport {fetchOrgMembers} from 'app/actionCreators/members';\nimport {setActiveProject} from 'app/actionCreators/projects';\nimport {Client} from 'app/api';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport MissingProjectMembership from 'app/components/projects/missingProjectMembership';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport MemberListStore from 'app/stores/memberListStore';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport space from 'app/styles/space';\nimport {Member, Organization, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProjects from 'app/utils/withProjects';\n\nenum ErrorTypes {\n  MISSING_MEMBERSHIP = 'MISSING_MEMBERSHIP',\n  PROJECT_NOT_FOUND = 'PROJECT_NOT_FOUND',\n  UNKNOWN = 'UNKNOWN',\n}\n\ntype Props = {\n  api: Client;\n  /**\n   * If true, this will not change `state.loading` during `fetchData` phase\n   */\n  skipReload?: boolean;\n  organization: Organization;\n  projects: Project[];\n  projectId: string;\n  orgId: string;\n};\n\ntype State = {\n  memberList: Member[];\n  project: Project | null;\n  loading: boolean;\n  error: boolean;\n  errorType: ErrorTypes | null;\n};\n\n/**\n * Higher-order component that sets `project` as a child context\n * value to be accessed by child elements.\n *\n * Additionally delays rendering of children until project XHR has finished\n * and context is populated.\n */\nconst ProjectContext = createReactClass<Props, State>({\n  displayName: 'ProjectContext',\n\n  childContextTypes: {\n    project: SentryTypes.Project,\n  },\n\n  mixins: [\n    Reflux.connect(MemberListStore, 'memberList') as any,\n    Reflux.listenTo(ProjectsStore, 'onProjectChange') as any,\n  ],\n\n  getInitialState() {\n    return {\n      loading: true,\n      error: false,\n      errorType: null,\n      memberList: [],\n      project: null,\n    };\n  },\n\n  getChildContext() {\n    return {\n      project: this.state.project,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.projectId === this.props.projectId) {\n      return;\n    }\n\n    if (!nextProps.skipReload) {\n      this.remountComponent();\n    }\n  },\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.projectId !== this.props.projectId) {\n      this.fetchData();\n    }\n\n    // Project list has changed. Likely indicating that a new project has been\n    // added. Re-fetch project details in case that the new project is the active\n    // project.\n    //\n    // For now, only compare lengths. It is possible that project slugs within\n    // the list could change, but it doesn't seem to be broken anywhere else at\n    // the moment that would require deeper checks.\n    if (prevProps.projects.length !== this.props.projects.length) {\n      this.fetchData();\n    }\n\n    // Call forceUpdate() on <DocumentTitle/> if either project or organization\n    // state has changed. This is because <DocumentTitle/>'s shouldComponentUpdate()\n    // returns false unless props differ; meaning context changes for project/org\n    // do NOT trigger renders for <DocumentTitle/> OR any subchildren. The end result\n    // being that child elements that listen for context changes on project/org will\n    // NOT update (without this hack).\n    // See: https://github.com/gaearon/react-document-title/issues/35\n\n    // intentionally shallow comparing references\n    if (prevState.project !== this.state.project) {\n      if (!this.docTitle) {\n        return;\n      }\n      const docTitle = this.docTitleRef.docTitle;\n      if (docTitle) {\n        docTitle.forceUpdate();\n      }\n    }\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState!());\n  },\n\n  getTitle() {\n    return this.state.project?.slug ?? 'Sentry';\n  },\n\n  onProjectChange(projectIds: Set<string>) {\n    if (!this.state.project) {\n      return;\n    }\n    if (!projectIds.has(this.state.project.id)) {\n      return;\n    }\n\n    this.setState({\n      project: {...ProjectsStore.getById(this.state.project.id)},\n    });\n  },\n\n  identifyProject() {\n    const {projects, projectId} = this.props;\n    const projectSlug = projectId;\n    return projects.find(({slug}) => slug === projectSlug) || null;\n  },\n\n  async fetchData() {\n    const {orgId, projectId, skipReload} = this.props;\n    // we fetch core access/information from the global organization data\n    const activeProject = this.identifyProject();\n    const hasAccess = activeProject && activeProject.hasAccess;\n\n    this.setState((state: State) => ({\n      // if `skipReload` is true, then don't change loading state\n      loading: skipReload ? state.loading : true,\n      // we bind project initially, but it'll rebind\n      project: activeProject,\n    }));\n\n    if (activeProject && hasAccess) {\n      setActiveProject(null);\n      const projectRequest = this.props.api.requestPromise(\n        `/projects/${orgId}/${projectId}/`\n      );\n\n      try {\n        const project = await projectRequest;\n        this.setState({\n          loading: false,\n          project,\n          error: false,\n          errorType: null,\n        });\n\n        // assuming here that this means the project is considered the active project\n        setActiveProject(project);\n      } catch (error) {\n        this.setState({\n          loading: false,\n          error: false,\n          errorType: ErrorTypes.UNKNOWN,\n        });\n      }\n\n      fetchOrgMembers(this.props.api, orgId, activeProject.id);\n\n      return;\n    }\n\n    // User is not a memberof the active project\n    if (activeProject && !activeProject.isMember) {\n      this.setState({\n        loading: false,\n        error: true,\n        errorType: ErrorTypes.MISSING_MEMBERSHIP,\n      });\n\n      return;\n    }\n\n    // There is no active project. This likely indicates either the project\n    // *does not exist* or the project has not yet been added to the store.\n    // Either way, make a request to check for existence of the project.\n    try {\n      await this.props.api.requestPromise(`/projects/${orgId}/${projectId}/`);\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: true,\n        errorType: ErrorTypes.PROJECT_NOT_FOUND,\n      });\n    }\n  },\n\n  renderBody() {\n    if (this.state.loading) {\n      return (\n        <div className=\"loading-full-layout\">\n          <LoadingIndicator />\n        </div>\n      );\n    }\n\n    if (!this.state.error) {\n      return this.props.children;\n    }\n\n    switch (this.state.errorType) {\n      case ErrorTypes.PROJECT_NOT_FOUND:\n        // TODO(chrissy): use scale for margin values\n        return (\n          <div className=\"container\">\n            <div className=\"alert alert-block\" style={{margin: '30px 0 10px'}}>\n              {t('The project you were looking for was not found.')}\n            </div>\n          </div>\n        );\n      case ErrorTypes.MISSING_MEMBERSHIP:\n        // TODO(dcramer): add various controls to improve this flow and break it\n        // out into a reusable missing access error component\n        return (\n          <ErrorWrapper>\n            <MissingProjectMembership\n              organization={this.props.organization}\n              projectSlug={this.state.project.slug}\n            />\n          </ErrorWrapper>\n        );\n      default:\n        return <LoadingError onRetry={this.remountComponent} />;\n    }\n  },\n\n  render() {\n    return (\n      <DocumentTitle ref={ref => (this.docTitleRef = ref)} title={this.getTitle()}>\n        {this.renderBody()}\n      </DocumentTitle>\n    );\n  },\n});\n\nexport {ProjectContext};\n\nexport default withApi(withOrganization(withProjects(ProjectContext)));\n\nconst ErrorWrapper = styled('div')`\n  width: 100%;\n  margin: ${space(2)} ${space(4)};\n`;\n","import React from 'react';\n\nimport {Organization, Project} from 'app/types';\nimport withProject from 'app/utils/withProject';\nimport SettingsNavigation from 'app/views/settings/components/settingsNavigation';\nimport getConfiguration from 'app/views/settings/project/navigationConfiguration';\n\ntype Props = {\n  organization: Organization;\n  project?: Project;\n};\n\nconst ProjectSettingsNavigation = ({organization, project}: Props) => (\n  <SettingsNavigation\n    navigationObjects={getConfiguration({project, organization})}\n    access={new Set(organization.access)}\n    features={new Set(organization.features)}\n    organization={organization}\n    project={project}\n  />\n);\n\nexport default withProject(ProjectSettingsNavigation);\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\nimport ProjectContext from 'app/views/projects/projectContext';\nimport SettingsLayout from 'app/views/settings/components/settingsLayout';\nimport ProjectSettingsNavigation from 'app/views/settings/project/projectSettingsNavigation';\n\ntype Props = {\n  organization: Organization;\n  children: React.ReactNode;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\nfunction ProjectSettingsLayout({params, organization, children, ...props}: Props) {\n  const {orgId, projectId} = params;\n\n  return (\n    <ProjectContext orgId={orgId} projectId={projectId}>\n      <SettingsLayout\n        params={params}\n        {...props}\n        renderNavigation={() => <ProjectSettingsNavigation organization={organization} />}\n      >\n        {children && React.isValidElement(children)\n          ? React.cloneElement(children, {\n              organization,\n            })\n          : children}\n      </SettingsLayout>\n    </ProjectContext>\n  );\n}\n\nexport default withOrganization(ProjectSettingsLayout);\n"],"sourceRoot":""}