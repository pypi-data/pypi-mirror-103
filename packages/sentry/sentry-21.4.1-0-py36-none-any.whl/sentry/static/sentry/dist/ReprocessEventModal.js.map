{"version":3,"sources":["webpack:///./app/components/modals/reprocessEventModal.tsx","webpack:///./app/components/radio.tsx","webpack:///./app/views/settings/components/forms/controls/radioGroup.tsx","webpack:///./app/views/settings/components/forms/form.tsx","webpack:///./app/views/settings/components/forms/numberField.tsx","webpack:///./app/views/settings/components/forms/radioField.tsx"],"names":["impacts","tct","strong","link","href","t","remainingEventsChoices","ReprocessingEventModal","maxEvents","undefined","closeModal","props","window","location","reload","setState","Number","addErrorMessage","this","organization","Header","Body","groupId","state","orgSlug","slug","endpoint","title","closeButton","data-test-id","Introduction","StyledList","symbol","map","impact","index","key","submitLabel","apiEndpoint","apiMethod","initialData","remainingEvents","onSubmitSuccess","handleSuccess","onSubmitError","handleError","onCancel","footerClass","name","label","help","placeholder","onChange","handleMaxEventsChange","min","orientInline","choices","disabled","React","p","theme","fontSizeLarge","List","space","fontSizeMedium","checkedCss","css","radioSize","active","growIn","Radio","border","defaultProps","type","RadioGroup","value","Container","role","aria-labelledby","id","description","RadioLineItem","aria-checked","aria-label","checked","e","RadioLineText","Description","shouldForwardProp","includes","isPropValid","gray300","fontSizeRelativeSmall","Form","context","model","FormModel","skipPreventDefault","preventDefault","isSaving","onPreSubmit","onSubmit","getData","saveForm","data","submitSuccess","error","submitError","saveOnBlur","resetOnError","onFieldChange","allowUndo","setInitialData","setFormOptions","form","reset","className","children","footerStyle","submitDisabled","submitPriority","cancelLabel","extraButton","requireChanges","hideFooter","shouldShowFooter","isRenderFunc","StyledFooter","style","DefaultButtons","onClick","marginLeft","priority","isError","formChanged","PropTypes","Panel","NumberField","RadioField","onBlur","field"],"mappings":"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","file":"ReprocessEventModal.7cb299eed06b7173eda4.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {ModalRenderProps} from 'app/actionCreators/modal';\nimport ExternalLink from 'app/components/links/externalLink';\nimport List from 'app/components/list';\nimport ListItem from 'app/components/list/listItem';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Group, Organization} from 'app/types';\nimport Form from 'app/views/settings/components/forms/form';\nimport NumberField from 'app/views/settings/components/forms/numberField';\nimport RadioField from 'app/views/settings/components/forms/radioField';\n\nconst impacts = [\n  tct(\n    \"[strong:Quota applies.] Every event you choose to reprocess counts against your plan's quota. Rate limits and spike protection do not apply.\",\n    {strong: <strong />}\n  ),\n  tct(\n    '[strong:Attachment storage required.] If your events come from minidumps or unreal crash reports, you must have [link:attachment storage] enabled.',\n    {\n      strong: <strong />,\n      link: (\n        <ExternalLink href=\"https://docs.sentry.io/platforms/native/enriching-events/attachments/#crash-reports-and-privacy\" />\n      ),\n    }\n  ),\n  t(\n    'Please wait one hour after upload before attempting to reprocess missing debug files.'\n  ),\n];\n\nconst remainingEventsChoices: [string, string][] = [\n  ['keep', t('Keep')],\n  ['delete', t('Delete')],\n];\n\nexport type ReprocessEventModalOptions = {\n  groupId: Group['id'];\n  organization: Organization;\n};\n\ntype Props = ModalRenderProps & ReprocessEventModalOptions;\n\ntype State = {\n  maxEvents?: number;\n};\n\nclass ReprocessingEventModal extends React.Component<Props, State> {\n  state: State = {maxEvents: undefined};\n\n  handleSuccess = () => {\n    const {closeModal} = this.props;\n\n    closeModal();\n    window.location.reload();\n  };\n\n  handleError() {\n    addErrorMessage(t('Failed to reprocess. Please check your input.'));\n  }\n\n  handleMaxEventsChange = (maxEvents: string) => {\n    this.setState({maxEvents: Number(maxEvents) || undefined});\n  };\n\n  render() {\n    const {organization, Header, Body, closeModal, groupId} = this.props;\n    const {maxEvents} = this.state;\n    const orgSlug = organization.slug;\n    const endpoint = `/organizations/${orgSlug}/issues/${groupId}/reprocessing/`;\n    const title = t('Reprocess Events');\n\n    return (\n      <React.Fragment>\n        <Header closeButton>\n          <span data-test-id=\"modal-title\">{title}</span>\n        </Header>\n        <Body>\n          <Introduction>\n            {t(\n              'Reprocessing applies new debug files and grouping enhancements to this Issue. Please consider these impacts:'\n            )}\n          </Introduction>\n          <StyledList symbol=\"bullet\">\n            {impacts.map((impact, index) => (\n              <ListItem key={index}>{impact}</ListItem>\n            ))}\n          </StyledList>\n          <Introduction>\n            {tct('For more information, please refer to [link:the documentation.]', {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/reprocessing/\" />\n              ),\n            })}\n          </Introduction>\n          <Form\n            submitLabel={title}\n            apiEndpoint={endpoint}\n            apiMethod=\"POST\"\n            initialData={{maxEvents: undefined, remainingEvents: 'keep'}}\n            onSubmitSuccess={this.handleSuccess}\n            onSubmitError={this.handleError}\n            onCancel={closeModal}\n            footerClass=\"modal-footer\"\n          >\n            <NumberField\n              name=\"maxEvents\"\n              label={t('Number of events to be reprocessed')}\n              help={t('If you set a limit, we will reprocess your most recent events.')}\n              placeholder={t('Reprocess all events')}\n              onChange={this.handleMaxEventsChange}\n              min={1}\n            />\n\n            <RadioField\n              orientInline\n              label={t('Remaining events')}\n              help={t('What to do with the events that are not reprocessed.')}\n              name=\"remainingEvents\"\n              choices={remainingEventsChoices}\n              disabled={maxEvents === undefined}\n            />\n          </Form>\n        </Body>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReprocessingEventModal;\n\nconst Introduction = styled('p')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst StyledList = styled(List)`\n  grid-gap: ${space(1)};\n  margin-bottom: ${space(4)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n","import React from 'react';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {growIn} from 'app/styles/animations';\nimport {Theme} from 'app/utils/theme';\n\ntype Props = {radioSize?: 'small'};\n\ntype CheckedProps = React.HTMLProps<HTMLInputElement> & {\n  theme: Theme;\n} & Props;\n\nconst checkedCss = (p: CheckedProps) => css`\n  display: block;\n  width: ${p.radioSize === 'small' ? '8px' : '1rem'};\n  height: ${p.radioSize === 'small' ? '8px' : '1rem'};\n  border-radius: 50%;\n  background-color: ${p.theme.active};\n  animation: 0.2s ${growIn} ease;\n  opacity: ${p.disabled ? 0.4 : null};\n`;\n\nconst Radio = styled('input')<{radioSize?: 'small'}>`\n  display: flex;\n  padding: 0;\n  width: ${p => (p.radioSize === 'small' ? '16px' : '1.5em')};\n  height: ${p => (p.radioSize === 'small' ? '16px' : '1.5em')};\n  position: relative;\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  background: none;\n  appearance: none;\n\n  /* TODO(bootstrap): Our bootstrap CSS adds this, we can remove when we remove that */\n  margin: 0 !important;\n\n  &:focus,\n  &.focus-visible {\n    outline: none !important;\n    border: 1px solid ${p => p.theme.border};\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n\n  &:checked:after {\n    content: '';\n    ${checkedCss}\n  }\n`;\n\nRadio.defaultProps = {\n  type: 'radio',\n};\n\nexport default Radio;\n","import React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Radio from 'app/components/radio';\nimport space from 'app/styles/space';\n\ntype RadioGroupProps<C extends string> = {\n  label: string;\n  disabled?: boolean;\n  /**\n   * An array of [id, name, description]\n   */\n  choices: [C, React.ReactNode, React.ReactNode?][];\n  value: string | number | null;\n  onChange: (id: C, e: React.FormEvent<HTMLInputElement>) => void;\n  /**\n   * Switch the radio items to flow left to right, instead of vertically.\n   */\n  orientInline?: boolean;\n};\n\ntype Props<C extends string> = RadioGroupProps<C> &\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof RadioGroupProps<C>>;\n\nconst RadioGroup = <C extends string>({\n  value,\n  disabled,\n  choices,\n  label,\n  onChange,\n  orientInline,\n  ...props\n}: Props<C>) => (\n  <Container\n    orientInline={orientInline}\n    {...props}\n    role=\"radiogroup\"\n    aria-labelledby={label}\n  >\n    {(choices || []).map(([id, name, description], index) => (\n      <RadioLineItem\n        key={index}\n        role=\"radio\"\n        index={index}\n        aria-checked={value === id}\n        disabled={disabled}\n      >\n        <Radio\n          aria-label={id}\n          disabled={disabled}\n          checked={value === id}\n          onChange={(e: React.FormEvent<HTMLInputElement>) =>\n            !disabled && onChange(id, e)\n          }\n        />\n        <RadioLineText disabled={disabled}>{name}</RadioLineText>\n        {description && (\n          <React.Fragment>\n            {/* If there is a description then we want to have a 2x2 grid so the first column width aligns with Radio Button */}\n            <div />\n            <Description>{description}</Description>\n          </React.Fragment>\n        )}\n      </RadioLineItem>\n    ))}\n  </Container>\n);\n\nconst shouldForwardProp = p => !['disabled', 'animate'].includes(p) && isPropValid(p);\n\nexport const RadioLineItem = styled('label', {shouldForwardProp})<{\n  disabled?: boolean;\n  index: number;\n}>`\n  display: grid;\n  grid-gap: 0.25em 0.5em;\n  grid-template-columns: max-content auto;\n  align-items: center;\n  cursor: ${p => (p.disabled ? 'default' : 'pointer')};\n  outline: none;\n  font-weight: normal;\n  margin: 0;\n`;\n\nconst Container = styled('div')<{orientInline?: boolean}>`\n  display: grid;\n  grid-gap: ${p => space(p.orientInline ? 3 : 1)};\n  grid-auto-flow: ${p => (p.orientInline ? 'column' : 'row')};\n  grid-auto-rows: max-content;\n  grid-auto-columns: max-content;\n`;\n\nconst RadioLineText = styled('div', {shouldForwardProp})<{disabled?: boolean}>`\n  opacity: ${p => (p.disabled ? 0.4 : null)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4em;\n`;\n\nexport default RadioGroup;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {Observer} from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nimport {APIRequestMethod} from 'app/api';\nimport Button from 'app/components/button';\nimport Panel from 'app/components/panels/panel';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport FormModel, {FormOptions} from 'app/views/settings/components/forms/model';\n\ntype Data = Record<string, any>;\n\ntype RenderProps = {\n  model: FormModel;\n};\n\ntype RenderFunc = (props: RenderProps) => React.ReactNode;\n\ntype Props = {\n  apiMethod?: APIRequestMethod;\n  apiEndpoint?: string;\n  children?: React.ReactNode | RenderFunc;\n  className?: string;\n  cancelLabel?: string;\n  submitDisabled?: boolean;\n  submitLabel?: string;\n  submitPriority?: React.ComponentProps<typeof Button>['priority'];\n  footerClass?: string;\n  footerStyle?: React.CSSProperties;\n  extraButton?: React.ReactNode;\n  initialData?: Data;\n  // Require changes before able to submit form\n  requireChanges?: boolean;\n  // Reset form when there are errors; after submit\n  resetOnError?: boolean;\n  hideFooter?: boolean;\n  allowUndo?: boolean;\n  // Save field on control blur\n  saveOnBlur?: boolean;\n  model?: FormModel;\n  // if set to true, preventDefault is not called\n  skipPreventDefault?: boolean;\n  additionalFieldProps?: {[key: string]: any};\n  'data-test-id'?: string;\n\n  onCancel?: (e: React.MouseEvent) => void;\n  onSubmit?: (\n    data: Data,\n    onSubmitSuccess: (data: Data) => void,\n    onSubmitError: (error: any) => void,\n    e: React.FormEvent,\n    model: FormModel\n  ) => void;\n  onPreSubmit?: () => void;\n} & Pick<FormOptions, 'onSubmitSuccess' | 'onSubmitError' | 'onFieldChange'>;\n\ntype Context = {\n  saveOnBlur: boolean;\n  form: FormModel;\n};\n\nexport default class Form extends React.Component<Props> {\n  static childContextTypes = {\n    saveOnBlur: PropTypes.bool,\n    form: PropTypes.object,\n  };\n\n  constructor(props: Props, context: Context) {\n    super(props, context);\n    const {\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n      resetOnError,\n      onSubmitSuccess,\n      onSubmitError,\n      onFieldChange,\n      initialData,\n      allowUndo,\n    } = props;\n\n    this.model.setInitialData(initialData);\n    this.model.setFormOptions({\n      resetOnError,\n      allowUndo,\n      onFieldChange,\n      onSubmitSuccess,\n      onSubmitError,\n      saveOnBlur,\n      apiEndpoint,\n      apiMethod,\n    });\n  }\n\n  getChildContext() {\n    return {\n      saveOnBlur: this.props.saveOnBlur,\n      form: this.model,\n    };\n  }\n\n  componentWillUnmount() {\n    this.model.reset();\n  }\n\n  model: FormModel = this.props.model || new FormModel();\n\n  onSubmit = e => {\n    !this.props.skipPreventDefault && e.preventDefault();\n    if (this.model.isSaving) {\n      return;\n    }\n\n    this.props.onPreSubmit?.();\n\n    if (this.props.onSubmit) {\n      this.props.onSubmit(\n        this.model.getData(),\n        this.onSubmitSuccess,\n        this.onSubmitError,\n        e,\n        this.model\n      );\n    } else {\n      this.model.saveForm();\n    }\n  };\n\n  onSubmitSuccess = data => {\n    const {onSubmitSuccess} = this.props;\n    this.model.submitSuccess(data);\n\n    if (onSubmitSuccess) {\n      onSubmitSuccess(data, this.model);\n    }\n  };\n\n  onSubmitError = error => {\n    const {onSubmitError} = this.props;\n    this.model.submitError(error);\n\n    if (onSubmitError) {\n      onSubmitError(error, this.model);\n    }\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      footerClass,\n      footerStyle,\n      submitDisabled,\n      submitLabel,\n      submitPriority,\n      cancelLabel,\n      onCancel,\n      extraButton,\n      requireChanges,\n      saveOnBlur,\n      hideFooter,\n    } = this.props;\n    const shouldShowFooter =\n      typeof hideFooter !== 'undefined' ? !hideFooter : !saveOnBlur;\n\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className={className ?? 'form-stacked'}\n        data-test-id={this.props['data-test-id']}\n      >\n        <div>\n          {isRenderFunc<RenderFunc>(children) ? children({model: this.model}) : children}\n        </div>\n\n        {shouldShowFooter && (\n          <StyledFooter\n            className={footerClass}\n            style={footerStyle}\n            saveOnBlur={saveOnBlur}\n          >\n            {extraButton}\n            <DefaultButtons>\n              {onCancel && (\n                <Observer>\n                  {() => (\n                    <Button\n                      type=\"button\"\n                      disabled={this.model.isSaving}\n                      onClick={onCancel}\n                      style={{marginLeft: 5}}\n                    >\n                      {cancelLabel ?? t('Cancel')}\n                    </Button>\n                  )}\n                </Observer>\n              )}\n\n              <Observer>\n                {() => (\n                  <Button\n                    data-test-id=\"form-submit\"\n                    priority={submitPriority ?? 'primary'}\n                    disabled={\n                      this.model.isError ||\n                      this.model.isSaving ||\n                      submitDisabled ||\n                      (requireChanges ? !this.model.formChanged : false)\n                    }\n                    type=\"submit\"\n                  >\n                    {submitLabel ?? t('Save Changes')}\n                  </Button>\n                )}\n              </Observer>\n            </DefaultButtons>\n          </StyledFooter>\n        )}\n      </form>\n    );\n  }\n}\n\nconst StyledFooter = styled('div')<{saveOnBlur?: boolean}>`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 25px;\n  border-top: 1px solid #e9ebec;\n  background: none;\n  padding: 16px 0 0;\n  margin-bottom: 16px;\n\n  ${p =>\n    !p.saveOnBlur &&\n    `\n  ${Panel} & {\n    margin-top: 0;\n    padding-right: 36px;\n  }\n\n  /* Better padding with form inside of a modal */\n  .modal-content & {\n    padding-right: 30px;\n    margin-left: -30px;\n    margin-right: -30px;\n    margin-bottom: -30px;\n    margin-top: 16px;\n    padding-bottom: 16px;\n  }\n  `};\n`;\n\nconst DefaultButtons = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  flex: 1;\n`;\n","import React from 'react';\n\nimport InputField from './inputField';\n\ntype Props = InputField['props'];\n\nexport default function NumberField(props: Omit<Props, 'type'>) {\n  return <InputField {...props} type=\"number\" />;\n}\n","import React from 'react';\n\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\nimport InputField, {onEvent} from 'app/views/settings/components/forms/inputField';\n\ntype RadioGroupProps = React.ComponentProps<typeof RadioGroup>;\n\ntype Props = Omit<InputField['props'], 'type'> &\n  Pick<RadioGroupProps, 'choices' | 'orientInline'>;\n\nclass RadioField extends React.Component<Props> {\n  onChange = (\n    id: string,\n    onChange: onEvent,\n    onBlur: onEvent,\n    e: React.FormEvent<HTMLInputElement>\n  ) => {\n    onChange(id, e);\n    onBlur(id, e);\n  };\n\n  render() {\n    return (\n      <InputField\n        {...this.props}\n        field={({onChange, onBlur, value, disabled, orientInline, ...props}) => (\n          <RadioGroup\n            choices={props.choices}\n            disabled={disabled}\n            orientInline={orientInline}\n            value={value === '' ? null : value}\n            label={props.label}\n            onChange={(id, e) => this.onChange(id, onChange, onBlur, e)}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default RadioField;\n"],"sourceRoot":""}