{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/apiApplications/row.tsx","webpack:///./app/views/settings/account/apiApplications/index.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx"],"names":["AsyncView","title","this","getTitle","renderComponent","AsyncComponent","Row","loading","state","props","api","app","onRemove","setState","addLoadingMessage","requestPromise","id","method","clearIndicators","addErrorMessage","t","StyledPanelItem","ApplicationNameWrapper","ApplicationName","to","getDynamicText","value","name","fixed","ClientId","clientID","aria-label","onClick","handleRemove","disabled","icon","React","PanelItem","space","Link","p","theme","headerFontSize","gray200","fontSizeMedium","ROUTE_PREFIX","addSuccessMessage","router","push","appList","filter","a","action","priority","size","handleCreateApplication","isCircled","isEmpty","length","map","key","handleRemoveApplication","UnstyledSettingsPageHeader","subtitle","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","gray400","fontSizeLarge","SettingsPageHeader"],"mappings":"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","file":"ApiApplications.519f5ead117cd9289d3b.js","sourcesContent":["import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {ApiApplication} from 'app/types';\nimport getDynamicText from 'app/utils/getDynamicText';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = {\n  api: Client;\n  app: ApiApplication;\n  onRemove: (app: ApiApplication) => void;\n};\n\ntype State = {\n  loading: boolean;\n};\n\nclass Row extends React.Component<Props, State> {\n  state = {\n    loading: false,\n  };\n\n  handleRemove = () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {api, app, onRemove} = this.props;\n\n    this.setState(\n      {\n        loading: true,\n      },\n      async () => {\n        addLoadingMessage();\n\n        try {\n          await api.requestPromise(`/api-applications/${app.id}/`, {\n            method: 'DELETE',\n          });\n\n          clearIndicators();\n          onRemove(app);\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove application. Please try again.'));\n        }\n      }\n    );\n  };\n\n  render() {\n    const {app} = this.props;\n\n    return (\n      <StyledPanelItem>\n        <ApplicationNameWrapper>\n          <ApplicationName to={`${ROUTE_PREFIX}applications/${app.id}/`}>\n            {getDynamicText({value: app.name, fixed: 'CI_APPLICATION_NAME'})}\n          </ApplicationName>\n          <ClientId>\n            {getDynamicText({value: app.clientID, fixed: 'CI_CLIENT_ID'})}\n          </ClientId>\n        </ApplicationNameWrapper>\n\n        <Button\n          aria-label=\"Remove\"\n          onClick={this.handleRemove}\n          disabled={this.state.loading}\n          icon={<IconDelete />}\n        />\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst ApplicationNameWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst ApplicationName = styled(Link)`\n  font-size: ${p => p.theme.headerFontSize};\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n`;\n\nconst ClientId = styled('div')`\n  color: ${p => p.theme.gray200};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default Row;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport {ApiApplication} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport Row from 'app/views/settings/account/apiApplications/row';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = RouteComponentProps<{}, {}>;\ntype State = {\n  appList: ApiApplication[];\n} & AsyncView['state'];\n\nclass ApiApplications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['appList', '/api-applications/']];\n  }\n\n  getTitle() {\n    return t('API Applications');\n  }\n\n  handleCreateApplication = async () => {\n    addLoadingMessage();\n\n    try {\n      const app = await this.api.requestPromise('/api-applications/', {\n        method: 'POST',\n      });\n\n      addSuccessMessage(t('Created a new API Application'));\n      this.props.router.push(`${ROUTE_PREFIX}applications/${app.id}/`);\n    } catch (_err) {\n      addErrorMessage(t('Unable to remove application. Please try again.'));\n    }\n  };\n\n  handleRemoveApplication = (app: ApiApplication) => {\n    this.setState({\n      appList: this.state.appList.filter(a => a.id !== app.id),\n    });\n  };\n\n  renderBody() {\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        onClick={this.handleCreateApplication}\n        icon={<IconAdd size=\"xs\" isCircled />}\n      >\n        {t('Create New Application')}\n      </Button>\n    );\n\n    const isEmpty = this.state.appList.length === 0;\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"API Applications\" action={action} />\n\n        <Panel>\n          <PanelHeader>{t('Application Name')}</PanelHeader>\n\n          <PanelBody>\n            {!isEmpty ? (\n              this.state.appList.map(app => (\n                <Row\n                  api={this.api}\n                  key={app.id}\n                  app={app}\n                  onRemove={this.handleRemoveApplication}\n                />\n              ))\n            ) : (\n              <EmptyMessage>\n                {t(\"You haven't created any applications yet.\")}\n              </EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default ApiApplications;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n"],"sourceRoot":""}