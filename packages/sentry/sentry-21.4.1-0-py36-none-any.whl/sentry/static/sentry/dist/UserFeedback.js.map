{"version":3,"sources":["webpack:///./app/components/activity/author.tsx","webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/activity/item/bubble.tsx","webpack:///./app/components/activity/item/index.tsx","webpack:///./app/components/events/userFeedback.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/components/onboardingPanel.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/userFeedback/utils.tsx","webpack:///./app/views/userFeedback/index.tsx","webpack:///./app/views/userFeedback/userFeedbackEmpty.tsx","webpack:///./images/spot/feedback-empty-state.svg"],"names":["p","theme","fontSizeMedium","ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","textColor","background","IconSentry","backgroundColor","borderColor","border","borderRadius","ActivityItem","author","avatarSize","bubbleProps","children","date","interval","footer","id","header","hideDate","showTime","showDate","showRange","dateEnded","moment","add","utc","format","undefined","timeOnly","Boolean","ActivityItemWrapper","data-test-id","StyledActivityAvatar","StyledActivityBubble","isRenderFunc","ActivityHeader","ActivityHeaderContent","StyledTimeSince","StyledDateTime","StyledDateTimeWindow","timeAndDate","ActivityBody","ActivityFooter","space","HeaderAndFooter","textStyles","TimeSince","gray300","DateTime","ActivityBubble","EventUserFeedback","this","props","report","orgId","issueId","eventID","name","email","username","ip_address","dateCreated","value","Email","StyledIconCopy","ViewEventLink","to","getUrl","t","dangerouslySetInnerHTML","__html","nl2br","escape","comments","React","fontSizeSmall","Link","IconCopy","CompactIssueHeader","data","organization","projectId","eventId","basePath","slug","issueLink","commentColor","subscriptionDetails","reason","IssueHeaderMetaWrapper","StyledErrorLevel","level","title","IconLink","status","isBookmarked","isSolid","project","numComments","color","getMessage","CompactIssue","createReactClass","displayName","mixins","Reflux","GroupStore","getInitialState","issue","componentWillReceiveProps","nextProps","setState","onGroupChange","itemIds","has","onSnooze","duration","ignoreDuration","onUpdate","state","addLoadingMessage","bulkUpdate","api","complete","clearIndicators","render","hasSeen","statsPeriod","onClick","toggleSelect","flexDirection","style","paddingTop","paddingBottom","withApi","withOrganization","ErrorLevel","OnboardingPanel","image","Container","IlloBox","StyledBox","breakpoints","AsyncView","getTitle","renderComponent","AsyncComponent","getQuery","search","query","qs","pick","Object","values","URL_PARAM","OrganizationUserFeedback","location","Array","isArray","params","reportList","map","item","key","StyledEventUserFeedback","projectIds","renderBody","loading","length","renderResults","renderEmpty","pathname","reportListPageLinks","unresolvedQuery","omit","allIssuesQuery","Header","active","merged","barId","renderStreamBody","pageLinks","withProfiler","UserFeedbackEmpty","window","sentryEmbedCallback","embed","submit","_body","_submitInProgress","setTimeout","onSuccess","hasAnyFeedback","trackAdhocEvent","eventKey","org_id","parseInt","projects","filter","includes","selectedProjects","some","hasUserReports","eventName","trackAnalyticsEvent","organization_id","loadingProjects","src","emptyStateImg","ButtonList","gap","external","priority","trackAnalytics","href","platform","Sentry","ButtonBar","withProjects","module","exports"],"mappings":"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","file":"UserFeedback.24262e9acb045cdc9bbc.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nexport default ActivityAuthor;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Placeholder from 'app/components/placeholder';\nimport {IconSentry} from 'app/icons';\nimport {AvatarUser} from 'app/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  user?: AvatarUser;\n  className?: string;\n  size?: number;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import styled from '@emotion/styled';\n\ntype Props = {\n  backgroundColor?: string;\n  borderColor?: string;\n};\n\n/**\n * This creates a bordered box that has a left pointing arrow\n * on the left-side at the top.\n */\nconst ActivityBubble = styled('div')<Props>`\n  flex: 1;\n  background-color: ${p => p.backgroundColor || p.theme.background};\n  border: 1px solid ${p => p.borderColor || p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  position: relative;\n  width: 100%; /* this is used in Incidents Details - a chart can cause overflow and won't resize properly */\n\n  &:before {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border-top: 7px solid transparent;\n    border-bottom: 7px solid transparent;\n    border-right: 7px solid ${p => p.borderColor || p.theme.border};\n    position: absolute;\n    left: -7px;\n    top: 12px;\n  }\n\n  &:after {\n    display: block;\n    content: '';\n    width: 0;\n    height: 0;\n    border-top: 6px solid transparent;\n    border-bottom: 6px solid transparent;\n    border-right: 6px solid ${p => p.backgroundColor || p.theme.background};\n    position: absolute;\n    left: -6px;\n    top: 13px;\n  }\n`;\n\nexport default ActivityBubble;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport moment from 'moment-timezone';\n\nimport DateTime from 'app/components/dateTime';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\nimport textStyles from 'app/styles/text';\nimport {AvatarUser} from 'app/types';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\n\nimport ActivityAvatar from './avatar';\nimport ActivityBubble from './bubble';\n\nexport type ActivityAuthorType = 'user' | 'system';\n\ntype ChildFunction = () => React.ReactNode;\n\ntype Props = {\n  children?: React.ReactChild | ChildFunction;\n  className?: string;\n  /**\n   * This is used to uniquely identify the activity item for use as an anchor\n   */\n  id?: string;\n\n  /**\n   * If supplied, will show the time that the activity started\n   */\n  date?: string | Date;\n\n  /**\n   * If supplied, will show the interval that the activity occurred in\n   */\n  interval?: number;\n\n  /**\n   * Used to render an avatar for the author. Currently can be a user, otherwise\n   * defaults as a \"system\" avatar (i.e. sentry)\n   *\n   * `user` is required if `type` is \"user\"\n   */\n  author?: {\n    type: ActivityAuthorType;\n    user?: AvatarUser;\n  };\n\n  // Size of the avatar.\n  avatarSize?: number;\n\n  // Hides date in header\n  hideDate?: boolean;\n\n  // Instead of showing a relative time/date, show the time\n  showTime?: boolean;\n\n  /**\n   * Can be a react node or a render function. render function will not include default wrapper\n   */\n  header?: React.ReactNode | ChildFunction;\n\n  /**\n   * Can be a react node or a render function. render function will not include default wrapper\n   */\n  footer?: React.ReactNode | ChildFunction;\n\n  bubbleProps?: React.ComponentProps<typeof ActivityBubble>;\n};\n\nfunction ActivityItem({\n  author,\n  avatarSize,\n  bubbleProps,\n  className,\n  children,\n  date,\n  interval,\n  footer,\n  id,\n  header,\n  hideDate = false,\n  showTime = false,\n}: Props) {\n  const showDate = !hideDate && date && !interval;\n  const showRange = !hideDate && date && interval;\n  const dateEnded = showRange\n    ? moment(date).add(interval, 'minutes').utc().format()\n    : undefined;\n  const timeOnly = Boolean(\n    date && dateEnded && moment(date).date() === moment(dateEnded).date()\n  );\n\n  return (\n    <ActivityItemWrapper data-test-id=\"activity-item\" className={className}>\n      {id && <a id={id} />}\n\n      {author && (\n        <StyledActivityAvatar type={author.type} user={author.user} size={avatarSize} />\n      )}\n\n      <StyledActivityBubble {...bubbleProps}>\n        {header && isRenderFunc<ChildFunction>(header) && header()}\n        {header && !isRenderFunc<ChildFunction>(header) && (\n          <ActivityHeader>\n            <ActivityHeaderContent>{header}</ActivityHeaderContent>\n            {date && showDate && !showTime && <StyledTimeSince date={date} />}\n            {date && showDate && showTime && <StyledDateTime timeOnly date={date} />}\n\n            {showRange && (\n              <StyledDateTimeWindow>\n                <StyledDateTime timeOnly={timeOnly} timeAndDate={!timeOnly} date={date} />\n                {' — '}\n                <StyledDateTime\n                  timeOnly={timeOnly}\n                  timeAndDate={!timeOnly}\n                  date={dateEnded}\n                />\n              </StyledDateTimeWindow>\n            )}\n          </ActivityHeader>\n        )}\n\n        {children && isRenderFunc<ChildFunction>(children) && children()}\n        {children && !isRenderFunc<ChildFunction>(children) && (\n          <ActivityBody>{children}</ActivityBody>\n        )}\n\n        {footer && isRenderFunc<ChildFunction>(footer) && footer()}\n        {footer && !isRenderFunc<ChildFunction>(footer) && (\n          <ActivityFooter>{footer}</ActivityFooter>\n        )}\n      </StyledActivityBubble>\n    </ActivityItemWrapper>\n  );\n}\n\nconst ActivityItemWrapper = styled('div')`\n  display: flex;\n  margin-bottom: ${space(2)};\n`;\n\nconst HeaderAndFooter = styled('div')`\n  padding: 6px ${space(2)};\n`;\n\nconst ActivityHeader = styled(HeaderAndFooter)`\n  display: flex;\n  border-bottom: 1px solid ${p => p.theme.border};\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst ActivityHeaderContent = styled('div')`\n  flex: 1;\n`;\n\nconst ActivityFooter = styled(HeaderAndFooter)`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityBody = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  ${textStyles}\n`;\n\nconst StyledActivityAvatar = styled(ActivityAvatar)`\n  margin-right: ${space(1)};\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledDateTime = styled(DateTime)`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledDateTimeWindow = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst StyledActivityBubble = styled(ActivityBubble)`\n  width: 75%;\n  overflow-wrap: break-word;\n`;\n\nexport default ActivityItem;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityAuthor from 'app/components/activity/author';\nimport ActivityItem from 'app/components/activity/item';\nimport Clipboard from 'app/components/clipboard';\nimport Link from 'app/components/links/link';\nimport {IconCopy} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {UserReport} from 'app/types';\nimport {escape, nl2br} from 'app/utils';\n\ntype Props = {\n  report: UserReport;\n  orgId: string;\n  issueId: string;\n  className?: string;\n};\n\nclass EventUserFeedback extends React.Component<Props> {\n  getUrl() {\n    const {report, orgId, issueId} = this.props;\n\n    return `/organizations/${orgId}/issues/${issueId}/events/${report.eventID}/`;\n  }\n\n  render() {\n    const {className, report} = this.props;\n    const user = report.user || {\n      name: report.name,\n      email: report.email,\n      id: '',\n      username: '',\n      ip_address: '',\n    };\n\n    return (\n      <div className={className}>\n        <ActivityItem\n          date={report.dateCreated}\n          author={{type: 'user', user}}\n          header={\n            <div>\n              <ActivityAuthor>{report.name}</ActivityAuthor>\n              <Clipboard value={report.email}>\n                <Email>\n                  {report.email}\n                  <StyledIconCopy size=\"xs\" />\n                </Email>\n              </Clipboard>\n              {report.eventID && (\n                <ViewEventLink to={this.getUrl()}>{t('View event')}</ViewEventLink>\n              )}\n            </div>\n          }\n        >\n          <p\n            dangerouslySetInnerHTML={{\n              __html: nl2br(escape(report.comments)),\n            }}\n          />\n        </ActivityItem>\n      </div>\n    );\n  }\n}\n\nexport default EventUserFeedback;\n\nconst Email = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  cursor: pointer;\n  margin-left: ${space(1)};\n`;\n\nconst ViewEventLink = styled(Link)`\n  font-weight: 300;\n  margin-left: ${space(1)};\n  font-size: 0.9em;\n`;\n\nconst StyledIconCopy = styled(IconCopy)`\n  margin-left: ${space(1)};\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport createReactClass from 'create-react-class';\nimport Reflux from 'reflux';\n\nimport {bulkUpdate} from 'app/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport EventOrGroupTitle from 'app/components/eventOrGroupTitle';\nimport ErrorLevel from 'app/components/events/errorLevel';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport GroupChart from 'app/components/stream/groupChart';\nimport {IconChat, IconMute, IconStar} from 'app/icons';\nimport {t} from 'app/locale';\nimport GroupStore from 'app/stores/groupStore';\nimport space from 'app/styles/space';\nimport {Group, LightWeightOrganization} from 'app/types';\nimport {getMessage} from 'app/utils/events';\nimport {Aliases} from 'app/utils/theme';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype HeaderProps = {\n  organization: LightWeightOrganization;\n  projectId: string;\n  data: Group;\n  eventId?: string;\n};\n\nclass CompactIssueHeader extends React.Component<HeaderProps> {\n  render() {\n    const {data, organization, projectId, eventId} = this.props;\n\n    const basePath = `/organizations/${organization.slug}/issues/`;\n\n    const issueLink = eventId\n      ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n      : `${basePath}${data.id}/`;\n\n    const commentColor: keyof Aliases =\n      data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n        ? 'success'\n        : 'textColor';\n\n    return (\n      <React.Fragment>\n        <IssueHeaderMetaWrapper>\n          <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n          <h3 className=\"truncate\">\n            <IconLink to={issueLink || ''}>\n              {data.status === 'ignored' && <IconMute size=\"xs\" />}\n              {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n              <EventOrGroupTitle data={data} />\n            </IconLink>\n          </h3>\n        </IssueHeaderMetaWrapper>\n        <div className=\"event-extra\">\n          <span className=\"project-name\">\n            <strong>{data.project.slug}</strong>\n          </span>\n          {data.numComments !== 0 && (\n            <span>\n              <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n                <IconChat size=\"xs\" color={commentColor} />\n                <span className=\"tag-count\">{data.numComments}</span>\n              </IconLink>\n            </span>\n          )}\n          <span className=\"culprit\">{getMessage(data)}</span>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: LightWeightOrganization;\n  statsPeriod?: string;\n  eventId?: string;\n  data?: Group;\n};\n\ntype State = {\n  issue: Group;\n};\n\nconst CompactIssue = createReactClass<Props, State>({\n  displayName: 'CompactIssue',\n\n  mixins: [Reflux.listenTo(GroupStore, 'onGroupChange') as any],\n\n  getInitialState() {\n    return {\n      issue: this.props.data || GroupStore.get(this.props.id),\n    };\n  },\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  },\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  },\n\n  onSnooze(duration) {\n    const data: Record<string, string> = {\n      status: 'ignored',\n    };\n\n    if (duration) {\n      data.ignoreDuration = duration;\n    }\n\n    this.onUpdate(data);\n  },\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  },\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n    if (this.props.statsPeriod) {\n      className += ' with-graph';\n    }\n\n    return (\n      <PanelItem\n        className={className}\n        onClick={this.toggleSelect}\n        flexDirection=\"column\"\n        style={{paddingTop: '12px', paddingBottom: '6px'}}\n      >\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.statsPeriod && (\n          <div className=\"event-graph\">\n            <GroupChart statsPeriod={this.props.statsPeriod} data={this.props.data} />\n          </div>\n        )}\n        {this.props.children}\n      </PanelItem>\n    );\n  },\n});\n\nexport {CompactIssue};\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\n\ntype Props = React.PropsWithChildren<{\n  image: React.ReactNode;\n  className?: string;\n}>;\n\nfunction OnboardingPanel({className, image, children}: Props) {\n  return (\n    <Panel className={className}>\n      <Container>\n        <IlloBox>{image}</IlloBox>\n        <StyledBox>{children}</StyledBox>\n      </Container>\n    </Panel>\n  );\n}\n\nconst Container = styled('div')`\n  padding: ${space(3)};\n  position: relative;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    display: flex;\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    min-height: 300px;\n    max-width: 1000px;\n    margin: 0 auto;\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[1]}) {\n    min-height: 350px;\n  }\n`;\n\nconst StyledBox = styled('div')`\n  z-index: 1;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 2;\n  }\n`;\n\nconst IlloBox = styled(StyledBox)`\n  position: relative;\n  min-height: 100px;\n  max-width: 300px;\n  margin: ${space(2)} auto;\n\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    flex: 1;\n    margin: ${space(3)};\n    max-width: auto;\n  }\n`;\n\nexport default OnboardingPanel;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {URL_PARAM} from 'app/constants/globalSelectionHeader';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n */\nexport function getQuery(search: string) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport omit from 'lodash/omit';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport EventUserFeedback from 'app/components/events/userFeedback';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport LightWeightNoProjectMessage from 'app/components/lightWeightNoProjectMessage';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport {Panel} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport space from 'app/styles/space';\nimport {Organization, UserReport} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\n\nimport UserFeedbackEmpty from './userFeedbackEmpty';\nimport {getQuery} from './utils';\n\ntype State = AsyncView['state'] & {\n  reportList: UserReport[];\n};\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationUserFeedback extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      organization,\n      location: {search},\n    } = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  get projectIds() {\n    const {project} = this.props.location.query;\n\n    return Array.isArray(project)\n      ? project\n      : typeof project === 'string'\n      ? [project]\n      : [];\n  }\n\n  renderResults() {\n    const {orgId} = this.props.params;\n\n    return (\n      <Panel className=\"issue-list\" data-test-id=\"user-feedback-list\">\n        {this.state.reportList.map(item => {\n          const issue = item.issue;\n          return (\n            <CompactIssue key={item.id} id={issue.id} data={issue} eventId={item.eventID}>\n              <StyledEventUserFeedback report={item} orgId={orgId} issueId={issue.id} />\n            </CompactIssue>\n          );\n        })}\n      </Panel>\n    );\n  }\n\n  renderEmpty() {\n    return <UserFeedbackEmpty projectIds={this.projectIds} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return (\n        <Panel>\n          <LoadingIndicator />\n        </Panel>\n      );\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {location} = this.props;\n    const {pathname, search, query} = location;\n    const {status} = getQuery(search);\n    const {reportListPageLinks} = this.state;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <GlobalSelectionHeader>\n        <PageContent>\n          <LightWeightNoProjectMessage organization={organization}>\n            <div data-test-id=\"user-feedback\">\n              <Header>\n                <PageHeading>{t('User Feedback')}</PageHeading>\n                <ButtonBar active={!Array.isArray(status) ? status || '' : ''} merged>\n                  <Button\n                    size=\"small\"\n                    barId=\"unresolved\"\n                    to={{pathname, query: unresolvedQuery}}\n                  >\n                    {t('Unresolved')}\n                  </Button>\n                  <Button size=\"small\" barId=\"\" to={{pathname, query: allIssuesQuery}}>\n                    {t('All Issues')}\n                  </Button>\n                </ButtonBar>\n              </Header>\n              {this.renderStreamBody()}\n              <Pagination pageLinks={reportListPageLinks} />\n            </div>\n          </LightWeightNoProjectMessage>\n        </PageContent>\n      </GlobalSelectionHeader>\n    );\n  }\n}\n\nexport default withOrganization(withProfiler(OrganizationUserFeedback));\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin: ${space(2)} 0 0;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport emptyStateImg from 'sentry-images/spot/feedback-empty-state.svg';\n\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport OnboardingPanel from 'app/components/onboardingPanel';\nimport {t} from 'app/locale';\nimport {Organization, Project} from 'app/types';\nimport {trackAdhocEvent, trackAnalyticsEvent} from 'app/utils/analytics';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProjects from 'app/utils/withProjects';\n\ntype Props = {\n  organization: Organization;\n  projects: Project[];\n  loadingProjects: boolean;\n  projectIds?: string[];\n};\n\nclass UserFeedbackEmpty extends React.Component<Props> {\n  componentDidMount() {\n    const {organization, projectIds} = this.props;\n\n    window.sentryEmbedCallback = function (embed) {\n      // Mock the embed's submit xhr to always be successful\n      // NOTE: this will not have errors if the form is empty\n      embed.submit = function (_body) {\n        this._submitInProgress = true;\n        setTimeout(() => {\n          this._submitInProgress = false;\n          this.onSuccess();\n        }, 500);\n      };\n    };\n\n    if (this.hasAnyFeedback === false) {\n      // send to reload only due to higher event volume\n      trackAdhocEvent({\n        eventKey: 'user_feedback.viewed',\n        org_id: parseInt(organization.id, 10),\n        projects: projectIds,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.sentryEmbedCallback = null;\n  }\n\n  get selectedProjects() {\n    const {projects, projectIds} = this.props;\n\n    return projectIds && projectIds.length\n      ? projects.filter(({id}) => projectIds.includes(id))\n      : projects;\n  }\n\n  get hasAnyFeedback() {\n    return this.selectedProjects.some(({hasUserReports}) => hasUserReports);\n  }\n\n  trackAnalytics({eventKey, eventName}: {eventKey: string; eventName: string}) {\n    const {organization, projectIds} = this.props;\n\n    trackAnalyticsEvent({\n      eventKey,\n      eventName,\n      organization_id: organization.id,\n      projects: projectIds,\n    });\n  }\n\n  render() {\n    // Show no user reports if waiting for projects to load or if there is no feedback\n    if (this.props.loadingProjects || this.hasAnyFeedback !== false) {\n      return (\n        <EmptyStateWarning>\n          <p>{t('Sorry, no user reports match your filters.')}</p>\n        </EmptyStateWarning>\n      );\n    }\n    // Show landing page after projects have loaded and it is confirmed no projects have feedback\n    return (\n      <OnboardingPanel image={<img src={emptyStateImg} />}>\n        <h3>{t('What do users think?')}</h3>\n        <p>\n          {t(\n            `You can't read minds. At least we hope not. Ask users for feedback on the impact of their crashes or bugs and you shall receive.`\n          )}\n        </p>\n        <ButtonList gap={1}>\n          <Button\n            external\n            priority=\"primary\"\n            onClick={() =>\n              this.trackAnalytics({\n                eventKey: 'user_feedback.docs_clicked',\n                eventName: 'User Feedback Docs Clicked',\n              })\n            }\n            href={`https://docs.sentry.io/platform-redirect/?next=/enriching-events/user-feedback/&platform=${this.selectedProjects[0]?.platform}`}\n          >\n            {t('Read the docs')}\n          </Button>\n          <Button\n            onClick={() => {\n              Sentry.showReportDialog({\n                // should never make it to the Sentry API, but just in case, use throwaway id\n                eventId: '00000000000000000000000000000000',\n              });\n\n              this.trackAnalytics({\n                eventKey: 'user_feedback.dialog_opened',\n                eventName: 'User Feedback Dialog Opened',\n              });\n            }}\n          >\n            {t('See an example')}\n          </Button>\n        </ButtonList>\n      </OnboardingPanel>\n    );\n  }\n}\n\nconst ButtonList = styled(ButtonBar)`\n  grid-template-columns: repeat(auto-fit, minmax(130px, max-content));\n`;\n\nexport {UserFeedbackEmpty};\n\nexport default withOrganization(withProjects(UserFeedbackEmpty));\n","module.exports = __webpack_public_path__ + \"spot/feedback-empty-state.024ae4.svg\";"],"sourceRoot":""}