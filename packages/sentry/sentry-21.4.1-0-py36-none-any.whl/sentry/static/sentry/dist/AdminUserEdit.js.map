{"version":3,"sources":["webpack:///./app/views/admin/adminUserEdit.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/forms/formPanel.tsx","webpack:///./app/views/settings/components/forms/jsonForm.tsx"],"names":["userEditForm","title","fields","name","type","required","label","t","help","REMOVE_BUTTON_LABEL","disable","delete","RemoveUserModal","deleteType","props","onRemove","state","closeModal","user","this","value","email","onChange","setState","choices","ModalFooter","priority","onClick","React","AdminUserEdit","actionTypes","deleteUser","deactivateUser","FormModel","params","id","userEndpoint","api","requestPromise","method","data","hardDelete","organizations","addSuccessMessage","browserHistory","isActive","response","formModel","setInitialData","model","initialData","apiMethod","apiEndpoint","requireChanges","onSubmitError","addErrorMessage","onSubmitSuccess","extraButton","openModal","opts","removeUser","style","marginLeft","space","forms","AsyncView","p","theme","border","getTitle","renderComponent","AsyncComponent","FormPanel","access","disabled","additionalFieldProps","renderFooter","renderHeader","otherProps","sanitizeQuerySelector","undefined","map","field","defaultValue","fieldWithoutDefaultValue","disabledReason","key","highlighted","JsonForm","getLocation","context","hash","scrollToHash","nextProps","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","fieldsWithVisibleProp","filter","defined","visible","length","every","formPanelProps","shouldDisplayForm","features","location","formGroup","i","renderForm","PropTypes"],"mappings":"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","file":"AdminUserEdit.6b4f19b043d8763a12c1.js","sourcesContent":["import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {ModalRenderProps, openModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {User} from 'app/types';\nimport AsyncView from 'app/views/asyncView';\nimport RadioGroup from 'app/views/settings/components/forms/controls/radioGroup';\nimport Form from 'app/views/settings/components/forms/form';\nimport JsonForm from 'app/views/settings/components/forms/jsonForm';\nimport FormModel from 'app/views/settings/components/forms/model';\nimport {JsonFormObject} from 'app/views/settings/components/forms/type';\n\nconst userEditForm: JsonFormObject = {\n  title: 'User details',\n  fields: [\n    {\n      name: 'name',\n      type: 'string',\n      required: true,\n      label: t('Name'),\n    },\n    {\n      name: 'username',\n      type: 'string',\n      required: true,\n      label: t('Username'),\n      help: t('The username is the unique id of the user in the system'),\n    },\n    {\n      name: 'email',\n      type: 'string',\n      required: true,\n      label: t('Email'),\n      help: t('The users primary email address'),\n    },\n    {\n      name: 'isActive',\n      type: 'boolean',\n      required: true,\n      label: t('Active'),\n      help: t(\n        'Designates whether this user should be treated as active. Unselect this instead of deleting accounts.'\n      ),\n    },\n    {\n      name: 'isStaff',\n      type: 'boolean',\n      required: true,\n      label: t('Admin'),\n      help: t('Designates whether this user can perform administrative functions.'),\n    },\n    {\n      name: 'isSuperuser',\n      type: 'boolean',\n      required: true,\n      label: t('Superuser'),\n      help: t(\n        'Designates whether this user has all permissions without explicitly assigning them.'\n      ),\n    },\n  ],\n};\n\nconst REMOVE_BUTTON_LABEL = {\n  disable: t('Disable User'),\n  delete: t('Permanently Delete User'),\n};\n\ntype DeleteType = 'disable' | 'delete';\n\ntype RemoveModalProps = ModalRenderProps & {\n  user: User;\n  onRemove: (type: DeleteType) => void;\n};\n\ntype RemoveModalState = {\n  deleteType: DeleteType;\n};\n\nclass RemoveUserModal extends React.Component<RemoveModalProps, RemoveModalState> {\n  state: RemoveModalState = {\n    deleteType: 'disable',\n  };\n\n  onRemove = () => {\n    this.props.onRemove(this.state.deleteType);\n    this.props.closeModal();\n  };\n\n  render() {\n    const {user} = this.props;\n    const {deleteType} = this.state;\n\n    return (\n      <React.Fragment>\n        <RadioGroup\n          value={deleteType}\n          label={t('Remove user %s', user.email)}\n          onChange={type => this.setState({deleteType: type})}\n          choices={[\n            ['disable', t('Disable the account.')],\n            ['delete', t('Permanently remove the user and their data.')],\n          ]}\n        />\n        <ModalFooter>\n          <Button priority=\"danger\" onClick={this.onRemove}>\n            {REMOVE_BUTTON_LABEL[deleteType]}\n          </Button>\n          <Button onClick={this.props.closeModal}>{t('Cancel')}</Button>\n        </ModalFooter>\n      </React.Fragment>\n    );\n  }\n}\n\ntype Props = AsyncView['props'] & RouteComponentProps<{id: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  user: User | null;\n};\n\nclass AdminUserEdit extends AsyncView<Props, State> {\n  get userEndpoint() {\n    const {params} = this.props;\n    return `/users/${params.id}/`;\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['user', this.userEndpoint]];\n  }\n\n  async deleteUser() {\n    await this.api.requestPromise(this.userEndpoint, {\n      method: 'DELETE',\n      data: {hardDelete: true, organizations: []},\n    });\n\n    addSuccessMessage(t(\"%s's account has been deleted.\", this.state.user?.email));\n    browserHistory.replace('/manage/users/');\n  }\n\n  async deactivateUser() {\n    const response = await this.api.requestPromise(this.userEndpoint, {\n      method: 'PUT',\n      data: {isActive: false},\n    });\n\n    this.setState({user: response});\n    this.formModel.setInitialData(response);\n    addSuccessMessage(t(\"%s's account has been deactivated.\", response.email));\n  }\n\n  removeUser = (actionTypes: DeleteType) =>\n    actionTypes === 'delete' ? this.deleteUser() : this.deactivateUser();\n\n  formModel = new FormModel();\n\n  renderBody() {\n    const {user} = this.state;\n\n    if (user === null) {\n      return null;\n    }\n\n    const openDeleteModal = () =>\n      openModal(opts => (\n        <RemoveUserModal user={user} onRemove={this.removeUser} {...opts} />\n      ));\n\n    return (\n      <React.Fragment>\n        <h3>{t('Users')}</h3>\n        <p>{t('Editing user: %s', user.email)}</p>\n        <Form\n          model={this.formModel}\n          initialData={user}\n          apiMethod=\"PUT\"\n          apiEndpoint={this.userEndpoint}\n          requireChanges\n          onSubmitError={addErrorMessage}\n          onSubmitSuccess={data => {\n            this.setState({user: data});\n            addSuccessMessage('User account updated.');\n          }}\n          extraButton={\n            <Button\n              type=\"button\"\n              onClick={openDeleteModal}\n              style={{marginLeft: space(1)}}\n              priority=\"danger\"\n            >\n              {t('Remove User')}\n            </Button>\n          }\n        >\n          <JsonForm forms={[userEditForm]} />\n        </Form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ModalFooter = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: ${space(1)};\n  justify-content: end;\n  padding: 20px 30px;\n  margin: 20px -30px -30px;\n  border-top: 1px solid ${p => p.theme.border};\n`;\n\nexport default AdminUserEdit;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\n\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {Scope} from 'app/types';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\nimport FieldFromConfig from 'app/views/settings/components/forms/fieldFromConfig';\n\nimport {FieldObject, JsonFormObject} from './type';\n\ntype Props = {\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n\n  access?: Set<Scope>;\n  features?: Record<string, any>;\n\n  additionalFieldProps: {[key: string]: any};\n\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n};\n\nexport default class FormPanel extends React.Component<Props> {\n  render() {\n    const {\n      title,\n      fields,\n      access,\n      disabled,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      ...otherProps\n    } = this.props;\n\n    return (\n      <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n        {title && <PanelHeader>{title}</PanelHeader>}\n        <PanelBody>\n          {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n          {fields.map(field => {\n            if (typeof field === 'function') {\n              return field();\n            }\n\n            const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n            // Allow the form panel disabled prop to override the fields\n            // disabled prop, with fallback to the fields disabled state.\n            if (disabled === true) {\n              fieldWithoutDefaultValue.disabled = true;\n              fieldWithoutDefaultValue.disabledReason = undefined;\n            }\n\n            return (\n              <FieldFromConfig\n                access={access}\n                disabled={disabled}\n                key={field.name}\n                {...otherProps}\n                {...additionalFieldProps}\n                field={fieldWithoutDefaultValue}\n                highlighted={this.props.highlighted === `#${field.name}`}\n              />\n            );\n          })}\n          {typeof renderFooter === 'function' && renderFooter({title, fields})}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport * as Sentry from '@sentry/react';\nimport {Location} from 'history';\nimport PropTypes from 'prop-types';\nimport {Box} from 'reflexbox'; // eslint-disable-line no-restricted-imports\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'app/utils';\nimport {sanitizeQuerySelector} from 'app/utils/sanitizeQuerySelector';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './type';\n\ntype DefaultProps = {\n  additionalFieldProps: {[key: string]: any};\n};\n\ntype Props = {\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n  location?: Location;\n} & DefaultProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype Context = {\n  location?: Location;\n};\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends React.Component<Props, State> {\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  static defaultProps: DefaultProps = {\n    additionalFieldProps: {},\n  };\n\n  state: State = {\n    highlighted: getLocation(this.props, this.context).hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (\n      getLocation(this.props, this.context).hash !==\n      getLocation(nextProps, this.context).hash\n    ) {\n      const hash = getLocation(nextProps, this.context).hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    const hash = toHash || getLocation(this.props, this.context).hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n    };\n\n    return (\n      <Box {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <React.Fragment key={i}>\n              {this.renderForm({formPanelProps, ...formGroup})}\n            </React.Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </Box>\n    );\n  }\n}\n\nexport default JsonForm;\n\nfunction getLocation(props: Props, context: Context): Location | {hash?: string} {\n  return props.location || context.location || {};\n}\n"],"sourceRoot":""}