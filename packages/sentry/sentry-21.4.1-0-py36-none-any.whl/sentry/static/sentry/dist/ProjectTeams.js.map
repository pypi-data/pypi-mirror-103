{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/teamSelect.tsx","webpack:///./app/views/settings/project/projectTeams.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","TeamSelect","loading","teams","debounce","query","api","organization","requestPromise","slug","per_page","TEAMS_PER_PAGE","setState","DEFAULT_DEBOUNCE_DURATION","event","fetchTeams","target","value","option","team","state","find","tm","onAddTeam","teamSlug","onRemoveTeam","options","disabled","selectedTeams","menuHeader","isDisabled","length","filter","includes","map","index","searchKey","label","TeamDropdownElement","items","busyItemsStillVisible","onChange","handleQueryUpdate","onSelect","handleAddTeam","emptyMessage","t","alignMenu","isOpen","aria-label","size","confirmLastTeamRemoveMessage","confirmMessage","TeamRow","key","orgId","onRemove","handleRemove","hasButtons","renderTeamAddDropDown","renderBody","TeamPanelItem","StyledLink","to","message","bypass","onConfirm","isCircled","PanelItem","Link","withApi","ProjectTeams","access","Set","has","params","projectId","removeTeamFromProject","then","handleRemovedTeam","addErrorMessage","prevState","projectTeams","addTeamToProject","handleAddedTeam","error","e","project","canCreateTeam","stopPropagation","preventDefault","openCreateTeamModal","onClose","data","remountComponent","routeTitleGen","hasAccess","confirmRemove","StyledTeamsLabel","position","StyledCreateTeamLink","onClick","handleCreateTeam","handleAdd","css","gray300"],"mappings":"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","file":"ProjectTeams.573eb5cb25557bf04eee.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport {Item} from 'app/components/dropdownAutoComplete/types';\nimport DropdownButton from 'app/components/dropdownButton';\nimport Link from 'app/components/links/link';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION, TEAMS_PER_PAGE} from 'app/constants';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  /**\n   * Should button be disabled\n   */\n  disabled: boolean;\n  /**\n   * Teams that are already selected.\n   */\n  selectedTeams: string[];\n  /**\n   * callback when teams are added\n   */\n  onAddTeam: (team: Team) => void;\n  /**\n   * Callback when teams are removed\n   */\n  onRemoveTeam: (teamSlug: string) => void;\n\n  /**\n   * Optional menu header.\n   */\n  menuHeader?: React.ReactElement;\n\n  /**\n   * Message to display when the last team is removed\n   * if empty no confirm will be displayed.\n   */\n  confirmLastTeamRemoveMessage?: string;\n};\n\ntype State = {\n  loading: boolean;\n  teams: null | Team[];\n};\n\nclass TeamSelect extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    teams: null,\n  };\n\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  fetchTeams = debounce(async (query?: string) => {\n    const {api, organization} = this.props;\n    const teams = await api.requestPromise(`/organizations/${organization.slug}/teams/`, {\n      query: {query, per_page: TEAMS_PER_PAGE},\n    });\n    this.setState({teams, loading: false});\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  handleQueryUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({loading: true});\n    this.fetchTeams(event.target.value);\n  };\n\n  handleAddTeam = (option: Item) => {\n    const team = this.state.teams?.find(tm => tm.slug === option.value);\n    if (team) {\n      this.props.onAddTeam(team);\n    }\n  };\n\n  handleRemove = (teamSlug: string) => {\n    this.props.onRemoveTeam(teamSlug);\n  };\n\n  renderTeamAddDropDown() {\n    const {disabled, selectedTeams, menuHeader} = this.props;\n    const {teams} = this.state;\n    const isDisabled = disabled;\n\n    let options: Item[] = [];\n    if (teams === null || teams.length === 0) {\n      options = [];\n    } else {\n      options = teams\n        .filter(team => !selectedTeams.includes(team.slug))\n        .map((team, index) => ({\n          index,\n          value: team.slug,\n          searchKey: team.slug,\n          label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,\n        }));\n    }\n\n    return (\n      <DropdownAutoComplete\n        items={options}\n        busyItemsStillVisible={this.state.loading}\n        onChange={this.handleQueryUpdate}\n        onSelect={this.handleAddTeam}\n        emptyMessage={t('No teams')}\n        menuHeader={menuHeader}\n        disabled={isDisabled}\n        alignMenu=\"right\"\n      >\n        {({isOpen}) => (\n          <DropdownButton\n            aria-label={t('Add Team')}\n            isOpen={isOpen}\n            size=\"xsmall\"\n            disabled={isDisabled}\n          >\n            {t('Add Team')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n\n  renderBody() {\n    const {\n      organization,\n      selectedTeams,\n      disabled,\n      confirmLastTeamRemoveMessage,\n    } = this.props;\n\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n    const confirmMessage =\n      selectedTeams.length === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return selectedTeams.map(team => (\n      <TeamRow\n        key={team}\n        orgId={organization.slug}\n        team={team}\n        onRemove={this.handleRemove}\n        disabled={disabled}\n        confirmMessage={confirmMessage}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          {t('Team')}\n          {this.renderTeamAddDropDown()}\n        </PanelHeader>\n\n        <PanelBody>{this.renderBody()}</PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst TeamRow = props => {\n  const {orgId, team, onRemove, disabled, confirmMessage} = props;\n  return (\n    <TeamPanelItem>\n      <StyledLink to={`/settings/${orgId}/teams/${team}/`}>{`#${team}`}</StyledLink>\n      <Confirm\n        message={confirmMessage}\n        bypass={!confirmMessage}\n        onConfirm={() => onRemove(team)}\n        disabled={disabled}\n      >\n        <Button\n          size=\"xsmall\"\n          icon={<IconSubtract isCircled size=\"xs\" />}\n          disabled={disabled}\n        >\n          {t('Remove')}\n        </Button>\n      </Confirm>\n    </TeamPanelItem>\n  );\n};\n\nconst TeamDropdownElement = styled('div')`\n  padding: ${space(0.5)} 0px;\n  text-transform: none;\n`;\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(TeamSelect);\n","import React from 'react';\nimport {WithRouterProps} from 'react-router';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {addTeamToProject, removeTeamFromProject} from 'app/actionCreators/projects';\nimport Link from 'app/components/links/link';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Project, Team} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & WithRouterProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  projectTeams: null | Team[];\n} & AsyncView['state'];\n\nclass ProjectTeams extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['projectTeams', `/projects/${orgId}/${projectId}/teams/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Teams'), projectId, false);\n  }\n\n  canCreateTeam = () => {\n    const {organization} = this.props;\n    const access = new Set(organization.access);\n    return (\n      access.has('org:write') && access.has('team:write') && access.has('project:write')\n    );\n  };\n\n  handleRemove = (teamSlug: Team['slug']) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {orgId, projectId} = this.props.params;\n\n    removeTeamFromProject(this.api, orgId, projectId, teamSlug)\n      .then(() => this.handleRemovedTeam(teamSlug))\n      .catch(() => {\n        addErrorMessage(t('Could not remove the %s team', teamSlug));\n        this.setState({loading: false});\n      });\n  };\n\n  handleRemovedTeam = (teamSlug: Team['slug']) => {\n    this.setState(prevState => ({\n      projectTeams: [\n        ...(prevState.projectTeams || []).filter(team => team.slug !== teamSlug),\n      ],\n    }));\n  };\n\n  handleAddedTeam = (team: Team) => {\n    this.setState(prevState => ({\n      projectTeams: [...(prevState.projectTeams || []), team],\n    }));\n  };\n\n  handleAdd = (team: Team) => {\n    if (this.state.loading) {\n      return;\n    }\n    const {orgId, projectId} = this.props.params;\n\n    addTeamToProject(this.api, orgId, projectId, team).then(\n      () => {\n        this.handleAddedTeam(team);\n      },\n      () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      }\n    );\n  };\n\n  handleCreateTeam = (e: React.MouseEvent) => {\n    const {project, organization} = this.props;\n\n    if (!this.canCreateTeam()) {\n      return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openCreateTeamModal({\n      project,\n      organization,\n      onClose: data => {\n        addTeamToProject(this.api, organization.slug, project.slug, data).then(\n          this.remountComponent,\n          this.remountComponent\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {params, organization} = this.props;\n\n    const canCreateTeam = this.canCreateTeam();\n    const hasAccess = organization.access.includes('project:write');\n    const confirmRemove = t(\n      'This is the last team with access to this project. Removing it will mean ' +\n        'only organization owners and managers will be able to access the project pages. Are ' +\n        'you sure you want to remove this team from the project %s?',\n      params.projectId\n    );\n    const {projectTeams} = this.state;\n    const selectedTeams = projectTeams?.map(({slug}) => slug) ?? [];\n\n    const menuHeader = (\n      <StyledTeamsLabel>\n        {t('Teams')}\n        <Tooltip\n          disabled={canCreateTeam}\n          title={t('You must be a project admin to create teams')}\n          position=\"top\"\n        >\n          <StyledCreateTeamLink\n            to=\"\"\n            disabled={!canCreateTeam}\n            onClick={this.handleCreateTeam}\n          >\n            {t('Create Team')}\n          </StyledCreateTeamLink>\n        </Tooltip>\n      </StyledTeamsLabel>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('%s Teams', params.projectId)} />\n        <TeamSelect\n          organization={organization}\n          selectedTeams={selectedTeams}\n          onAddTeam={this.handleAdd}\n          onRemoveTeam={this.handleRemove}\n          menuHeader={menuHeader}\n          confirmLastTeamRemoveMessage={confirmRemove}\n          disabled={!hasAccess}\n        />\n      </div>\n    );\n  }\n}\n\nconst StyledTeamsLabel = styled('div')`\n  font-size: 0.875em;\n  padding: ${space(0.5)} 0px;\n  text-transform: uppercase;\n`;\n\nconst StyledCreateTeamLink = styled(Link)`\n  float: right;\n  text-transform: none;\n  ${p =>\n    p.disabled &&\n    css`\n      cursor: not-allowed;\n      color: ${p.theme.gray300};\n      opacity: 0.6;\n    `};\n`;\n\nexport default ProjectTeams;\n"],"sourceRoot":""}