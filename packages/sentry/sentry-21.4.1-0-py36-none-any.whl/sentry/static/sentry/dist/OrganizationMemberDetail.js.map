{"version":3,"sources":["webpack:///./app/components/radio.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/teamSelect.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/roleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"names":["checkedCss","p","css","radioSize","theme","active","growIn","disabled","Radio","border","defaultProps","type","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","space","gray400","fontSizeLarge","SettingsPageHeader","TeamSelect","loading","teams","debounce","query","api","organization","requestPromise","slug","per_page","TEAMS_PER_PAGE","setState","DEFAULT_DEBOUNCE_DURATION","event","fetchTeams","target","value","option","team","state","find","tm","onAddTeam","teamSlug","onRemoveTeam","selectedTeams","menuHeader","isDisabled","length","filter","includes","index","searchKey","label","TeamDropdownElement","items","busyItemsStillVisible","onChange","handleQueryUpdate","onSelect","handleAddTeam","emptyMessage","t","alignMenu","isOpen","aria-label","size","confirmLastTeamRemoveMessage","confirmMessage","TeamRow","key","orgId","onRemove","handleRemove","hasButtons","renderTeamAddDropDown","renderBody","TeamPanelItem","StyledLink","message","bypass","onConfirm","isCircled","PanelItem","Link","withApi","Label","RoleSelect","enforceAllowed","roleList","selectedRole","role","desc","name","id","allowed","onClick","setRole","color","cursor","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","OrganizationMemberDetail","addLoadingMessage","busy","updateMember","memberId","data","member","addSuccessMessage","redirectToMemberPage","errorMessage","responseJSON","detail","addErrorMessage","regenerate","resendMemberInvite","push","removedTeam","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","Sentry","require2FA","canReset2fa","members","browserHistory","access","inviteLink","invite_link","canEdit","email","canResend","expired","showAuth","pending","ExtraHeaderText","OverflowWrapper","Details","DetailLabel","href","data-test-id","dateOnly","date","dateCreated","InviteSection","CodeInput","InviteActions","handleInvite","alignRight","flexibleControlStateSize","help","showResetButton","getTooltip","tct","handle2faReset","priority","roles","handleRemoveTeam","Footer","handleSave","withOrganization","gray300","breakpoints","textColor","inputStyles"],"mappings":"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","file":"OrganizationMemberDetail.0786ee1e529fa2891199.js","sourcesContent":["import React from 'react';\nimport {css} from '@emotion/core';\nimport styled from '@emotion/styled';\n\nimport {growIn} from 'app/styles/animations';\nimport {Theme} from 'app/utils/theme';\n\ntype Props = {radioSize?: 'small'};\n\ntype CheckedProps = React.HTMLProps<HTMLInputElement> & {\n  theme: Theme;\n} & Props;\n\nconst checkedCss = (p: CheckedProps) => css`\n  display: block;\n  width: ${p.radioSize === 'small' ? '8px' : '1rem'};\n  height: ${p.radioSize === 'small' ? '8px' : '1rem'};\n  border-radius: 50%;\n  background-color: ${p.theme.active};\n  animation: 0.2s ${growIn} ease;\n  opacity: ${p.disabled ? 0.4 : null};\n`;\n\nconst Radio = styled('input')<{radioSize?: 'small'}>`\n  display: flex;\n  padding: 0;\n  width: ${p => (p.radioSize === 'small' ? '16px' : '1.5em')};\n  height: ${p => (p.radioSize === 'small' ? '16px' : '1.5em')};\n  position: relative;\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  background: none;\n  appearance: none;\n\n  /* TODO(bootstrap): Our bootstrap CSS adds this, we can remove when we remove that */\n  margin: 0 !important;\n\n  &:focus,\n  &.focus-visible {\n    outline: none !important;\n    border: 1px solid ${p => p.theme.border};\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n\n  &:checked:after {\n    content: '';\n    ${checkedCss}\n  }\n`;\n\nRadio.defaultProps = {\n  type: 'radio',\n};\n\nexport default Radio;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DropdownAutoComplete from 'app/components/dropdownAutoComplete';\nimport {Item} from 'app/components/dropdownAutoComplete/types';\nimport DropdownButton from 'app/components/dropdownButton';\nimport Link from 'app/components/links/link';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION, TEAMS_PER_PAGE} from 'app/constants';\nimport {IconSubtract} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  /**\n   * Should button be disabled\n   */\n  disabled: boolean;\n  /**\n   * Teams that are already selected.\n   */\n  selectedTeams: string[];\n  /**\n   * callback when teams are added\n   */\n  onAddTeam: (team: Team) => void;\n  /**\n   * Callback when teams are removed\n   */\n  onRemoveTeam: (teamSlug: string) => void;\n\n  /**\n   * Optional menu header.\n   */\n  menuHeader?: React.ReactElement;\n\n  /**\n   * Message to display when the last team is removed\n   * if empty no confirm will be displayed.\n   */\n  confirmLastTeamRemoveMessage?: string;\n};\n\ntype State = {\n  loading: boolean;\n  teams: null | Team[];\n};\n\nclass TeamSelect extends React.Component<Props, State> {\n  state: State = {\n    loading: true,\n    teams: null,\n  };\n\n  componentDidMount() {\n    this.fetchTeams();\n  }\n\n  fetchTeams = debounce(async (query?: string) => {\n    const {api, organization} = this.props;\n    const teams = await api.requestPromise(`/organizations/${organization.slug}/teams/`, {\n      query: {query, per_page: TEAMS_PER_PAGE},\n    });\n    this.setState({teams, loading: false});\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  handleQueryUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({loading: true});\n    this.fetchTeams(event.target.value);\n  };\n\n  handleAddTeam = (option: Item) => {\n    const team = this.state.teams?.find(tm => tm.slug === option.value);\n    if (team) {\n      this.props.onAddTeam(team);\n    }\n  };\n\n  handleRemove = (teamSlug: string) => {\n    this.props.onRemoveTeam(teamSlug);\n  };\n\n  renderTeamAddDropDown() {\n    const {disabled, selectedTeams, menuHeader} = this.props;\n    const {teams} = this.state;\n    const isDisabled = disabled;\n\n    let options: Item[] = [];\n    if (teams === null || teams.length === 0) {\n      options = [];\n    } else {\n      options = teams\n        .filter(team => !selectedTeams.includes(team.slug))\n        .map((team, index) => ({\n          index,\n          value: team.slug,\n          searchKey: team.slug,\n          label: <TeamDropdownElement>#{team.slug}</TeamDropdownElement>,\n        }));\n    }\n\n    return (\n      <DropdownAutoComplete\n        items={options}\n        busyItemsStillVisible={this.state.loading}\n        onChange={this.handleQueryUpdate}\n        onSelect={this.handleAddTeam}\n        emptyMessage={t('No teams')}\n        menuHeader={menuHeader}\n        disabled={isDisabled}\n        alignMenu=\"right\"\n      >\n        {({isOpen}) => (\n          <DropdownButton\n            aria-label={t('Add Team')}\n            isOpen={isOpen}\n            size=\"xsmall\"\n            disabled={isDisabled}\n          >\n            {t('Add Team')}\n          </DropdownButton>\n        )}\n      </DropdownAutoComplete>\n    );\n  }\n\n  renderBody() {\n    const {\n      organization,\n      selectedTeams,\n      disabled,\n      confirmLastTeamRemoveMessage,\n    } = this.props;\n\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n    const confirmMessage =\n      selectedTeams.length === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return selectedTeams.map(team => (\n      <TeamRow\n        key={team}\n        orgId={organization.slug}\n        team={team}\n        onRemove={this.handleRemove}\n        disabled={disabled}\n        confirmMessage={confirmMessage}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <Panel>\n        <PanelHeader hasButtons>\n          {t('Team')}\n          {this.renderTeamAddDropDown()}\n        </PanelHeader>\n\n        <PanelBody>{this.renderBody()}</PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst TeamRow = props => {\n  const {orgId, team, onRemove, disabled, confirmMessage} = props;\n  return (\n    <TeamPanelItem>\n      <StyledLink to={`/settings/${orgId}/teams/${team}/`}>{`#${team}`}</StyledLink>\n      <Confirm\n        message={confirmMessage}\n        bypass={!confirmMessage}\n        onConfirm={() => onRemove(team)}\n        disabled={disabled}\n      >\n        <Button\n          size=\"xsmall\"\n          icon={<IconSubtract isCircled size=\"xs\" />}\n          disabled={disabled}\n        >\n          {t('Remove')}\n        </Button>\n      </Confirm>\n    </TeamPanelItem>\n  );\n};\n\nconst TeamDropdownElement = styled('div')`\n  padding: ${space(0.5)} 0px;\n  text-transform: none;\n`;\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(TeamSelect);\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Radio from 'app/components/radio';\nimport {t} from 'app/locale';\nimport {MemberRole} from 'app/types';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  enforceAllowed: boolean;\n  disabled: boolean;\n  selectedRole: string;\n  roleList: MemberRole[];\n  setRole: (id: string) => void;\n};\n\nclass RoleSelect extends React.Component<Props> {\n  render() {\n    const {disabled, enforceAllowed, roleList, selectedRole} = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Role')}</PanelHeader>\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed} = role;\n            const isDisabled = disabled || (enforceAllowed && !allowed);\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && this.props.setRole(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === selectedRole} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default RoleSelect;\n","import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {removeAuthenticator} from 'app/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'app/actionCreators/members';\nimport AutoSelectText from 'app/components/autoSelectText';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport DateTime from 'app/components/dateTime';\nimport NotFound from 'app/components/errors/notFound';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {t, tct} from 'app/locale';\nimport {inputStyles} from 'app/styles/input';\nimport space from 'app/styles/space';\nimport {Member, Organization, Team} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withOrganization from 'app/utils/withOrganization';\nimport AsyncView from 'app/views/asyncView';\nimport Field from 'app/views/settings/components/forms/field';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'app/views/settings/components/teamSelect';\n\nimport RoleSelect from './inviteMember/roleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  orgId: string;\n  memberId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  roleList: Member['roles'];\n  selectedRole: Member['role'];\n  member: Member | null;\n} & AsyncView['state'];\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      roleList: [],\n      selectedRole: '',\n      member: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  redirectToMemberPage() {\n    const {location, params, routes} = this.props;\n    const members = recreateRoute('members/', {\n      location,\n      routes,\n      params,\n      stepBack: -2,\n    });\n    browserHistory.push(members);\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: this.state.member,\n      });\n      addSuccessMessage(t('Saved'));\n      this.redirectToMemberPage();\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      addErrorMessage(errorMessage);\n    }\n    this.setState({busy: false});\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handleAddTeam = (team: Team) => {\n    const {member} = this.state;\n    if (!member!.teams.includes(team.slug)) {\n      member!.teams.push(team.slug);\n    }\n    this.setState({member});\n  };\n\n  handleRemoveTeam = (removedTeam: string) => {\n    const {member} = this.state;\n\n    this.setState({\n      member: {\n        ...member!,\n        teams: member!.teams.filter(slug => slug !== removedTeam),\n      },\n    });\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(`/settings/${organization.slug}/members/`);\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access} = organization;\n    const inviteLink = member.invite_link;\n    const canEdit = access.includes('org:write');\n\n    const {email, expired, pending} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader\n          title={\n            <React.Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </React.Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <OverflowWrapper>\n                <Details>\n                  <div>\n                    <DetailLabel>{t('Email')}</DetailLabel>\n                    <div>\n                      <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Status')}</DetailLabel>\n                    <div data-test-id=\"member-status\">\n                      {member.expired ? (\n                        <em>{t('Invitation Expired')}</em>\n                      ) : member.pending ? (\n                        <em>{t('Invitation Pending')}</em>\n                      ) : (\n                        t('Active')\n                      )}\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Added')}</DetailLabel>\n                    <div>\n                      <DateTime dateOnly date={member.dateCreated} />\n                    </div>\n                  </div>\n                </Details>\n\n                {inviteLink && (\n                  <InviteSection>\n                    <div>\n                      <DetailLabel>{t('Invite Link')}</DetailLabel>\n                      <AutoSelectText>\n                        <CodeInput>{inviteLink}</CodeInput>\n                      </AutoSelectText>\n                      <p className=\"help-block\">\n                        {t('This unique invite link may only be used by this member.')}\n                      </p>\n                    </div>\n                    <InviteActions>\n                      <Button onClick={() => this.handleInvite(true)}>\n                        {t('Generate New Invite')}\n                      </Button>\n                      {canResend && (\n                        <Button\n                          data-test-id=\"resend-invite\"\n                          onClick={() => this.handleInvite(false)}\n                        >\n                          {t('Resend Invite')}\n                        </Button>\n                      )}\n                    </InviteActions>\n                  </InviteSection>\n                )}\n              </OverflowWrapper>\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <Field\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip\n                  data-test-id=\"reset-2fa-tooltip\"\n                  disabled={this.showResetButton()}\n                  title={this.getTooltip()}\n                >\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                    data-test-id=\"reset-2fa-confirm\"\n                  >\n                    <Button data-test-id=\"reset-2fa\" priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </Field>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <RoleSelect\n          enforceAllowed={false}\n          disabled={!canEdit}\n          roleList={member.roles}\n          selectedRole={member.role}\n          setRole={slug => this.setState({member: {...member, role: slug}})}\n        />\n\n        <TeamSelect\n          organization={organization}\n          selectedTeams={member.teams}\n          disabled={!canEdit}\n          onAddTeam={this.handleAddTeam}\n          onRemoveTeam={this.handleRemoveTeam}\n        />\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  grid-gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst OverflowWrapper = styled('div')`\n  overflow: hidden;\n  flex: 1;\n`;\n\nconst InviteSection = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  margin-top: ${space(2)};\n  padding-top: ${space(2)};\n`;\n\nconst CodeInput = styled('code')`\n  ${p => inputStyles(p)}; /* Have to do this for typescript :( */\n`;\n\nconst InviteActions = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  margin-top: ${space(2)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"sourceRoot":""}