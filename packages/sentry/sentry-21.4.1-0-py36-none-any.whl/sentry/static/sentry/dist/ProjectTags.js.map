{"version":3,"sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/projectTags.tsx"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","this","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","props","icon","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","React","p","space","theme","gray400","fontSizeLarge","SettingsPageHeader","PermissionAlert","access","hasAccess","type","size","t","key","idx","params","projectId","orgId","api","requestPromise","method","tags","state","splice","setState","error","loading","routeTitleGen","isEmpty","length","tct","link","href","map","enabled","canDelete","TagPanelItem","data-test-id","TagName","Actions","disabled","message","onConfirm","handleDelete","PanelItem"],"mappings":"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","file":"ProjectTags.58388b91b39a99bf0a8b.js","sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\n\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\nimport {IconWarning} from 'app/icons';\nimport {t} from 'app/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport Tooltip from 'app/components/tooltip';\nimport {IconDelete} from 'app/icons';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {TagWithTopValues} from 'app/types';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\n\ntype Props = RouteComponentProps<{projectId: string; orgId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  tags: Array<TagWithTopValues>;\n} & AsyncView['state'];\n\nclass ProjectTags extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tags: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {projectId, orgId} = this.props.params;\n    return [['tags', `/projects/${orgId}/${projectId}/tags/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Tags'), projectId, false);\n  }\n\n  handleDelete = (key: TagWithTopValues['key'], idx: number) => async () => {\n    const {params} = this.props;\n    const {projectId, orgId} = params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/tags/${key}/`, {\n        method: 'DELETE',\n      });\n\n      const tags = [...this.state.tags];\n      tags.splice(idx, 1);\n      this.setState({tags});\n    } catch (error) {\n      this.setState({error: true, loading: false});\n    }\n  };\n\n  renderBody() {\n    const {tags} = this.state;\n    const isEmpty = !tags || !tags.length;\n\n    return (\n      <React.Fragment>\n        <SettingsPageHeader title={t('Tags')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {tct(\n            `Each event in Sentry may be annotated with various tags (key and value pairs).\n                 Learn how to [link:add custom tags].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <Panel>\n          <PanelHeader>{t('Tags')}</PanelHeader>\n          <PanelBody>\n            {isEmpty ? (\n              <EmptyMessage>\n                {tct('There are no tags, [link:learn how to add tags]', {\n                  link: (\n                    <ExternalLink href=\"https://docs.sentry.io/product/sentry-basics/guides/enrich-data/\" />\n                  ),\n                })}\n              </EmptyMessage>\n            ) : (\n              <Access access={['project:write']}>\n                {({hasAccess}) =>\n                  tags.map(({key, canDelete}, idx) => {\n                    const enabled = canDelete && hasAccess;\n                    return (\n                      <TagPanelItem key={key} data-test-id=\"tag-row\">\n                        <TagName>{key}</TagName>\n                        <Actions>\n                          <Tooltip\n                            disabled={enabled}\n                            title={\n                              hasAccess\n                                ? t('This tag cannot be deleted.')\n                                : t('You do not have permission to remove tags.')\n                            }\n                          >\n                            <Confirm\n                              message={t('Are you sure you want to remove this tag?')}\n                              onConfirm={this.handleDelete(key, idx)}\n                              disabled={!enabled}\n                            >\n                              <Button\n                                size=\"xsmall\"\n                                title={t('Remove tag')}\n                                icon={<IconDelete size=\"xs\" />}\n                                data-test-id=\"delete\"\n                              />\n                            </Confirm>\n                          </Tooltip>\n                        </Actions>\n                      </TagPanelItem>\n                    );\n                  })\n                }\n              </Access>\n            )}\n          </PanelBody>\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ProjectTags;\n\nconst TagPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst TagName = styled('div')`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n`;\n"],"sourceRoot":""}