{"version":3,"sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/utils/isActiveSuperuser.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"names":["Role","user","ConfigStore","this","props","organization","role","availableRoles","currentRole","isSuperuser","Cookies","undefined","Array","isArray","roleIds","map","r","id","includes","requiredIndex","indexOf","children","hasRole","isRenderFunc","React","withOrganization","FileSize","className","bytes","getDynamicText","value","formatBytesBase2","fixed","SearchBar","query","defaultQuery","dropdownVisible","searchInputRef","current","blur","evt","preventDefault","onSearch","state","setState","callIfFunction","onChange","target","nextProps","width","classNames","onSubmit","StyledInput","type","placeholder","name","ref","autoComplete","onBlur","onQueryBlur","onQueryChange","StyledIconSearch","size","color","SearchClearButton","priority","onClick","clearSearch","icon","label","t","Input","p","IconSearch","Button","theme","fontSizeLarge","gray200","gray300","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","title","getTitle","renderComponent","AsyncComponent","UnstyledSettingsPageHeader","subtitle","action","tabs","noTitleStyles","body","isNarrow","TitleAndActions","TitleWrapper","Icon","Title","styled","Subtitle","Action","BodyWrapper","TabsWrapper","space","gray400","SettingsPageHeader","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","downloadRole","dateCreated","dist","handleDeleteClick","NameColumn","Name","TimeAndDistWrapper","TimeWrapper","date","StyledTag","tooltipText","SizeColumn","ActionsColumn","gap","disabled","href","access","hasAccess","message","onConfirm","fontSizeMedium","subText","Tag","ProjectSourceMapsDetail","location","router","push","cursor","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","params","orgId","projectId","routeTitleGen","formatVersion","artifacts","getQuery","encodeURIComponent","decodeScalar","renderBody","artifactApiUrl","baseUrl","length","key","handleArtifactDelete","debugFilesRole","loading","artifactsPageLinks","project","StyledSettingsPageHeader","version","tooltipRawVersion","anchor","truncate","StyledButtonBar","ReleaseButton","to","handleArchiveDelete","handleSearch","StyledPanelTable","headers","emptyMessage","getEmptyMessage","isEmpty","isLoading","renderArtifacts","pageLinks","breakpoints","ButtonBar","PanelTable"],"mappings":"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","file":"ProjectSourceMapsDetail.98a79564334b6872d00c.js","sourcesContent":["import React from 'react';\n\nimport ConfigStore from 'app/stores/configStore';\nimport {Organization} from 'app/types';\nimport {isActiveSuperuser} from 'app/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactNode;\n\ntype Props = {\n  /**\n   * Minimum required role\n   */\n  role: string;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactNode | ChildrenRenderFn;\n};\n\nclass Role extends React.Component<Props> {\n  hasRole() {\n    const user = ConfigStore.get('user');\n    const {organization, role} = this.props;\n    const {availableRoles} = organization;\n    const currentRole = organization.role ?? '';\n\n    if (!user) {\n      return false;\n    }\n\n    if (isActiveSuperuser()) {\n      return true;\n    }\n\n    if (!Array.isArray(availableRoles)) {\n      return false;\n    }\n\n    const roleIds = availableRoles.map(r => r.id);\n\n    if (!roleIds.includes(role) || !roleIds.includes(currentRole)) {\n      return false;\n    }\n\n    const requiredIndex = roleIds.indexOf(role);\n    const currentIndex = roleIds.indexOf(currentRole);\n    return currentIndex >= requiredIndex;\n  }\n\n  render() {\n    const {children} = this.props;\n    const hasRole = this.hasRole();\n\n    if (isRenderFunc<ChildrenRenderFn>(children)) {\n      return children({hasRole});\n    }\n\n    return hasRole && children ? children : null;\n  }\n}\n\nexport default withOrganization(Role);\n","import Cookies from 'js-cookie';\n\nimport ConfigStore from 'app/stores/configStore';\n\nconst SUPERUSER_COOKIE_NAME = 'su';\n\n/**\n * Checking for just isSuperuser on a config object may not be enough as backend often checks for *active* superuser.\n * We therefore check both isSuperuser flag AND superuser session cookie.\n */\nexport function isActiveSuperuser() {\n  const {isSuperuser} = ConfigStore.get('user') || {};\n\n  if (isSuperuser) {\n    /**\n     * Superuser cookie cannot be checked for existence as it is HttpOnly.\n     * As a workaround, we try to change it to something else and if that fails we can assume that it's being present.\n     * There may be an edgecase where it's present and expired but for current usage it's not a big deal.\n     */\n    Cookies.set(SUPERUSER_COOKIE_NAME, 'test');\n\n    if (Cookies.get(SUPERUSER_COOKIE_NAME) === undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import React from 'react';\n\nimport {formatBytesBase2} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytesBase2(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nexport default FileSize;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport {IconSearch} from 'app/icons';\nimport {IconClose} from 'app/icons/iconClose';\nimport {t} from 'app/locale';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport Input from 'app/views/settings/components/forms/controls/input';\n\ntype DefaultProps = {\n  query: string;\n  defaultQuery: string;\n  onSearch: (query: string) => void;\n};\n\ntype Props = DefaultProps & {\n  placeholder?: string;\n  className?: string;\n  onChange?: (query: string) => void;\n  width?: string;\n};\n\ntype State = {\n  query: string;\n  dropdownVisible: boolean;\n};\n\nclass SearchBar extends React.PureComponent<Props, State> {\n  static defaultProps: DefaultProps = {\n    query: '',\n    defaultQuery: '',\n    onSearch: function () {},\n  };\n\n  state = {\n    query: this.props.query || this.props.defaultQuery,\n    dropdownVisible: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  searchInputRef = React.createRef<HTMLInputElement>();\n\n  blur = () => {\n    if (this.searchInputRef.current) {\n      this.searchInputRef.current.blur();\n    }\n  };\n\n  onSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () => {\n      this.props.onSearch(this.state.query);\n      callIfFunction(this.props.onChange, this.state.query);\n    });\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const {value} = evt.target;\n\n    this.setState({query: value});\n    callIfFunction(this.props.onChange, value);\n  };\n\n  render() {\n    const {className, width} = this.props;\n\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <StyledInput\n              type=\"text\"\n              className=\"search-input\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n              width={width}\n            />\n            <StyledIconSearch className=\"search-input-icon\" size=\"sm\" color=\"gray300\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <SearchClearButton\n                type=\"button\"\n                className=\"search-clear-form\"\n                priority=\"link\"\n                onClick={this.clearSearch}\n                size=\"xsmall\"\n                icon={<IconClose />}\n                label={t('Clear')}\n              />\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  width: ${p => (p.width ? p.width : undefined)};\n  &.focus-visible {\n    box-shadow: inset 0 2px 0 rgba(0, 0, 0, 0.04), 0 0 6px rgba(177, 171, 225, 0.3);\n    border-color: #a598b2;\n    outline: none;\n  }\n`;\n\nconst StyledIconSearch = styled(IconSearch)`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 14px;\n`;\n\nconst SearchClearButton = styled(Button)`\n  position: absolute;\n  top: 50%;\n  height: 16px;\n  transform: translateY(-50%);\n  right: 10px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.gray200};\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {HeaderTitle} from 'app/styles/organization';\nimport space from 'app/styles/space';\n\ntype Props = {\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // The title\n  title: React.ReactNode;\n  subtitle?: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n  className?: string;\n\n  // CTA button\n  action?: React.ReactNode;\n\n  body?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass UnstyledSettingsPageHeader extends React.Component<Props> {\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {\n      icon,\n      title,\n      subtitle,\n      action,\n      tabs,\n      noTitleStyles,\n      body,\n      ...props\n    } = this.props;\n\n    // If Header is narrow, use align-items to center <Action>.\n    // Otherwise, use a fixed margin to prevent an odd alignment.\n    // This is needed as Actions could be a button or a dropdown.\n    const isNarrow = !subtitle;\n\n    return (\n      <div {...props}>\n        <TitleAndActions isNarrow={isNarrow}>\n          <TitleWrapper>\n            {icon && <Icon>{icon}</Icon>}\n            {title && (\n              <Title tabs={tabs} styled={noTitleStyles}>\n                <HeaderTitle>{title}</HeaderTitle>\n                {subtitle && <Subtitle>{subtitle}</Subtitle>}\n              </Title>\n            )}\n          </TitleWrapper>\n          {action && <Action isNarrow={isNarrow}>{action}</Action>}\n        </TitleAndActions>\n\n        {body && <BodyWrapper>{body}</BodyWrapper>}\n        {tabs && <TabsWrapper>{tabs}</TabsWrapper>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')<{isNarrow?: boolean}>`\n  display: flex;\n  align-items: ${p => (p.isNarrow ? 'center' : 'flex-start')};\n`;\nconst TitleWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p => !p.styled && `font-size: 20px; font-weight: 600;`};\n  margin: ${space(4)} ${space(2)} ${space(3)} 0;\n`;\nconst Subtitle = styled('div')`\n  color: ${p => p.theme.gray400};\n  font-weight: 400;\n  font-size: ${p => p.theme.fontSizeLarge};\n  padding: ${space(1.5)} 0 0;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{isNarrow?: boolean}>`\n  margin-top: ${p => (p.isNarrow ? '0' : space(4))};\n`;\n\nconst SettingsPageHeader = styled(UnstyledSettingsPageHeader)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nconst BodyWrapper = styled('div')`\n  flex: 1;\n  margin: 0 0 ${space(3)};\n`;\nconst TabsWrapper = styled('div')`\n  flex: 1;\n  margin: 0; /* sentry/components/navTabs has added margin */\n`;\n\nexport default SettingsPageHeader;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'app/components/acl/access';\nimport Role from 'app/components/acl/role';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport FileSize from 'app/components/fileSize';\nimport Tag from 'app/components/tag';\nimport TimeSince from 'app/components/timeSince';\nimport Tooltip from 'app/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Artifact} from 'app/types';\n\ntype Props = {\n  artifact: Artifact;\n  onDelete: (id: string) => void;\n  downloadUrl: string;\n  downloadRole: string;\n};\n\nconst SourceMapsArtifactRow = ({\n  artifact,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n}: Props) => {\n  const {name, size, dateCreated, id, dist} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <React.Fragment>\n      <NameColumn>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"sm\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          <StyledTag\n            type={dist ? 'info' : undefined}\n            tooltipText={dist ? undefined : t('No distribution set')}\n          >\n            {dist ?? t('none')}\n          </StyledTag>\n        </TimeAndDistWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={t('You do not have permission to download artifacts.')}\n                disabled={hasRole}\n              >\n                <Button\n                  size=\"small\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Artifact') : undefined}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this artifact?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"small\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Artifact') : undefined}\n                    label={t('Remove Artifact')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </React.Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  grid-gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n\nexport default SourceMapsArtifactRow;\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport Access from 'app/components/acl/access';\nimport Button from 'app/components/button';\nimport ButtonBar from 'app/components/buttonBar';\nimport Confirm from 'app/components/confirm';\nimport Pagination from 'app/components/pagination';\nimport {PanelTable} from 'app/components/panels';\nimport SearchBar from 'app/components/searchBar';\nimport TextOverflow from 'app/components/textOverflow';\nimport Tooltip from 'app/components/tooltip';\nimport Version from 'app/components/version';\nimport {IconDelete} from 'app/icons';\nimport {t} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Artifact, Organization, Project} from 'app/types';\nimport {formatVersion} from 'app/utils/formatters';\nimport {decodeScalar} from 'app/utils/queryString';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport AsyncView from 'app/views/asyncView';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {orgId: string; projectId: string; name: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMapsDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, name} = this.props.params;\n\n    return routeTitleGen(t('Archive %s', formatVersion(name)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {orgId, projectId, name} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(name)}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleArtifactDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  handleArchiveDelete = async () => {\n    const {orgId, projectId, name} = this.props.params;\n\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/files/source-maps/`,\n        {\n          method: 'DELETE',\n          query: {name},\n        }\n      );\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts in this archive.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {organization} = this.props;\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleArtifactDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n          downloadRole={organization.debugFilesRole}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {name, orgId} = this.props.params;\n    const {project} = this.props;\n\n    return (\n      <React.Fragment>\n        <StyledSettingsPageHeader\n          title={\n            <Title>\n              {t('Archive')}&nbsp;\n              <TextOverflow>\n                <Version version={name} tooltipRawVersion anchor={false} truncate />\n              </TextOverflow>\n            </Title>\n          }\n          action={\n            <StyledButtonBar gap={1}>\n              <ReleaseButton\n                to={`/organizations/${orgId}/releases/${encodeURIComponent(\n                  name\n                )}/?project=${project.id}`}\n              >\n                {t('Go to Release')}\n              </ReleaseButton>\n              <Access access={['project:releases']}>\n                {({hasAccess}) => (\n                  <Tooltip\n                    disabled={hasAccess}\n                    title={t('You do not have permission to delete artifacts.')}\n                  >\n                    <Confirm\n                      message={t(\n                        'Are you sure you want to remove all artifacts in this archive?'\n                      )}\n                      onConfirm={this.handleArchiveDelete}\n                      disabled={!hasAccess}\n                    >\n                      <Button\n                        icon={<IconDelete size=\"sm\" />}\n                        title={t('Remove All Artifacts')}\n                        label={t('Remove All Artifacts')}\n                        disabled={!hasAccess}\n                      />\n                    </Confirm>\n                  </Tooltip>\n                )}\n              </Access>\n\n              <SearchBar\n                placeholder={t('Filter artifacts')}\n                onSearch={this.handleSearch}\n                query={this.getQuery()}\n              />\n            </StyledButtonBar>\n          }\n        />\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </React.Fragment>\n    );\n  }\n}\n\nconst StyledSettingsPageHeader = styled(SettingsPageHeader)`\n  /*\n    ugly selector to make header work on mobile\n    we can refactor this once we start making other settings more responsive\n  */\n  > div {\n    @media (max-width: ${p => p.theme.breakpoints[2]}) {\n      display: block;\n    }\n    > div {\n      min-width: 0;\n      @media (max-width: ${p => p.theme.breakpoints[2]}) {\n        margin-bottom: ${space(2)};\n      }\n    }\n  }\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst ReleaseButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectSourceMapsDetail;\n"],"sourceRoot":""}