name: CI

on:
  [create, push, pull_request, workflow_dispatch]

jobs:
  linting-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools tox
        pip --version
        virtualenv --version
        tox --version
    - name: Run checks with tox
      run: tox -v
      env:
        TOXENV: check

  docs-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools tox
        pip --version
        virtualenv --version
        tox --version
    - name: Install pandoc
      run: sudo apt-get install pandoc
    - name: Build docs with tox
      run: tox -v
      env:
        TOXENV: docs

  unittests:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version : [3.6, 3.7, 3.8, 3.9]
        include:
          - python-version: 3.6
            toxenv: "py36-cover,report,codecov"
          - python-version: 3.7
            toxenv: "py37-cover,report,codecov"
          - python-version: 3.8
            toxenv: "py38-cover,report,codecov"
          - python-version: 3.9
            toxenv: "py39-cover,report,codecov"
        exclude:
          # TODO py39 on windows has errors so we exclude it for now
          - os: windows-latest
            python-version: 3.9

    steps:
    - uses: actions/checkout@v2

    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.8
        activate-environment: test

    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools tox tox-conda
        conda install numpy pandas scipy matplotlib
        conda info
        conda env list
        pip --version
        virtualenv --version
        tox --version

    - name: Test with tox
      run: |
        tox -v
      env:
        TOXENV: ${{ matrix.toxenv }}
        MPLBACKEND: "Agg"

  build-publish:
      runs-on: ubuntu-latest
      needs: [linting-checks, docs-build, unittests]
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

      steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade setuptools wheel
          pip --version

      - name: Build wheels
        run: python setup.py sdist bdist_wheel

      - name: Publish üì¶ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: GH üê±üêô Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
