import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_reg_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_reg_tile_size' in sizes:
        default_reg_tile_size = sizes['default_reg_tile_size']
        del sizes['default_reg_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'reg_tile_size': default_reg_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    default_reg_tile_size = default_sizes['reg_tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'] == 'reg_tile_size':
            max_value = None
            default_value = default_reg_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
#pragma OPENCL EXTENSION cl_khr_int64_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_int64_extended_atomics : enable
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzll(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline double fsignum32(double x)
{
    return futrts_isnan32(x) ? x : (x > 0) - (x < 0);
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                        int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_global((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_local((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

// Start of 64 bit atomics

inline int64_t atomic_xchg_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xchg_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_cmpxchg_i64_global(volatile __global int64_t *p,
                                         int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_cmpxchg_i64_local(volatile __local int64_t *p,
                                        int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_add_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline int64_t atomic_add_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline double atomic_fadd_f64_global(volatile __global double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_global((volatile __global int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline double atomic_fadd_f64_local(volatile __local double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_local((volatile __local int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int64_t atomic_smax_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smax_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smin_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_smin_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umax_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umax_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umin_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umin_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_and_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_and_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_or_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_or_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_xor_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xor_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_46318(int32_t num_elems_46315,
                                                      float val_46316, __global
                                                      unsigned char *mem_46314)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_46318;
    int32_t replicate_ltid_46319;
    int32_t replicate_gid_46320;
    
    replicate_gtid_46318 = get_global_id(0);
    replicate_ltid_46319 = get_local_id(0);
    replicate_gid_46320 = get_group_id(0);
    if (slt64(replicate_gtid_46318, num_elems_46315)) {
        ((__global float *) mem_46314)[sext_i32_i64(replicate_gtid_46318)] =
            val_46316;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_46327(int32_t num_elems_46324,
                                                      int32_t val_46325,
                                                      __global
                                                      unsigned char *mem_46323)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_46327;
    int32_t replicate_ltid_46328;
    int32_t replicate_gid_46329;
    
    replicate_gtid_46327 = get_global_id(0);
    replicate_ltid_46328 = get_local_id(0);
    replicate_gid_46329 = get_group_id(0);
    if (slt64(replicate_gtid_46327, num_elems_46324)) {
        ((__global int32_t *) mem_46323)[sext_i32_i64(replicate_gtid_46327)] =
            val_46325;
    }
    
  error_0:
    return;
}
__kernel void convertToFloatzisegmap_29816(__global int *global_failure,
                                           int64_t m_27757, int64_t n_27758,
                                           int64_t p_27759,
                                           int16_t nan_value_27760, __global
                                           unsigned char *images_mem_44380,
                                           __global unsigned char *mem_44385)
{
    #define segmap_group_sizze_29877 (convertToFloatzisegmap_group_sizze_29820)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45677;
    int32_t local_tid_45678;
    int64_t group_sizze_45681;
    int32_t wave_sizze_45680;
    int32_t group_tid_45679;
    
    global_tid_45677 = get_global_id(0);
    local_tid_45678 = get_local_id(0);
    group_sizze_45681 = get_local_size(0);
    wave_sizze_45680 = LOCKSTEP_WIDTH;
    group_tid_45679 = get_group_id(0);
    
    int32_t phys_tid_29816;
    
    phys_tid_29816 = global_tid_45677;
    
    int64_t gtid_29813;
    
    gtid_29813 = squot64(sext_i32_i64(group_tid_45679) *
                         segmap_group_sizze_29877 +
                         sext_i32_i64(local_tid_45678), n_27758 * p_27759);
    
    int64_t gtid_29814;
    
    gtid_29814 = squot64(sext_i32_i64(group_tid_45679) *
                         segmap_group_sizze_29877 +
                         sext_i32_i64(local_tid_45678) -
                         squot64(sext_i32_i64(group_tid_45679) *
                                 segmap_group_sizze_29877 +
                                 sext_i32_i64(local_tid_45678), n_27758 *
                                 p_27759) * (n_27758 * p_27759), p_27759);
    
    int64_t gtid_29815;
    
    gtid_29815 = sext_i32_i64(group_tid_45679) * segmap_group_sizze_29877 +
        sext_i32_i64(local_tid_45678) - squot64(sext_i32_i64(group_tid_45679) *
                                                segmap_group_sizze_29877 +
                                                sext_i32_i64(local_tid_45678),
                                                n_27758 * p_27759) * (n_27758 *
                                                                      p_27759) -
        squot64(sext_i32_i64(group_tid_45679) * segmap_group_sizze_29877 +
                sext_i32_i64(local_tid_45678) -
                squot64(sext_i32_i64(group_tid_45679) *
                        segmap_group_sizze_29877 +
                        sext_i32_i64(local_tid_45678), n_27758 * p_27759) *
                (n_27758 * p_27759), p_27759) * p_27759;
    if ((slt64(gtid_29813, m_27757) && slt64(gtid_29814, n_27758)) &&
        slt64(gtid_29815, p_27759)) {
        int16_t x_29880 = ((__global int16_t *) images_mem_44380)[gtid_29813 *
                                                                  (p_27759 *
                                                                   n_27758) +
                                                                  gtid_29814 *
                                                                  p_27759 +
                                                                  gtid_29815];
        bool cond_29881 = x_29880 == nan_value_27760;
        float defunc_0_f_res_29882;
        
        if (cond_29881) {
            defunc_0_f_res_29882 = NAN;
        } else {
            float i16_res_29883 = sitofp_i16_f32(x_29880);
            
            defunc_0_f_res_29882 = i16_res_29883;
        }
        ((__global float *) mem_44385)[gtid_29813 * (p_27759 * n_27758) +
                                       gtid_29814 * p_27759 + gtid_29815] =
            defunc_0_f_res_29882;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29877
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_45849(int64_t m_29166, int64_t nm_29314,
                               int64_t ctx_param_ext_44580,
                               int64_t ctx_param_ext_44581,
                               int64_t ctx_param_ext_44583, __global
                               unsigned char *mem_param_44585, __global
                               unsigned char *mem_44590)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_45849;
    int32_t copy_ltid_45850;
    int32_t copy_gid_45851;
    
    copy_gtid_45849 = get_global_id(0);
    copy_ltid_45850 = get_local_id(0);
    copy_gid_45851 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_45849), m_29166 * nm_29314)) {
        ((__global float *) mem_44590)[(sext_i32_i64(copy_gtid_45849) -
                                        squot64(sext_i32_i64(copy_gtid_45849),
                                                nm_29314) * nm_29314) *
                                       m_29166 +
                                       squot64(sext_i32_i64(copy_gtid_45849),
                                               nm_29314)] = ((__global
                                                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_45849),
                                                                                                 nm_29314) *
                                                                                         ctx_param_ext_44581 +
                                                                                         (sext_i32_i64(copy_gtid_45849) -
                                                                                          squot64(sext_i32_i64(copy_gtid_45849),
                                                                                                  nm_29314) *
                                                                                          nm_29314) *
                                                                                         ctx_param_ext_44583)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_41042(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46261_backing_aligned_0,
                                      int64_t N_29165, int64_t m_29166,
                                      int32_t num_threads_46255, __global
                                      unsigned char *images_mem_44381, __global
                                      unsigned char *defunc_3_map_res_mem_45140,
                                      __global unsigned char *mem_45163,
                                      __global unsigned char *mem_45166)
{
    #define segscan_group_sizze_41059 (mainzisegscan_group_sizze_41036)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46261_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46261_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46256;
    int32_t local_tid_46257;
    int64_t group_sizze_46260;
    int32_t wave_sizze_46259;
    int32_t group_tid_46258;
    
    global_tid_46256 = get_global_id(0);
    local_tid_46257 = get_local_id(0);
    group_sizze_46260 = get_local_size(0);
    wave_sizze_46259 = LOCKSTEP_WIDTH;
    group_tid_46258 = get_group_id(0);
    
    int32_t phys_tid_41042;
    
    phys_tid_41042 = global_tid_46256;
    
    __local char *scan_arr_mem_46261;
    
    scan_arr_mem_46261 = (__local char *) scan_arr_mem_46261_backing_0;
    
    int64_t x_41064;
    int64_t x_41065;
    
    x_41064 = (int64_t) 0;
    for (int64_t j_46263 = 0; j_46263 < sdiv_up64(m_29166 * N_29165,
                                                  sext_i32_i64(num_threads_46255));
         j_46263++) {
        int64_t chunk_offset_46264 = segscan_group_sizze_41059 * j_46263 +
                sext_i32_i64(group_tid_46258) * (segscan_group_sizze_41059 *
                                                 sdiv_up64(m_29166 * N_29165,
                                                           sext_i32_i64(num_threads_46255)));
        int64_t flat_idx_46265 = chunk_offset_46264 +
                sext_i32_i64(local_tid_46257);
        int64_t gtid_41033 = squot64(flat_idx_46265, N_29165);
        int64_t gtid_41041 = flat_idx_46265 - squot64(flat_idx_46265, N_29165) *
                N_29165;
        
        // threads in bounds read input
        {
            if (slt64(gtid_41033, m_29166) && slt64(gtid_41041, N_29165)) {
                float x_41069 = ((__global
                                  float *) images_mem_44381)[gtid_41033 *
                                                             N_29165 +
                                                             gtid_41041];
                bool isnan_res_41071;
                
                isnan_res_41071 = futrts_isnan32(x_41069);
                
                bool cond_41072 = !isnan_res_41071;
                float defunc_1_f_res_41073;
                
                if (cond_41072) {
                    float x_41070 = ((__global
                                      float *) defunc_3_map_res_mem_45140)[gtid_41033 *
                                                                           N_29165 +
                                                                           gtid_41041];
                    float defunc_1_f_res_t_res_41074 = x_41069 - x_41070;
                    
                    defunc_1_f_res_41073 = defunc_1_f_res_t_res_41074;
                } else {
                    defunc_1_f_res_41073 = NAN;
                }
                
                bool isnan_res_41075;
                
                isnan_res_41075 = futrts_isnan32(defunc_1_f_res_41073);
                
                bool defunc_0_p_res_41076 = !isnan_res_41075;
                int64_t defunc_0_f_res_41077 =
                        btoi_bool_i64(defunc_0_p_res_41076);
                
                // write to-scan values to parameters
                {
                    x_41065 = defunc_0_f_res_41077;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_45166)[gtid_41033 * N_29165 +
                                                   gtid_41041] =
                        defunc_1_f_res_41073;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_41033, m_29166) && slt64(gtid_41041,
                                                          N_29165))) {
                    x_41065 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_41066 = add64(x_41064, x_41065);
                
                ((__local
                  int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)] =
                    defunc_1_op_res_41066;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_46266;
            int64_t x_46267;
            int64_t x_46269;
            int64_t x_46270;
            bool ltid_in_bounds_46272;
            
            ltid_in_bounds_46272 = slt64(sext_i32_i64(local_tid_46257),
                                         segscan_group_sizze_41059);
            
            int32_t skip_threads_46273;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46272) {
                    x_46267 = ((volatile __local
                                int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)];
                    if ((local_tid_46257 - squot32(local_tid_46257, 32) * 32) ==
                        0) {
                        x_46266 = x_46267;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46273 = 1;
                while (slt32(skip_threads_46273, 32)) {
                    if (sle32(skip_threads_46273, local_tid_46257 -
                              squot32(local_tid_46257, 32) * 32) &&
                        ltid_in_bounds_46272) {
                        // read operands
                        {
                            x_46266 = ((volatile __local
                                        int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257) -
                                                                       sext_i32_i64(skip_threads_46273)];
                        }
                        // perform operation
                        {
                            bool inactive_46274 =
                                 slt64(srem64(sext_i32_i64(local_tid_46257) +
                                              chunk_offset_46264, N_29165),
                                       sext_i32_i64(local_tid_46257) +
                                       chunk_offset_46264 -
                                       (sext_i32_i64(local_tid_46257 -
                                        skip_threads_46273) +
                                        chunk_offset_46264));
                            
                            if (inactive_46274) {
                                x_46266 = x_46267;
                            }
                            if (!inactive_46274) {
                                int64_t defunc_1_op_res_46268 = add64(x_46266,
                                                                      x_46267);
                                
                                x_46266 = defunc_1_op_res_46268;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46259, skip_threads_46273)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46273, local_tid_46257 -
                              squot32(local_tid_46257, 32) * 32) &&
                        ltid_in_bounds_46272) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)] =
                                x_46266;
                            x_46267 = x_46266;
                        }
                    }
                    if (sle32(wave_sizze_46259, skip_threads_46273)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46273 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46257 - squot32(local_tid_46257, 32) * 32) ==
                    31 && ltid_in_bounds_46272) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46261)[sext_i32_i64(squot32(local_tid_46257,
                                                                          32))] =
                        x_46266;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46275;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46257, 32) == 0 &&
                        ltid_in_bounds_46272) {
                        x_46270 = ((volatile __local
                                    int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)];
                        if ((local_tid_46257 - squot32(local_tid_46257, 32) *
                             32) == 0) {
                            x_46269 = x_46270;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46275 = 1;
                    while (slt32(skip_threads_46275, 32)) {
                        if (sle32(skip_threads_46275, local_tid_46257 -
                                  squot32(local_tid_46257, 32) * 32) &&
                            (squot32(local_tid_46257, 32) == 0 &&
                             ltid_in_bounds_46272)) {
                            // read operands
                            {
                                x_46269 = ((volatile __local
                                            int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257) -
                                                                           sext_i32_i64(skip_threads_46275)];
                            }
                            // perform operation
                            {
                                bool inactive_46276 =
                                     slt64(srem64(sext_i32_i64(local_tid_46257 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46264, N_29165),
                                           sext_i32_i64(local_tid_46257 * 32 +
                                           32 - 1) + chunk_offset_46264 -
                                           (sext_i32_i64((local_tid_46257 -
                                                          skip_threads_46275) *
                                            32 + 32 - 1) + chunk_offset_46264));
                                
                                if (inactive_46276) {
                                    x_46269 = x_46270;
                                }
                                if (!inactive_46276) {
                                    int64_t defunc_1_op_res_46271 =
                                            add64(x_46269, x_46270);
                                    
                                    x_46269 = defunc_1_op_res_46271;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46259, skip_threads_46275)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46275, local_tid_46257 -
                                  squot32(local_tid_46257, 32) * 32) &&
                            (squot32(local_tid_46257, 32) == 0 &&
                             ltid_in_bounds_46272)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)] =
                                    x_46269;
                                x_46270 = x_46269;
                            }
                        }
                        if (sle32(wave_sizze_46259, skip_threads_46275)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46275 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46257, 32) == 0 ||
                      !ltid_in_bounds_46272)) {
                    // read operands
                    {
                        x_46267 = x_46266;
                        x_46266 = ((__local
                                    int64_t *) scan_arr_mem_46261)[sext_i32_i64(squot32(local_tid_46257,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_46277 =
                             slt64(srem64(sext_i32_i64(local_tid_46257) +
                                          chunk_offset_46264, N_29165),
                                   sext_i32_i64(local_tid_46257) +
                                   chunk_offset_46264 -
                                   (sext_i32_i64(squot32(local_tid_46257, 32) *
                                    32 - 1) + chunk_offset_46264));
                        
                        if (inactive_46277) {
                            x_46266 = x_46267;
                        }
                        if (!inactive_46277) {
                            int64_t defunc_1_op_res_46268 = add64(x_46266,
                                                                  x_46267);
                            
                            x_46266 = defunc_1_op_res_46268;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)] =
                            x_46266;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46257, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)] =
                        x_46267;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_41033, m_29166) && slt64(gtid_41041, N_29165)) {
                    ((__global int64_t *) mem_45163)[gtid_41033 * N_29165 +
                                                     gtid_41041] = ((__local
                                                                     int64_t *) scan_arr_mem_46261)[sext_i32_i64(local_tid_46257)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46278 = slt64(srem64(chunk_offset_46264 +
                                                          segscan_group_sizze_41059,
                                                          N_29165),
                                                   chunk_offset_46264 +
                                                   segscan_group_sizze_41059 -
                                                   (chunk_offset_46264 +
                                                    segscan_group_sizze_41059 -
                                                    (int64_t) 1));
                bool should_load_carry_46279 = local_tid_46257 == 0 &&
                     !crosses_segment_46278;
                
                if (should_load_carry_46279) {
                    x_41064 = ((__local
                                int64_t *) scan_arr_mem_46261)[segscan_group_sizze_41059 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_46279) {
                    x_41064 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_41059
}
__kernel void mainziscan_stage1_42114(__global int *global_failure,
                                      int failure_is_an_option, __global
                                      int64_t *global_failure_args,
                                      __local volatile
                                      int64_t *scan_arr_mem_46644_backing_aligned_0,
                                      int64_t N_29165, int64_t m_29166,
                                      int64_t iota32_arg_29597,
                                      int32_t num_threads_46638, __global
                                      unsigned char *defunc_4_map_res_mem_45178,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_45244,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_45245,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_45279,
                                      __global unsigned char *mem_45298,
                                      __global unsigned char *mem_45302)
{
    #define segscan_group_sizze_42200 (mainzisegscan_group_sizze_42108)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46644_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46644_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46639;
    int32_t local_tid_46640;
    int64_t group_sizze_46643;
    int32_t wave_sizze_46642;
    int32_t group_tid_46641;
    
    global_tid_46639 = get_global_id(0);
    local_tid_46640 = get_local_id(0);
    group_sizze_46643 = get_local_size(0);
    wave_sizze_46642 = LOCKSTEP_WIDTH;
    group_tid_46641 = get_group_id(0);
    
    int32_t phys_tid_42114;
    
    phys_tid_42114 = global_tid_46639;
    
    __local char *scan_arr_mem_46644;
    
    scan_arr_mem_46644 = (__local char *) scan_arr_mem_46644_backing_0;
    
    float x_42204;
    float x_42205;
    
    x_42204 = 0.0F;
    for (int64_t j_46646 = 0; j_46646 < sdiv_up64(m_29166 * iota32_arg_29597,
                                                  sext_i32_i64(num_threads_46638));
         j_46646++) {
        int64_t chunk_offset_46647 = segscan_group_sizze_42200 * j_46646 +
                sext_i32_i64(group_tid_46641) * (segscan_group_sizze_42200 *
                                                 sdiv_up64(m_29166 *
                                                           iota32_arg_29597,
                                                           sext_i32_i64(num_threads_46638)));
        int64_t flat_idx_46648 = chunk_offset_46647 +
                sext_i32_i64(local_tid_46640);
        int64_t gtid_42105 = squot64(flat_idx_46648, iota32_arg_29597);
        int64_t gtid_42113 = flat_idx_46648 - squot64(flat_idx_46648,
                                                      iota32_arg_29597) *
                iota32_arg_29597;
        
        // threads in bounds read input
        {
            if (slt64(gtid_42105, m_29166) && slt64(gtid_42113,
                                                    iota32_arg_29597)) {
                int32_t y_42211 = ((__global int32_t *) mem_45298)[gtid_42105];
                int32_t index_primexp_42401 = sext_i64_i32(gtid_42113);
                bool cond_42214 = sle32(y_42211, index_primexp_42401);
                float defunc_0_f_res_42215;
                
                if (cond_42214) {
                    defunc_0_f_res_42215 = 0.0F;
                } else {
                    int32_t x_42207 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_42105];
                    int32_t x_42208 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45244)[gtid_42105];
                    float x_42209 = ((__global
                                      float *) defunc_0_f_res_mem_45279)[gtid_42105];
                    bool cond_42216 = index_primexp_42401 == 0;
                    float defunc_0_f_res_f_res_42217;
                    
                    if (cond_42216) {
                        defunc_0_f_res_f_res_42217 = x_42209;
                    } else {
                        int32_t i_42218 = add32(x_42207, index_primexp_42401);
                        int64_t i_42219 = sext_i32_i64(i_42218);
                        bool x_42220 = sle64((int64_t) 0, i_42219);
                        bool y_42221 = slt64(i_42219, N_29165);
                        bool bounds_check_42222 = x_42220 && y_42221;
                        bool index_certs_42223;
                        
                        if (!bounds_check_42222) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 28) == -1) {
                                    global_failure_args[0] = i_42219;
                                    global_failure_args[1] = N_29165;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float x_42224 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_42105 *
                                                                               N_29165 +
                                                                               i_42219];
                        int32_t x_42225 = sub32(x_42207, x_42208);
                        int32_t i_42226 = add32(x_42225, index_primexp_42401);
                        int64_t i_42227 = sext_i32_i64(i_42226);
                        bool x_42228 = sle64((int64_t) 0, i_42227);
                        bool y_42229 = slt64(i_42227, N_29165);
                        bool bounds_check_42230 = x_42228 && y_42229;
                        bool index_certs_42231;
                        
                        if (!bounds_check_42230) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 29) == -1) {
                                    global_failure_args[0] = i_42227;
                                    global_failure_args[1] = N_29165;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float y_42232 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_42105 *
                                                                               N_29165 +
                                                                               i_42227];
                        float defunc_0_f_res_f_res_f_res_42233 = x_42224 -
                              y_42232;
                        
                        defunc_0_f_res_f_res_42217 =
                            defunc_0_f_res_f_res_f_res_42233;
                    }
                    defunc_0_f_res_42215 = defunc_0_f_res_f_res_42217;
                }
                // write to-scan values to parameters
                {
                    x_42205 = defunc_0_f_res_42215;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_42105, m_29166) && slt64(gtid_42113,
                                                          iota32_arg_29597))) {
                    x_42205 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_42206 = x_42204 + x_42205;
                
                ((__local
                  float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)] =
                    defunc_1_op_res_42206;
            }
            
          error_0:
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_failure)
                return;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_46649;
            float x_46650;
            float x_46652;
            float x_46653;
            bool ltid_in_bounds_46655;
            
            ltid_in_bounds_46655 = slt64(sext_i32_i64(local_tid_46640),
                                         segscan_group_sizze_42200);
            
            int32_t skip_threads_46656;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46655) {
                    x_46650 = ((volatile __local
                                float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)];
                    if ((local_tid_46640 - squot32(local_tid_46640, 32) * 32) ==
                        0) {
                        x_46649 = x_46650;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46656 = 1;
                while (slt32(skip_threads_46656, 32)) {
                    if (sle32(skip_threads_46656, local_tid_46640 -
                              squot32(local_tid_46640, 32) * 32) &&
                        ltid_in_bounds_46655) {
                        // read operands
                        {
                            x_46649 = ((volatile __local
                                        float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640) -
                                                                     sext_i32_i64(skip_threads_46656)];
                        }
                        // perform operation
                        {
                            bool inactive_46657 =
                                 slt64(srem64(sext_i32_i64(local_tid_46640) +
                                              chunk_offset_46647,
                                              iota32_arg_29597),
                                       sext_i32_i64(local_tid_46640) +
                                       chunk_offset_46647 -
                                       (sext_i32_i64(local_tid_46640 -
                                        skip_threads_46656) +
                                        chunk_offset_46647));
                            
                            if (inactive_46657) {
                                x_46649 = x_46650;
                            }
                            if (!inactive_46657) {
                                float defunc_1_op_res_46651 = x_46649 + x_46650;
                                
                                x_46649 = defunc_1_op_res_46651;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46642, skip_threads_46656)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46656, local_tid_46640 -
                              squot32(local_tid_46640, 32) * 32) &&
                        ltid_in_bounds_46655) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)] =
                                x_46649;
                            x_46650 = x_46649;
                        }
                    }
                    if (sle32(wave_sizze_46642, skip_threads_46656)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46656 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46640 - squot32(local_tid_46640, 32) * 32) ==
                    31 && ltid_in_bounds_46655) {
                    ((volatile __local
                      float *) scan_arr_mem_46644)[sext_i32_i64(squot32(local_tid_46640,
                                                                        32))] =
                        x_46649;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46658;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46640, 32) == 0 &&
                        ltid_in_bounds_46655) {
                        x_46653 = ((volatile __local
                                    float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)];
                        if ((local_tid_46640 - squot32(local_tid_46640, 32) *
                             32) == 0) {
                            x_46652 = x_46653;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46658 = 1;
                    while (slt32(skip_threads_46658, 32)) {
                        if (sle32(skip_threads_46658, local_tid_46640 -
                                  squot32(local_tid_46640, 32) * 32) &&
                            (squot32(local_tid_46640, 32) == 0 &&
                             ltid_in_bounds_46655)) {
                            // read operands
                            {
                                x_46652 = ((volatile __local
                                            float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640) -
                                                                         sext_i32_i64(skip_threads_46658)];
                            }
                            // perform operation
                            {
                                bool inactive_46659 =
                                     slt64(srem64(sext_i32_i64(local_tid_46640 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46647,
                                                  iota32_arg_29597),
                                           sext_i32_i64(local_tid_46640 * 32 +
                                           32 - 1) + chunk_offset_46647 -
                                           (sext_i32_i64((local_tid_46640 -
                                                          skip_threads_46658) *
                                            32 + 32 - 1) + chunk_offset_46647));
                                
                                if (inactive_46659) {
                                    x_46652 = x_46653;
                                }
                                if (!inactive_46659) {
                                    float defunc_1_op_res_46654 = x_46652 +
                                          x_46653;
                                    
                                    x_46652 = defunc_1_op_res_46654;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46642, skip_threads_46658)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46658, local_tid_46640 -
                                  squot32(local_tid_46640, 32) * 32) &&
                            (squot32(local_tid_46640, 32) == 0 &&
                             ltid_in_bounds_46655)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)] =
                                    x_46652;
                                x_46653 = x_46652;
                            }
                        }
                        if (sle32(wave_sizze_46642, skip_threads_46658)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46658 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46640, 32) == 0 ||
                      !ltid_in_bounds_46655)) {
                    // read operands
                    {
                        x_46650 = x_46649;
                        x_46649 = ((__local
                                    float *) scan_arr_mem_46644)[sext_i32_i64(squot32(local_tid_46640,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_46660 =
                             slt64(srem64(sext_i32_i64(local_tid_46640) +
                                          chunk_offset_46647, iota32_arg_29597),
                                   sext_i32_i64(local_tid_46640) +
                                   chunk_offset_46647 -
                                   (sext_i32_i64(squot32(local_tid_46640, 32) *
                                    32 - 1) + chunk_offset_46647));
                        
                        if (inactive_46660) {
                            x_46649 = x_46650;
                        }
                        if (!inactive_46660) {
                            float defunc_1_op_res_46651 = x_46649 + x_46650;
                            
                            x_46649 = defunc_1_op_res_46651;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)] =
                            x_46649;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46640, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)] =
                        x_46650;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_42105, m_29166) && slt64(gtid_42113,
                                                        iota32_arg_29597)) {
                    ((__global float *) mem_45302)[gtid_42105 *
                                                   iota32_arg_29597 +
                                                   gtid_42113] = ((__local
                                                                   float *) scan_arr_mem_46644)[sext_i32_i64(local_tid_46640)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46661 = slt64(srem64(chunk_offset_46647 +
                                                          segscan_group_sizze_42200,
                                                          iota32_arg_29597),
                                                   chunk_offset_46647 +
                                                   segscan_group_sizze_42200 -
                                                   (chunk_offset_46647 +
                                                    segscan_group_sizze_42200 -
                                                    (int64_t) 1));
                bool should_load_carry_46662 = local_tid_46640 == 0 &&
                     !crosses_segment_46661;
                
                if (should_load_carry_46662) {
                    x_42204 = ((__local
                                float *) scan_arr_mem_46644)[segscan_group_sizze_42200 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_46662) {
                    x_42204 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_42200
}
__kernel void mainziscan_stage2_41042(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46285_backing_aligned_0,
                                      int64_t N_29165, int64_t m_29166,
                                      int64_t stage1_num_groups_46254,
                                      int32_t num_threads_46255, __global
                                      unsigned char *mem_45163)
{
    #define segscan_group_sizze_41059 (mainzisegscan_group_sizze_41036)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46285_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46285_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46280;
    int32_t local_tid_46281;
    int64_t group_sizze_46284;
    int32_t wave_sizze_46283;
    int32_t group_tid_46282;
    
    global_tid_46280 = get_global_id(0);
    local_tid_46281 = get_local_id(0);
    group_sizze_46284 = get_local_size(0);
    wave_sizze_46283 = LOCKSTEP_WIDTH;
    group_tid_46282 = get_group_id(0);
    
    int32_t phys_tid_41042;
    
    phys_tid_41042 = global_tid_46280;
    
    __local char *scan_arr_mem_46285;
    
    scan_arr_mem_46285 = (__local char *) scan_arr_mem_46285_backing_0;
    
    int64_t flat_idx_46287;
    
    flat_idx_46287 = (sext_i32_i64(local_tid_46281) + (int64_t) 1) *
        (segscan_group_sizze_41059 * sdiv_up64(m_29166 * N_29165,
                                               sext_i32_i64(num_threads_46255))) -
        (int64_t) 1;
    
    int64_t gtid_41033;
    
    gtid_41033 = squot64(flat_idx_46287, N_29165);
    
    int64_t gtid_41041;
    
    gtid_41041 = flat_idx_46287 - squot64(flat_idx_46287, N_29165) * N_29165;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_41033, m_29166) && slt64(gtid_41041, N_29165)) {
            ((__local
              int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)] =
                ((__global int64_t *) mem_45163)[gtid_41033 * N_29165 +
                                                 gtid_41041];
        } else {
            ((__local
              int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_41064;
    int64_t x_41065;
    int64_t x_46288;
    int64_t x_46289;
    bool ltid_in_bounds_46291;
    
    ltid_in_bounds_46291 = slt64(sext_i32_i64(local_tid_46281),
                                 stage1_num_groups_46254);
    
    int32_t skip_threads_46292;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46291) {
            x_41065 = ((volatile __local
                        int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)];
            if ((local_tid_46281 - squot32(local_tid_46281, 32) * 32) == 0) {
                x_41064 = x_41065;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46292 = 1;
        while (slt32(skip_threads_46292, 32)) {
            if (sle32(skip_threads_46292, local_tid_46281 -
                      squot32(local_tid_46281, 32) * 32) &&
                ltid_in_bounds_46291) {
                // read operands
                {
                    x_41064 = ((volatile __local
                                int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281) -
                                                               sext_i32_i64(skip_threads_46292)];
                }
                // perform operation
                {
                    bool inactive_46293 =
                         slt64(srem64((sext_i32_i64(local_tid_46281) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_41059 *
                                       sdiv_up64(m_29166 * N_29165,
                                                 sext_i32_i64(num_threads_46255))) -
                                      (int64_t) 1, N_29165),
                               (sext_i32_i64(local_tid_46281) + (int64_t) 1) *
                               (segscan_group_sizze_41059 * sdiv_up64(m_29166 *
                                                                      N_29165,
                                                                      sext_i32_i64(num_threads_46255))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_46281 -
                                               skip_threads_46292) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_41059 *
                                               sdiv_up64(m_29166 * N_29165,
                                                         sext_i32_i64(num_threads_46255))) -
                                              (int64_t) 1));
                    
                    if (inactive_46293) {
                        x_41064 = x_41065;
                    }
                    if (!inactive_46293) {
                        int64_t defunc_1_op_res_41066 = add64(x_41064, x_41065);
                        
                        x_41064 = defunc_1_op_res_41066;
                    }
                }
            }
            if (sle32(wave_sizze_46283, skip_threads_46292)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46292, local_tid_46281 -
                      squot32(local_tid_46281, 32) * 32) &&
                ltid_in_bounds_46291) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)] =
                        x_41064;
                    x_41065 = x_41064;
                }
            }
            if (sle32(wave_sizze_46283, skip_threads_46292)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46292 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46281 - squot32(local_tid_46281, 32) * 32) == 31 &&
            ltid_in_bounds_46291) {
            ((volatile __local
              int64_t *) scan_arr_mem_46285)[sext_i32_i64(squot32(local_tid_46281,
                                                                  32))] =
                x_41064;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46294;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46281, 32) == 0 && ltid_in_bounds_46291) {
                x_46289 = ((volatile __local
                            int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)];
                if ((local_tid_46281 - squot32(local_tid_46281, 32) * 32) ==
                    0) {
                    x_46288 = x_46289;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46294 = 1;
            while (slt32(skip_threads_46294, 32)) {
                if (sle32(skip_threads_46294, local_tid_46281 -
                          squot32(local_tid_46281, 32) * 32) &&
                    (squot32(local_tid_46281, 32) == 0 &&
                     ltid_in_bounds_46291)) {
                    // read operands
                    {
                        x_46288 = ((volatile __local
                                    int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281) -
                                                                   sext_i32_i64(skip_threads_46294)];
                    }
                    // perform operation
                    {
                        bool inactive_46295 =
                             slt64(srem64((sext_i32_i64(local_tid_46281 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_41059 *
                                           sdiv_up64(m_29166 * N_29165,
                                                     sext_i32_i64(num_threads_46255))) -
                                          (int64_t) 1, N_29165),
                                   (sext_i32_i64(local_tid_46281 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_41059 *
                                    sdiv_up64(m_29166 * N_29165,
                                              sext_i32_i64(num_threads_46255))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_46281 -
                                                   skip_threads_46294) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_41059 *
                                     sdiv_up64(m_29166 * N_29165,
                                               sext_i32_i64(num_threads_46255))) -
                                    (int64_t) 1));
                        
                        if (inactive_46295) {
                            x_46288 = x_46289;
                        }
                        if (!inactive_46295) {
                            int64_t defunc_1_op_res_46290 = add64(x_46288,
                                                                  x_46289);
                            
                            x_46288 = defunc_1_op_res_46290;
                        }
                    }
                }
                if (sle32(wave_sizze_46283, skip_threads_46294)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46294, local_tid_46281 -
                          squot32(local_tid_46281, 32) * 32) &&
                    (squot32(local_tid_46281, 32) == 0 &&
                     ltid_in_bounds_46291)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)] =
                            x_46288;
                        x_46289 = x_46288;
                    }
                }
                if (sle32(wave_sizze_46283, skip_threads_46294)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46294 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46281, 32) == 0 || !ltid_in_bounds_46291)) {
            // read operands
            {
                x_41065 = x_41064;
                x_41064 = ((__local
                            int64_t *) scan_arr_mem_46285)[sext_i32_i64(squot32(local_tid_46281,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46296 =
                     slt64(srem64((sext_i32_i64(local_tid_46281) +
                                   (int64_t) 1) * (segscan_group_sizze_41059 *
                                                   sdiv_up64(m_29166 * N_29165,
                                                             sext_i32_i64(num_threads_46255))) -
                                  (int64_t) 1, N_29165),
                           (sext_i32_i64(local_tid_46281) + (int64_t) 1) *
                           (segscan_group_sizze_41059 * sdiv_up64(m_29166 *
                                                                  N_29165,
                                                                  sext_i32_i64(num_threads_46255))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_46281,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_41059 *
                                           sdiv_up64(m_29166 * N_29165,
                                                     sext_i32_i64(num_threads_46255))) -
                                          (int64_t) 1));
                
                if (inactive_46296) {
                    x_41064 = x_41065;
                }
                if (!inactive_46296) {
                    int64_t defunc_1_op_res_41066 = add64(x_41064, x_41065);
                    
                    x_41064 = defunc_1_op_res_41066;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)] =
                    x_41064;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46281, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)] =
                x_41065;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_41033, m_29166) && slt64(gtid_41041, N_29165)) {
            ((__global int64_t *) mem_45163)[gtid_41033 * N_29165 +
                                             gtid_41041] = ((__local
                                                             int64_t *) scan_arr_mem_46285)[sext_i32_i64(local_tid_46281)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41059
}
__kernel void mainziscan_stage2_42114(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46668_backing_aligned_0,
                                      int64_t m_29166, int64_t iota32_arg_29597,
                                      int64_t stage1_num_groups_46637,
                                      int32_t num_threads_46638, __global
                                      unsigned char *mem_45302)
{
    #define segscan_group_sizze_42200 (mainzisegscan_group_sizze_42108)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46668_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46668_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46663;
    int32_t local_tid_46664;
    int64_t group_sizze_46667;
    int32_t wave_sizze_46666;
    int32_t group_tid_46665;
    
    global_tid_46663 = get_global_id(0);
    local_tid_46664 = get_local_id(0);
    group_sizze_46667 = get_local_size(0);
    wave_sizze_46666 = LOCKSTEP_WIDTH;
    group_tid_46665 = get_group_id(0);
    
    int32_t phys_tid_42114;
    
    phys_tid_42114 = global_tid_46663;
    
    __local char *scan_arr_mem_46668;
    
    scan_arr_mem_46668 = (__local char *) scan_arr_mem_46668_backing_0;
    
    int64_t flat_idx_46670;
    
    flat_idx_46670 = (sext_i32_i64(local_tid_46664) + (int64_t) 1) *
        (segscan_group_sizze_42200 * sdiv_up64(m_29166 * iota32_arg_29597,
                                               sext_i32_i64(num_threads_46638))) -
        (int64_t) 1;
    
    int64_t gtid_42105;
    
    gtid_42105 = squot64(flat_idx_46670, iota32_arg_29597);
    
    int64_t gtid_42113;
    
    gtid_42113 = flat_idx_46670 - squot64(flat_idx_46670, iota32_arg_29597) *
        iota32_arg_29597;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_42105, m_29166) && slt64(gtid_42113, iota32_arg_29597)) {
            ((__local
              float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)] =
                ((__global float *) mem_45302)[gtid_42105 * iota32_arg_29597 +
                                               gtid_42113];
        } else {
            ((__local
              float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_42204;
    float x_42205;
    float x_46671;
    float x_46672;
    bool ltid_in_bounds_46674;
    
    ltid_in_bounds_46674 = slt64(sext_i32_i64(local_tid_46664),
                                 stage1_num_groups_46637);
    
    int32_t skip_threads_46675;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46674) {
            x_42205 = ((volatile __local
                        float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)];
            if ((local_tid_46664 - squot32(local_tid_46664, 32) * 32) == 0) {
                x_42204 = x_42205;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46675 = 1;
        while (slt32(skip_threads_46675, 32)) {
            if (sle32(skip_threads_46675, local_tid_46664 -
                      squot32(local_tid_46664, 32) * 32) &&
                ltid_in_bounds_46674) {
                // read operands
                {
                    x_42204 = ((volatile __local
                                float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664) -
                                                             sext_i32_i64(skip_threads_46675)];
                }
                // perform operation
                {
                    bool inactive_46676 =
                         slt64(srem64((sext_i32_i64(local_tid_46664) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_42200 *
                                       sdiv_up64(m_29166 * iota32_arg_29597,
                                                 sext_i32_i64(num_threads_46638))) -
                                      (int64_t) 1, iota32_arg_29597),
                               (sext_i32_i64(local_tid_46664) + (int64_t) 1) *
                               (segscan_group_sizze_42200 * sdiv_up64(m_29166 *
                                                                      iota32_arg_29597,
                                                                      sext_i32_i64(num_threads_46638))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_46664 -
                                               skip_threads_46675) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_42200 *
                                               sdiv_up64(m_29166 *
                                                         iota32_arg_29597,
                                                         sext_i32_i64(num_threads_46638))) -
                                              (int64_t) 1));
                    
                    if (inactive_46676) {
                        x_42204 = x_42205;
                    }
                    if (!inactive_46676) {
                        float defunc_1_op_res_42206 = x_42204 + x_42205;
                        
                        x_42204 = defunc_1_op_res_42206;
                    }
                }
            }
            if (sle32(wave_sizze_46666, skip_threads_46675)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46675, local_tid_46664 -
                      squot32(local_tid_46664, 32) * 32) &&
                ltid_in_bounds_46674) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)] =
                        x_42204;
                    x_42205 = x_42204;
                }
            }
            if (sle32(wave_sizze_46666, skip_threads_46675)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46675 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46664 - squot32(local_tid_46664, 32) * 32) == 31 &&
            ltid_in_bounds_46674) {
            ((volatile __local
              float *) scan_arr_mem_46668)[sext_i32_i64(squot32(local_tid_46664,
                                                                32))] = x_42204;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46677;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46664, 32) == 0 && ltid_in_bounds_46674) {
                x_46672 = ((volatile __local
                            float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)];
                if ((local_tid_46664 - squot32(local_tid_46664, 32) * 32) ==
                    0) {
                    x_46671 = x_46672;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46677 = 1;
            while (slt32(skip_threads_46677, 32)) {
                if (sle32(skip_threads_46677, local_tid_46664 -
                          squot32(local_tid_46664, 32) * 32) &&
                    (squot32(local_tid_46664, 32) == 0 &&
                     ltid_in_bounds_46674)) {
                    // read operands
                    {
                        x_46671 = ((volatile __local
                                    float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664) -
                                                                 sext_i32_i64(skip_threads_46677)];
                    }
                    // perform operation
                    {
                        bool inactive_46678 =
                             slt64(srem64((sext_i32_i64(local_tid_46664 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_42200 *
                                           sdiv_up64(m_29166 * iota32_arg_29597,
                                                     sext_i32_i64(num_threads_46638))) -
                                          (int64_t) 1, iota32_arg_29597),
                                   (sext_i32_i64(local_tid_46664 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_42200 *
                                    sdiv_up64(m_29166 * iota32_arg_29597,
                                              sext_i32_i64(num_threads_46638))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_46664 -
                                                   skip_threads_46677) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_42200 *
                                     sdiv_up64(m_29166 * iota32_arg_29597,
                                               sext_i32_i64(num_threads_46638))) -
                                    (int64_t) 1));
                        
                        if (inactive_46678) {
                            x_46671 = x_46672;
                        }
                        if (!inactive_46678) {
                            float defunc_1_op_res_46673 = x_46671 + x_46672;
                            
                            x_46671 = defunc_1_op_res_46673;
                        }
                    }
                }
                if (sle32(wave_sizze_46666, skip_threads_46677)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46677, local_tid_46664 -
                          squot32(local_tid_46664, 32) * 32) &&
                    (squot32(local_tid_46664, 32) == 0 &&
                     ltid_in_bounds_46674)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)] =
                            x_46671;
                        x_46672 = x_46671;
                    }
                }
                if (sle32(wave_sizze_46666, skip_threads_46677)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46677 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46664, 32) == 0 || !ltid_in_bounds_46674)) {
            // read operands
            {
                x_42205 = x_42204;
                x_42204 = ((__local
                            float *) scan_arr_mem_46668)[sext_i32_i64(squot32(local_tid_46664,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46679 =
                     slt64(srem64((sext_i32_i64(local_tid_46664) +
                                   (int64_t) 1) * (segscan_group_sizze_42200 *
                                                   sdiv_up64(m_29166 *
                                                             iota32_arg_29597,
                                                             sext_i32_i64(num_threads_46638))) -
                                  (int64_t) 1, iota32_arg_29597),
                           (sext_i32_i64(local_tid_46664) + (int64_t) 1) *
                           (segscan_group_sizze_42200 * sdiv_up64(m_29166 *
                                                                  iota32_arg_29597,
                                                                  sext_i32_i64(num_threads_46638))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_46664,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_42200 *
                                           sdiv_up64(m_29166 * iota32_arg_29597,
                                                     sext_i32_i64(num_threads_46638))) -
                                          (int64_t) 1));
                
                if (inactive_46679) {
                    x_42204 = x_42205;
                }
                if (!inactive_46679) {
                    float defunc_1_op_res_42206 = x_42204 + x_42205;
                    
                    x_42204 = defunc_1_op_res_42206;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)] =
                    x_42204;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46664, 32) == 0) {
            ((__local
              float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)] =
                x_42205;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_42105, m_29166) && slt64(gtid_42113, iota32_arg_29597)) {
            ((__global float *) mem_45302)[gtid_42105 * iota32_arg_29597 +
                                           gtid_42113] = ((__local
                                                           float *) scan_arr_mem_46668)[sext_i32_i64(local_tid_46664)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_42200
}
__kernel void mainziscan_stage3_41042(__global int *global_failure,
                                      int64_t N_29165, int64_t m_29166,
                                      int64_t num_groups_41060,
                                      int32_t num_threads_46255,
                                      int32_t required_groups_46297, __global
                                      unsigned char *mem_45163)
{
    #define segscan_group_sizze_41059 (mainzisegscan_group_sizze_41036)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46298;
    int32_t local_tid_46299;
    int64_t group_sizze_46302;
    int32_t wave_sizze_46301;
    int32_t group_tid_46300;
    
    global_tid_46298 = get_global_id(0);
    local_tid_46299 = get_local_id(0);
    group_sizze_46302 = get_local_size(0);
    wave_sizze_46301 = LOCKSTEP_WIDTH;
    group_tid_46300 = get_group_id(0);
    
    int32_t phys_tid_41042;
    
    phys_tid_41042 = global_tid_46298;
    
    int32_t phys_group_id_46303;
    
    phys_group_id_46303 = get_group_id(0);
    for (int32_t i_46304 = 0; i_46304 < sdiv_up32(required_groups_46297 -
                                                  phys_group_id_46303,
                                                  sext_i64_i32(num_groups_41060));
         i_46304++) {
        int32_t virt_group_id_46305 = phys_group_id_46303 + i_46304 *
                sext_i64_i32(num_groups_41060);
        int64_t flat_idx_46306 = sext_i32_i64(virt_group_id_46305) *
                segscan_group_sizze_41059 + sext_i32_i64(local_tid_46299);
        int64_t gtid_41033 = squot64(flat_idx_46306, N_29165);
        int64_t gtid_41041 = flat_idx_46306 - squot64(flat_idx_46306, N_29165) *
                N_29165;
        int64_t orig_group_46307 = squot64(flat_idx_46306,
                                           segscan_group_sizze_41059 *
                                           sdiv_up64(m_29166 * N_29165,
                                                     sext_i32_i64(num_threads_46255)));
        int64_t carry_in_flat_idx_46308 = orig_group_46307 *
                (segscan_group_sizze_41059 * sdiv_up64(m_29166 * N_29165,
                                                       sext_i32_i64(num_threads_46255))) -
                (int64_t) 1;
        
        if (slt64(gtid_41033, m_29166) && slt64(gtid_41041, N_29165)) {
            if (!(orig_group_46307 == (int64_t) 0 || (flat_idx_46306 ==
                                                      (orig_group_46307 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_41059 *
                                                       sdiv_up64(m_29166 *
                                                                 N_29165,
                                                                 sext_i32_i64(num_threads_46255))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_46306,
                                                                   N_29165),
                                                            flat_idx_46306 -
                                                            carry_in_flat_idx_46308)))) {
                int64_t x_41064;
                int64_t x_41065;
                
                x_41064 = ((__global
                            int64_t *) mem_45163)[squot64(carry_in_flat_idx_46308,
                                                          N_29165) * N_29165 +
                                                  (carry_in_flat_idx_46308 -
                                                   squot64(carry_in_flat_idx_46308,
                                                           N_29165) * N_29165)];
                x_41065 = ((__global int64_t *) mem_45163)[gtid_41033 *
                                                           N_29165 +
                                                           gtid_41041];
                
                int64_t defunc_1_op_res_41066;
                
                defunc_1_op_res_41066 = add64(x_41064, x_41065);
                x_41064 = defunc_1_op_res_41066;
                ((__global int64_t *) mem_45163)[gtid_41033 * N_29165 +
                                                 gtid_41041] = x_41064;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41059
}
__kernel void mainziscan_stage3_42114(__global int *global_failure,
                                      int64_t m_29166, int64_t iota32_arg_29597,
                                      int64_t num_groups_42201,
                                      int32_t num_threads_46638,
                                      int32_t required_groups_46680, __global
                                      unsigned char *mem_45302)
{
    #define segscan_group_sizze_42200 (mainzisegscan_group_sizze_42108)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46681;
    int32_t local_tid_46682;
    int64_t group_sizze_46685;
    int32_t wave_sizze_46684;
    int32_t group_tid_46683;
    
    global_tid_46681 = get_global_id(0);
    local_tid_46682 = get_local_id(0);
    group_sizze_46685 = get_local_size(0);
    wave_sizze_46684 = LOCKSTEP_WIDTH;
    group_tid_46683 = get_group_id(0);
    
    int32_t phys_tid_42114;
    
    phys_tid_42114 = global_tid_46681;
    
    int32_t phys_group_id_46686;
    
    phys_group_id_46686 = get_group_id(0);
    for (int32_t i_46687 = 0; i_46687 < sdiv_up32(required_groups_46680 -
                                                  phys_group_id_46686,
                                                  sext_i64_i32(num_groups_42201));
         i_46687++) {
        int32_t virt_group_id_46688 = phys_group_id_46686 + i_46687 *
                sext_i64_i32(num_groups_42201);
        int64_t flat_idx_46689 = sext_i32_i64(virt_group_id_46688) *
                segscan_group_sizze_42200 + sext_i32_i64(local_tid_46682);
        int64_t gtid_42105 = squot64(flat_idx_46689, iota32_arg_29597);
        int64_t gtid_42113 = flat_idx_46689 - squot64(flat_idx_46689,
                                                      iota32_arg_29597) *
                iota32_arg_29597;
        int64_t orig_group_46690 = squot64(flat_idx_46689,
                                           segscan_group_sizze_42200 *
                                           sdiv_up64(m_29166 * iota32_arg_29597,
                                                     sext_i32_i64(num_threads_46638)));
        int64_t carry_in_flat_idx_46691 = orig_group_46690 *
                (segscan_group_sizze_42200 * sdiv_up64(m_29166 *
                                                       iota32_arg_29597,
                                                       sext_i32_i64(num_threads_46638))) -
                (int64_t) 1;
        
        if (slt64(gtid_42105, m_29166) && slt64(gtid_42113, iota32_arg_29597)) {
            if (!(orig_group_46690 == (int64_t) 0 || (flat_idx_46689 ==
                                                      (orig_group_46690 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_42200 *
                                                       sdiv_up64(m_29166 *
                                                                 iota32_arg_29597,
                                                                 sext_i32_i64(num_threads_46638))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_46689,
                                                                   iota32_arg_29597),
                                                            flat_idx_46689 -
                                                            carry_in_flat_idx_46691)))) {
                float x_42204;
                float x_42205;
                
                x_42204 = ((__global
                            float *) mem_45302)[squot64(carry_in_flat_idx_46691,
                                                        iota32_arg_29597) *
                                                iota32_arg_29597 +
                                                (carry_in_flat_idx_46691 -
                                                 squot64(carry_in_flat_idx_46691,
                                                         iota32_arg_29597) *
                                                 iota32_arg_29597)];
                x_42205 = ((__global float *) mem_45302)[gtid_42105 *
                                                         iota32_arg_29597 +
                                                         gtid_42113];
                
                float defunc_1_op_res_42206;
                
                defunc_1_op_res_42206 = x_42204 + x_42205;
                x_42204 = defunc_1_op_res_42206;
                ((__global float *) mem_45302)[gtid_42105 * iota32_arg_29597 +
                                               gtid_42113] = x_42204;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_42200
}
__kernel void mainzisegmap_38661(__global int *global_failure, int64_t N_29165,
                                 float freq_29170, int64_t i32_res_29181,
                                 __global
                                 unsigned char *mappingindices_mem_44380,
                                 __global unsigned char *mem_44385)
{
    #define segmap_group_sizze_38734 (mainzisegmap_group_sizze_38664)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45679;
    int32_t local_tid_45680;
    int64_t group_sizze_45683;
    int32_t wave_sizze_45682;
    int32_t group_tid_45681;
    
    global_tid_45679 = get_global_id(0);
    local_tid_45680 = get_local_id(0);
    group_sizze_45683 = get_local_size(0);
    wave_sizze_45682 = LOCKSTEP_WIDTH;
    group_tid_45681 = get_group_id(0);
    
    int32_t phys_tid_38661;
    
    phys_tid_38661 = global_tid_45679;
    
    int64_t gtid_38659;
    
    gtid_38659 = squot64(sext_i32_i64(group_tid_45681) *
                         segmap_group_sizze_38734 +
                         sext_i32_i64(local_tid_45680), N_29165);
    
    int64_t gtid_38660;
    
    gtid_38660 = sext_i32_i64(group_tid_45681) * segmap_group_sizze_38734 +
        sext_i32_i64(local_tid_45680) - squot64(sext_i32_i64(group_tid_45681) *
                                                segmap_group_sizze_38734 +
                                                sext_i32_i64(local_tid_45680),
                                                N_29165) * N_29165;
    if (slt64(gtid_38659, i32_res_29181) && slt64(gtid_38660, N_29165)) {
        int32_t index_primexp_42340 = sext_i64_i32(gtid_38659);
        bool index_primexp_42337 = index_primexp_42340 == 0;
        float defunc_0_f_res_38740;
        
        if (index_primexp_42337) {
            defunc_0_f_res_38740 = 1.0F;
        } else {
            int32_t x_38739 = ((__global
                                int32_t *) mappingindices_mem_44380)[gtid_38660];
            bool cond_38741 = index_primexp_42340 == 1;
            float defunc_0_f_res_f_res_38742;
            
            if (cond_38741) {
                float i32_res_38743 = sitofp_i32_f32(x_38739);
                
                defunc_0_f_res_f_res_38742 = i32_res_38743;
            } else {
                int32_t r32_arg_38744 = sdiv32(index_primexp_42340, 2);
                float i32_res_38745 = sitofp_i32_f32(r32_arg_38744);
                float i32_res_38746 = sitofp_i32_f32(x_38739);
                float x_38747 = 6.2831855F * i32_res_38745;
                float x_38748 = i32_res_38746 * x_38747;
                float angle_38749 = x_38748 / freq_29170;
                int32_t x_38750 = smod32(index_primexp_42340, 2);
                bool cond_38751 = x_38750 == 0;
                float defunc_0_f_res_f_res_f_res_38752;
                
                if (cond_38751) {
                    float sin_res_38753;
                    
                    sin_res_38753 = futrts_sin32(angle_38749);
                    defunc_0_f_res_f_res_f_res_38752 = sin_res_38753;
                } else {
                    float cos_res_38754;
                    
                    cos_res_38754 = futrts_cos32(angle_38749);
                    defunc_0_f_res_f_res_f_res_38752 = cos_res_38754;
                }
                defunc_0_f_res_f_res_38742 = defunc_0_f_res_f_res_f_res_38752;
            }
            defunc_0_f_res_38740 = defunc_0_f_res_f_res_38742;
        }
        ((__global float *) mem_44385)[gtid_38659 * N_29165 + gtid_38660] =
            defunc_0_f_res_38740;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38734
}
__kernel void mainzisegmap_38839(__global int *global_failure, int64_t N_29165,
                                 float freq_29170, int64_t i32_res_29181,
                                 __global
                                 unsigned char *mappingindices_mem_44380,
                                 __global unsigned char *mem_44389)
{
    #define segmap_group_sizze_38908 (mainzisegmap_group_sizze_38842)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45684;
    int32_t local_tid_45685;
    int64_t group_sizze_45688;
    int32_t wave_sizze_45687;
    int32_t group_tid_45686;
    
    global_tid_45684 = get_global_id(0);
    local_tid_45685 = get_local_id(0);
    group_sizze_45688 = get_local_size(0);
    wave_sizze_45687 = LOCKSTEP_WIDTH;
    group_tid_45686 = get_group_id(0);
    
    int32_t phys_tid_38839;
    
    phys_tid_38839 = global_tid_45684;
    
    int64_t gtid_38837;
    
    gtid_38837 = squot64(sext_i32_i64(group_tid_45686) *
                         segmap_group_sizze_38908 +
                         sext_i32_i64(local_tid_45685), N_29165);
    
    int64_t gtid_38838;
    
    gtid_38838 = sext_i32_i64(group_tid_45686) * segmap_group_sizze_38908 +
        sext_i32_i64(local_tid_45685) - squot64(sext_i32_i64(group_tid_45686) *
                                                segmap_group_sizze_38908 +
                                                sext_i32_i64(local_tid_45685),
                                                N_29165) * N_29165;
    if (slt64(gtid_38837, i32_res_29181) && slt64(gtid_38838, N_29165)) {
        int32_t index_primexp_42349 = sext_i64_i32(gtid_38837);
        bool index_primexp_42346 = index_primexp_42349 == 0;
        float defunc_0_f_res_38914;
        
        if (index_primexp_42346) {
            defunc_0_f_res_38914 = 1.0F;
        } else {
            int32_t x_38913 = ((__global
                                int32_t *) mappingindices_mem_44380)[gtid_38838];
            int32_t i_38915 = add32(1, index_primexp_42349);
            int32_t r32_arg_38916 = sdiv32(i_38915, 2);
            float i32_res_38917 = sitofp_i32_f32(r32_arg_38916);
            float i32_res_38918 = sitofp_i32_f32(x_38913);
            float x_38919 = 6.2831855F * i32_res_38917;
            float x_38920 = i32_res_38918 * x_38919;
            float angle_38921 = x_38920 / freq_29170;
            int32_t x_38922 = smod32(i_38915, 2);
            bool cond_38923 = x_38922 == 0;
            float defunc_0_f_res_f_res_38924;
            
            if (cond_38923) {
                float sin_res_38925;
                
                sin_res_38925 = futrts_sin32(angle_38921);
                defunc_0_f_res_f_res_38924 = sin_res_38925;
            } else {
                float cos_res_38926;
                
                cos_res_38926 = futrts_cos32(angle_38921);
                defunc_0_f_res_f_res_38924 = cos_res_38926;
            }
            defunc_0_f_res_38914 = defunc_0_f_res_f_res_38924;
        }
        ((__global float *) mem_44389)[gtid_38837 * N_29165 + gtid_38838] =
            defunc_0_f_res_38914;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38908
}
__kernel void mainzisegmap_38967(__global int *global_failure, int64_t N_29165,
                                 int64_t i32_res_29181, float i32_res_29246,
                                 __global unsigned char *mem_44393, __global
                                 unsigned char *mem_44397)
{
    #define segmap_group_sizze_38991 (mainzisegmap_group_sizze_38970)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45689;
    int32_t local_tid_45690;
    int64_t group_sizze_45693;
    int32_t wave_sizze_45692;
    int32_t group_tid_45691;
    
    global_tid_45689 = get_global_id(0);
    local_tid_45690 = get_local_id(0);
    group_sizze_45693 = get_local_size(0);
    wave_sizze_45692 = LOCKSTEP_WIDTH;
    group_tid_45691 = get_group_id(0);
    
    int32_t phys_tid_38967;
    
    phys_tid_38967 = global_tid_45689;
    
    int64_t gtid_38965;
    
    gtid_38965 = squot64(sext_i32_i64(group_tid_45691) *
                         segmap_group_sizze_38991 +
                         sext_i32_i64(local_tid_45690), i32_res_29181);
    
    int64_t gtid_38966;
    
    gtid_38966 = sext_i32_i64(group_tid_45691) * segmap_group_sizze_38991 +
        sext_i32_i64(local_tid_45690) - squot64(sext_i32_i64(group_tid_45691) *
                                                segmap_group_sizze_38991 +
                                                sext_i32_i64(local_tid_45690),
                                                i32_res_29181) * i32_res_29181;
    if (slt64(gtid_38965, N_29165) && slt64(gtid_38966, i32_res_29181)) {
        float x_38994 = ((__global float *) mem_44393)[gtid_38965 *
                                                       i32_res_29181 +
                                                       gtid_38966];
        float defunc_0_f_res_38995 = i32_res_29246 + x_38994;
        
        ((__global float *) mem_44397)[gtid_38965 * i32_res_29181 +
                                       gtid_38966] = defunc_0_f_res_38995;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38991
}
__kernel void mainzisegmap_39000(__global int *global_failure, int64_t N_29165,
                                 int64_t m_29166, int32_t n_29169,
                                 int32_t k2p2zq_29179, int64_t i32_res_29181,
                                 int64_t num_groups_39025, __global
                                 unsigned char *binop_p_mem_44390, __global
                                 unsigned char *mem_44397, __global
                                 unsigned char *mem_44400, __global
                                 unsigned char *mem_44404, __global
                                 unsigned char *mem_44446)
{
    #define segmap_group_sizze_39024 (mainzisegmap_group_sizze_39002)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45697;
    int32_t local_tid_45698;
    int64_t group_sizze_45701;
    int32_t wave_sizze_45700;
    int32_t group_tid_45699;
    
    global_tid_45697 = get_global_id(0);
    local_tid_45698 = get_local_id(0);
    group_sizze_45701 = get_local_size(0);
    wave_sizze_45700 = LOCKSTEP_WIDTH;
    group_tid_45699 = get_group_id(0);
    
    int32_t phys_tid_39000;
    
    phys_tid_39000 = global_tid_45697;
    
    int32_t phys_group_id_45702;
    
    phys_group_id_45702 = get_group_id(0);
    for (int32_t i_45703 = 0; i_45703 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166, segmap_group_sizze_39024)) -
                   phys_group_id_45702, sext_i64_i32(num_groups_39025));
         i_45703++) {
        int32_t virt_group_id_45704 = phys_group_id_45702 + i_45703 *
                sext_i64_i32(num_groups_39025);
        int64_t gtid_38999 = sext_i32_i64(virt_group_id_45704) *
                segmap_group_sizze_39024 + sext_i32_i64(local_tid_45698);
        
        if (slt64(gtid_38999, m_29166)) {
            for (int32_t i_44360 = 0; i_44360 < k2p2zq_29179; i_44360++) {
                int64_t i_44289 = sext_i32_i64(i_44360);
                
                for (int32_t i_44359 = 0; i_44359 < k2p2zq_29179; i_44359++) {
                    int64_t i_44293 = sext_i32_i64(i_44359);
                    float defunc_2_reduce_res_39033;
                    float redout_44295 = 0.0F;
                    
                    for (int32_t i_44358 = 0; i_44358 < n_29169; i_44358++) {
                        int64_t i_44296 = sext_i32_i64(i_44358);
                        float x_39037 = ((__global float *) mem_44400)[i_44296 *
                                                                       m_29166 +
                                                                       gtid_38999];
                        float x_39038 = ((__global
                                          float *) binop_p_mem_44390)[i_44289 *
                                                                      N_29165 +
                                                                      i_44296];
                        float x_39039 = ((__global float *) mem_44397)[i_44296 *
                                                                       i32_res_29181 +
                                                                       i_44293];
                        float x_39040 = x_39038 * x_39039;
                        bool isnan_res_39041;
                        
                        isnan_res_39041 = futrts_isnan32(x_39037);
                        
                        float y_39042;
                        
                        if (isnan_res_39041) {
                            y_39042 = 0.0F;
                        } else {
                            y_39042 = 1.0F;
                        }
                        
                        float defunc_2_f_res_39043 = x_39040 * y_39042;
                        float defunc_1_op_res_39036 = defunc_2_f_res_39043 +
                              redout_44295;
                        float redout_tmp_45707 = defunc_1_op_res_39036;
                        
                        redout_44295 = redout_tmp_45707;
                    }
                    defunc_2_reduce_res_39033 = redout_44295;
                    ((__global float *) mem_44404)[phys_tid_39000 + (i_44289 *
                                                                     (num_groups_39025 *
                                                                      segmap_group_sizze_39024 *
                                                                      i32_res_29181) +
                                                                     i_44293 *
                                                                     (num_groups_39025 *
                                                                      segmap_group_sizze_39024))] =
                        defunc_2_reduce_res_39033;
                }
            }
            for (int64_t i_45708 = 0; i_45708 < i32_res_29181; i_45708++) {
                for (int64_t i_45709 = 0; i_45709 < i32_res_29181; i_45709++) {
                    ((__global float *) mem_44446)[i_45708 * (m_29166 *
                                                              i32_res_29181) +
                                                   i_45709 * m_29166 +
                                                   gtid_38999] = ((__global
                                                                   float *) mem_44404)[phys_tid_39000 +
                                                                                       (i_45708 *
                                                                                        (num_groups_39025 *
                                                                                         segmap_group_sizze_39024 *
                                                                                         i32_res_29181) +
                                                                                        i_45709 *
                                                                                        (num_groups_39025 *
                                                                                         segmap_group_sizze_39024))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39024
}
__kernel void mainzisegmap_39046(__global int *global_failure, int64_t N_29165,
                                 int64_t m_29166, int32_t n_29169,
                                 int32_t k2p2zq_29179, int64_t i32_res_29181,
                                 int64_t num_groups_39202, __global
                                 unsigned char *images_mem_44381, __global
                                 unsigned char *mem_44393, __global
                                 unsigned char *mem_44397, __global
                                 unsigned char *mem_44449, __global
                                 unsigned char *mem_44465)
{
    #define segmap_group_sizze_39201 (mainzisegmap_group_sizze_39049)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45710;
    int32_t local_tid_45711;
    int64_t group_sizze_45714;
    int32_t wave_sizze_45713;
    int32_t group_tid_45712;
    
    global_tid_45710 = get_global_id(0);
    local_tid_45711 = get_local_id(0);
    group_sizze_45714 = get_local_size(0);
    wave_sizze_45713 = LOCKSTEP_WIDTH;
    group_tid_45712 = get_group_id(0);
    
    int32_t phys_tid_39046;
    
    phys_tid_39046 = global_tid_45710;
    
    int32_t phys_group_id_45715;
    
    phys_group_id_45715 = get_group_id(0);
    for (int32_t i_45716 = 0; i_45716 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166 * i32_res_29181,
                                          segmap_group_sizze_39201)) -
                   phys_group_id_45715, sext_i64_i32(num_groups_39202));
         i_45716++) {
        int32_t virt_group_id_45717 = phys_group_id_45715 + i_45716 *
                sext_i64_i32(num_groups_39202);
        int64_t gtid_39044 = squot64(sext_i32_i64(virt_group_id_45717) *
                                     segmap_group_sizze_39201 +
                                     sext_i32_i64(local_tid_45711),
                                     i32_res_29181);
        int64_t gtid_39045 = sext_i32_i64(virt_group_id_45717) *
                segmap_group_sizze_39201 + sext_i32_i64(local_tid_45711) -
                squot64(sext_i32_i64(virt_group_id_45717) *
                        segmap_group_sizze_39201 +
                        sext_i32_i64(local_tid_45711), i32_res_29181) *
                i32_res_29181;
        
        if (slt64(gtid_39044, m_29166) && slt64(gtid_39045, i32_res_29181)) {
            for (int32_t i_44362 = 0; i_44362 < k2p2zq_29179; i_44362++) {
                int64_t i_44299 = sext_i32_i64(i_44362);
                float defunc_2_reduce_res_39213;
                float redout_44301 = 0.0F;
                
                for (int32_t i_44361 = 0; i_44361 < n_29169; i_44361++) {
                    int64_t i_44302 = sext_i32_i64(i_44361);
                    float x_39217 = ((__global
                                      float *) images_mem_44381)[gtid_39044 *
                                                                 N_29165 +
                                                                 i_44302];
                    float x_39218 = ((__global float *) mem_44393)[i_44302 *
                                                                   i32_res_29181 +
                                                                   gtid_39045];
                    float x_39219 = ((__global float *) mem_44397)[i_44302 *
                                                                   i32_res_29181 +
                                                                   i_44299];
                    float x_39220 = x_39218 * x_39219;
                    bool isnan_res_39221;
                    
                    isnan_res_39221 = futrts_isnan32(x_39217);
                    
                    float y_39222;
                    
                    if (isnan_res_39221) {
                        y_39222 = 0.0F;
                    } else {
                        y_39222 = 1.0F;
                    }
                    
                    float defunc_2_f_res_39223 = x_39220 * y_39222;
                    float defunc_1_op_res_39216 = defunc_2_f_res_39223 +
                          redout_44301;
                    float redout_tmp_45719 = defunc_1_op_res_39216;
                    
                    redout_44301 = redout_tmp_45719;
                }
                defunc_2_reduce_res_39213 = redout_44301;
                ((__global float *) mem_44449)[phys_tid_39046 + i_44299 *
                                               (num_groups_39202 *
                                                segmap_group_sizze_39201)] =
                    defunc_2_reduce_res_39213;
            }
            for (int64_t i_45720 = 0; i_45720 < i32_res_29181; i_45720++) {
                ((__global float *) mem_44465)[i_45720 * (i32_res_29181 *
                                                          m_29166) +
                                               gtid_39044 * i32_res_29181 +
                                               gtid_39045] = ((__global
                                                               float *) mem_44449)[phys_tid_39046 +
                                                                                   i_45720 *
                                                                                   (num_groups_39202 *
                                                                                    segmap_group_sizze_39201)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39201
}
__kernel void mainzisegmap_39638(__global int *global_failure, int64_t m_29166,
                                 int64_t i32_res_29181, int64_t nm_29314,
                                 int64_t i32_res_29329, int64_t x_29330,
                                 int64_t j_m_i_29333,
                                 int64_t gauss_jordan_res_r_ixfn_44617,
                                 int64_t gauss_jordan_res_r_ixfn_44618,
                                 int64_t gauss_jordan_res_r_ixfn_44620, __global
                                 unsigned char *gauss_jordan_res_r_mem_44622,
                                 __global unsigned char *mem_44627)
{
    #define segmap_group_sizze_40385 (mainzisegmap_group_sizze_39642)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45877;
    int32_t local_tid_45878;
    int64_t group_sizze_45881;
    int32_t wave_sizze_45880;
    int32_t group_tid_45879;
    
    global_tid_45877 = get_global_id(0);
    local_tid_45878 = get_local_id(0);
    group_sizze_45881 = get_local_size(0);
    wave_sizze_45880 = LOCKSTEP_WIDTH;
    group_tid_45879 = get_group_id(0);
    
    int32_t phys_tid_39638;
    
    phys_tid_39638 = global_tid_45877;
    
    int64_t gtid_39635;
    
    gtid_39635 = squot64(sext_i32_i64(group_tid_45879) *
                         segmap_group_sizze_40385 +
                         sext_i32_i64(local_tid_45878), i32_res_29181 *
                         j_m_i_29333);
    
    int64_t gtid_slice_39633;
    
    gtid_slice_39633 = squot64(sext_i32_i64(group_tid_45879) *
                               segmap_group_sizze_40385 +
                               sext_i32_i64(local_tid_45878) -
                               squot64(sext_i32_i64(group_tid_45879) *
                                       segmap_group_sizze_40385 +
                                       sext_i32_i64(local_tid_45878),
                                       i32_res_29181 * j_m_i_29333) *
                               (i32_res_29181 * j_m_i_29333), j_m_i_29333);
    
    int64_t gtid_slice_39634;
    
    gtid_slice_39634 = sext_i32_i64(group_tid_45879) *
        segmap_group_sizze_40385 + sext_i32_i64(local_tid_45878) -
        squot64(sext_i32_i64(group_tid_45879) * segmap_group_sizze_40385 +
                sext_i32_i64(local_tid_45878), i32_res_29181 * j_m_i_29333) *
        (i32_res_29181 * j_m_i_29333) - squot64(sext_i32_i64(group_tid_45879) *
                                                segmap_group_sizze_40385 +
                                                sext_i32_i64(local_tid_45878) -
                                                squot64(sext_i32_i64(group_tid_45879) *
                                                        segmap_group_sizze_40385 +
                                                        sext_i32_i64(local_tid_45878),
                                                        i32_res_29181 *
                                                        j_m_i_29333) *
                                                (i32_res_29181 * j_m_i_29333),
                                                j_m_i_29333) * j_m_i_29333;
    if ((slt64(gtid_39635, m_29166) && slt64(gtid_slice_39633,
                                             i32_res_29181)) &&
        slt64(gtid_slice_39634, j_m_i_29333)) {
        int64_t slice_40389 = i32_res_29181 + gtid_slice_39634;
        int64_t binop_x_42407 = x_29330 * gtid_39635;
        int64_t binop_y_42408 = i32_res_29329 * gtid_slice_39633;
        int64_t binop_x_42409 = binop_x_42407 + binop_y_42408;
        int64_t binop_x_42410 = slice_40389 + binop_x_42409;
        int64_t new_index_42411 = squot64(binop_x_42410, nm_29314);
        int64_t binop_y_42423 = nm_29314 * new_index_42411;
        int64_t new_index_42424 = binop_x_42410 - binop_y_42423;
        float v_40390 = ((__global
                          float *) gauss_jordan_res_r_mem_44622)[gauss_jordan_res_r_ixfn_44617 +
                                                                 (new_index_42411 *
                                                                  gauss_jordan_res_r_ixfn_44618 +
                                                                  new_index_42424 *
                                                                  gauss_jordan_res_r_ixfn_44620)];
        
        ((__global float *) mem_44627)[gtid_39635 * (j_m_i_29333 *
                                                     i32_res_29181) +
                                       gtid_slice_39633 * j_m_i_29333 +
                                       gtid_slice_39634] = v_40390;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40385
}
__kernel void mainzisegmap_39868(__global int *global_failure, int64_t m_29166,
                                 int64_t nm_29314, int64_t ctx_param_ext_44580,
                                 int64_t ctx_param_ext_44581,
                                 int64_t ctx_param_ext_44583, __global
                                 unsigned char *mem_param_44585, __global
                                 unsigned char *mem_44605)
{
    #define segmap_group_sizze_40373 (mainzisegmap_group_sizze_39871)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45871;
    int32_t local_tid_45872;
    int64_t group_sizze_45875;
    int32_t wave_sizze_45874;
    int32_t group_tid_45873;
    
    global_tid_45871 = get_global_id(0);
    local_tid_45872 = get_local_id(0);
    group_sizze_45875 = get_local_size(0);
    wave_sizze_45874 = LOCKSTEP_WIDTH;
    group_tid_45873 = get_group_id(0);
    
    int32_t phys_tid_39868;
    
    phys_tid_39868 = global_tid_45871;
    
    int64_t gtid_39866;
    
    gtid_39866 = squot64(sext_i32_i64(group_tid_45873) *
                         segmap_group_sizze_40373 +
                         sext_i32_i64(local_tid_45872), nm_29314);
    
    int64_t gtid_39867;
    
    gtid_39867 = sext_i32_i64(group_tid_45873) * segmap_group_sizze_40373 +
        sext_i32_i64(local_tid_45872) - squot64(sext_i32_i64(group_tid_45873) *
                                                segmap_group_sizze_40373 +
                                                sext_i32_i64(local_tid_45872),
                                                nm_29314) * nm_29314;
    if (slt64(gtid_39866, m_29166) && slt64(gtid_39867, nm_29314)) {
        float write_value_40379 = ((__global float *) mem_44605)[gtid_39866 *
                                                                 nm_29314 +
                                                                 gtid_39867];
        
        if ((sle64((int64_t) 0, gtid_39866) && slt64(gtid_39866, m_29166)) &&
            (sle64((int64_t) 0, gtid_39867) && slt64(gtid_39867, nm_29314))) {
            ((__global float *) mem_param_44585)[ctx_param_ext_44580 +
                                                 (gtid_39866 *
                                                  ctx_param_ext_44581 +
                                                  gtid_39867 *
                                                  ctx_param_ext_44583)] =
                write_value_40379;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40373
}
__kernel void mainzisegmap_39938(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t m_29166,
                                 int32_t k2p2zq_29179, int32_t m_29312,
                                 int64_t nm_29314, int32_t i_40240,
                                 int64_t i32_res_40242,
                                 int64_t ctx_param_ext_44580,
                                 int64_t ctx_param_ext_44581,
                                 int64_t ctx_param_ext_44583, __global
                                 unsigned char *mem_param_44585, __global
                                 unsigned char *mem_44601, __global
                                 unsigned char *mem_44605)
{
    #define segmap_group_sizze_40323 (mainzisegmap_group_sizze_39941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45866;
    int32_t local_tid_45867;
    int64_t group_sizze_45870;
    int32_t wave_sizze_45869;
    int32_t group_tid_45868;
    
    global_tid_45866 = get_global_id(0);
    local_tid_45867 = get_local_id(0);
    group_sizze_45870 = get_local_size(0);
    wave_sizze_45869 = LOCKSTEP_WIDTH;
    group_tid_45868 = get_group_id(0);
    
    int32_t phys_tid_39938;
    
    phys_tid_39938 = global_tid_45866;
    
    int64_t gtid_39936;
    
    gtid_39936 = squot64(sext_i32_i64(group_tid_45868) *
                         segmap_group_sizze_40323 +
                         sext_i32_i64(local_tid_45867), nm_29314);
    
    int64_t gtid_39937;
    
    gtid_39937 = sext_i32_i64(group_tid_45868) * segmap_group_sizze_40323 +
        sext_i32_i64(local_tid_45867) - squot64(sext_i32_i64(group_tid_45868) *
                                                segmap_group_sizze_40323 +
                                                sext_i32_i64(local_tid_45867),
                                                nm_29314) * nm_29314;
    if (slt64(gtid_39936, m_29166) && slt64(gtid_39937, nm_29314)) {
        bool cond_40328 = ((__global bool *) mem_44601)[gtid_39936];
        int32_t defunc_0_f_res_40330 = sext_i64_i32(gtid_39937);
        int32_t defunc_0_f_res_40331 = sdiv32(defunc_0_f_res_40330, m_29312);
        int32_t defunc_0_f_res_40332 = smod32(defunc_0_f_res_40330, m_29312);
        float defunc_0_f_res_40333;
        
        if (cond_40328) {
            int32_t x_40334 = mul32(m_29312, defunc_0_f_res_40331);
            int32_t i32_arg_40335 = add32(defunc_0_f_res_40332, x_40334);
            int64_t i32_res_40336 = sext_i32_i64(i32_arg_40335);
            bool x_40337 = sle64((int64_t) 0, i32_res_40336);
            bool y_40338 = slt64(i32_res_40336, nm_29314);
            bool bounds_check_40339 = x_40337 && y_40338;
            bool index_certs_40340;
            
            if (!bounds_check_40339) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i32_res_40336;
                        global_failure_args[1] = nm_29314;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_40341 = ((__global
                                                 float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                           (gtid_39936 *
                                                                            ctx_param_ext_44581 +
                                                                            i32_res_40336 *
                                                                            ctx_param_ext_44583)];
            
            defunc_0_f_res_40333 = defunc_0_f_res_t_res_40341;
        } else {
            float v1_40327 = ((__global
                               float *) mem_param_44585)[ctx_param_ext_44580 +
                                                         (gtid_39936 *
                                                          ctx_param_ext_44581 +
                                                          i32_res_40242 *
                                                          ctx_param_ext_44583)];
            int64_t i32_res_40342 = sext_i32_i64(defunc_0_f_res_40332);
            bool x_40343 = sle64((int64_t) 0, i32_res_40342);
            bool y_40344 = slt64(i32_res_40342, nm_29314);
            bool bounds_check_40345 = x_40343 && y_40344;
            bool index_certs_40346;
            
            if (!bounds_check_40345) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i32_res_40342;
                        global_failure_args[1] = nm_29314;
                        ;
                    }
                    return;
                }
            }
            
            float x_40347 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_39936 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_40342 *
                                                         ctx_param_ext_44583)];
            float x_40348 = x_40347 / v1_40327;
            int32_t y_40349 = sub32(k2p2zq_29179, 1);
            bool cond_40350 = slt32(defunc_0_f_res_40331, y_40349);
            float defunc_0_f_res_f_res_40351;
            
            if (cond_40350) {
                int32_t x_40352 = add32(1, defunc_0_f_res_40331);
                int32_t x_40353 = mul32(m_29312, x_40352);
                int32_t i32_arg_40354 = add32(defunc_0_f_res_40332, x_40353);
                int64_t i32_res_40355 = sext_i32_i64(i32_arg_40354);
                bool x_40356 = sle64((int64_t) 0, i32_res_40355);
                bool y_40357 = slt64(i32_res_40355, nm_29314);
                bool bounds_check_40358 = x_40356 && y_40357;
                bool index_certs_40359;
                
                if (!bounds_check_40358) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = i32_res_40355;
                            global_failure_args[1] = nm_29314;
                            ;
                        }
                        return;
                    }
                }
                
                float x_40360 = ((__global
                                  float *) mem_param_44585)[ctx_param_ext_44580 +
                                                            (gtid_39936 *
                                                             ctx_param_ext_44581 +
                                                             i32_res_40355 *
                                                             ctx_param_ext_44583)];
                int32_t i32_arg_40361 = add32(i_40240, x_40353);
                int64_t i32_res_40362 = sext_i32_i64(i32_arg_40361);
                bool x_40363 = sle64((int64_t) 0, i32_res_40362);
                bool y_40364 = slt64(i32_res_40362, nm_29314);
                bool bounds_check_40365 = x_40363 && y_40364;
                bool index_certs_40366;
                
                if (!bounds_check_40365) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i32_res_40362;
                            global_failure_args[1] = nm_29314;
                            ;
                        }
                        return;
                    }
                }
                
                float x_40367 = ((__global
                                  float *) mem_param_44585)[ctx_param_ext_44580 +
                                                            (gtid_39936 *
                                                             ctx_param_ext_44581 +
                                                             i32_res_40362 *
                                                             ctx_param_ext_44583)];
                float y_40368 = x_40348 * x_40367;
                float defunc_0_f_res_f_res_t_res_40369 = x_40360 - y_40368;
                
                defunc_0_f_res_f_res_40351 = defunc_0_f_res_f_res_t_res_40369;
            } else {
                defunc_0_f_res_f_res_40351 = x_40348;
            }
            defunc_0_f_res_40333 = defunc_0_f_res_f_res_40351;
        }
        ((__global float *) mem_44605)[gtid_39936 * nm_29314 + gtid_39937] =
            defunc_0_f_res_40333;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40323
}
__kernel void mainzisegmap_40038(__global int *global_failure, int64_t m_29166,
                                 int64_t i32_res_40242,
                                 int64_t ctx_param_ext_44580,
                                 int64_t ctx_param_ext_44581,
                                 int64_t ctx_param_ext_44583, __global
                                 unsigned char *mem_param_44585, __global
                                 unsigned char *mem_44601)
{
    #define segmap_group_sizze_40307 (mainzisegmap_group_sizze_40040)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45861;
    int32_t local_tid_45862;
    int64_t group_sizze_45865;
    int32_t wave_sizze_45864;
    int32_t group_tid_45863;
    
    global_tid_45861 = get_global_id(0);
    local_tid_45862 = get_local_id(0);
    group_sizze_45865 = get_local_size(0);
    wave_sizze_45864 = LOCKSTEP_WIDTH;
    group_tid_45863 = get_group_id(0);
    
    int32_t phys_tid_40038;
    
    phys_tid_40038 = global_tid_45861;
    
    int64_t gtid_40037;
    
    gtid_40037 = sext_i32_i64(group_tid_45863) * segmap_group_sizze_40307 +
        sext_i32_i64(local_tid_45862);
    if (slt64(gtid_40037, m_29166)) {
        float v1_40312 = ((__global
                           float *) mem_param_44585)[ctx_param_ext_44580 +
                                                     (gtid_40037 *
                                                      ctx_param_ext_44581 +
                                                      i32_res_40242 *
                                                      ctx_param_ext_44583)];
        bool cond_40313 = v1_40312 == 0.0F;
        
        ((__global bool *) mem_44601)[gtid_40037] = cond_40313;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40307
}
__kernel void mainzisegmap_40155(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t m_29166,
                                 int32_t k2p2zq_29179, int64_t i32_res_29181,
                                 int32_t m_29312, int64_t nm_29314, __global
                                 unsigned char *defunc_3_map_res_mem_44549,
                                 __global unsigned char *mem_44577)
{
    #define segmap_group_sizze_40215 (mainzisegmap_group_sizze_40158)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45828;
    int32_t local_tid_45829;
    int64_t group_sizze_45832;
    int32_t wave_sizze_45831;
    int32_t group_tid_45830;
    
    global_tid_45828 = get_global_id(0);
    local_tid_45829 = get_local_id(0);
    group_sizze_45832 = get_local_size(0);
    wave_sizze_45831 = LOCKSTEP_WIDTH;
    group_tid_45830 = get_group_id(0);
    
    int32_t phys_tid_40155;
    
    phys_tid_40155 = global_tid_45828;
    
    int64_t gtid_40153;
    
    gtid_40153 = squot64(sext_i32_i64(group_tid_45830) *
                         segmap_group_sizze_40215 +
                         sext_i32_i64(local_tid_45829), nm_29314);
    
    int64_t gtid_40154;
    
    gtid_40154 = sext_i32_i64(group_tid_45830) * segmap_group_sizze_40215 +
        sext_i32_i64(local_tid_45829) - squot64(sext_i32_i64(group_tid_45830) *
                                                segmap_group_sizze_40215 +
                                                sext_i32_i64(local_tid_45829),
                                                nm_29314) * nm_29314;
    if (slt64(gtid_40153, m_29166) && slt64(gtid_40154, nm_29314)) {
        int32_t index_primexp_42361 = sext_i64_i32(gtid_40154);
        int32_t defunc_0_f_res_40220 = sdiv32(index_primexp_42361, m_29312);
        int32_t defunc_0_f_res_40221 = smod32(index_primexp_42361, m_29312);
        bool cond_40222 = slt32(defunc_0_f_res_40221, k2p2zq_29179);
        float defunc_0_f_res_40223;
        
        if (cond_40222) {
            int64_t i_40224 = sext_i32_i64(defunc_0_f_res_40220);
            bool x_40225 = sle64((int64_t) 0, i_40224);
            bool y_40226 = slt64(i_40224, i32_res_29181);
            bool bounds_check_40227 = x_40225 && y_40226;
            int64_t j_40228 = sext_i32_i64(defunc_0_f_res_40221);
            bool x_40229 = sle64((int64_t) 0, j_40228);
            bool y_40230 = slt64(j_40228, i32_res_29181);
            bool bounds_check_40231 = x_40229 && y_40230;
            bool index_ok_40232 = bounds_check_40227 && bounds_check_40231;
            bool index_certs_40233;
            
            if (!index_ok_40232) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 6) ==
                        -1) {
                        global_failure_args[0] = i_40224;
                        global_failure_args[1] = j_40228;
                        global_failure_args[2] = i32_res_29181;
                        global_failure_args[3] = i32_res_29181;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_40234 = ((__global
                                                 float *) defunc_3_map_res_mem_44549)[gtid_40153 *
                                                                                      (i32_res_29181 *
                                                                                       i32_res_29181) +
                                                                                      i_40224 *
                                                                                      i32_res_29181 +
                                                                                      j_40228];
            
            defunc_0_f_res_40223 = defunc_0_f_res_t_res_40234;
        } else {
            int32_t y_40235 = add32(k2p2zq_29179, defunc_0_f_res_40220);
            bool cond_40236 = defunc_0_f_res_40221 == y_40235;
            float defunc_0_f_res_f_res_40237;
            
            if (cond_40236) {
                defunc_0_f_res_f_res_40237 = 1.0F;
            } else {
                defunc_0_f_res_f_res_40237 = 0.0F;
            }
            defunc_0_f_res_40223 = defunc_0_f_res_f_res_40237;
        }
        ((__global float *) mem_44577)[gtid_40153 * nm_29314 + gtid_40154] =
            defunc_0_f_res_40223;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40215
}
__kernel void mainzisegmap_40396(__global int *global_failure, int64_t N_29165,
                                 int64_t m_29166, int32_t n_29169,
                                 int32_t k2p2zq_29179, int64_t i32_res_29181,
                                 int64_t num_groups_40417, __global
                                 unsigned char *binop_p_mem_44390, __global
                                 unsigned char *mem_44632, __global
                                 unsigned char *mem_44635, __global
                                 unsigned char *mem_44650)
{
    #define segmap_group_sizze_40416 (mainzisegmap_group_sizze_40398)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45885;
    int32_t local_tid_45886;
    int64_t group_sizze_45889;
    int32_t wave_sizze_45888;
    int32_t group_tid_45887;
    
    global_tid_45885 = get_global_id(0);
    local_tid_45886 = get_local_id(0);
    group_sizze_45889 = get_local_size(0);
    wave_sizze_45888 = LOCKSTEP_WIDTH;
    group_tid_45887 = get_group_id(0);
    
    int32_t phys_tid_40396;
    
    phys_tid_40396 = global_tid_45885;
    
    int32_t phys_group_id_45890;
    
    phys_group_id_45890 = get_group_id(0);
    for (int32_t i_45891 = 0; i_45891 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166, segmap_group_sizze_40416)) -
                   phys_group_id_45890, sext_i64_i32(num_groups_40417));
         i_45891++) {
        int32_t virt_group_id_45892 = phys_group_id_45890 + i_45891 *
                sext_i64_i32(num_groups_40417);
        int64_t gtid_40395 = sext_i32_i64(virt_group_id_45892) *
                segmap_group_sizze_40416 + sext_i32_i64(local_tid_45886);
        
        if (slt64(gtid_40395, m_29166)) {
            for (int32_t i_44364 = 0; i_44364 < k2p2zq_29179; i_44364++) {
                int64_t i_44305 = sext_i32_i64(i_44364);
                float defunc_2_reduce_res_40423;
                float redout_44307 = 0.0F;
                
                for (int32_t i_44363 = 0; i_44363 < n_29169; i_44363++) {
                    int64_t i_44308 = sext_i32_i64(i_44363);
                    float x_40428 = ((__global float *) mem_44632)[i_44308 *
                                                                   m_29166 +
                                                                   gtid_40395];
                    bool isnan_res_40429;
                    
                    isnan_res_40429 = futrts_isnan32(x_40428);
                    
                    float defunc_1_f_res_40430;
                    
                    if (isnan_res_40429) {
                        defunc_1_f_res_40430 = 0.0F;
                    } else {
                        float x_40427 = ((__global
                                          float *) binop_p_mem_44390)[i_44305 *
                                                                      N_29165 +
                                                                      i_44308];
                        float defunc_1_f_res_f_res_40431 = x_40427 * x_40428;
                        
                        defunc_1_f_res_40430 = defunc_1_f_res_f_res_40431;
                    }
                    
                    float defunc_1_op_res_40426 = defunc_1_f_res_40430 +
                          redout_44307;
                    float redout_tmp_45894 = defunc_1_op_res_40426;
                    
                    redout_44307 = redout_tmp_45894;
                }
                defunc_2_reduce_res_40423 = redout_44307;
                ((__global float *) mem_44635)[phys_tid_40396 + i_44305 *
                                               (num_groups_40417 *
                                                segmap_group_sizze_40416)] =
                    defunc_2_reduce_res_40423;
            }
            for (int64_t i_45895 = 0; i_45895 < i32_res_29181; i_45895++) {
                ((__global float *) mem_44650)[i_45895 * m_29166 + gtid_40395] =
                    ((__global float *) mem_44635)[phys_tid_40396 + i_45895 *
                                                   (num_groups_40417 *
                                                    segmap_group_sizze_40416)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40416
}
__kernel void mainzisegmap_40537(__global int *global_failure, int64_t m_29166,
                                 int32_t k2p2zq_29179, int64_t i32_res_29181,
                                 int64_t num_groups_40557, __global
                                 unsigned char *mem_44854, __global
                                 unsigned char *mem_44857, __global
                                 unsigned char *mem_44860, __global
                                 unsigned char *mem_44875)
{
    #define segmap_group_sizze_40556 (mainzisegmap_group_sizze_40539)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46017;
    int32_t local_tid_46018;
    int64_t group_sizze_46021;
    int32_t wave_sizze_46020;
    int32_t group_tid_46019;
    
    global_tid_46017 = get_global_id(0);
    local_tid_46018 = get_local_id(0);
    group_sizze_46021 = get_local_size(0);
    wave_sizze_46020 = LOCKSTEP_WIDTH;
    group_tid_46019 = get_group_id(0);
    
    int32_t phys_tid_40537;
    
    phys_tid_40537 = global_tid_46017;
    
    int32_t phys_group_id_46022;
    
    phys_group_id_46022 = get_group_id(0);
    for (int32_t i_46023 = 0; i_46023 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166, segmap_group_sizze_40556)) -
                   phys_group_id_46022, sext_i64_i32(num_groups_40557));
         i_46023++) {
        int32_t virt_group_id_46024 = phys_group_id_46022 + i_46023 *
                sext_i64_i32(num_groups_40557);
        int64_t gtid_40536 = sext_i32_i64(virt_group_id_46024) *
                segmap_group_sizze_40556 + sext_i32_i64(local_tid_46018);
        
        if (slt64(gtid_40536, m_29166)) {
            for (int32_t i_44366 = 0; i_44366 < k2p2zq_29179; i_44366++) {
                int64_t i_44311 = sext_i32_i64(i_44366);
                float defunc_0_f_res_40564;
                float redout_44313 = 0.0F;
                
                for (int32_t i_44365 = 0; i_44365 < k2p2zq_29179; i_44365++) {
                    int64_t i_44314 = sext_i32_i64(i_44365);
                    float x_40568 = ((__global float *) mem_44857)[i_44314 *
                                                                   m_29166 +
                                                                   gtid_40536];
                    float x_40569 = ((__global float *) mem_44854)[i_44311 *
                                                                   (m_29166 *
                                                                    i32_res_29181) +
                                                                   i_44314 *
                                                                   m_29166 +
                                                                   gtid_40536];
                    float defunc_1_f_res_40570 = x_40568 * x_40569;
                    float defunc_1_op_res_40567 = defunc_1_f_res_40570 +
                          redout_44313;
                    float redout_tmp_46026 = defunc_1_op_res_40567;
                    
                    redout_44313 = redout_tmp_46026;
                }
                defunc_0_f_res_40564 = redout_44313;
                ((__global float *) mem_44860)[phys_tid_40537 + i_44311 *
                                               (num_groups_40557 *
                                                segmap_group_sizze_40556)] =
                    defunc_0_f_res_40564;
            }
            for (int64_t i_46027 = 0; i_46027 < i32_res_29181; i_46027++) {
                ((__global float *) mem_44875)[i_46027 * m_29166 + gtid_40536] =
                    ((__global float *) mem_44860)[phys_tid_40537 + i_46027 *
                                                   (num_groups_40557 *
                                                    segmap_group_sizze_40556)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40556
}
__kernel void mainzisegmap_40669(__global int *global_failure, int64_t N_29165,
                                 int64_t m_29166, int32_t k2p2zq_29179,
                                 int64_t i32_res_29181,
                                 int64_t num_groups_40688, __global
                                 unsigned char *mem_44397, __global
                                 unsigned char *mem_44919, __global
                                 unsigned char *mem_44922, __global
                                 unsigned char *mem_44937)
{
    #define segmap_group_sizze_40687 (mainzisegmap_group_sizze_40671)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46105;
    int32_t local_tid_46106;
    int64_t group_sizze_46109;
    int32_t wave_sizze_46108;
    int32_t group_tid_46107;
    
    global_tid_46105 = get_global_id(0);
    local_tid_46106 = get_local_id(0);
    group_sizze_46109 = get_local_size(0);
    wave_sizze_46108 = LOCKSTEP_WIDTH;
    group_tid_46107 = get_group_id(0);
    
    int32_t phys_tid_40669;
    
    phys_tid_40669 = global_tid_46105;
    
    int32_t phys_group_id_46110;
    
    phys_group_id_46110 = get_group_id(0);
    for (int32_t i_46111 = 0; i_46111 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166, segmap_group_sizze_40687)) -
                   phys_group_id_46110, sext_i64_i32(num_groups_40688));
         i_46111++) {
        int32_t virt_group_id_46112 = phys_group_id_46110 + i_46111 *
                sext_i64_i32(num_groups_40688);
        int64_t gtid_40668 = sext_i32_i64(virt_group_id_46112) *
                segmap_group_sizze_40687 + sext_i32_i64(local_tid_46106);
        
        if (slt64(gtid_40668, m_29166)) {
            for (int64_t i_44321 = 0; i_44321 < N_29165; i_44321++) {
                float defunc_0_f_res_40694;
                float redout_44323 = 0.0F;
                
                for (int32_t i_44369 = 0; i_44369 < k2p2zq_29179; i_44369++) {
                    int64_t i_44324 = sext_i32_i64(i_44369);
                    float x_40698 = ((__global float *) mem_44919)[i_44324 *
                                                                   m_29166 +
                                                                   gtid_40668];
                    float x_40699 = ((__global float *) mem_44397)[i_44321 *
                                                                   i32_res_29181 +
                                                                   i_44324];
                    float defunc_1_f_res_40700 = x_40698 * x_40699;
                    float defunc_1_op_res_40697 = defunc_1_f_res_40700 +
                          redout_44323;
                    float redout_tmp_46114 = defunc_1_op_res_40697;
                    
                    redout_44323 = redout_tmp_46114;
                }
                defunc_0_f_res_40694 = redout_44323;
                ((__global float *) mem_44922)[phys_tid_40669 + i_44321 *
                                               (num_groups_40688 *
                                                segmap_group_sizze_40687)] =
                    defunc_0_f_res_40694;
            }
            for (int64_t i_46115 = 0; i_46115 < N_29165; i_46115++) {
                ((__global float *) mem_44937)[i_46115 * m_29166 + gtid_40668] =
                    ((__global float *) mem_44922)[phys_tid_40669 + i_46115 *
                                                   (num_groups_40688 *
                                                    segmap_group_sizze_40687)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40687
}
__kernel void mainzisegmap_40949(__global int *global_failure, int64_t N_29165,
                                 int64_t m_29166, __global
                                 unsigned char *mem_45163, __global
                                 unsigned char *mem_45166, __global
                                 unsigned char *mem_45172, __global
                                 unsigned char *mem_45175)
{
    #define segmap_group_sizze_41115 (mainzisegmap_group_sizze_40952)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46332;
    int32_t local_tid_46333;
    int64_t group_sizze_46336;
    int32_t wave_sizze_46335;
    int32_t group_tid_46334;
    
    global_tid_46332 = get_global_id(0);
    local_tid_46333 = get_local_id(0);
    group_sizze_46336 = get_local_size(0);
    wave_sizze_46335 = LOCKSTEP_WIDTH;
    group_tid_46334 = get_group_id(0);
    
    int32_t phys_tid_40949;
    
    phys_tid_40949 = global_tid_46332;
    
    int64_t gtid_40947;
    
    gtid_40947 = squot64(sext_i32_i64(group_tid_46334) *
                         segmap_group_sizze_41115 +
                         sext_i32_i64(local_tid_46333), N_29165);
    
    int64_t gtid_40948;
    
    gtid_40948 = sext_i32_i64(group_tid_46334) * segmap_group_sizze_41115 +
        sext_i32_i64(local_tid_46333) - squot64(sext_i32_i64(group_tid_46334) *
                                                segmap_group_sizze_41115 +
                                                sext_i32_i64(local_tid_46333),
                                                N_29165) * N_29165;
    if (slt64(gtid_40947, m_29166) && slt64(gtid_40948, N_29165)) {
        float x_41123 = ((__global float *) mem_45166)[gtid_40947 * N_29165 +
                                                       gtid_40948];
        int32_t index_primexp_42377 = sext_i64_i32(gtid_40948);
        bool isnan_res_41126;
        
        isnan_res_41126 = futrts_isnan32(x_41123);
        
        bool defunc_0_p_res_41127 = !isnan_res_41126;
        int64_t defunc_1_f_res_41128;
        
        if (defunc_0_p_res_41127) {
            int64_t x_41124 = ((__global int64_t *) mem_45163)[gtid_40947 *
                                                               N_29165 +
                                                               gtid_40948];
            int64_t defunc_1_f_res_t_res_41129 = sub64(x_41124, (int64_t) 1);
            
            defunc_1_f_res_41128 = defunc_1_f_res_t_res_41129;
        } else {
            defunc_1_f_res_41128 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_40947) && slt64(gtid_40947, m_29166)) &&
            (sle64((int64_t) 0, defunc_1_f_res_41128) &&
             slt64(defunc_1_f_res_41128, N_29165))) {
            ((__global int32_t *) mem_45175)[gtid_40947 * N_29165 +
                                             defunc_1_f_res_41128] =
                index_primexp_42377;
        }
        if ((sle64((int64_t) 0, gtid_40947) && slt64(gtid_40947, m_29166)) &&
            (sle64((int64_t) 0, defunc_1_f_res_41128) &&
             slt64(defunc_1_f_res_41128, N_29165))) {
            ((__global float *) mem_45172)[gtid_40947 * N_29165 +
                                           defunc_1_f_res_41128] = x_41123;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41115
}
__kernel void mainzisegmap_41025(__global int *global_failure, int64_t N_29165,
                                 int64_t m_29166, int64_t i_29469, __global
                                 unsigned char *mem_45163, __global
                                 unsigned char *mem_45169)
{
    #define segmap_group_sizze_41079 (mainzisegmap_group_sizze_41027)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46309;
    int32_t local_tid_46310;
    int64_t group_sizze_46313;
    int32_t wave_sizze_46312;
    int32_t group_tid_46311;
    
    global_tid_46309 = get_global_id(0);
    local_tid_46310 = get_local_id(0);
    group_sizze_46313 = get_local_size(0);
    wave_sizze_46312 = LOCKSTEP_WIDTH;
    group_tid_46311 = get_group_id(0);
    
    int32_t phys_tid_41025;
    
    phys_tid_41025 = global_tid_46309;
    
    int64_t gtid_41024;
    
    gtid_41024 = sext_i32_i64(group_tid_46311) * segmap_group_sizze_41079 +
        sext_i32_i64(local_tid_46310);
    if (slt64(gtid_41024, m_29166)) {
        int64_t last_res_41083 = ((__global int64_t *) mem_45163)[gtid_41024 *
                                                                  N_29165 +
                                                                  i_29469];
        int32_t defunc_0_f_res_41084 = sext_i64_i32(last_res_41083);
        
        ((__global int32_t *) mem_45169)[gtid_41024] = defunc_0_f_res_41084;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41079
}
__kernel void mainzisegmap_41288(__global int *global_failure, int64_t m_29166,
                                 float hfrac_29171, int32_t k2p2_29177, __global
                                 unsigned char *mem_45232, __global
                                 unsigned char *mem_45235, __global
                                 unsigned char *mem_45238, __global
                                 unsigned char *mem_45240)
{
    #define segmap_group_sizze_41381 (mainzisegmap_group_sizze_41290)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46485;
    int32_t local_tid_46486;
    int64_t group_sizze_46489;
    int32_t wave_sizze_46488;
    int32_t group_tid_46487;
    
    global_tid_46485 = get_global_id(0);
    local_tid_46486 = get_local_id(0);
    group_sizze_46489 = get_local_size(0);
    wave_sizze_46488 = LOCKSTEP_WIDTH;
    group_tid_46487 = get_group_id(0);
    
    int32_t phys_tid_41288;
    
    phys_tid_41288 = global_tid_46485;
    
    int64_t gtid_41287;
    
    gtid_41287 = sext_i32_i64(group_tid_46487) * segmap_group_sizze_41381 +
        sext_i32_i64(local_tid_46486);
    if (slt64(gtid_41287, m_29166)) {
        int32_t defunc_0_f_res_41385 = ((__global
                                         int32_t *) mem_45232)[gtid_41287];
        float defunc_0_f_res_41386 = ((__global float *) mem_45235)[gtid_41287];
        int32_t r32_arg_41387 = sub32(defunc_0_f_res_41385, k2p2_29177);
        float i32_res_41388 = sitofp_i32_f32(r32_arg_41387);
        float sqrt_arg_41389 = defunc_0_f_res_41386 / i32_res_41388;
        float sqrt_res_41390;
        
        sqrt_res_41390 = futrts_sqrt32(sqrt_arg_41389);
        
        float i32_res_41391 = sitofp_i32_f32(defunc_0_f_res_41385);
        float t32_arg_41392 = hfrac_29171 * i32_res_41391;
        int32_t f32_res_41393 = fptosi_f32_i32(t32_arg_41392);
        
        ((__global int32_t *) mem_45238)[gtid_41287] = f32_res_41393;
        ((__global float *) mem_45240)[gtid_41287] = sqrt_res_41390;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41381
}
__kernel void mainzisegmap_41589(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_29165,
                                 int32_t n_29169, float lam_29172,
                                 int64_t iota32_arg_29597, float i32_res_29609,
                                 __global
                                 unsigned char *mappingindices_mem_44380,
                                 __global unsigned char *mem_45282, __global
                                 unsigned char *mem_45284)
{
    #define segmap_group_sizze_41611 (mainzisegmap_group_sizze_41591)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46595;
    int32_t local_tid_46596;
    int64_t group_sizze_46599;
    int32_t wave_sizze_46598;
    int32_t group_tid_46597;
    
    global_tid_46595 = get_global_id(0);
    local_tid_46596 = get_local_id(0);
    group_sizze_46599 = get_local_size(0);
    wave_sizze_46598 = LOCKSTEP_WIDTH;
    group_tid_46597 = get_group_id(0);
    
    int32_t phys_tid_41589;
    
    phys_tid_41589 = global_tid_46595;
    
    int64_t gtid_41588;
    
    gtid_41588 = sext_i32_i64(group_tid_46597) * segmap_group_sizze_41611 +
        sext_i32_i64(local_tid_46596);
    if (slt64(gtid_41588, iota32_arg_29597)) {
        int32_t defunc_0_f_res_41616 = sext_i64_i32(gtid_41588);
        int32_t i_41617 = add32(n_29169, defunc_0_f_res_41616);
        int64_t i_41618 = sext_i32_i64(i_41617);
        bool x_41619 = sle64((int64_t) 0, i_41618);
        bool y_41620 = slt64(i_41618, N_29165);
        bool bounds_check_41621 = x_41619 && y_41620;
        bool index_certs_41622;
        
        if (!bounds_check_41621) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 24) == -1) {
                    global_failure_args[0] = i_41618;
                    global_failure_args[1] = N_29165;
                    ;
                }
                return;
            }
        }
        
        int32_t time_41623 = ((__global
                               int32_t *) mappingindices_mem_44380)[i_41618];
        float i32_res_41624 = sitofp_i32_f32(time_41623);
        float logplus_arg_41625 = i32_res_41624 / i32_res_29609;
        bool cond_41626 = 2.7182817F < logplus_arg_41625;
        float logplus_res_41627;
        
        if (cond_41626) {
            float log_res_41628;
            
            log_res_41628 = futrts_log32(logplus_arg_41625);
            logplus_res_41627 = log_res_41628;
        } else {
            logplus_res_41627 = 1.0F;
        }
        
        float sqrt_res_41629;
        
        sqrt_res_41629 = futrts_sqrt32(logplus_res_41627);
        
        float defunc_0_f_res_41630 = lam_29172 * sqrt_res_41629;
        
        ((__global int32_t *) mem_45282)[gtid_41588] = defunc_0_f_res_41616;
        ((__global float *) mem_45284)[gtid_41588] = defunc_0_f_res_41630;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41611
}
__kernel void mainzisegmap_42001(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_29165,
                                 int64_t m_29166, int32_t n_29169, __global
                                 unsigned char *defunc_4_map_res_mem_45179,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_45245,
                                 __global unsigned char *mem_45298, __global
                                 unsigned char *mem_45305, __global
                                 unsigned char *mem_45307, __global
                                 unsigned char *mem_45309, __global
                                 unsigned char *mem_45312, __global
                                 unsigned char *mem_45314)
{
    #define segmap_group_sizze_42285 (mainzisegmap_group_sizze_42003)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46790;
    int32_t local_tid_46791;
    int64_t group_sizze_46794;
    int32_t wave_sizze_46793;
    int32_t group_tid_46792;
    
    global_tid_46790 = get_global_id(0);
    local_tid_46791 = get_local_id(0);
    group_sizze_46794 = get_local_size(0);
    wave_sizze_46793 = LOCKSTEP_WIDTH;
    group_tid_46792 = get_group_id(0);
    
    int32_t phys_tid_42001;
    
    phys_tid_42001 = global_tid_46790;
    
    int64_t gtid_42000;
    
    gtid_42000 = sext_i32_i64(group_tid_46792) * segmap_group_sizze_42285 +
        sext_i32_i64(local_tid_46791);
    if (slt64(gtid_42000, m_29166)) {
        int32_t x_42289 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_42000];
        int32_t y_42291 = ((__global int32_t *) mem_45298)[gtid_42000];
        bool acc0_42293 = ((__global bool *) mem_45305)[gtid_42000];
        bool x_42298 = acc0_42293 && acc0_42293;
        int32_t defunc_1_op_res_f_res_42302;
        
        if (acc0_42293) {
            int32_t acc0_42294 = ((__global int32_t *) mem_45307)[gtid_42000];
            
            defunc_1_op_res_f_res_42302 = acc0_42294;
        } else {
            defunc_1_op_res_f_res_42302 = -1;
        }
        
        bool cond_42308 = y_42291 == 0;
        float defunc_0_f_res_42309;
        
        if (cond_42308) {
            defunc_0_f_res_42309 = 0.0F;
        } else {
            float acc0_42295 = ((__global float *) mem_45309)[gtid_42000];
            float i32_res_42310 = sitofp_i32_f32(y_42291);
            float defunc_0_f_res_f_res_42311 = acc0_42295 / i32_res_42310;
            
            defunc_0_f_res_42309 = defunc_0_f_res_f_res_42311;
        }
        
        bool cond_42312 = !x_42298;
        int32_t fst_breakzq_42313;
        
        if (cond_42312) {
            fst_breakzq_42313 = -1;
        } else {
            bool cond_42314 = slt32(defunc_1_op_res_f_res_42302, y_42291);
            int32_t adjustValInds_res_42315;
            
            if (cond_42314) {
                int32_t i_42316 = add32(x_42289, defunc_1_op_res_f_res_42302);
                int64_t i_42317 = sext_i32_i64(i_42316);
                bool x_42318 = sle64((int64_t) 0, i_42317);
                bool y_42319 = slt64(i_42317, N_29165);
                bool bounds_check_42320 = x_42318 && y_42319;
                bool index_certs_42321;
                
                if (!bounds_check_42320) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 30) ==
                            -1) {
                            global_failure_args[0] = i_42317;
                            global_failure_args[1] = N_29165;
                            ;
                        }
                        return;
                    }
                }
                
                int32_t x_42322 = ((__global
                                    int32_t *) defunc_4_map_res_mem_45179)[gtid_42000 *
                                                                           N_29165 +
                                                                           i_42317];
                int32_t adjustValInds_res_t_res_42323 = sub32(x_42322, n_29169);
                
                adjustValInds_res_42315 = adjustValInds_res_t_res_42323;
            } else {
                adjustValInds_res_42315 = -1;
            }
            fst_breakzq_42313 = adjustValInds_res_42315;
        }
        
        bool cond_42324 = sle32(x_42289, 5);
        bool cond_f_res_42325 = sle32(y_42291, 5);
        bool x_42326 = !cond_42324;
        bool y_42327 = cond_f_res_42325 && x_42326;
        bool cond_42328 = cond_42324 || y_42327;
        int32_t fst_breakzq_42329;
        
        if (cond_42328) {
            fst_breakzq_42329 = -2;
        } else {
            fst_breakzq_42329 = fst_breakzq_42313;
        }
        ((__global int32_t *) mem_45312)[gtid_42000] = fst_breakzq_42329;
        ((__global float *) mem_45314)[gtid_42000] = defunc_0_f_res_42309;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_42285
}
__kernel void mainzisegmap_42155(__global int *global_failure, int64_t m_29166,
                                 int64_t num_groups_42178, __global
                                 unsigned char *defunc_4_map_res_mem_45177,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_45245,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_45246,
                                 __global unsigned char *mem_45296, __global
                                 unsigned char *mem_45298)
{
    #define segmap_group_sizze_42177 (mainzisegmap_group_sizze_42157)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46628;
    int32_t local_tid_46629;
    int64_t group_sizze_46632;
    int32_t wave_sizze_46631;
    int32_t group_tid_46630;
    
    global_tid_46628 = get_global_id(0);
    local_tid_46629 = get_local_id(0);
    group_sizze_46632 = get_local_size(0);
    wave_sizze_46631 = LOCKSTEP_WIDTH;
    group_tid_46630 = get_group_id(0);
    
    int32_t phys_tid_42155;
    
    phys_tid_42155 = global_tid_46628;
    
    int32_t phys_group_id_46633;
    
    phys_group_id_46633 = get_group_id(0);
    for (int32_t i_46634 = 0; i_46634 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166, segmap_group_sizze_42177)) -
                   phys_group_id_46633, sext_i64_i32(num_groups_42178));
         i_46634++) {
        int32_t virt_group_id_46635 = phys_group_id_46633 + i_46634 *
                sext_i64_i32(num_groups_42178);
        int64_t gtid_42154 = sext_i32_i64(virt_group_id_46635) *
                segmap_group_sizze_42177 + sext_i32_i64(local_tid_46629);
        
        if (slt64(gtid_42154, m_29166)) {
            int32_t x_42184 = ((__global
                                int32_t *) defunc_4_map_res_mem_45177)[gtid_42154];
            int32_t x_42185 = ((__global
                                int32_t *) defunc_3_map_res_mem_45245)[gtid_42154];
            float x_42186 = ((__global
                              float *) defunc_3_map_res_mem_45246)[gtid_42154];
            int32_t y_42187 = sub32(x_42184, x_42185);
            float i32_res_42188 = sitofp_i32_f32(x_42185);
            float sqrt_res_42189;
            
            sqrt_res_42189 = futrts_sqrt32(i32_res_42188);
            
            float y_42190 = x_42186 * sqrt_res_42189;
            
            ((__global float *) mem_45296)[gtid_42154] = y_42190;
            ((__global int32_t *) mem_45298)[gtid_42154] = y_42187;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_42177
}
__kernel void mainzisegmap_intragroup_39374(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_44563_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44553_backing_aligned_1,
                                            int32_t k2p2zq_29179,
                                            int64_t i32_res_29181,
                                            int32_t m_29312, int64_t nm_29314,
                                            int64_t i32_res_29329, __global
                                            unsigned char *defunc_3_map_res_mem_44549,
                                            __global unsigned char *mem_44573)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44563_backing_1 = (__local volatile
                                                           char *) mem_44563_backing_aligned_0;
    __local volatile char *restrict mem_44553_backing_0 = (__local volatile
                                                           char *) mem_44553_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45820;
    int32_t local_tid_45821;
    int64_t group_sizze_45824;
    int32_t wave_sizze_45823;
    int32_t group_tid_45822;
    
    global_tid_45820 = get_global_id(0);
    local_tid_45821 = get_local_id(0);
    group_sizze_45824 = get_local_size(0);
    wave_sizze_45823 = LOCKSTEP_WIDTH;
    group_tid_45822 = get_group_id(0);
    
    int32_t phys_tid_39374;
    
    phys_tid_39374 = group_tid_45822;
    
    int32_t ltid_pre_45825;
    
    ltid_pre_45825 = local_tid_45821;
    
    int64_t gtid_39305;
    
    gtid_39305 = sext_i32_i64(group_tid_45822);
    
    __local char *mem_44553;
    
    mem_44553 = (__local char *) mem_44553_backing_0;
    
    int64_t gtid_39308 = sext_i32_i64(ltid_pre_45825);
    int32_t phys_tid_39309 = local_tid_45821;
    int32_t index_primexp_42354 = sext_i64_i32(gtid_39308);
    int32_t defunc_0_f_res_39555 = sdiv32(index_primexp_42354, m_29312);
    int32_t defunc_0_f_res_39556 = smod32(index_primexp_42354, m_29312);
    bool cond_39557 = slt32(defunc_0_f_res_39556, k2p2zq_29179);
    float defunc_0_f_res_39558;
    
    if (cond_39557) {
        int64_t i_39559 = sext_i32_i64(defunc_0_f_res_39555);
        bool x_39560 = sle64((int64_t) 0, i_39559);
        bool y_39561 = slt64(i_39559, i32_res_29181);
        bool bounds_check_39562 = x_39560 && y_39561;
        int64_t j_39563 = sext_i32_i64(defunc_0_f_res_39556);
        bool x_39564 = sle64((int64_t) 0, j_39563);
        bool y_39565 = slt64(j_39563, i32_res_29181);
        bool bounds_check_39566 = x_39564 && y_39565;
        bool index_ok_39567 = bounds_check_39562 && bounds_check_39566;
        bool index_certs_39568;
        
        if (!index_ok_39567) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 0) == -1) {
                    global_failure_args[0] = i_39559;
                    global_failure_args[1] = j_39563;
                    global_failure_args[2] = i32_res_29181;
                    global_failure_args[3] = i32_res_29181;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float defunc_0_f_res_t_res_39569 = ((__global
                                             float *) defunc_3_map_res_mem_44549)[gtid_39305 *
                                                                                  (i32_res_29181 *
                                                                                   i32_res_29181) +
                                                                                  i_39559 *
                                                                                  i32_res_29181 +
                                                                                  j_39563];
        
        defunc_0_f_res_39558 = defunc_0_f_res_t_res_39569;
    } else {
        int32_t y_39570 = add32(k2p2zq_29179, defunc_0_f_res_39555);
        bool cond_39571 = defunc_0_f_res_39556 == y_39570;
        float defunc_0_f_res_f_res_39572;
        
        if (cond_39571) {
            defunc_0_f_res_f_res_39572 = 1.0F;
        } else {
            defunc_0_f_res_f_res_39572 = 0.0F;
        }
        defunc_0_f_res_39558 = defunc_0_f_res_f_res_39572;
    }
    ((__local float *) mem_44553)[gtid_39308] = defunc_0_f_res_39558;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44563;
    
    mem_44563 = (__local char *) mem_44563_backing_1;
    for (int32_t i_39574 = 0; i_39574 < k2p2zq_29179; i_39574++) {
        int64_t i32_res_39576 = sext_i32_i64(i_39574);
        bool x_39577 = sle64((int64_t) 0, i32_res_39576);
        bool y_39578 = slt64(i32_res_39576, nm_29314);
        bool bounds_check_39579 = x_39577 && y_39578;
        bool index_certs_39580;
        
        if (!bounds_check_39579) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 1) == -1) {
                    global_failure_args[0] = i32_res_39576;
                    global_failure_args[1] = nm_29314;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_39581 = ((__local float *) mem_44553)[i32_res_39576];
        bool cond_39582 = v1_39581 == 0.0F;
        int64_t gtid_39329 = sext_i32_i64(ltid_pre_45825);
        int32_t phys_tid_39330 = local_tid_45821;
        int32_t defunc_0_f_res_39585 = sext_i64_i32(gtid_39329);
        int32_t defunc_0_f_res_39586 = sdiv32(defunc_0_f_res_39585, m_29312);
        int32_t defunc_0_f_res_39587 = smod32(defunc_0_f_res_39585, m_29312);
        float defunc_0_f_res_39588;
        
        if (cond_39582) {
            int32_t x_39589 = mul32(m_29312, defunc_0_f_res_39586);
            int32_t i32_arg_39590 = add32(defunc_0_f_res_39587, x_39589);
            int64_t i32_res_39591 = sext_i32_i64(i32_arg_39590);
            bool x_39592 = sle64((int64_t) 0, i32_res_39591);
            bool y_39593 = slt64(i32_res_39591, nm_29314);
            bool bounds_check_39594 = x_39592 && y_39593;
            bool index_certs_39595;
            
            if (!bounds_check_39594) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                        -1) {
                        global_failure_args[0] = i32_res_39591;
                        global_failure_args[1] = nm_29314;
                        ;
                    }
                    local_failure = true;
                    goto error_1;
                }
            }
            
            float defunc_0_f_res_t_res_39596 = ((__local
                                                 float *) mem_44553)[i32_res_39591];
            
            defunc_0_f_res_39588 = defunc_0_f_res_t_res_39596;
        } else {
            int64_t i32_res_39597 = sext_i32_i64(defunc_0_f_res_39587);
            bool x_39598 = sle64((int64_t) 0, i32_res_39597);
            bool y_39599 = slt64(i32_res_39597, nm_29314);
            bool bounds_check_39600 = x_39598 && y_39599;
            bool index_certs_39601;
            
            if (!bounds_check_39600) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                        -1) {
                        global_failure_args[0] = i32_res_39597;
                        global_failure_args[1] = nm_29314;
                        ;
                    }
                    local_failure = true;
                    goto error_1;
                }
            }
            
            float x_39602 = ((__local float *) mem_44553)[i32_res_39597];
            float x_39603 = x_39602 / v1_39581;
            int32_t y_39604 = sub32(k2p2zq_29179, 1);
            bool cond_39605 = slt32(defunc_0_f_res_39586, y_39604);
            float defunc_0_f_res_f_res_39606;
            
            if (cond_39605) {
                int32_t x_39607 = add32(1, defunc_0_f_res_39586);
                int32_t x_39608 = mul32(m_29312, x_39607);
                int32_t i32_arg_39609 = add32(defunc_0_f_res_39587, x_39608);
                int64_t i32_res_39610 = sext_i32_i64(i32_arg_39609);
                bool x_39611 = sle64((int64_t) 0, i32_res_39610);
                bool y_39612 = slt64(i32_res_39610, nm_29314);
                bool bounds_check_39613 = x_39611 && y_39612;
                bool index_certs_39614;
                
                if (!bounds_check_39613) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = i32_res_39610;
                            global_failure_args[1] = nm_29314;
                            ;
                        }
                        local_failure = true;
                        goto error_1;
                    }
                }
                
                float x_39615 = ((__local float *) mem_44553)[i32_res_39610];
                int32_t i32_arg_39616 = add32(i_39574, x_39608);
                int64_t i32_res_39617 = sext_i32_i64(i32_arg_39616);
                bool x_39618 = sle64((int64_t) 0, i32_res_39617);
                bool y_39619 = slt64(i32_res_39617, nm_29314);
                bool bounds_check_39620 = x_39618 && y_39619;
                bool index_certs_39621;
                
                if (!bounds_check_39620) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = i32_res_39617;
                            global_failure_args[1] = nm_29314;
                            ;
                        }
                        local_failure = true;
                        goto error_1;
                    }
                }
                
                float x_39622 = ((__local float *) mem_44553)[i32_res_39617];
                float y_39623 = x_39603 * x_39622;
                float defunc_0_f_res_f_res_t_res_39624 = x_39615 - y_39623;
                
                defunc_0_f_res_f_res_39606 = defunc_0_f_res_f_res_t_res_39624;
            } else {
                defunc_0_f_res_f_res_39606 = x_39603;
            }
            defunc_0_f_res_39588 = defunc_0_f_res_f_res_39606;
        }
        ((__local float *) mem_44563)[gtid_39329] = defunc_0_f_res_39588;
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_39372 = sext_i32_i64(ltid_pre_45825);
        int32_t phys_tid_39373 = local_tid_45821;
        float write_value_39627 = ((__local float *) mem_44563)[write_i_39372];
        
        if (sle64((int64_t) 0, write_i_39372) && slt64(write_i_39372,
                                                       nm_29314)) {
            ((__local float *) mem_44553)[write_i_39372] = write_value_39627;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_45827 = 0; i_45827 < sdiv_up64(i32_res_29181 *
                                                  i32_res_29181 -
                                                  sext_i32_i64(local_tid_45821),
                                                  nm_29314); i_45827++) {
        ((__global float *) mem_44573)[gtid_39305 * (i32_res_29181 *
                                                     i32_res_29181) +
                                       squot64(i_45827 * nm_29314 +
                                               sext_i32_i64(local_tid_45821),
                                               i32_res_29181) * i32_res_29181 +
                                       (i_45827 * nm_29314 +
                                        sext_i32_i64(local_tid_45821) -
                                        squot64(i_45827 * nm_29314 +
                                                sext_i32_i64(local_tid_45821),
                                                i32_res_29181) *
                                        i32_res_29181)] = ((__local
                                                            float *) mem_44553)[i32_res_29181 +
                                                                                (squot64(i_45827 *
                                                                                         nm_29314 +
                                                                                         sext_i32_i64(local_tid_45821),
                                                                                         i32_res_29181) *
                                                                                 i32_res_29329 +
                                                                                 (i_45827 *
                                                                                  nm_29314 +
                                                                                  sext_i32_i64(local_tid_45821) -
                                                                                  squot64(i_45827 *
                                                                                          nm_29314 +
                                                                                          sext_i32_i64(local_tid_45821),
                                                                                          i32_res_29181) *
                                                                                  i32_res_29181))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_39701(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_44594_backing_aligned_0,
                                            int64_t m_29166,
                                            int32_t k2p2zq_29179,
                                            int32_t m_29312, int64_t nm_29314,
                                            int32_t i_40240,
                                            int64_t i32_res_40242,
                                            int64_t ctx_param_ext_44580,
                                            int64_t ctx_param_ext_44581,
                                            int64_t ctx_param_ext_44583,
                                            __global
                                            unsigned char *mem_param_44585,
                                            __global unsigned char *mem_44590,
                                            __global unsigned char *mem_44598)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44594_backing_0 = (__local volatile
                                                           char *) mem_44594_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45854;
    int32_t local_tid_45855;
    int64_t group_sizze_45858;
    int32_t wave_sizze_45857;
    int32_t group_tid_45856;
    
    global_tid_45854 = get_global_id(0);
    local_tid_45855 = get_local_id(0);
    group_sizze_45858 = get_local_size(0);
    wave_sizze_45857 = LOCKSTEP_WIDTH;
    group_tid_45856 = get_group_id(0);
    
    int32_t phys_tid_39701;
    
    phys_tid_39701 = group_tid_45856;
    
    int32_t ltid_pre_45859;
    
    ltid_pre_45859 = local_tid_45855;
    
    int64_t gtid_39653;
    
    gtid_39653 = sext_i32_i64(group_tid_45856);
    
    float v1_40259 = ((__global float *) mem_param_44585)[ctx_param_ext_44580 +
                                                          (gtid_39653 *
                                                           ctx_param_ext_44581 +
                                                           i32_res_40242 *
                                                           ctx_param_ext_44583)];
    bool cond_40260 = v1_40259 == 0.0F;
    __local char *mem_44594;
    
    mem_44594 = (__local char *) mem_44594_backing_0;
    
    int64_t gtid_39656 = sext_i32_i64(ltid_pre_45859);
    int32_t phys_tid_39657 = local_tid_45855;
    int32_t defunc_0_f_res_40263 = sext_i64_i32(gtid_39656);
    int32_t defunc_0_f_res_40264 = sdiv32(defunc_0_f_res_40263, m_29312);
    int32_t defunc_0_f_res_40265 = smod32(defunc_0_f_res_40263, m_29312);
    float defunc_0_f_res_40266;
    
    if (cond_40260) {
        int32_t x_40267 = mul32(m_29312, defunc_0_f_res_40264);
        int32_t i32_arg_40268 = add32(defunc_0_f_res_40265, x_40267);
        int64_t i32_res_40269 = sext_i32_i64(i32_arg_40268);
        bool x_40270 = sle64((int64_t) 0, i32_res_40269);
        bool y_40271 = slt64(i32_res_40269, nm_29314);
        bool bounds_check_40272 = x_40270 && y_40271;
        bool index_certs_40273;
        
        if (!bounds_check_40272) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 7) == -1) {
                    global_failure_args[0] = i32_res_40269;
                    global_failure_args[1] = nm_29314;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float defunc_0_f_res_t_res_40274 = ((__global
                                             float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                       (gtid_39653 *
                                                                        ctx_param_ext_44581 +
                                                                        i32_res_40269 *
                                                                        ctx_param_ext_44583)];
        
        defunc_0_f_res_40266 = defunc_0_f_res_t_res_40274;
    } else {
        int64_t i32_res_40275 = sext_i32_i64(defunc_0_f_res_40265);
        bool x_40276 = sle64((int64_t) 0, i32_res_40275);
        bool y_40277 = slt64(i32_res_40275, nm_29314);
        bool bounds_check_40278 = x_40276 && y_40277;
        bool index_certs_40279;
        
        if (!bounds_check_40278) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 8) == -1) {
                    global_failure_args[0] = i32_res_40275;
                    global_failure_args[1] = nm_29314;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float x_40280 = ((__global
                          float *) mem_param_44585)[ctx_param_ext_44580 +
                                                    (gtid_39653 *
                                                     ctx_param_ext_44581 +
                                                     i32_res_40275 *
                                                     ctx_param_ext_44583)];
        float x_40281 = x_40280 / v1_40259;
        int32_t y_40282 = sub32(k2p2zq_29179, 1);
        bool cond_40283 = slt32(defunc_0_f_res_40264, y_40282);
        float defunc_0_f_res_f_res_40284;
        
        if (cond_40283) {
            int32_t x_40285 = add32(1, defunc_0_f_res_40264);
            int32_t x_40286 = mul32(m_29312, x_40285);
            int32_t i32_arg_40287 = add32(defunc_0_f_res_40265, x_40286);
            int64_t i32_res_40288 = sext_i32_i64(i32_arg_40287);
            bool x_40289 = sle64((int64_t) 0, i32_res_40288);
            bool y_40290 = slt64(i32_res_40288, nm_29314);
            bool bounds_check_40291 = x_40289 && y_40290;
            bool index_certs_40292;
            
            if (!bounds_check_40291) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                        -1) {
                        global_failure_args[0] = i32_res_40288;
                        global_failure_args[1] = nm_29314;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_40293 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_39653 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_40288 *
                                                         ctx_param_ext_44583)];
            int32_t i32_arg_40294 = add32(i_40240, x_40286);
            int64_t i32_res_40295 = sext_i32_i64(i32_arg_40294);
            bool x_40296 = sle64((int64_t) 0, i32_res_40295);
            bool y_40297 = slt64(i32_res_40295, nm_29314);
            bool bounds_check_40298 = x_40296 && y_40297;
            bool index_certs_40299;
            
            if (!bounds_check_40298) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                        -1) {
                        global_failure_args[0] = i32_res_40295;
                        global_failure_args[1] = nm_29314;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_40300 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_39653 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_40295 *
                                                         ctx_param_ext_44583)];
            float y_40301 = x_40281 * x_40300;
            float defunc_0_f_res_f_res_t_res_40302 = x_40293 - y_40301;
            
            defunc_0_f_res_f_res_40284 = defunc_0_f_res_f_res_t_res_40302;
        } else {
            defunc_0_f_res_f_res_40284 = x_40281;
        }
        defunc_0_f_res_40266 = defunc_0_f_res_f_res_40284;
    }
    ((__local float *) mem_44594)[gtid_39656] = defunc_0_f_res_40266;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39699 = sext_i32_i64(ltid_pre_45859);
    int32_t phys_tid_39700 = local_tid_45855;
    float write_value_40305 = ((__local float *) mem_44594)[write_i_39699];
    
    if (sle64((int64_t) 0, write_i_39699) && slt64(write_i_39699, nm_29314)) {
        ((__global float *) mem_44590)[gtid_39653 + write_i_39699 * m_29166] =
            write_value_40305;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45855 == 0) {
        for (int64_t i_45860 = 0; i_45860 < nm_29314; i_45860++) {
            ((__global float *) mem_44598)[gtid_39653 * nm_29314 + i_45860] =
                ((__global float *) mem_44590)[gtid_39653 + i_45860 * m_29166];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_40832(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_45150_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_45148_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_45146_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_45144_backing_aligned_3,
                                            int64_t N_29165, int64_t i_29469,
                                            __global
                                            unsigned char *images_mem_44381,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_45140,
                                            __global unsigned char *mem_45153,
                                            __global unsigned char *mem_45156,
                                            __global unsigned char *mem_45159)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45150_backing_3 = (__local volatile
                                                           char *) mem_45150_backing_aligned_0;
    __local volatile char *restrict mem_45148_backing_2 = (__local volatile
                                                           char *) mem_45148_backing_aligned_1;
    __local volatile char *restrict mem_45146_backing_1 = (__local volatile
                                                           char *) mem_45146_backing_aligned_2;
    __local volatile char *restrict mem_45144_backing_0 = (__local volatile
                                                           char *) mem_45144_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46236;
    int32_t local_tid_46237;
    int64_t group_sizze_46240;
    int32_t wave_sizze_46239;
    int32_t group_tid_46238;
    
    global_tid_46236 = get_global_id(0);
    local_tid_46237 = get_local_id(0);
    group_sizze_46240 = get_local_size(0);
    wave_sizze_46239 = LOCKSTEP_WIDTH;
    group_tid_46238 = get_group_id(0);
    
    int32_t phys_tid_40832;
    
    phys_tid_40832 = group_tid_46238;
    
    int32_t ltid_pre_46241;
    
    ltid_pre_46241 = local_tid_46237;
    
    int64_t gtid_40825;
    
    gtid_40825 = sext_i32_i64(group_tid_46238);
    
    __local char *mem_45144;
    
    mem_45144 = (__local char *) mem_45144_backing_0;
    
    __local char *mem_45146;
    
    mem_45146 = (__local char *) mem_45146_backing_1;
    
    int64_t gtid_40828 = sext_i32_i64(ltid_pre_46241);
    int32_t phys_tid_40829 = local_tid_46237;
    float x_40921 = ((__global float *) images_mem_44381)[gtid_40825 * N_29165 +
                                                          gtid_40828];
    bool isnan_res_40923;
    
    isnan_res_40923 = futrts_isnan32(x_40921);
    
    bool cond_40924 = !isnan_res_40923;
    float defunc_1_f_res_40925;
    
    if (cond_40924) {
        float x_40922 = ((__global
                          float *) defunc_3_map_res_mem_45140)[gtid_40825 *
                                                               N_29165 +
                                                               gtid_40828];
        float defunc_1_f_res_t_res_40926 = x_40921 - x_40922;
        
        defunc_1_f_res_40925 = defunc_1_f_res_t_res_40926;
    } else {
        defunc_1_f_res_40925 = NAN;
    }
    
    bool isnan_res_40927;
    
    isnan_res_40927 = futrts_isnan32(defunc_1_f_res_40925);
    
    bool defunc_0_p_res_40928 = !isnan_res_40927;
    int64_t defunc_0_f_res_40929 = btoi_bool_i64(defunc_0_p_res_40928);
    
    ((__local int64_t *) mem_45144)[gtid_40828] = defunc_0_f_res_40929;
    ((__local float *) mem_45146)[gtid_40828] = defunc_1_f_res_40925;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46242;
    
    dims_flat_46242 = N_29165;
    
    int64_t x_40918;
    int64_t x_40919;
    int64_t x_46244;
    int64_t x_46245;
    bool ltid_in_bounds_46247;
    
    ltid_in_bounds_46247 = slt64(sext_i32_i64(local_tid_46237), N_29165);
    
    int32_t skip_threads_46248;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46247) {
            x_40919 = ((volatile __local
                        int64_t *) mem_45144)[sext_i32_i64(local_tid_46237)];
            if ((local_tid_46237 - squot32(local_tid_46237, 32) * 32) == 0) {
                x_40918 = x_40919;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46248 = 1;
        while (slt32(skip_threads_46248, 32)) {
            if (sle32(skip_threads_46248, local_tid_46237 -
                      squot32(local_tid_46237, 32) * 32) &&
                ltid_in_bounds_46247) {
                // read operands
                {
                    x_40918 = ((volatile __local
                                int64_t *) mem_45144)[sext_i32_i64(local_tid_46237) -
                                                      sext_i32_i64(skip_threads_46248)];
                }
                // perform operation
                {
                    bool inactive_46249 =
                         slt64(srem64(sext_i32_i64(local_tid_46237), N_29165),
                               sext_i32_i64(local_tid_46237) -
                               sext_i32_i64(local_tid_46237 -
                               skip_threads_46248));
                    
                    if (inactive_46249) {
                        x_40918 = x_40919;
                    }
                    if (!inactive_46249) {
                        int64_t defunc_1_op_res_40920 = add64(x_40918, x_40919);
                        
                        x_40918 = defunc_1_op_res_40920;
                    }
                }
            }
            if (sle32(wave_sizze_46239, skip_threads_46248)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46248, local_tid_46237 -
                      squot32(local_tid_46237, 32) * 32) &&
                ltid_in_bounds_46247) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_45144)[sext_i32_i64(local_tid_46237)] =
                        x_40918;
                    x_40919 = x_40918;
                }
            }
            if (sle32(wave_sizze_46239, skip_threads_46248)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46248 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46237 - squot32(local_tid_46237, 32) * 32) == 31 &&
            ltid_in_bounds_46247) {
            ((volatile __local
              int64_t *) mem_45144)[sext_i32_i64(squot32(local_tid_46237,
                                                         32))] = x_40918;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46250;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46237, 32) == 0 && ltid_in_bounds_46247) {
                x_46245 = ((volatile __local
                            int64_t *) mem_45144)[sext_i32_i64(local_tid_46237)];
                if ((local_tid_46237 - squot32(local_tid_46237, 32) * 32) ==
                    0) {
                    x_46244 = x_46245;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46250 = 1;
            while (slt32(skip_threads_46250, 32)) {
                if (sle32(skip_threads_46250, local_tid_46237 -
                          squot32(local_tid_46237, 32) * 32) &&
                    (squot32(local_tid_46237, 32) == 0 &&
                     ltid_in_bounds_46247)) {
                    // read operands
                    {
                        x_46244 = ((volatile __local
                                    int64_t *) mem_45144)[sext_i32_i64(local_tid_46237) -
                                                          sext_i32_i64(skip_threads_46250)];
                    }
                    // perform operation
                    {
                        bool inactive_46251 =
                             slt64(srem64(sext_i32_i64(local_tid_46237 * 32 +
                                          32 - 1), N_29165),
                                   sext_i32_i64(local_tid_46237 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46237 -
                                                 skip_threads_46250) * 32 + 32 -
                                   1));
                        
                        if (inactive_46251) {
                            x_46244 = x_46245;
                        }
                        if (!inactive_46251) {
                            int64_t defunc_1_op_res_46246 = add64(x_46244,
                                                                  x_46245);
                            
                            x_46244 = defunc_1_op_res_46246;
                        }
                    }
                }
                if (sle32(wave_sizze_46239, skip_threads_46250)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46250, local_tid_46237 -
                          squot32(local_tid_46237, 32) * 32) &&
                    (squot32(local_tid_46237, 32) == 0 &&
                     ltid_in_bounds_46247)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_45144)[sext_i32_i64(local_tid_46237)] =
                            x_46244;
                        x_46245 = x_46244;
                    }
                }
                if (sle32(wave_sizze_46239, skip_threads_46250)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46250 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46237, 32) == 0 || !ltid_in_bounds_46247)) {
            // read operands
            {
                x_40919 = x_40918;
                x_40918 = ((__local
                            int64_t *) mem_45144)[sext_i32_i64(squot32(local_tid_46237,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46252 =
                     slt64(srem64(sext_i32_i64(local_tid_46237), N_29165),
                           sext_i32_i64(local_tid_46237) -
                           sext_i32_i64(squot32(local_tid_46237, 32) * 32 - 1));
                
                if (inactive_46252) {
                    x_40918 = x_40919;
                }
                if (!inactive_46252) {
                    int64_t defunc_1_op_res_40920 = add64(x_40918, x_40919);
                    
                    x_40918 = defunc_1_op_res_40920;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_45144)[sext_i32_i64(local_tid_46237)] =
                    x_40918;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46237, 32) == 0) {
            ((__local int64_t *) mem_45144)[sext_i32_i64(local_tid_46237)] =
                x_40919;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_40930 = ((__local int64_t *) mem_45144)[i_29469];
    int32_t defunc_0_f_res_40931 = sext_i64_i32(last_res_40930);
    __local char *mem_45148;
    
    mem_45148 = (__local char *) mem_45148_backing_2;
    ((__local float *) mem_45148)[sext_i32_i64(local_tid_46237)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45150;
    
    mem_45150 = (__local char *) mem_45150_backing_3;
    ((__local int32_t *) mem_45150)[sext_i32_i64(local_tid_46237)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_40830 = sext_i32_i64(ltid_pre_46241);
    int32_t phys_tid_40831 = local_tid_46237;
    float x_40936 = ((__local float *) mem_45146)[write_i_40830];
    int32_t index_primexp_42374 = sext_i64_i32(write_i_40830);
    bool isnan_res_40939;
    
    isnan_res_40939 = futrts_isnan32(x_40936);
    
    bool defunc_0_p_res_40940 = !isnan_res_40939;
    int64_t defunc_1_f_res_40941;
    
    if (defunc_0_p_res_40940) {
        int64_t x_40937 = ((__local int64_t *) mem_45144)[write_i_40830];
        int64_t defunc_1_f_res_t_res_40942 = sub64(x_40937, (int64_t) 1);
        
        defunc_1_f_res_40941 = defunc_1_f_res_t_res_40942;
    } else {
        defunc_1_f_res_40941 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_40941) && slt64(defunc_1_f_res_40941,
                                                          N_29165)) {
        ((__local int32_t *) mem_45150)[defunc_1_f_res_40941] =
            index_primexp_42374;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_40941) && slt64(defunc_1_f_res_40941,
                                                          N_29165)) {
        ((__local float *) mem_45148)[defunc_1_f_res_40941] = x_40936;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_46237 == 0) {
        ((__global int32_t *) mem_45153)[gtid_40825] = defunc_0_f_res_40931;
    }
    ((__global float *) mem_45156)[gtid_40825 * N_29165 +
                                   sext_i32_i64(local_tid_46237)] = ((__local
                                                                      float *) mem_45148)[sext_i32_i64(local_tid_46237)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_45159)[gtid_40825 * N_29165 +
                                     sext_i32_i64(local_tid_46237)] = ((__local
                                                                        int32_t *) mem_45150)[sext_i32_i64(local_tid_46237)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_41172(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *red_arr_mem_46361_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_46357_backing_aligned_1,
                                            int64_t N_29165, float hfrac_29171,
                                            int64_t i32_res_29175,
                                            int32_t k2p2_29177, __global
                                            unsigned char *images_mem_44381,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_45178,
                                            __global unsigned char *mem_45225,
                                            __global unsigned char *mem_45227,
                                            __global unsigned char *mem_45229)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46361_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46361_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46357_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46357_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46351;
    int32_t local_tid_46352;
    int64_t group_sizze_46355;
    int32_t wave_sizze_46354;
    int32_t group_tid_46353;
    
    global_tid_46351 = get_global_id(0);
    local_tid_46352 = get_local_id(0);
    group_sizze_46355 = get_local_size(0);
    wave_sizze_46354 = LOCKSTEP_WIDTH;
    group_tid_46353 = get_group_id(0);
    
    int32_t phys_tid_41172;
    
    phys_tid_41172 = group_tid_46353;
    
    int32_t ltid_pre_46356;
    
    ltid_pre_46356 = local_tid_46352;
    
    int64_t gtid_41165;
    
    gtid_41165 = sext_i32_i64(group_tid_46353);
    
    int32_t defunc_0_f_res_41257;
    int64_t gtid_41168 = sext_i32_i64(ltid_pre_46356);
    int32_t phys_tid_41169 = local_tid_46352;
    __local char *red_arr_mem_46357;
    
    red_arr_mem_46357 = (__local char *) red_arr_mem_46357_backing_0;
    
    float x_41261;
    
    x_41261 = ((__global float *) images_mem_44381)[gtid_41165 * N_29165 +
                                                    gtid_41168];
    
    bool isnan_res_41262;
    
    isnan_res_41262 = futrts_isnan32(x_41261);
    
    bool cond_41263 = !isnan_res_41262;
    int32_t defunc_0_f_res_41264 = btoi_bool_i32(cond_41263);
    
    ((__local int32_t *) red_arr_mem_46357)[gtid_41168] = defunc_0_f_res_41264;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46359;
    int32_t skip_waves_46360;
    
    skip_waves_46360 = 1;
    
    int32_t x_41258;
    int32_t x_41259;
    
    offset_46359 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46352, sext_i64_i32(i32_res_29175))) {
            x_41258 = ((__local
                        int32_t *) red_arr_mem_46357)[sext_i32_i64(local_tid_46352 +
                                                      offset_46359)];
        }
    }
    offset_46359 = 1;
    while (slt32(offset_46359, wave_sizze_46354)) {
        if (slt32(local_tid_46352 + offset_46359,
                  sext_i64_i32(i32_res_29175)) && ((local_tid_46352 -
                                                    squot32(local_tid_46352,
                                                            wave_sizze_46354) *
                                                    wave_sizze_46354) & (2 *
                                                                         offset_46359 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_41259 = ((volatile __local
                            int32_t *) red_arr_mem_46357)[sext_i32_i64(local_tid_46352 +
                                                          offset_46359)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_41260 = add32(x_41258, x_41259);
                
                x_41258 = defunc_1_op_res_41260;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_46357)[sext_i32_i64(local_tid_46352)] =
                    x_41258;
            }
        }
        offset_46359 *= 2;
    }
    while (slt32(skip_waves_46360, squot32(sext_i64_i32(i32_res_29175) +
                                           wave_sizze_46354 - 1,
                                           wave_sizze_46354))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46359 = skip_waves_46360 * wave_sizze_46354;
        if (slt32(local_tid_46352 + offset_46359,
                  sext_i64_i32(i32_res_29175)) && ((local_tid_46352 -
                                                    squot32(local_tid_46352,
                                                            wave_sizze_46354) *
                                                    wave_sizze_46354) == 0 &&
                                                   (squot32(local_tid_46352,
                                                            wave_sizze_46354) &
                                                    (2 * skip_waves_46360 -
                                                     1)) == 0)) {
            // read array element
            {
                x_41259 = ((__local
                            int32_t *) red_arr_mem_46357)[sext_i32_i64(local_tid_46352 +
                                                          offset_46359)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_41260 = add32(x_41258, x_41259);
                
                x_41258 = defunc_1_op_res_41260;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_46357)[sext_i32_i64(local_tid_46352)] =
                    x_41258;
            }
        }
        skip_waves_46360 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_41257 = ((__local int32_t *) red_arr_mem_46357)[(int64_t) 0];
    
    float defunc_0_f_res_41265;
    int64_t gtid_41170 = sext_i32_i64(ltid_pre_46356);
    int32_t phys_tid_41171 = local_tid_46352;
    __local char *red_arr_mem_46361;
    
    red_arr_mem_46361 = (__local char *) red_arr_mem_46361_backing_1;
    
    int32_t index_primexp_42382;
    
    index_primexp_42382 = sext_i64_i32(gtid_41170);
    
    bool cond_41270 = slt32(index_primexp_42382, defunc_0_f_res_41257);
    float defunc_0_f_res_41271;
    
    if (cond_41270) {
        int64_t i_41272 = sext_i32_i64(index_primexp_42382);
        bool x_41273 = sle64((int64_t) 0, i_41272);
        bool y_41274 = slt64(i_41272, N_29165);
        bool bounds_check_41275 = x_41273 && y_41274;
        bool index_certs_41276;
        
        if (!bounds_check_41275) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 17) == -1) {
                    global_failure_args[0] = i_41272;
                    global_failure_args[1] = N_29165;
                    ;
                }
                local_failure = true;
                goto error_2;
            }
        }
        
        float defunc_0_f_res_t_res_41277 = ((__global
                                             float *) defunc_4_map_res_mem_45178)[gtid_41165 *
                                                                                  N_29165 +
                                                                                  i_41272];
        
        defunc_0_f_res_41271 = defunc_0_f_res_t_res_41277;
    } else {
        defunc_0_f_res_41271 = 0.0F;
    }
    
    float defunc_0_f_res_41278 = defunc_0_f_res_41271 * defunc_0_f_res_41271;
    
    ((__local float *) red_arr_mem_46361)[gtid_41170] = defunc_0_f_res_41278;
    
  error_2:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46363;
    int32_t skip_waves_46364;
    
    skip_waves_46364 = 1;
    
    float x_41266;
    float x_41267;
    
    offset_46363 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46352, sext_i64_i32(i32_res_29175))) {
            x_41266 = ((__local
                        float *) red_arr_mem_46361)[sext_i32_i64(local_tid_46352 +
                                                    offset_46363)];
        }
    }
    offset_46363 = 1;
    while (slt32(offset_46363, wave_sizze_46354)) {
        if (slt32(local_tid_46352 + offset_46363,
                  sext_i64_i32(i32_res_29175)) && ((local_tid_46352 -
                                                    squot32(local_tid_46352,
                                                            wave_sizze_46354) *
                                                    wave_sizze_46354) & (2 *
                                                                         offset_46363 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_41267 = ((volatile __local
                            float *) red_arr_mem_46361)[sext_i32_i64(local_tid_46352 +
                                                        offset_46363)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_41268 = x_41266 + x_41267;
                
                x_41266 = defunc_1_op_res_41268;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_46361)[sext_i32_i64(local_tid_46352)] =
                    x_41266;
            }
        }
        offset_46363 *= 2;
    }
    while (slt32(skip_waves_46364, squot32(sext_i64_i32(i32_res_29175) +
                                           wave_sizze_46354 - 1,
                                           wave_sizze_46354))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46363 = skip_waves_46364 * wave_sizze_46354;
        if (slt32(local_tid_46352 + offset_46363,
                  sext_i64_i32(i32_res_29175)) && ((local_tid_46352 -
                                                    squot32(local_tid_46352,
                                                            wave_sizze_46354) *
                                                    wave_sizze_46354) == 0 &&
                                                   (squot32(local_tid_46352,
                                                            wave_sizze_46354) &
                                                    (2 * skip_waves_46364 -
                                                     1)) == 0)) {
            // read array element
            {
                x_41267 = ((__local
                            float *) red_arr_mem_46361)[sext_i32_i64(local_tid_46352 +
                                                        offset_46363)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_41268 = x_41266 + x_41267;
                
                x_41266 = defunc_1_op_res_41268;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_46361)[sext_i32_i64(local_tid_46352)] =
                    x_41266;
            }
        }
        skip_waves_46364 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_41265 = ((__local float *) red_arr_mem_46361)[(int64_t) 0];
    
    int32_t r32_arg_41279 = sub32(defunc_0_f_res_41257, k2p2_29177);
    float i32_res_41280 = sitofp_i32_f32(r32_arg_41279);
    float sqrt_arg_41281 = defunc_0_f_res_41265 / i32_res_41280;
    float sqrt_res_41282;
    
    sqrt_res_41282 = futrts_sqrt32(sqrt_arg_41281);
    
    float i32_res_41283 = sitofp_i32_f32(defunc_0_f_res_41257);
    float t32_arg_41284 = hfrac_29171 * i32_res_41283;
    int32_t f32_res_41285 = fptosi_f32_i32(t32_arg_41284);
    
    if (local_tid_46352 == 0) {
        ((__global int32_t *) mem_45225)[gtid_41165] = f32_res_41285;
    }
    if (local_tid_46352 == 0) {
        ((__global int32_t *) mem_45227)[gtid_41165] = defunc_0_f_res_41257;
    }
    if (local_tid_46352 == 0) {
        ((__global float *) mem_45229)[gtid_41165] = sqrt_res_41282;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_41640(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *red_arr_mem_46624_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_46622_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_46620_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_45288_backing_aligned_3,
                                            int64_t N_29165, int32_t n_29169,
                                            int64_t iota32_arg_29597, __global
                                            unsigned char *defunc_4_map_res_mem_45177,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_45178,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_45179,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_45244,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_45245,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_45246,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_45279,
                                            __global unsigned char *mem_45284,
                                            __global unsigned char *mem_45291,
                                            __global unsigned char *mem_45293)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46624_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_46624_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46622_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46622_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46620_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46620_backing_aligned_2;
    __local volatile char *restrict mem_45288_backing_0 = (__local volatile
                                                           char *) mem_45288_backing_aligned_3;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46603;
    int32_t local_tid_46604;
    int64_t group_sizze_46607;
    int32_t wave_sizze_46606;
    int32_t group_tid_46605;
    
    global_tid_46603 = get_global_id(0);
    local_tid_46604 = get_local_id(0);
    group_sizze_46607 = get_local_size(0);
    wave_sizze_46606 = LOCKSTEP_WIDTH;
    group_tid_46605 = get_group_id(0);
    
    int32_t phys_tid_41640;
    
    phys_tid_41640 = group_tid_46605;
    
    int32_t ltid_pre_46608;
    
    ltid_pre_46608 = local_tid_46604;
    
    int64_t gtid_41633;
    
    gtid_41633 = sext_i32_i64(group_tid_46605);
    
    int32_t x_41883;
    
    x_41883 = ((__global int32_t *) defunc_4_map_res_mem_45177)[gtid_41633];
    
    int32_t x_41884 = ((__global
                        int32_t *) defunc_3_map_res_mem_45245)[gtid_41633];
    float x_41885 = ((__global float *) defunc_3_map_res_mem_45246)[gtid_41633];
    int32_t x_41886 = ((__global
                        int32_t *) defunc_3_map_res_mem_45244)[gtid_41633];
    float x_41887 = ((__global float *) defunc_0_f_res_mem_45279)[gtid_41633];
    int32_t y_41890 = sub32(x_41883, x_41884);
    float i32_res_41891 = sitofp_i32_f32(x_41884);
    float sqrt_res_41892;
    
    sqrt_res_41892 = futrts_sqrt32(i32_res_41891);
    
    float y_41893 = x_41885 * sqrt_res_41892;
    __local char *mem_45288;
    
    mem_45288 = (__local char *) mem_45288_backing_0;
    
    int64_t gtid_41636 = sext_i32_i64(ltid_pre_46608);
    int32_t phys_tid_41637 = local_tid_46604;
    int32_t index_primexp_42395 = sext_i64_i32(gtid_41636);
    bool cond_41906 = sle32(y_41890, index_primexp_42395);
    float defunc_0_f_res_41907;
    
    if (cond_41906) {
        defunc_0_f_res_41907 = 0.0F;
    } else {
        bool cond_41908 = index_primexp_42395 == 0;
        float defunc_0_f_res_f_res_41909;
        
        if (cond_41908) {
            defunc_0_f_res_f_res_41909 = x_41887;
        } else {
            int32_t i_41910 = add32(x_41884, index_primexp_42395);
            int64_t i_41911 = sext_i32_i64(i_41910);
            bool x_41912 = sle64((int64_t) 0, i_41911);
            bool y_41913 = slt64(i_41911, N_29165);
            bool bounds_check_41914 = x_41912 && y_41913;
            bool index_certs_41915;
            
            if (!bounds_check_41914) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 25) ==
                        -1) {
                        global_failure_args[0] = i_41911;
                        global_failure_args[1] = N_29165;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_41916 = ((__global
                              float *) defunc_4_map_res_mem_45178)[gtid_41633 *
                                                                   N_29165 +
                                                                   i_41911];
            int32_t x_41917 = sub32(x_41884, x_41886);
            int32_t i_41918 = add32(x_41917, index_primexp_42395);
            int64_t i_41919 = sext_i32_i64(i_41918);
            bool x_41920 = sle64((int64_t) 0, i_41919);
            bool y_41921 = slt64(i_41919, N_29165);
            bool bounds_check_41922 = x_41920 && y_41921;
            bool index_certs_41923;
            
            if (!bounds_check_41922) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 26) ==
                        -1) {
                        global_failure_args[0] = i_41919;
                        global_failure_args[1] = N_29165;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float y_41924 = ((__global
                              float *) defunc_4_map_res_mem_45178)[gtid_41633 *
                                                                   N_29165 +
                                                                   i_41919];
            float defunc_0_f_res_f_res_f_res_41925 = x_41916 - y_41924;
            
            defunc_0_f_res_f_res_41909 = defunc_0_f_res_f_res_f_res_41925;
        }
        defunc_0_f_res_41907 = defunc_0_f_res_f_res_41909;
    }
    ((__local float *) mem_45288)[gtid_41636] = defunc_0_f_res_41907;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46609;
    
    dims_flat_46609 = iota32_arg_29597;
    
    float x_41902;
    float x_41903;
    float x_46611;
    float x_46612;
    bool ltid_in_bounds_46614;
    
    ltid_in_bounds_46614 = slt64(sext_i32_i64(local_tid_46604),
                                 iota32_arg_29597);
    
    int32_t skip_threads_46615;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46614) {
            x_41903 = ((volatile __local
                        float *) mem_45288)[sext_i32_i64(local_tid_46604)];
            if ((local_tid_46604 - squot32(local_tid_46604, 32) * 32) == 0) {
                x_41902 = x_41903;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46615 = 1;
        while (slt32(skip_threads_46615, 32)) {
            if (sle32(skip_threads_46615, local_tid_46604 -
                      squot32(local_tid_46604, 32) * 32) &&
                ltid_in_bounds_46614) {
                // read operands
                {
                    x_41902 = ((volatile __local
                                float *) mem_45288)[sext_i32_i64(local_tid_46604) -
                                                    sext_i32_i64(skip_threads_46615)];
                }
                // perform operation
                {
                    bool inactive_46616 =
                         slt64(srem64(sext_i32_i64(local_tid_46604),
                                      iota32_arg_29597),
                               sext_i32_i64(local_tid_46604) -
                               sext_i32_i64(local_tid_46604 -
                               skip_threads_46615));
                    
                    if (inactive_46616) {
                        x_41902 = x_41903;
                    }
                    if (!inactive_46616) {
                        float defunc_1_op_res_41904 = x_41902 + x_41903;
                        
                        x_41902 = defunc_1_op_res_41904;
                    }
                }
            }
            if (sle32(wave_sizze_46606, skip_threads_46615)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46615, local_tid_46604 -
                      squot32(local_tid_46604, 32) * 32) &&
                ltid_in_bounds_46614) {
                // write result
                {
                    ((volatile __local
                      float *) mem_45288)[sext_i32_i64(local_tid_46604)] =
                        x_41902;
                    x_41903 = x_41902;
                }
            }
            if (sle32(wave_sizze_46606, skip_threads_46615)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46615 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46604 - squot32(local_tid_46604, 32) * 32) == 31 &&
            ltid_in_bounds_46614) {
            ((volatile __local
              float *) mem_45288)[sext_i32_i64(squot32(local_tid_46604, 32))] =
                x_41902;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46617;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46604, 32) == 0 && ltid_in_bounds_46614) {
                x_46612 = ((volatile __local
                            float *) mem_45288)[sext_i32_i64(local_tid_46604)];
                if ((local_tid_46604 - squot32(local_tid_46604, 32) * 32) ==
                    0) {
                    x_46611 = x_46612;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46617 = 1;
            while (slt32(skip_threads_46617, 32)) {
                if (sle32(skip_threads_46617, local_tid_46604 -
                          squot32(local_tid_46604, 32) * 32) &&
                    (squot32(local_tid_46604, 32) == 0 &&
                     ltid_in_bounds_46614)) {
                    // read operands
                    {
                        x_46611 = ((volatile __local
                                    float *) mem_45288)[sext_i32_i64(local_tid_46604) -
                                                        sext_i32_i64(skip_threads_46617)];
                    }
                    // perform operation
                    {
                        bool inactive_46618 =
                             slt64(srem64(sext_i32_i64(local_tid_46604 * 32 +
                                          32 - 1), iota32_arg_29597),
                                   sext_i32_i64(local_tid_46604 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46604 -
                                                 skip_threads_46617) * 32 + 32 -
                                   1));
                        
                        if (inactive_46618) {
                            x_46611 = x_46612;
                        }
                        if (!inactive_46618) {
                            float defunc_1_op_res_46613 = x_46611 + x_46612;
                            
                            x_46611 = defunc_1_op_res_46613;
                        }
                    }
                }
                if (sle32(wave_sizze_46606, skip_threads_46617)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46617, local_tid_46604 -
                          squot32(local_tid_46604, 32) * 32) &&
                    (squot32(local_tid_46604, 32) == 0 &&
                     ltid_in_bounds_46614)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_45288)[sext_i32_i64(local_tid_46604)] =
                            x_46611;
                        x_46612 = x_46611;
                    }
                }
                if (sle32(wave_sizze_46606, skip_threads_46617)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46617 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46604, 32) == 0 || !ltid_in_bounds_46614)) {
            // read operands
            {
                x_41903 = x_41902;
                x_41902 = ((__local
                            float *) mem_45288)[sext_i32_i64(squot32(local_tid_46604,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46619 =
                     slt64(srem64(sext_i32_i64(local_tid_46604),
                                  iota32_arg_29597),
                           sext_i32_i64(local_tid_46604) -
                           sext_i32_i64(squot32(local_tid_46604, 32) * 32 - 1));
                
                if (inactive_46619) {
                    x_41902 = x_41903;
                }
                if (!inactive_46619) {
                    float defunc_1_op_res_41904 = x_41902 + x_41903;
                    
                    x_41902 = defunc_1_op_res_41904;
                }
            }
            // write final result
            {
                ((__local float *) mem_45288)[sext_i32_i64(local_tid_46604)] =
                    x_41902;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46604, 32) == 0) {
            ((__local float *) mem_45288)[sext_i32_i64(local_tid_46604)] =
                x_41903;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_41931;
    int32_t acc0_41932;
    float acc0_41933;
    int64_t gtid_41638 = sext_i32_i64(ltid_pre_46608);
    int32_t phys_tid_41639 = local_tid_46604;
    __local char *red_arr_mem_46620;
    
    red_arr_mem_46620 = (__local char *) red_arr_mem_46620_backing_1;
    
    __local char *red_arr_mem_46622;
    
    red_arr_mem_46622 = (__local char *) red_arr_mem_46622_backing_2;
    
    __local char *red_arr_mem_46624;
    
    red_arr_mem_46624 = (__local char *) red_arr_mem_46624_backing_3;
    
    float x_41948;
    
    x_41948 = ((__local float *) mem_45288)[gtid_41638];
    
    float x_41949 = ((__global float *) mem_45284)[gtid_41638];
    int32_t index_primexp_42398 = sext_i64_i32(gtid_41638);
    float defunc_0_f_res_41952 = x_41948 / y_41893;
    bool cond_41953 = slt32(index_primexp_42398, y_41890);
    bool isnan_res_41954;
    
    isnan_res_41954 = futrts_isnan32(defunc_0_f_res_41952);
    
    bool cond_t_res_41955 = !isnan_res_41954;
    bool x_41956 = cond_41953 && cond_t_res_41955;
    float abs_res_41957 = (float) fabs(defunc_0_f_res_41952);
    bool defunc_2_f_res_t_res_41958 = x_41949 < abs_res_41957;
    bool x_41959 = x_41956 && defunc_2_f_res_t_res_41958;
    float defunc_1_f_res_41960;
    
    if (cond_41953) {
        defunc_1_f_res_41960 = defunc_0_f_res_41952;
    } else {
        defunc_1_f_res_41960 = 0.0F;
    }
    ((__local bool *) red_arr_mem_46620)[gtid_41638] = x_41959;
    ((__local int32_t *) red_arr_mem_46622)[gtid_41638] = index_primexp_42398;
    ((__local float *) red_arr_mem_46624)[gtid_41638] = defunc_1_f_res_41960;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46626;
    int32_t skip_waves_46627;
    
    skip_waves_46627 = 1;
    
    bool x_41934;
    int32_t x_41935;
    float x_41936;
    bool x_41937;
    int32_t x_41938;
    float x_41939;
    
    offset_46626 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46604, sext_i64_i32(iota32_arg_29597))) {
            x_41934 = ((__local
                        bool *) red_arr_mem_46620)[sext_i32_i64(local_tid_46604 +
                                                   offset_46626)];
            x_41935 = ((__local
                        int32_t *) red_arr_mem_46622)[sext_i32_i64(local_tid_46604 +
                                                      offset_46626)];
            x_41936 = ((__local
                        float *) red_arr_mem_46624)[sext_i32_i64(local_tid_46604 +
                                                    offset_46626)];
        }
    }
    offset_46626 = 1;
    while (slt32(offset_46626, wave_sizze_46606)) {
        if (slt32(local_tid_46604 + offset_46626,
                  sext_i64_i32(iota32_arg_29597)) && ((local_tid_46604 -
                                                       squot32(local_tid_46604,
                                                               wave_sizze_46606) *
                                                       wave_sizze_46606) & (2 *
                                                                            offset_46626 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_41937 = ((volatile __local
                            bool *) red_arr_mem_46620)[sext_i32_i64(local_tid_46604 +
                                                       offset_46626)];
                x_41938 = ((volatile __local
                            int32_t *) red_arr_mem_46622)[sext_i32_i64(local_tid_46604 +
                                                          offset_46626)];
                x_41939 = ((volatile __local
                            float *) red_arr_mem_46624)[sext_i32_i64(local_tid_46604 +
                                                        offset_46626)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_41940;
                int32_t defunc_1_op_res_41941;
                
                if (x_41934) {
                    defunc_1_op_res_41940 = x_41934;
                    defunc_1_op_res_41941 = x_41935;
                } else {
                    bool x_41942 = x_41937 && x_41937;
                    bool x_41943 = !x_41937;
                    bool y_41944 = x_41934 && x_41943;
                    bool defunc_1_op_res_f_res_41945 = x_41942 || y_41944;
                    int32_t defunc_1_op_res_f_res_41946;
                    
                    if (x_41937) {
                        defunc_1_op_res_f_res_41946 = x_41938;
                    } else {
                        defunc_1_op_res_f_res_41946 = x_41935;
                    }
                    defunc_1_op_res_41940 = defunc_1_op_res_f_res_41945;
                    defunc_1_op_res_41941 = defunc_1_op_res_f_res_41946;
                }
                
                float defunc_1_op_res_41947 = x_41936 + x_41939;
                
                x_41934 = defunc_1_op_res_41940;
                x_41935 = defunc_1_op_res_41941;
                x_41936 = defunc_1_op_res_41947;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_46620)[sext_i32_i64(local_tid_46604)] =
                    x_41934;
                ((volatile __local
                  int32_t *) red_arr_mem_46622)[sext_i32_i64(local_tid_46604)] =
                    x_41935;
                ((volatile __local
                  float *) red_arr_mem_46624)[sext_i32_i64(local_tid_46604)] =
                    x_41936;
            }
        }
        offset_46626 *= 2;
    }
    while (slt32(skip_waves_46627, squot32(sext_i64_i32(iota32_arg_29597) +
                                           wave_sizze_46606 - 1,
                                           wave_sizze_46606))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46626 = skip_waves_46627 * wave_sizze_46606;
        if (slt32(local_tid_46604 + offset_46626,
                  sext_i64_i32(iota32_arg_29597)) && ((local_tid_46604 -
                                                       squot32(local_tid_46604,
                                                               wave_sizze_46606) *
                                                       wave_sizze_46606) == 0 &&
                                                      (squot32(local_tid_46604,
                                                               wave_sizze_46606) &
                                                       (2 * skip_waves_46627 -
                                                        1)) == 0)) {
            // read array element
            {
                x_41937 = ((__local
                            bool *) red_arr_mem_46620)[sext_i32_i64(local_tid_46604 +
                                                       offset_46626)];
                x_41938 = ((__local
                            int32_t *) red_arr_mem_46622)[sext_i32_i64(local_tid_46604 +
                                                          offset_46626)];
                x_41939 = ((__local
                            float *) red_arr_mem_46624)[sext_i32_i64(local_tid_46604 +
                                                        offset_46626)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_41940;
                int32_t defunc_1_op_res_41941;
                
                if (x_41934) {
                    defunc_1_op_res_41940 = x_41934;
                    defunc_1_op_res_41941 = x_41935;
                } else {
                    bool x_41942 = x_41937 && x_41937;
                    bool x_41943 = !x_41937;
                    bool y_41944 = x_41934 && x_41943;
                    bool defunc_1_op_res_f_res_41945 = x_41942 || y_41944;
                    int32_t defunc_1_op_res_f_res_41946;
                    
                    if (x_41937) {
                        defunc_1_op_res_f_res_41946 = x_41938;
                    } else {
                        defunc_1_op_res_f_res_41946 = x_41935;
                    }
                    defunc_1_op_res_41940 = defunc_1_op_res_f_res_41945;
                    defunc_1_op_res_41941 = defunc_1_op_res_f_res_41946;
                }
                
                float defunc_1_op_res_41947 = x_41936 + x_41939;
                
                x_41934 = defunc_1_op_res_41940;
                x_41935 = defunc_1_op_res_41941;
                x_41936 = defunc_1_op_res_41947;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_46620)[sext_i32_i64(local_tid_46604)] =
                    x_41934;
                ((__local
                  int32_t *) red_arr_mem_46622)[sext_i32_i64(local_tid_46604)] =
                    x_41935;
                ((__local
                  float *) red_arr_mem_46624)[sext_i32_i64(local_tid_46604)] =
                    x_41936;
            }
        }
        skip_waves_46627 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_41931 = ((__local bool *) red_arr_mem_46620)[(int64_t) 0];
    acc0_41932 = ((__local int32_t *) red_arr_mem_46622)[(int64_t) 0];
    acc0_41933 = ((__local float *) red_arr_mem_46624)[(int64_t) 0];
    
    bool x_41963 = acc0_41931 && acc0_41931;
    int32_t defunc_1_op_res_f_res_41967;
    
    if (acc0_41931) {
        defunc_1_op_res_f_res_41967 = acc0_41932;
    } else {
        defunc_1_op_res_f_res_41967 = -1;
    }
    
    bool cond_41973 = y_41890 == 0;
    float defunc_0_f_res_41974;
    
    if (cond_41973) {
        defunc_0_f_res_41974 = 0.0F;
    } else {
        float i32_res_41975 = sitofp_i32_f32(y_41890);
        float defunc_0_f_res_f_res_41976 = acc0_41933 / i32_res_41975;
        
        defunc_0_f_res_41974 = defunc_0_f_res_f_res_41976;
    }
    
    bool cond_41977 = !x_41963;
    int32_t fst_breakzq_41978;
    
    if (cond_41977) {
        fst_breakzq_41978 = -1;
    } else {
        bool cond_41979 = slt32(defunc_1_op_res_f_res_41967, y_41890);
        int32_t adjustValInds_res_41980;
        
        if (cond_41979) {
            int32_t i_41981 = add32(x_41884, defunc_1_op_res_f_res_41967);
            int64_t i_41982 = sext_i32_i64(i_41981);
            bool x_41983 = sle64((int64_t) 0, i_41982);
            bool y_41984 = slt64(i_41982, N_29165);
            bool bounds_check_41985 = x_41983 && y_41984;
            bool index_certs_41986;
            
            if (!bounds_check_41985) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 27) ==
                        -1) {
                        global_failure_args[0] = i_41982;
                        global_failure_args[1] = N_29165;
                        ;
                    }
                    local_failure = true;
                    goto error_3;
                }
            }
            
            int32_t x_41987 = ((__global
                                int32_t *) defunc_4_map_res_mem_45179)[gtid_41633 *
                                                                       N_29165 +
                                                                       i_41982];
            int32_t adjustValInds_res_t_res_41988 = sub32(x_41987, n_29169);
            
            adjustValInds_res_41980 = adjustValInds_res_t_res_41988;
        } else {
            adjustValInds_res_41980 = -1;
        }
        fst_breakzq_41978 = adjustValInds_res_41980;
    }
    
    bool cond_41989 = sle32(x_41884, 5);
    bool cond_f_res_41990 = sle32(y_41890, 5);
    bool x_41991 = !cond_41989;
    bool y_41992 = cond_f_res_41990 && x_41991;
    bool cond_41993 = cond_41989 || y_41992;
    int32_t fst_breakzq_41994;
    
    if (cond_41993) {
        fst_breakzq_41994 = -2;
    } else {
        fst_breakzq_41994 = fst_breakzq_41978;
    }
    if (local_tid_46604 == 0) {
        ((__global int32_t *) mem_45291)[gtid_41633] = fst_breakzq_41994;
    }
    if (local_tid_46604 == 0) {
        ((__global float *) mem_45293)[gtid_41633] = defunc_0_f_res_41974;
    }
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_42541(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44480_backing_aligned_0,
                                            int64_t m_29166, int32_t n_29169,
                                            int64_t i32_res_29181,
                                            int64_t Ty_42529, int64_t Tx_42530,
                                            int64_t gridDim_x_42531,
                                            int64_t gridDim_y_42532,
                                            int64_t group_sizze_tile3d_42536,
                                            int64_t count_shmem_42537, __global
                                            unsigned char *mem_44393, __global
                                            unsigned char *mem_44397, __global
                                            unsigned char *mem_44468, __global
                                            unsigned char *mem_44528)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44480_backing_0 = (__local volatile
                                                           char *) mem_44480_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45721;
    int32_t local_tid_45722;
    int64_t group_sizze_45725;
    int32_t wave_sizze_45724;
    int32_t group_tid_45723;
    
    global_tid_45721 = get_global_id(0);
    local_tid_45722 = get_local_id(0);
    group_sizze_45725 = get_local_size(0);
    wave_sizze_45724 = LOCKSTEP_WIDTH;
    group_tid_45723 = get_group_id(0);
    
    int32_t gid_flat_42541;
    
    gid_flat_42541 = group_tid_45723;
    
    int32_t ltid_pre_45726;
    
    ltid_pre_45726 = squot32(local_tid_45722, sext_i64_i32(Ty_42529) *
                             sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45727;
    
    ltid_pre_45727 = squot32(local_tid_45722 - squot32(local_tid_45722,
                                                       sext_i64_i32(Ty_42529) *
                                                       sext_i64_i32(Tx_42530)) *
                             (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)),
                             sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45728;
    
    ltid_pre_45728 = local_tid_45722 - squot32(local_tid_45722,
                                               sext_i64_i32(Ty_42529) *
                                               sext_i64_i32(Tx_42530)) *
        (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)) -
        squot32(local_tid_45722 - squot32(local_tid_45722,
                                          sext_i64_i32(Ty_42529) *
                                          sext_i64_i32(Tx_42530)) *
                (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)),
                sext_i64_i32(Tx_42530)) * sext_i64_i32(Tx_42530);
    
    int32_t ltid_pre_45729;
    
    ltid_pre_45729 = squot32(local_tid_45722, sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45730;
    
    ltid_pre_45730 = local_tid_45722 - squot32(local_tid_45722,
                                               sext_i64_i32(Tx_42530)) *
        sext_i64_i32(Tx_42530);
    
    int32_t ltid_pre_45731;
    
    ltid_pre_45731 = local_tid_45722;
    
    int64_t gid_zz_42540;
    
    gid_zz_42540 = squot64(sext_i32_i64(group_tid_45723), gridDim_y_42532 *
                           gridDim_x_42531);
    
    int64_t gid_y_42539;
    
    gid_y_42539 = squot64(sext_i32_i64(group_tid_45723) -
                          squot64(sext_i32_i64(group_tid_45723),
                                  gridDim_y_42532 * gridDim_x_42531) *
                          (gridDim_y_42532 * gridDim_x_42531), gridDim_x_42531);
    
    int64_t gid_x_42538;
    
    gid_x_42538 = sext_i32_i64(group_tid_45723) -
        squot64(sext_i32_i64(group_tid_45723), gridDim_y_42532 *
                gridDim_x_42531) * (gridDim_y_42532 * gridDim_x_42531) -
        squot64(sext_i32_i64(group_tid_45723) -
                squot64(sext_i32_i64(group_tid_45723), gridDim_y_42532 *
                        gridDim_x_42531) * (gridDim_y_42532 * gridDim_x_42531),
                gridDim_x_42531) * gridDim_x_42531;
    
    int64_t ii_42542;
    
    ii_42542 = (int64_t) 30 * gid_zz_42540;
    
    int64_t jj1_42543 = Ty_42529 * gid_y_42539;
    int64_t jj2_42544 = Tx_42530 * gid_x_42538;
    float mem_44478[30];
    int64_t ltid_y_42547 = sext_i32_i64(ltid_pre_45729);
    int64_t ltid_x_42545 = sext_i32_i64(ltid_pre_45730);
    int32_t ltid_flat_42546 = local_tid_45722;
    float mem_44472[30];
    
    for (int32_t i_44270 = 0; i_44270 < 30; i_44270++) {
        int64_t i_42555 = sext_i32_i64(i_44270);
        
        mem_44472[i_42555] = 0.0F;
    }
    for (int64_t i_45733 = 0; i_45733 < (int64_t) 30; i_45733++) {
        mem_44478[i_45733] = mem_44472[i_45733];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44480;
    
    mem_44480 = (__local char *) mem_44480_backing_0;
    
    float loop_mem_44510[30];
    float mem_param_44481[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_44481[i_1] = mem_44478[i_1];
    for (int32_t i_44272 = 0; i_44272 < n_29169; i_44272++) {
        int64_t i_42560 = sext_i32_i64(i_44272);
        
        for (int64_t i_42563 = 0; i_42563 < count_shmem_42537; i_42563++) {
            int64_t offs_42576 = group_sizze_tile3d_42536 * i_42563;
            int64_t ltid_42566 = sext_i32_i64(ltid_pre_45731);
            int32_t ltid_flat_42565 = local_tid_45722;
            int64_t loc_ind_42577 = ltid_42566 + offs_42576;
            int64_t gtid_42578 = ii_42542 + loc_ind_42577;
            bool cond_42579 = slt64(gtid_42578, m_29166);
            float y_elem_42580;
            
            if (cond_42579) {
                float Y_elem_42582 = ((__global float *) mem_44468)[i_42560 *
                                                                    m_29166 +
                                                                    gtid_42578];
                
                y_elem_42580 = Y_elem_42582;
            } else {
                y_elem_42580 = 0.0F;
            }
            
            bool cond_42584 = slt64(loc_ind_42577, (int64_t) 30);
            int64_t y_loc_ind_42585;
            
            if (cond_42584) {
                y_loc_ind_42585 = loc_ind_42577;
            } else {
                y_loc_ind_42585 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_42585) && slt64(y_loc_ind_42585,
                                                             (int64_t) 30)) {
                ((__local float *) mem_44480)[y_loc_ind_42585] = y_elem_42580;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_44509[30];
        int64_t ltid_y_42591 = sext_i32_i64(ltid_pre_45729);
        int64_t ltid_x_42589 = sext_i32_i64(ltid_pre_45730);
        int32_t ltid_flat_42590 = local_tid_45722;
        int64_t gtid_42618 = jj1_42543 + ltid_y_42591;
        int64_t gtid_42619 = jj2_42544 + ltid_x_42589;
        bool binop_x_42621 = slt64(gtid_42618, i32_res_29181);
        bool binop_y_42622 = slt64(gtid_42619, i32_res_29181);
        bool cond_42623 = binop_x_42621 && binop_y_42622;
        float mem_45450[30];
        
        if (cond_42623) {
            float x_42626 = ((__global float *) mem_44393)[i_42560 *
                                                           i32_res_29181 +
                                                           gtid_42618];
            float x_42628 = ((__global float *) mem_44397)[i_42560 *
                                                           i32_res_29181 +
                                                           gtid_42619];
            
            for (int32_t i_44271 = 0; i_44271 < 30; i_44271++) {
                int64_t i_42630 = sext_i32_i64(i_44271);
                int64_t gtid_42632 = ii_42542 + i_42630;
                bool cond_42633 = slt64(gtid_42632, m_29166);
                
                if (cond_42633) {
                    float inp_reg_var2zz_42635 = ((__local
                                                   float *) mem_44480)[i_42630];
                    float res_reg_var2zz_42636 = mem_param_44481[i_42630];
                    float x_42640 = x_42626 * x_42628;
                    bool isnan_res_42641;
                    
                    isnan_res_42641 = futrts_isnan32(inp_reg_var2zz_42635);
                    
                    float y_42642;
                    
                    if (isnan_res_42641) {
                        y_42642 = 0.0F;
                    } else {
                        y_42642 = 1.0F;
                    }
                    
                    float defunc_2_f_res_42643 = x_42640 * y_42642;
                    float defunc_1_op_res_42647 = res_reg_var2zz_42636 +
                          defunc_2_f_res_42643;
                    
                    mem_param_44481[i_42630] = defunc_1_op_res_42647;
                }
            }
            for (int64_t i_45739 = 0; i_45739 < (int64_t) 30; i_45739++) {
                mem_45450[i_45739] = mem_param_44481[i_45739];
            }
        } else {
            for (int64_t i_45740 = 0; i_45740 < (int64_t) 30; i_45740++) {
                mem_45450[i_45740] = mem_param_44481[i_45740];
            }
        }
        for (int64_t i_45741 = 0; i_45741 < (int64_t) 30; i_45741++) {
            mem_44509[i_45741] = mem_45450[i_45741];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45734[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_45734[i_2] = mem_44509[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_44481[i_3] = mem_param_tmp_45734[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_44510[i_4] = mem_param_44481[i_4];
    
    float mem_44524[30 * 1 * 1];
    int64_t ltid_zz_42656 = sext_i32_i64(ltid_pre_45726);
    int64_t ltid_y_42655 = sext_i32_i64(ltid_pre_45727);
    int64_t ltid_x_42653 = sext_i32_i64(ltid_pre_45728);
    int32_t ltid_flat_42654 = local_tid_45722;
    float mem_44518[30 * 1 * 1];
    
    for (int32_t i_44274 = 0; i_44274 < 30; i_44274++) {
        int64_t i_42665 = sext_i32_i64(i_44274);
        
        for (int64_t i_45743 = 0; i_45743 < (int64_t) 1; i_45743++) {
            mem_44518[i_42665 + i_45743] = loop_mem_44510[i_42665 + i_45743];
        }
    }
    for (int64_t i_45744 = 0; i_45744 < (int64_t) 30; i_45744++) {
        for (int64_t i_45745 = 0; i_45745 < (int64_t) 1; i_45745++) {
            for (int64_t i_45746 = 0; i_45746 < (int64_t) 1; i_45746++) {
                mem_44524[i_45744 + i_45745 + i_45746] = mem_44518[i_45744 +
                                                                   i_45745 +
                                                                   i_45746];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_45747 = squot64(sext_i32_i64(local_tid_45722), Ty_42529 *
                                       Tx_42530);
    int64_t reg_tile_i_45748 = squot64(sext_i32_i64(local_tid_45722) -
                                       squot64(sext_i32_i64(local_tid_45722),
                                               Ty_42529 * Tx_42530) *
                                       (Ty_42529 * Tx_42530), Tx_42530);
    int64_t reg_tile_i_45749 = sext_i32_i64(local_tid_45722) -
            squot64(sext_i32_i64(local_tid_45722), Ty_42529 * Tx_42530) *
            (Ty_42529 * Tx_42530) - squot64(sext_i32_i64(local_tid_45722) -
                                            squot64(sext_i32_i64(local_tid_45722),
                                                    Ty_42529 * Tx_42530) *
                                            (Ty_42529 * Tx_42530), Tx_42530) *
            Tx_42530;
    int64_t tile_dim_start_45750 = (int64_t) 30 * (gid_zz_42540 +
                                                   reg_tile_i_45747);
    int64_t tile_dim_start_45751 = Ty_42529 * gid_y_42539 + reg_tile_i_45748;
    int64_t tile_dim_start_45752 = Tx_42530 * gid_x_42538 + reg_tile_i_45749;
    
    for (int64_t nest_i_45753 = 0; nest_i_45753 < (int64_t) 30;
         nest_i_45753++) {
        for (int64_t nest_i_45754 = 0; nest_i_45754 < (int64_t) 1;
             nest_i_45754++) {
            for (int64_t nest_i_45755 = 0; nest_i_45755 < (int64_t) 1;
                 nest_i_45755++) {
                if ((slt64(tile_dim_start_45750 + nest_i_45753, m_29166) &&
                     slt64(tile_dim_start_45751 + nest_i_45754,
                           i32_res_29181)) && slt64(tile_dim_start_45752 +
                                                    nest_i_45755,
                                                    i32_res_29181)) {
                    ((__global float *) mem_44528)[(tile_dim_start_45750 +
                                                    nest_i_45753) *
                                                   (i32_res_29181 *
                                                    i32_res_29181) +
                                                   (tile_dim_start_45751 +
                                                    nest_i_45754) *
                                                   i32_res_29181 +
                                                   (tile_dim_start_45752 +
                                                    nest_i_45755)] =
                        mem_44524[nest_i_45753 + nest_i_45754 + nest_i_45755];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_42694(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44668_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44666_backing_aligned_1,
                                            int64_t N_29165, int64_t m_29166,
                                            int64_t i32_res_29175,
                                            int64_t i32_res_29181,
                                            int64_t gridDim_x_42688,
                                            int64_t full_tiles_42719,
                                            int64_t kk_42926, __global
                                            unsigned char *images_mem_44381,
                                            __global unsigned char *mem_44393,
                                            __global unsigned char *mem_44840)
{
    #define Ty_42675 (mainziTy_42672)
    #define Ry_42676 (mainziRy_42674)
    #define Tx_42677 (mainziTx_42671)
    #define Rx_42678 (mainziRx_42673)
    #define Tk_42679 (mainziTk_42670)
    #define tk_div_tx_42680 (sdiv_up64(mainziTk_42670, mainziTx_42671))
    #define tk_div_ty_42681 (sdiv_up64(mainziTk_42670, mainziTy_42672))
    #define TxRx_42682 (mainziTx_42671 * mainziRx_42673)
    #define TyRy_42683 (mainziTy_42672 * mainziRy_42674)
    #define a_loc_szz_42685 (mainziTk_42670 * (mainziTy_42672 * mainziRy_42674))
    #define b_loc_szz_42687 (mainziRx_42673 * (mainziTx_42671 * mainziTk_42670))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44668_backing_1 = (__local volatile
                                                           char *) mem_44668_backing_aligned_0;
    __local volatile char *restrict mem_44666_backing_0 = (__local volatile
                                                           char *) mem_44666_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45896;
    int32_t local_tid_45897;
    int64_t group_sizze_45900;
    int32_t wave_sizze_45899;
    int32_t group_tid_45898;
    
    global_tid_45896 = get_global_id(0);
    local_tid_45897 = get_local_id(0);
    group_sizze_45900 = get_local_size(0);
    wave_sizze_45899 = LOCKSTEP_WIDTH;
    group_tid_45898 = get_group_id(0);
    
    int32_t gid_flat_42694;
    
    gid_flat_42694 = group_tid_45898;
    
    int32_t ltid_pre_45901;
    
    ltid_pre_45901 = squot32(local_tid_45897, sext_i64_i32(Tx_42677));
    
    int32_t ltid_pre_45902;
    
    ltid_pre_45902 = local_tid_45897 - squot32(local_tid_45897,
                                               sext_i64_i32(Tx_42677)) *
        sext_i64_i32(Tx_42677);
    
    int64_t gid_y_42693;
    
    gid_y_42693 = squot64(sext_i32_i64(group_tid_45898), gridDim_x_42688);
    
    int64_t gid_x_42692;
    
    gid_x_42692 = sext_i32_i64(group_tid_45898) -
        squot64(sext_i32_i64(group_tid_45898), gridDim_x_42688) *
        gridDim_x_42688;
    
    int64_t iii_42695;
    
    iii_42695 = TyRy_42683 * gid_y_42693;
    
    int64_t jjj_42696 = TxRx_42682 * gid_x_42692;
    float mem_44664[Ry_42676 * Rx_42678];
    int64_t ltid_y_42699 = sext_i32_i64(ltid_pre_45901);
    int64_t ltid_x_42697 = sext_i32_i64(ltid_pre_45902);
    int32_t ltid_flat_42698 = local_tid_45897;
    float mem_44655[Ry_42676 * Rx_42678];
    
    for (int64_t i_42710 = 0; i_42710 < Ry_42676; i_42710++) {
        for (int64_t i_42713 = 0; i_42713 < Rx_42678; i_42713++) {
            mem_44655[i_42710 * Rx_42678 + i_42713] = 0.0F;
        }
    }
    for (int64_t i_45905 = 0; i_45905 < Ry_42676; i_45905++) {
        for (int64_t i_45906 = 0; i_45906 < Rx_42678; i_45906++) {
            mem_44664[i_45905 * Rx_42678 + i_45906] = mem_44655[i_45905 *
                                                                Rx_42678 +
                                                                i_45906];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44666;
    
    mem_44666 = (__local char *) mem_44666_backing_0;
    
    __local char *mem_44668;
    
    mem_44668 = (__local char *) mem_44668_backing_1;
    
    float mem_44739[Ry_42676];
    float mem_44743[Rx_42678];
    float loop_mem_44755[Ry_42676 * Rx_42678];
    float mem_param_44669[Ry_42676 * Rx_42678];
    
    for (int32_t i_2 = 0; i_2 < Ry_42676 * Rx_42678; i_2++)
        mem_param_44669[i_2] = mem_44664[i_2];
    for (int64_t i_42720 = 0; i_42720 < full_tiles_42719; i_42720++) {
        int64_t kk_42724 = Tk_42679 * i_42720;
        
        for (int64_t i_42725 = 0; i_42725 < Ry_42676; i_42725++) {
            int64_t binop_y_42748 = Ty_42675 * i_42725;
            
            for (int64_t i_42727 = 0; i_42727 < tk_div_tx_42680; i_42727++) {
                int64_t binop_y_42746 = Tx_42677 * i_42727;
                int64_t ltid_x_42729 = sext_i32_i64(ltid_pre_45901);
                int64_t ltid_y_42730 = sext_i32_i64(ltid_pre_45902);
                int32_t ltid_flat_42731 = local_tid_45897;
                int64_t k_42747 = ltid_y_42730 + binop_y_42746;
                int64_t i_42749 = ltid_x_42729 + binop_y_42748;
                int64_t gtid_42750 = iii_42695 + i_42749;
                int64_t A_col_idx_42751 = kk_42724 + k_42747;
                bool cond_42752 = slt64(gtid_42750, m_29166);
                float A_elem_42753;
                
                if (cond_42752) {
                    float A_elem_42755 = ((__global
                                           float *) images_mem_44381)[gtid_42750 *
                                                                      N_29165 +
                                                                      A_col_idx_42751];
                    
                    A_elem_42753 = A_elem_42755;
                } else {
                    A_elem_42753 = 0.0F;
                }
                
                bool cond_42757 = slt64(k_42747, Tk_42679);
                int64_t a_loc_ind_42758;
                
                if (cond_42757) {
                    int64_t binop_y_42759 = Tk_42679 * i_42749;
                    int64_t loc_fi_42760 = k_42747 + binop_y_42759;
                    
                    a_loc_ind_42758 = loc_fi_42760;
                } else {
                    a_loc_ind_42758 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_42758) &&
                    slt64(a_loc_ind_42758, a_loc_szz_42685)) {
                    ((__local float *) mem_44666)[a_loc_ind_42758] =
                        A_elem_42753;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42765 = 0; i_42765 < tk_div_ty_42681; i_42765++) {
            int64_t binop_y_42786 = Ty_42675 * i_42765;
            
            for (int64_t i_42767 = 0; i_42767 < Rx_42678; i_42767++) {
                int64_t binop_y_42788 = Tx_42677 * i_42767;
                int64_t ltid_x_42769 = sext_i32_i64(ltid_pre_45901);
                int64_t ltid_y_42770 = sext_i32_i64(ltid_pre_45902);
                int32_t ltid_flat_42771 = local_tid_45897;
                int64_t k_42787 = ltid_x_42769 + binop_y_42786;
                int64_t j_42789 = ltid_y_42770 + binop_y_42788;
                int64_t gtid_42790 = jjj_42696 + j_42789;
                int64_t B_row_idx_42791 = kk_42724 + k_42787;
                bool cond_42792 = slt64(gtid_42790, i32_res_29181);
                float B_elem_42793;
                
                if (cond_42792) {
                    float B_elem_42795 = ((__global
                                           float *) mem_44393)[B_row_idx_42791 *
                                                               i32_res_29181 +
                                                               gtid_42790];
                    
                    B_elem_42793 = B_elem_42795;
                } else {
                    B_elem_42793 = 0.0F;
                }
                
                bool cond_42797 = slt64(k_42787, Tk_42679);
                int64_t b_loc_ind_42798;
                
                if (cond_42797) {
                    int64_t binop_y_42799 = TxRx_42682 * k_42787;
                    int64_t loc_fi_42800 = j_42789 + binop_y_42799;
                    
                    b_loc_ind_42798 = loc_fi_42800;
                } else {
                    b_loc_ind_42798 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_42798) &&
                    slt64(b_loc_ind_42798, b_loc_szz_42687)) {
                    ((__local float *) mem_44668)[b_loc_ind_42798] =
                        B_elem_42793;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44754[Ry_42676 * Rx_42678];
        float mem_param_44726[Ry_42676 * Rx_42678];
        
        for (int32_t i_3 = 0; i_3 < Ry_42676 * Rx_42678; i_3++)
            mem_param_44726[i_3] = mem_param_44669[i_3];
        for (int64_t i_42805 = 0; i_42805 < Tk_42679; i_42805++) {
            int64_t binop_y_42844 = TxRx_42682 * i_42805;
            int64_t ltid_y_42809 = sext_i32_i64(ltid_pre_45901);
            int64_t ltid_x_42807 = sext_i32_i64(ltid_pre_45902);
            int32_t ltid_flat_42808 = local_tid_45897;
            float mem_44729[Ry_42676];
            float mem_44731[Rx_42678];
            int64_t binop_x_42835 = Ry_42676 * ltid_y_42809;
            
            for (int64_t i_42833 = 0; i_42833 < Ry_42676; i_42833++) {
                int64_t binop_x_42836 = i_42833 + binop_x_42835;
                int64_t binop_y_42837 = Tk_42679 * binop_x_42836;
                int64_t a_loc_ind_42838 = i_42805 + binop_y_42837;
                
                for (int64_t i_45918 = 0; i_45918 < (int64_t) 1; i_45918++) {
                    mem_44729[i_42833 + i_45918] = ((__local
                                                     float *) mem_44666)[a_loc_ind_42838 +
                                                                         i_45918];
                }
            }
            
            int64_t binop_y_42846 = Rx_42678 * ltid_x_42807;
            
            for (int64_t i_42842 = 0; i_42842 < Rx_42678; i_42842++) {
                int64_t binop_x_42845 = i_42842 + binop_y_42844;
                int64_t b_loc_ind_42847 = binop_x_42845 + binop_y_42846;
                
                for (int64_t i_45920 = 0; i_45920 < (int64_t) 1; i_45920++) {
                    mem_44731[i_42842 + i_45920] = ((__local
                                                     float *) mem_44668)[b_loc_ind_42847 +
                                                                         i_45920];
                }
            }
            for (int64_t i_45921 = 0; i_45921 < Ry_42676; i_45921++) {
                mem_44739[i_45921] = mem_44729[i_45921];
            }
            for (int64_t i_45922 = 0; i_45922 < Rx_42678; i_45922++) {
                mem_44743[i_45922] = mem_44731[i_45922];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44753[Ry_42676 * Rx_42678];
            int64_t ltid_y_42854 = sext_i32_i64(ltid_pre_45901);
            int64_t ltid_x_42852 = sext_i32_i64(ltid_pre_45902);
            int32_t ltid_flat_42853 = local_tid_45897;
            int64_t binop_y_42897 = Ry_42676 * ltid_y_42854;
            int64_t binop_y_42901 = Rx_42678 * ltid_x_42852;
            
            for (int64_t i_42891 = 0; i_42891 < Ry_42676; i_42891++) {
                int64_t binop_x_42896 = iii_42695 + i_42891;
                int64_t cmpop_x_42898 = binop_x_42896 + binop_y_42897;
                bool binop_x_42899 = slt64(cmpop_x_42898, m_29166);
                
                for (int64_t i_42894 = 0; i_42894 < Rx_42678; i_42894++) {
                    int64_t binop_x_42900 = jjj_42696 + i_42894;
                    int64_t cmpop_x_42902 = binop_x_42900 + binop_y_42901;
                    bool binop_y_42903 = slt64(cmpop_x_42902, i32_res_29181);
                    bool cond_42904 = binop_x_42899 && binop_y_42903;
                    
                    if (cond_42904) {
                        float a_42906 = mem_44739[i_42891];
                        float c_42908 = mem_param_44726[i_42891 * Rx_42678 +
                                                        i_42894];
                        bool isnan_res_42911;
                        
                        isnan_res_42911 = futrts_isnan32(a_42906);
                        
                        float defunc_1_f_res_42912;
                        
                        if (isnan_res_42911) {
                            defunc_1_f_res_42912 = 0.0F;
                        } else {
                            float b_42907 = mem_44743[i_42894];
                            float defunc_1_f_res_f_res_42913 = a_42906 *
                                  b_42907;
                            
                            defunc_1_f_res_42912 = defunc_1_f_res_f_res_42913;
                        }
                        
                        float defunc_1_op_res_42917 = c_42908 +
                              defunc_1_f_res_42912;
                        
                        mem_param_44726[i_42891 * Rx_42678 + i_42894] =
                            defunc_1_op_res_42917;
                    }
                }
            }
            for (int64_t i_45925 = 0; i_45925 < Ry_42676; i_45925++) {
                for (int64_t i_45926 = 0; i_45926 < Rx_42678; i_45926++) {
                    mem_44753[i_45925 * Rx_42678 + i_45926] =
                        mem_param_44726[i_45925 * Rx_42678 + i_45926];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45915[Ry_42676 * Rx_42678];
            
            for (int32_t i_4 = 0; i_4 < Ry_42676 * Rx_42678; i_4++)
                mem_param_tmp_45915[i_4] = mem_44753[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42676 * Rx_42678; i_5++)
                mem_param_44726[i_5] = mem_param_tmp_45915[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42676 * Rx_42678; i_6++)
            loop_mem_44754[i_6] = mem_param_44726[i_6];
        
        float mem_param_tmp_45907[Ry_42676 * Rx_42678];
        
        for (int32_t i_7 = 0; i_7 < Ry_42676 * Rx_42678; i_7++)
            mem_param_tmp_45907[i_7] = loop_mem_44754[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42676 * Rx_42678; i_8++)
            mem_param_44669[i_8] = mem_param_tmp_45907[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42676 * Rx_42678; i_9++)
        loop_mem_44755[i_9] = mem_param_44669[i_9];
    for (int64_t i_42927 = 0; i_42927 < Ry_42676; i_42927++) {
        int64_t binop_y_42952 = Ty_42675 * i_42927;
        
        for (int64_t i_42929 = 0; i_42929 < tk_div_tx_42680; i_42929++) {
            int64_t binop_y_42950 = Tx_42677 * i_42929;
            int64_t ltid_x_42931 = sext_i32_i64(ltid_pre_45901);
            int64_t ltid_y_42932 = sext_i32_i64(ltid_pre_45902);
            int32_t ltid_flat_42933 = local_tid_45897;
            int64_t k_42951 = ltid_y_42932 + binop_y_42950;
            int64_t i_42953 = ltid_x_42931 + binop_y_42952;
            int64_t gtid_42954 = iii_42695 + i_42953;
            int64_t A_col_idx_42955 = kk_42926 + k_42951;
            bool binop_x_42956 = slt64(gtid_42954, m_29166);
            bool binop_y_42957 = slt64(A_col_idx_42955, i32_res_29175);
            bool cond_42958 = binop_x_42956 && binop_y_42957;
            float A_elem_42959;
            
            if (cond_42958) {
                float A_elem_42961 = ((__global
                                       float *) images_mem_44381)[gtid_42954 *
                                                                  N_29165 +
                                                                  A_col_idx_42955];
                
                A_elem_42959 = A_elem_42961;
            } else {
                A_elem_42959 = 0.0F;
            }
            
            bool cond_42963 = slt64(k_42951, Tk_42679);
            int64_t a_loc_ind_42964;
            
            if (cond_42963) {
                int64_t binop_y_42965 = Tk_42679 * i_42953;
                int64_t loc_fi_42966 = k_42951 + binop_y_42965;
                
                a_loc_ind_42964 = loc_fi_42966;
            } else {
                a_loc_ind_42964 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_42964) && slt64(a_loc_ind_42964,
                                                             a_loc_szz_42685)) {
                ((__local float *) mem_44666)[a_loc_ind_42964] = A_elem_42959;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42971 = 0; i_42971 < tk_div_ty_42681; i_42971++) {
        int64_t binop_y_42994 = Ty_42675 * i_42971;
        
        for (int64_t i_42973 = 0; i_42973 < Rx_42678; i_42973++) {
            int64_t binop_y_42996 = Tx_42677 * i_42973;
            int64_t ltid_x_42975 = sext_i32_i64(ltid_pre_45901);
            int64_t ltid_y_42976 = sext_i32_i64(ltid_pre_45902);
            int32_t ltid_flat_42977 = local_tid_45897;
            int64_t k_42995 = ltid_x_42975 + binop_y_42994;
            int64_t j_42997 = ltid_y_42976 + binop_y_42996;
            int64_t gtid_42998 = jjj_42696 + j_42997;
            int64_t B_row_idx_42999 = kk_42926 + k_42995;
            bool binop_x_43000 = slt64(gtid_42998, i32_res_29181);
            bool binop_y_43001 = slt64(B_row_idx_42999, i32_res_29175);
            bool cond_43002 = binop_x_43000 && binop_y_43001;
            float B_elem_43003;
            
            if (cond_43002) {
                float B_elem_43005 = ((__global
                                       float *) mem_44393)[B_row_idx_42999 *
                                                           i32_res_29181 +
                                                           gtid_42998];
                
                B_elem_43003 = B_elem_43005;
            } else {
                B_elem_43003 = 0.0F;
            }
            
            bool cond_43007 = slt64(k_42995, Tk_42679);
            int64_t b_loc_ind_43008;
            
            if (cond_43007) {
                int64_t binop_y_43009 = TxRx_42682 * k_42995;
                int64_t loc_fi_43010 = j_42997 + binop_y_43009;
                
                b_loc_ind_43008 = loc_fi_43010;
            } else {
                b_loc_ind_43008 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_43008) && slt64(b_loc_ind_43008,
                                                             b_loc_szz_42687)) {
                ((__local float *) mem_44668)[b_loc_ind_43008] = B_elem_43003;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44821[Ry_42676];
    float mem_44825[Rx_42678];
    float mem_44835[Ry_42676 * Rx_42678];
    float loop_mem_44837[Ry_42676 * Rx_42678];
    float mem_param_44808[Ry_42676 * Rx_42678];
    
    for (int32_t i_10 = 0; i_10 < Ry_42676 * Rx_42678; i_10++)
        mem_param_44808[i_10] = loop_mem_44755[i_10];
    for (int64_t i_43015 = 0; i_43015 < Tk_42679; i_43015++) {
        int64_t cmpop_x_43017 = kk_42926 + i_43015;
        bool cond_43018 = slt64(cmpop_x_43017, i32_res_29175);
        float mem_45468[Ry_42676 * Rx_42678];
        
        if (cond_43018) {
            int64_t binop_y_43056 = TxRx_42682 * i_43015;
            int64_t bytes_44810 = (int64_t) 4 * Ry_42676;
            int64_t bytes_44812 = (int64_t) 4 * Rx_42678;
            int64_t ltid_y_43021 = sext_i32_i64(ltid_pre_45901);
            int64_t ltid_x_43019 = sext_i32_i64(ltid_pre_45902);
            int32_t ltid_flat_43020 = local_tid_45897;
            float mem_44811[Ry_42676];
            float mem_44813[Rx_42678];
            int64_t binop_x_43047 = Ry_42676 * ltid_y_43021;
            
            for (int64_t i_43045 = 0; i_43045 < Ry_42676; i_43045++) {
                int64_t binop_x_43048 = i_43045 + binop_x_43047;
                int64_t binop_y_43049 = Tk_42679 * binop_x_43048;
                int64_t a_loc_ind_43050 = i_43015 + binop_y_43049;
                
                for (int64_t i_45934 = 0; i_45934 < (int64_t) 1; i_45934++) {
                    mem_44811[i_43045 + i_45934] = ((__local
                                                     float *) mem_44666)[a_loc_ind_43050 +
                                                                         i_45934];
                }
            }
            
            int64_t binop_y_43058 = Rx_42678 * ltid_x_43019;
            
            for (int64_t i_43054 = 0; i_43054 < Rx_42678; i_43054++) {
                int64_t binop_x_43057 = i_43054 + binop_y_43056;
                int64_t b_loc_ind_43059 = binop_x_43057 + binop_y_43058;
                
                for (int64_t i_45936 = 0; i_45936 < (int64_t) 1; i_45936++) {
                    mem_44813[i_43054 + i_45936] = ((__local
                                                     float *) mem_44668)[b_loc_ind_43059 +
                                                                         i_45936];
                }
            }
            for (int64_t i_45937 = 0; i_45937 < Ry_42676; i_45937++) {
                mem_44821[i_45937] = mem_44811[i_45937];
            }
            for (int64_t i_45938 = 0; i_45938 < Rx_42678; i_45938++) {
                mem_44825[i_45938] = mem_44813[i_45938];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_43066 = sext_i32_i64(ltid_pre_45901);
            int64_t ltid_x_43064 = sext_i32_i64(ltid_pre_45902);
            int32_t ltid_flat_43065 = local_tid_45897;
            int64_t binop_y_43109 = Ry_42676 * ltid_y_43066;
            int64_t binop_y_43113 = Rx_42678 * ltid_x_43064;
            
            for (int64_t i_43103 = 0; i_43103 < Ry_42676; i_43103++) {
                int64_t binop_x_43108 = iii_42695 + i_43103;
                int64_t cmpop_x_43110 = binop_x_43108 + binop_y_43109;
                bool binop_x_43111 = slt64(cmpop_x_43110, m_29166);
                
                for (int64_t i_43106 = 0; i_43106 < Rx_42678; i_43106++) {
                    int64_t binop_x_43112 = jjj_42696 + i_43106;
                    int64_t cmpop_x_43114 = binop_x_43112 + binop_y_43113;
                    bool binop_y_43115 = slt64(cmpop_x_43114, i32_res_29181);
                    bool cond_43116 = binop_x_43111 && binop_y_43115;
                    
                    if (cond_43116) {
                        float a_43118 = mem_44821[i_43103];
                        float c_43120 = mem_param_44808[i_43103 * Rx_42678 +
                                                        i_43106];
                        bool isnan_res_43123;
                        
                        isnan_res_43123 = futrts_isnan32(a_43118);
                        
                        float defunc_1_f_res_43124;
                        
                        if (isnan_res_43123) {
                            defunc_1_f_res_43124 = 0.0F;
                        } else {
                            float b_43119 = mem_44825[i_43106];
                            float defunc_1_f_res_f_res_43125 = a_43118 *
                                  b_43119;
                            
                            defunc_1_f_res_43124 = defunc_1_f_res_f_res_43125;
                        }
                        
                        float defunc_1_op_res_43129 = c_43120 +
                              defunc_1_f_res_43124;
                        
                        mem_param_44808[i_43103 * Rx_42678 + i_43106] =
                            defunc_1_op_res_43129;
                    }
                }
            }
            for (int64_t i_45941 = 0; i_45941 < Ry_42676; i_45941++) {
                for (int64_t i_45942 = 0; i_45942 < Rx_42678; i_45942++) {
                    mem_44835[i_45941 * Rx_42678 + i_45942] =
                        mem_param_44808[i_45941 * Rx_42678 + i_45942];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45943 = 0; i_45943 < Ry_42676; i_45943++) {
                for (int64_t i_45944 = 0; i_45944 < Rx_42678; i_45944++) {
                    mem_45468[i_45943 * Rx_42678 + i_45944] =
                        mem_44835[i_45943 * Rx_42678 + i_45944];
                }
            }
        } else {
            for (int64_t i_45945 = 0; i_45945 < Ry_42676; i_45945++) {
                for (int64_t i_45946 = 0; i_45946 < Rx_42678; i_45946++) {
                    mem_45468[i_45945 * Rx_42678 + i_45946] =
                        mem_param_44808[i_45945 * Rx_42678 + i_45946];
                }
            }
        }
        
        float mem_param_tmp_45931[Ry_42676 * Rx_42678];
        
        for (int32_t i_11 = 0; i_11 < Ry_42676 * Rx_42678; i_11++)
            mem_param_tmp_45931[i_11] = mem_45468[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42676 * Rx_42678; i_12++)
            mem_param_44808[i_12] = mem_param_tmp_45931[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42676 * Rx_42678; i_13++)
        loop_mem_44837[i_13] = mem_param_44808[i_13];
    
    int64_t reg_tile_i_45947 = squot64(sext_i32_i64(local_tid_45897), Tx_42677);
    int64_t reg_tile_i_45948 = sext_i32_i64(local_tid_45897) -
            squot64(sext_i32_i64(local_tid_45897), Tx_42677) * Tx_42677;
    int64_t tile_dim_start_45949 = Ry_42676 * (Ty_42675 * gid_y_42693 +
                                               reg_tile_i_45947);
    int64_t tile_dim_start_45950 = Rx_42678 * (Tx_42677 * gid_x_42692 +
                                               reg_tile_i_45948);
    
    for (int64_t nest_i_45951 = 0; nest_i_45951 < Ry_42676; nest_i_45951++) {
        for (int64_t nest_i_45952 = 0; nest_i_45952 < Rx_42678;
             nest_i_45952++) {
            if (slt64(tile_dim_start_45949 + nest_i_45951, m_29166) &&
                slt64(tile_dim_start_45950 + nest_i_45952, i32_res_29181)) {
                ((__global float *) mem_44840)[(tile_dim_start_45949 +
                                                nest_i_45951) * i32_res_29181 +
                                               (tile_dim_start_45950 +
                                                nest_i_45952)] =
                    loop_mem_44837[nest_i_45951 * Rx_42678 + nest_i_45952];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42675
    #undef Ry_42676
    #undef Tx_42677
    #undef Rx_42678
    #undef Tk_42679
    #undef tk_div_tx_42680
    #undef tk_div_ty_42681
    #undef TxRx_42682
    #undef TyRy_42683
    #undef a_loc_szz_42685
    #undef b_loc_szz_42687
}
__kernel void mainzisegmap_intragroup_43143(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44898_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44889_backing_aligned_1,
                                            int64_t m_29166,
                                            int64_t i32_res_29181,
                                            int64_t num_groups_y_43141,
                                            int64_t num_whole_tiles_43159,
                                            int64_t residual_input_43286,
                                            unsigned char cond_43287, __global
                                            unsigned char *defunc_3_map_res_mem_44850,
                                            __global unsigned char *mem_44879,
                                            __global unsigned char *mem_44906)
{
    #define tile_sizze_43138 (mainzitile_sizze_43137)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44898_backing_5 = (__local volatile
                                                           char *) mem_44898_backing_aligned_0;
    __local volatile char *restrict mem_44889_backing_0 = (__local volatile
                                                           char *) mem_44889_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46028;
    int32_t local_tid_46029;
    int64_t group_sizze_46032;
    int32_t wave_sizze_46031;
    int32_t group_tid_46030;
    
    global_tid_46028 = get_global_id(0);
    local_tid_46029 = get_local_id(0);
    group_sizze_46032 = get_local_size(0);
    wave_sizze_46031 = LOCKSTEP_WIDTH;
    group_tid_46030 = get_group_id(0);
    
    int32_t gid_flat_43143;
    
    gid_flat_43143 = group_tid_46030;
    
    int32_t ltid_pre_46033;
    
    ltid_pre_46033 = squot32(local_tid_46029, sext_i64_i32(tile_sizze_43138));
    
    int32_t ltid_pre_46034;
    
    ltid_pre_46034 = local_tid_46029 - squot32(local_tid_46029,
                                               sext_i64_i32(tile_sizze_43138)) *
        sext_i64_i32(tile_sizze_43138);
    
    int64_t gid_x_43135;
    
    gid_x_43135 = squot64(sext_i32_i64(group_tid_46030), num_groups_y_43141);
    
    int64_t gid_y_43136;
    
    gid_y_43136 = sext_i32_i64(group_tid_46030) -
        squot64(sext_i32_i64(group_tid_46030), num_groups_y_43141) *
        num_groups_y_43141;
    
    float mem_44884[1];
    int64_t ltid_y_43162 = sext_i32_i64(ltid_pre_46033);
    int64_t ltid_x_43160 = sext_i32_i64(ltid_pre_46034);
    int32_t ltid_flat_43161 = local_tid_46029;
    
    if (slt64(ltid_y_43162, tile_sizze_43138) && slt64(ltid_x_43160,
                                                       tile_sizze_43138)) {
        mem_44884[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_43245 = gid_x_43135 * tile_sizze_43138;
    int64_t binop_x_43260 = gid_y_43136 * tile_sizze_43138;
    __local char *mem_44889;
    
    mem_44889 = (__local char *) mem_44889_backing_0;
    
    float accs_mem_44894[1];
    float mem_param_44885[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44885[i_1] = mem_44884[i_1];
    for (int64_t tile_id_43171 = 0; tile_id_43171 < num_whole_tiles_43159;
         tile_id_43171++) {
        int64_t binop_x_43243 = tile_sizze_43138 * tile_id_43171;
        int64_t ltid_y_43174 = sext_i32_i64(ltid_pre_46033);
        int64_t ltid_x_43172 = sext_i32_i64(ltid_pre_46034);
        int32_t ltid_flat_43173 = local_tid_46029;
        int64_t j_43244 = ltid_x_43172 + binop_x_43243;
        int64_t gtid_43246 = ltid_y_43174 + binop_x_43245;
        bool binop_x_43251 = slt64(j_43244, i32_res_29181);
        bool binop_y_43252 = slt64(gtid_43246, m_29166);
        bool cond_43253 = binop_x_43251 && binop_y_43252;
        float pre_43254;
        
        if (cond_43253) {
            float x_43255 = ((__global
                              float *) defunc_3_map_res_mem_44850)[gtid_43246 *
                                                                   i32_res_29181 +
                                                                   j_43244];
            
            pre_43254 = x_43255;
        } else {
            pre_43254 = 0.0F;
        }
        ((__local float *) mem_44889)[ltid_y_43174 * tile_sizze_43138 +
                                      ltid_x_43172] = pre_43254;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44893[1];
        int64_t ltid_y_43206 = sext_i32_i64(ltid_pre_46033);
        int64_t ltid_x_43204 = sext_i32_i64(ltid_pre_46034);
        int32_t ltid_flat_43205 = local_tid_46029;
        int64_t gtid_43259 = ltid_y_43206 + binop_x_43245;
        int64_t gtid_43261 = ltid_x_43204 + binop_x_43260;
        float acc_43264 = mem_param_44885[(int64_t) 0];
        bool binop_x_43268 = slt64(gtid_43259, m_29166);
        bool binop_y_43269 = slt64(gtid_43261, i32_res_29181);
        bool cond_43270 = binop_x_43268 && binop_y_43269;
        float acc_43271;
        
        if (cond_43270) {
            float x_43272;
            float redout_44315 = acc_43264;
            
            for (int64_t i_44316 = 0; i_44316 < tile_sizze_43138; i_44316++) {
                float x_43276 = ((__local float *) mem_44889)[ltid_y_43206 *
                                                              tile_sizze_43138 +
                                                              i_44316];
                int64_t slice_44367 = binop_x_43243 + i_44316;
                float x_43277 = ((__global float *) mem_44879)[slice_44367 *
                                                               (i32_res_29181 *
                                                                m_29166) +
                                                               gtid_43259 *
                                                               i32_res_29181 +
                                                               gtid_43261];
                float defunc_1_f_res_43278 = x_43276 * x_43277;
                float defunc_1_op_res_43275 = defunc_1_f_res_43278 +
                      redout_44315;
                float redout_tmp_46037 = defunc_1_op_res_43275;
                
                redout_44315 = redout_tmp_46037;
            }
            x_43272 = redout_44315;
            acc_43271 = x_43272;
        } else {
            acc_43271 = acc_43264;
        }
        mem_44893[(int64_t) 0] = acc_43271;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46035[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46035[i_2] = mem_44893[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44885[i_3] = mem_param_tmp_46035[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44894[i_4] = mem_param_44885[i_4];
    
    __local char *mem_44898;
    
    mem_44898 = (__local char *) mem_44898_backing_5;
    
    float mem_44902[1];
    float mem_45482[1];
    
    if (cond_43287) {
        mem_45482[(int64_t) 0] = accs_mem_44894[(int64_t) 0];
    } else {
        int64_t binop_x_43360 = tile_sizze_43138 * num_whole_tiles_43159;
        int64_t ltid_y_43290 = sext_i32_i64(ltid_pre_46033);
        int64_t ltid_x_43288 = sext_i32_i64(ltid_pre_46034);
        int32_t ltid_flat_43289 = local_tid_46029;
        int64_t j_43361 = ltid_x_43288 + binop_x_43360;
        int64_t gtid_43363 = binop_x_43245 + ltid_y_43290;
        bool binop_x_43368 = slt64(j_43361, i32_res_29181);
        bool binop_y_43369 = slt64(gtid_43363, m_29166);
        bool cond_43370 = binop_x_43368 && binop_y_43369;
        float pre_43371;
        
        if (cond_43370) {
            float x_43372 = ((__global
                              float *) defunc_3_map_res_mem_44850)[gtid_43363 *
                                                                   i32_res_29181 +
                                                                   j_43361];
            
            pre_43371 = x_43372;
        } else {
            pre_43371 = 0.0F;
        }
        ((__local float *) mem_44898)[ltid_y_43290 * tile_sizze_43138 +
                                      ltid_x_43288] = pre_43371;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_43323 = sext_i32_i64(ltid_pre_46033);
        int64_t ltid_x_43321 = sext_i32_i64(ltid_pre_46034);
        int32_t ltid_flat_43322 = local_tid_46029;
        int64_t gtid_43377 = binop_x_43245 + ltid_y_43323;
        int64_t gtid_43379 = binop_x_43260 + ltid_x_43321;
        float acc_43382 = accs_mem_44894[(int64_t) 0];
        bool binop_x_43386 = slt64(gtid_43377, m_29166);
        bool binop_y_43387 = slt64(gtid_43379, i32_res_29181);
        bool cond_43388 = binop_x_43386 && binop_y_43387;
        float acc_43389;
        
        if (cond_43388) {
            float x_43390;
            float redout_44317 = acc_43382;
            
            for (int64_t i_44318 = 0; i_44318 < residual_input_43286;
                 i_44318++) {
                float x_43394 = ((__local float *) mem_44898)[ltid_y_43323 *
                                                              tile_sizze_43138 +
                                                              i_44318];
                int64_t slice_44368 = binop_x_43360 + i_44318;
                float x_43395 = ((__global float *) mem_44879)[slice_44368 *
                                                               (i32_res_29181 *
                                                                m_29166) +
                                                               gtid_43377 *
                                                               i32_res_29181 +
                                                               gtid_43379];
                float defunc_1_f_res_43396 = x_43394 * x_43395;
                float defunc_1_op_res_43393 = defunc_1_f_res_43396 +
                      redout_44317;
                float redout_tmp_46038 = defunc_1_op_res_43393;
                
                redout_44317 = redout_tmp_46038;
            }
            x_43390 = redout_44317;
            acc_43389 = x_43390;
        } else {
            acc_43389 = acc_43382;
        }
        mem_44902[(int64_t) 0] = acc_43389;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45482[(int64_t) 0] = mem_44902[(int64_t) 0];
    }
    
    int64_t thread_out_index_46039 = gid_x_43135 * tile_sizze_43138 +
            sext_i32_i64(ltid_pre_46033);
    int64_t thread_out_index_46040 = gid_y_43136 * tile_sizze_43138 +
            sext_i32_i64(ltid_pre_46034);
    
    if (slt64(thread_out_index_46039, m_29166) && slt64(thread_out_index_46040,
                                                        i32_res_29181)) {
        ((__global float *) mem_44906)[thread_out_index_46039 * i32_res_29181 +
                                       thread_out_index_46040] =
            mem_45482[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_43138
}
__kernel void mainzisegmap_intragroup_43435(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44958_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44956_backing_aligned_1,
                                            int64_t N_29165, int64_t m_29166,
                                            int64_t i32_res_29181,
                                            int64_t gridDim_x_43429,
                                            int64_t full_tiles_43460,
                                            int64_t kk_43663, __global
                                            unsigned char *defunc_4_map_res_mem_44916,
                                            __global unsigned char *mem_44940,
                                            __global unsigned char *mem_45130)
{
    #define Ty_43416 (mainziTy_43413)
    #define Ry_43417 (mainziRy_43415)
    #define Tx_43418 (mainziTx_43412)
    #define Rx_43419 (mainziRx_43414)
    #define Tk_43420 (mainziTk_43411)
    #define tk_div_tx_43421 (sdiv_up64(mainziTk_43411, mainziTx_43412))
    #define tk_div_ty_43422 (sdiv_up64(mainziTk_43411, mainziTy_43413))
    #define TxRx_43423 (mainziTx_43412 * mainziRx_43414)
    #define TyRy_43424 (mainziTy_43413 * mainziRy_43415)
    #define a_loc_szz_43426 (mainziTk_43411 * (mainziTy_43413 * mainziRy_43415))
    #define b_loc_szz_43428 (mainziRx_43414 * (mainziTx_43412 * mainziTk_43411))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44958_backing_1 = (__local volatile
                                                           char *) mem_44958_backing_aligned_0;
    __local volatile char *restrict mem_44956_backing_0 = (__local volatile
                                                           char *) mem_44956_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46116;
    int32_t local_tid_46117;
    int64_t group_sizze_46120;
    int32_t wave_sizze_46119;
    int32_t group_tid_46118;
    
    global_tid_46116 = get_global_id(0);
    local_tid_46117 = get_local_id(0);
    group_sizze_46120 = get_local_size(0);
    wave_sizze_46119 = LOCKSTEP_WIDTH;
    group_tid_46118 = get_group_id(0);
    
    int32_t gid_flat_43435;
    
    gid_flat_43435 = group_tid_46118;
    
    int32_t ltid_pre_46121;
    
    ltid_pre_46121 = squot32(local_tid_46117, sext_i64_i32(Tx_43418));
    
    int32_t ltid_pre_46122;
    
    ltid_pre_46122 = local_tid_46117 - squot32(local_tid_46117,
                                               sext_i64_i32(Tx_43418)) *
        sext_i64_i32(Tx_43418);
    
    int64_t gid_y_43434;
    
    gid_y_43434 = squot64(sext_i32_i64(group_tid_46118), gridDim_x_43429);
    
    int64_t gid_x_43433;
    
    gid_x_43433 = sext_i32_i64(group_tid_46118) -
        squot64(sext_i32_i64(group_tid_46118), gridDim_x_43429) *
        gridDim_x_43429;
    
    int64_t iii_43436;
    
    iii_43436 = TyRy_43424 * gid_y_43434;
    
    int64_t jjj_43437 = TxRx_43423 * gid_x_43433;
    float mem_44954[Ry_43417 * Rx_43419];
    int64_t ltid_y_43440 = sext_i32_i64(ltid_pre_46121);
    int64_t ltid_x_43438 = sext_i32_i64(ltid_pre_46122);
    int32_t ltid_flat_43439 = local_tid_46117;
    float mem_44945[Ry_43417 * Rx_43419];
    
    for (int64_t i_43451 = 0; i_43451 < Ry_43417; i_43451++) {
        for (int64_t i_43454 = 0; i_43454 < Rx_43419; i_43454++) {
            mem_44945[i_43451 * Rx_43419 + i_43454] = 0.0F;
        }
    }
    for (int64_t i_46125 = 0; i_46125 < Ry_43417; i_46125++) {
        for (int64_t i_46126 = 0; i_46126 < Rx_43419; i_46126++) {
            mem_44954[i_46125 * Rx_43419 + i_46126] = mem_44945[i_46125 *
                                                                Rx_43419 +
                                                                i_46126];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44956;
    
    mem_44956 = (__local char *) mem_44956_backing_0;
    
    __local char *mem_44958;
    
    mem_44958 = (__local char *) mem_44958_backing_1;
    
    float mem_45029[Ry_43417];
    float mem_45033[Rx_43419];
    float loop_mem_45045[Ry_43417 * Rx_43419];
    float mem_param_44959[Ry_43417 * Rx_43419];
    
    for (int32_t i_2 = 0; i_2 < Ry_43417 * Rx_43419; i_2++)
        mem_param_44959[i_2] = mem_44954[i_2];
    for (int64_t i_43461 = 0; i_43461 < full_tiles_43460; i_43461++) {
        int64_t kk_43465 = Tk_43420 * i_43461;
        
        for (int64_t i_43466 = 0; i_43466 < Ry_43417; i_43466++) {
            int64_t binop_y_43489 = Ty_43416 * i_43466;
            
            for (int64_t i_43468 = 0; i_43468 < tk_div_tx_43421; i_43468++) {
                int64_t binop_y_43487 = Tx_43418 * i_43468;
                int64_t ltid_x_43470 = sext_i32_i64(ltid_pre_46121);
                int64_t ltid_y_43471 = sext_i32_i64(ltid_pre_46122);
                int32_t ltid_flat_43472 = local_tid_46117;
                int64_t k_43488 = ltid_y_43471 + binop_y_43487;
                int64_t i_43490 = ltid_x_43470 + binop_y_43489;
                int64_t gtid_43491 = iii_43436 + i_43490;
                int64_t A_col_idx_43492 = kk_43465 + k_43488;
                bool cond_43493 = slt64(gtid_43491, m_29166);
                float A_elem_43494;
                
                if (cond_43493) {
                    float A_elem_43496 = ((__global
                                           float *) defunc_4_map_res_mem_44916)[gtid_43491 *
                                                                                i32_res_29181 +
                                                                                A_col_idx_43492];
                    
                    A_elem_43494 = A_elem_43496;
                } else {
                    A_elem_43494 = 0.0F;
                }
                
                bool cond_43498 = slt64(k_43488, Tk_43420);
                int64_t a_loc_ind_43499;
                
                if (cond_43498) {
                    int64_t binop_y_43500 = Tk_43420 * i_43490;
                    int64_t loc_fi_43501 = k_43488 + binop_y_43500;
                    
                    a_loc_ind_43499 = loc_fi_43501;
                } else {
                    a_loc_ind_43499 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_43499) &&
                    slt64(a_loc_ind_43499, a_loc_szz_43426)) {
                    ((__local float *) mem_44956)[a_loc_ind_43499] =
                        A_elem_43494;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_43506 = 0; i_43506 < tk_div_ty_43422; i_43506++) {
            int64_t binop_y_43527 = Ty_43416 * i_43506;
            
            for (int64_t i_43508 = 0; i_43508 < Rx_43419; i_43508++) {
                int64_t binop_y_43529 = Tx_43418 * i_43508;
                int64_t ltid_x_43510 = sext_i32_i64(ltid_pre_46121);
                int64_t ltid_y_43511 = sext_i32_i64(ltid_pre_46122);
                int32_t ltid_flat_43512 = local_tid_46117;
                int64_t k_43528 = ltid_x_43510 + binop_y_43527;
                int64_t j_43530 = ltid_y_43511 + binop_y_43529;
                int64_t gtid_43531 = jjj_43437 + j_43530;
                int64_t B_row_idx_43532 = kk_43465 + k_43528;
                bool cond_43533 = slt64(gtid_43531, N_29165);
                float B_elem_43534;
                
                if (cond_43533) {
                    float B_elem_43536 = ((__global
                                           float *) mem_44940)[B_row_idx_43532 *
                                                               N_29165 +
                                                               gtid_43531];
                    
                    B_elem_43534 = B_elem_43536;
                } else {
                    B_elem_43534 = 0.0F;
                }
                
                bool cond_43538 = slt64(k_43528, Tk_43420);
                int64_t b_loc_ind_43539;
                
                if (cond_43538) {
                    int64_t binop_y_43540 = TxRx_43423 * k_43528;
                    int64_t loc_fi_43541 = j_43530 + binop_y_43540;
                    
                    b_loc_ind_43539 = loc_fi_43541;
                } else {
                    b_loc_ind_43539 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_43539) &&
                    slt64(b_loc_ind_43539, b_loc_szz_43428)) {
                    ((__local float *) mem_44958)[b_loc_ind_43539] =
                        B_elem_43534;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_45044[Ry_43417 * Rx_43419];
        float mem_param_45016[Ry_43417 * Rx_43419];
        
        for (int32_t i_3 = 0; i_3 < Ry_43417 * Rx_43419; i_3++)
            mem_param_45016[i_3] = mem_param_44959[i_3];
        for (int64_t i_43546 = 0; i_43546 < Tk_43420; i_43546++) {
            int64_t binop_y_43585 = TxRx_43423 * i_43546;
            int64_t ltid_y_43550 = sext_i32_i64(ltid_pre_46121);
            int64_t ltid_x_43548 = sext_i32_i64(ltid_pre_46122);
            int32_t ltid_flat_43549 = local_tid_46117;
            float mem_45019[Ry_43417];
            float mem_45021[Rx_43419];
            int64_t binop_x_43576 = Ry_43417 * ltid_y_43550;
            
            for (int64_t i_43574 = 0; i_43574 < Ry_43417; i_43574++) {
                int64_t binop_x_43577 = i_43574 + binop_x_43576;
                int64_t binop_y_43578 = Tk_43420 * binop_x_43577;
                int64_t a_loc_ind_43579 = i_43546 + binop_y_43578;
                
                for (int64_t i_46138 = 0; i_46138 < (int64_t) 1; i_46138++) {
                    mem_45019[i_43574 + i_46138] = ((__local
                                                     float *) mem_44956)[a_loc_ind_43579 +
                                                                         i_46138];
                }
            }
            
            int64_t binop_y_43587 = Rx_43419 * ltid_x_43548;
            
            for (int64_t i_43583 = 0; i_43583 < Rx_43419; i_43583++) {
                int64_t binop_x_43586 = i_43583 + binop_y_43585;
                int64_t b_loc_ind_43588 = binop_x_43586 + binop_y_43587;
                
                for (int64_t i_46140 = 0; i_46140 < (int64_t) 1; i_46140++) {
                    mem_45021[i_43583 + i_46140] = ((__local
                                                     float *) mem_44958)[b_loc_ind_43588 +
                                                                         i_46140];
                }
            }
            for (int64_t i_46141 = 0; i_46141 < Ry_43417; i_46141++) {
                mem_45029[i_46141] = mem_45019[i_46141];
            }
            for (int64_t i_46142 = 0; i_46142 < Rx_43419; i_46142++) {
                mem_45033[i_46142] = mem_45021[i_46142];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_45043[Ry_43417 * Rx_43419];
            int64_t ltid_y_43595 = sext_i32_i64(ltid_pre_46121);
            int64_t ltid_x_43593 = sext_i32_i64(ltid_pre_46122);
            int32_t ltid_flat_43594 = local_tid_46117;
            int64_t binop_y_43636 = Ry_43417 * ltid_y_43595;
            int64_t binop_y_43640 = Rx_43419 * ltid_x_43593;
            
            for (int64_t i_43630 = 0; i_43630 < Ry_43417; i_43630++) {
                int64_t binop_x_43635 = iii_43436 + i_43630;
                int64_t cmpop_x_43637 = binop_x_43635 + binop_y_43636;
                bool binop_x_43638 = slt64(cmpop_x_43637, m_29166);
                
                for (int64_t i_43633 = 0; i_43633 < Rx_43419; i_43633++) {
                    int64_t binop_x_43639 = jjj_43437 + i_43633;
                    int64_t cmpop_x_43641 = binop_x_43639 + binop_y_43640;
                    bool binop_y_43642 = slt64(cmpop_x_43641, N_29165);
                    bool cond_43643 = binop_x_43638 && binop_y_43642;
                    
                    if (cond_43643) {
                        float a_43645 = mem_45029[i_43630];
                        float b_43646 = mem_45033[i_43633];
                        float c_43647 = mem_param_45016[i_43630 * Rx_43419 +
                                                        i_43633];
                        float defunc_1_f_res_43650 = a_43645 * b_43646;
                        float defunc_1_op_res_43654 = c_43647 +
                              defunc_1_f_res_43650;
                        
                        mem_param_45016[i_43630 * Rx_43419 + i_43633] =
                            defunc_1_op_res_43654;
                    }
                }
            }
            for (int64_t i_46145 = 0; i_46145 < Ry_43417; i_46145++) {
                for (int64_t i_46146 = 0; i_46146 < Rx_43419; i_46146++) {
                    mem_45043[i_46145 * Rx_43419 + i_46146] =
                        mem_param_45016[i_46145 * Rx_43419 + i_46146];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_46135[Ry_43417 * Rx_43419];
            
            for (int32_t i_4 = 0; i_4 < Ry_43417 * Rx_43419; i_4++)
                mem_param_tmp_46135[i_4] = mem_45043[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_43417 * Rx_43419; i_5++)
                mem_param_45016[i_5] = mem_param_tmp_46135[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_43417 * Rx_43419; i_6++)
            loop_mem_45044[i_6] = mem_param_45016[i_6];
        
        float mem_param_tmp_46127[Ry_43417 * Rx_43419];
        
        for (int32_t i_7 = 0; i_7 < Ry_43417 * Rx_43419; i_7++)
            mem_param_tmp_46127[i_7] = loop_mem_45044[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_43417 * Rx_43419; i_8++)
            mem_param_44959[i_8] = mem_param_tmp_46127[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_43417 * Rx_43419; i_9++)
        loop_mem_45045[i_9] = mem_param_44959[i_9];
    for (int64_t i_43664 = 0; i_43664 < Ry_43417; i_43664++) {
        int64_t binop_y_43689 = Ty_43416 * i_43664;
        
        for (int64_t i_43666 = 0; i_43666 < tk_div_tx_43421; i_43666++) {
            int64_t binop_y_43687 = Tx_43418 * i_43666;
            int64_t ltid_x_43668 = sext_i32_i64(ltid_pre_46121);
            int64_t ltid_y_43669 = sext_i32_i64(ltid_pre_46122);
            int32_t ltid_flat_43670 = local_tid_46117;
            int64_t k_43688 = ltid_y_43669 + binop_y_43687;
            int64_t i_43690 = ltid_x_43668 + binop_y_43689;
            int64_t gtid_43691 = iii_43436 + i_43690;
            int64_t A_col_idx_43692 = kk_43663 + k_43688;
            bool binop_x_43693 = slt64(gtid_43691, m_29166);
            bool binop_y_43694 = slt64(A_col_idx_43692, i32_res_29181);
            bool cond_43695 = binop_x_43693 && binop_y_43694;
            float A_elem_43696;
            
            if (cond_43695) {
                float A_elem_43698 = ((__global
                                       float *) defunc_4_map_res_mem_44916)[gtid_43691 *
                                                                            i32_res_29181 +
                                                                            A_col_idx_43692];
                
                A_elem_43696 = A_elem_43698;
            } else {
                A_elem_43696 = 0.0F;
            }
            
            bool cond_43700 = slt64(k_43688, Tk_43420);
            int64_t a_loc_ind_43701;
            
            if (cond_43700) {
                int64_t binop_y_43702 = Tk_43420 * i_43690;
                int64_t loc_fi_43703 = k_43688 + binop_y_43702;
                
                a_loc_ind_43701 = loc_fi_43703;
            } else {
                a_loc_ind_43701 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_43701) && slt64(a_loc_ind_43701,
                                                             a_loc_szz_43426)) {
                ((__local float *) mem_44956)[a_loc_ind_43701] = A_elem_43696;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_43708 = 0; i_43708 < tk_div_ty_43422; i_43708++) {
        int64_t binop_y_43731 = Ty_43416 * i_43708;
        
        for (int64_t i_43710 = 0; i_43710 < Rx_43419; i_43710++) {
            int64_t binop_y_43733 = Tx_43418 * i_43710;
            int64_t ltid_x_43712 = sext_i32_i64(ltid_pre_46121);
            int64_t ltid_y_43713 = sext_i32_i64(ltid_pre_46122);
            int32_t ltid_flat_43714 = local_tid_46117;
            int64_t k_43732 = ltid_x_43712 + binop_y_43731;
            int64_t j_43734 = ltid_y_43713 + binop_y_43733;
            int64_t gtid_43735 = jjj_43437 + j_43734;
            int64_t B_row_idx_43736 = kk_43663 + k_43732;
            bool binop_x_43737 = slt64(gtid_43735, N_29165);
            bool binop_y_43738 = slt64(B_row_idx_43736, i32_res_29181);
            bool cond_43739 = binop_x_43737 && binop_y_43738;
            float B_elem_43740;
            
            if (cond_43739) {
                float B_elem_43742 = ((__global
                                       float *) mem_44940)[B_row_idx_43736 *
                                                           N_29165 +
                                                           gtid_43735];
                
                B_elem_43740 = B_elem_43742;
            } else {
                B_elem_43740 = 0.0F;
            }
            
            bool cond_43744 = slt64(k_43732, Tk_43420);
            int64_t b_loc_ind_43745;
            
            if (cond_43744) {
                int64_t binop_y_43746 = TxRx_43423 * k_43732;
                int64_t loc_fi_43747 = j_43734 + binop_y_43746;
                
                b_loc_ind_43745 = loc_fi_43747;
            } else {
                b_loc_ind_43745 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_43745) && slt64(b_loc_ind_43745,
                                                             b_loc_szz_43428)) {
                ((__local float *) mem_44958)[b_loc_ind_43745] = B_elem_43740;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_45111[Ry_43417];
    float mem_45115[Rx_43419];
    float mem_45125[Ry_43417 * Rx_43419];
    float loop_mem_45127[Ry_43417 * Rx_43419];
    float mem_param_45098[Ry_43417 * Rx_43419];
    
    for (int32_t i_10 = 0; i_10 < Ry_43417 * Rx_43419; i_10++)
        mem_param_45098[i_10] = loop_mem_45045[i_10];
    for (int64_t i_43752 = 0; i_43752 < Tk_43420; i_43752++) {
        int64_t cmpop_x_43754 = kk_43663 + i_43752;
        bool cond_43755 = slt64(cmpop_x_43754, i32_res_29181);
        float mem_45498[Ry_43417 * Rx_43419];
        
        if (cond_43755) {
            int64_t binop_y_43793 = TxRx_43423 * i_43752;
            int64_t bytes_45100 = (int64_t) 4 * Ry_43417;
            int64_t bytes_45102 = (int64_t) 4 * Rx_43419;
            int64_t ltid_y_43758 = sext_i32_i64(ltid_pre_46121);
            int64_t ltid_x_43756 = sext_i32_i64(ltid_pre_46122);
            int32_t ltid_flat_43757 = local_tid_46117;
            float mem_45101[Ry_43417];
            float mem_45103[Rx_43419];
            int64_t binop_x_43784 = Ry_43417 * ltid_y_43758;
            
            for (int64_t i_43782 = 0; i_43782 < Ry_43417; i_43782++) {
                int64_t binop_x_43785 = i_43782 + binop_x_43784;
                int64_t binop_y_43786 = Tk_43420 * binop_x_43785;
                int64_t a_loc_ind_43787 = i_43752 + binop_y_43786;
                
                for (int64_t i_46154 = 0; i_46154 < (int64_t) 1; i_46154++) {
                    mem_45101[i_43782 + i_46154] = ((__local
                                                     float *) mem_44956)[a_loc_ind_43787 +
                                                                         i_46154];
                }
            }
            
            int64_t binop_y_43795 = Rx_43419 * ltid_x_43756;
            
            for (int64_t i_43791 = 0; i_43791 < Rx_43419; i_43791++) {
                int64_t binop_x_43794 = i_43791 + binop_y_43793;
                int64_t b_loc_ind_43796 = binop_x_43794 + binop_y_43795;
                
                for (int64_t i_46156 = 0; i_46156 < (int64_t) 1; i_46156++) {
                    mem_45103[i_43791 + i_46156] = ((__local
                                                     float *) mem_44958)[b_loc_ind_43796 +
                                                                         i_46156];
                }
            }
            for (int64_t i_46157 = 0; i_46157 < Ry_43417; i_46157++) {
                mem_45111[i_46157] = mem_45101[i_46157];
            }
            for (int64_t i_46158 = 0; i_46158 < Rx_43419; i_46158++) {
                mem_45115[i_46158] = mem_45103[i_46158];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_43803 = sext_i32_i64(ltid_pre_46121);
            int64_t ltid_x_43801 = sext_i32_i64(ltid_pre_46122);
            int32_t ltid_flat_43802 = local_tid_46117;
            int64_t binop_y_43844 = Ry_43417 * ltid_y_43803;
            int64_t binop_y_43848 = Rx_43419 * ltid_x_43801;
            
            for (int64_t i_43838 = 0; i_43838 < Ry_43417; i_43838++) {
                int64_t binop_x_43843 = iii_43436 + i_43838;
                int64_t cmpop_x_43845 = binop_x_43843 + binop_y_43844;
                bool binop_x_43846 = slt64(cmpop_x_43845, m_29166);
                
                for (int64_t i_43841 = 0; i_43841 < Rx_43419; i_43841++) {
                    int64_t binop_x_43847 = jjj_43437 + i_43841;
                    int64_t cmpop_x_43849 = binop_x_43847 + binop_y_43848;
                    bool binop_y_43850 = slt64(cmpop_x_43849, N_29165);
                    bool cond_43851 = binop_x_43846 && binop_y_43850;
                    
                    if (cond_43851) {
                        float a_43853 = mem_45111[i_43838];
                        float b_43854 = mem_45115[i_43841];
                        float c_43855 = mem_param_45098[i_43838 * Rx_43419 +
                                                        i_43841];
                        float defunc_1_f_res_43858 = a_43853 * b_43854;
                        float defunc_1_op_res_43862 = c_43855 +
                              defunc_1_f_res_43858;
                        
                        mem_param_45098[i_43838 * Rx_43419 + i_43841] =
                            defunc_1_op_res_43862;
                    }
                }
            }
            for (int64_t i_46161 = 0; i_46161 < Ry_43417; i_46161++) {
                for (int64_t i_46162 = 0; i_46162 < Rx_43419; i_46162++) {
                    mem_45125[i_46161 * Rx_43419 + i_46162] =
                        mem_param_45098[i_46161 * Rx_43419 + i_46162];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_46163 = 0; i_46163 < Ry_43417; i_46163++) {
                for (int64_t i_46164 = 0; i_46164 < Rx_43419; i_46164++) {
                    mem_45498[i_46163 * Rx_43419 + i_46164] =
                        mem_45125[i_46163 * Rx_43419 + i_46164];
                }
            }
        } else {
            for (int64_t i_46165 = 0; i_46165 < Ry_43417; i_46165++) {
                for (int64_t i_46166 = 0; i_46166 < Rx_43419; i_46166++) {
                    mem_45498[i_46165 * Rx_43419 + i_46166] =
                        mem_param_45098[i_46165 * Rx_43419 + i_46166];
                }
            }
        }
        
        float mem_param_tmp_46151[Ry_43417 * Rx_43419];
        
        for (int32_t i_11 = 0; i_11 < Ry_43417 * Rx_43419; i_11++)
            mem_param_tmp_46151[i_11] = mem_45498[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_43417 * Rx_43419; i_12++)
            mem_param_45098[i_12] = mem_param_tmp_46151[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_43417 * Rx_43419; i_13++)
        loop_mem_45127[i_13] = mem_param_45098[i_13];
    
    int64_t reg_tile_i_46167 = squot64(sext_i32_i64(local_tid_46117), Tx_43418);
    int64_t reg_tile_i_46168 = sext_i32_i64(local_tid_46117) -
            squot64(sext_i32_i64(local_tid_46117), Tx_43418) * Tx_43418;
    int64_t tile_dim_start_46169 = Ry_43417 * (Ty_43416 * gid_y_43434 +
                                               reg_tile_i_46167);
    int64_t tile_dim_start_46170 = Rx_43419 * (Tx_43418 * gid_x_43433 +
                                               reg_tile_i_46168);
    
    for (int64_t nest_i_46171 = 0; nest_i_46171 < Ry_43417; nest_i_46171++) {
        for (int64_t nest_i_46172 = 0; nest_i_46172 < Rx_43419;
             nest_i_46172++) {
            if (slt64(tile_dim_start_46169 + nest_i_46171, m_29166) &&
                slt64(tile_dim_start_46170 + nest_i_46172, N_29165)) {
                ((__global float *) mem_45130)[(tile_dim_start_46169 +
                                                nest_i_46171) * N_29165 +
                                               (tile_dim_start_46170 +
                                                nest_i_46172)] =
                    loop_mem_45127[nest_i_46171 * Rx_43419 + nest_i_46172];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_43416
    #undef Ry_43417
    #undef Tx_43418
    #undef Rx_43419
    #undef Tk_43420
    #undef tk_div_tx_43421
    #undef tk_div_ty_43422
    #undef TxRx_43423
    #undef TyRy_43424
    #undef a_loc_szz_43426
    #undef b_loc_szz_43428
}
__kernel void mainzisegmap_intragroup_43869(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_45203_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_45196_backing_aligned_1,
                                            int64_t N_29165, int64_t m_29166,
                                            int32_t n_29169, float hfrac_29171,
                                            int64_t i32_res_29175,
                                            int32_t k2p2_29177,
                                            int64_t num_whole_tiles_43891,
                                            int64_t residual_input_43992,
                                            unsigned char cond_43993, __global
                                            unsigned char *mem_45182, __global
                                            unsigned char *mem_45185, __global
                                            unsigned char *mem_45216, __global
                                            unsigned char *mem_45218, __global
                                            unsigned char *mem_45220)
{
    #define segmap_group_sizze_41211 (mainzisegmap_group_sizze_41176)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45203_backing_5 = (__local volatile
                                                           char *) mem_45203_backing_aligned_0;
    __local volatile char *restrict mem_45196_backing_0 = (__local volatile
                                                           char *) mem_45196_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46340;
    int32_t local_tid_46341;
    int64_t group_sizze_46344;
    int32_t wave_sizze_46343;
    int32_t group_tid_46342;
    
    global_tid_46340 = get_global_id(0);
    local_tid_46341 = get_local_id(0);
    group_sizze_46344 = get_local_size(0);
    wave_sizze_46343 = LOCKSTEP_WIDTH;
    group_tid_46342 = get_group_id(0);
    
    int32_t gid_flat_43869;
    
    gid_flat_43869 = group_tid_46342;
    
    int32_t ltid_pre_46345;
    
    ltid_pre_46345 = local_tid_46341;
    
    int64_t gid_43868;
    
    gid_43868 = sext_i32_i64(group_tid_46342);
    
    int64_t binop_x_43876;
    
    binop_x_43876 = segmap_group_sizze_41211 * gid_43868;
    
    int32_t mem_45189[1];
    int64_t ltid_43870 = sext_i32_i64(ltid_pre_46345);
    int32_t ltid_flat_43871 = local_tid_46341;
    int64_t gtid_43877 = ltid_43870 + binop_x_43876;
    bool cond_43878 = slt64(gtid_43877, m_29166);
    int32_t pre_43879;
    
    if (cond_43878) {
        int32_t defunc_0_f_res_43881;
        int32_t redout_44325 = 0;
        
        for (int32_t i_44370 = 0; i_44370 < n_29169; i_44370++) {
            int64_t i_44326 = sext_i32_i64(i_44370);
            float x_43885 = ((__global float *) mem_45182)[i_44326 * m_29166 +
                                                           gtid_43877];
            bool isnan_res_43886;
            
            isnan_res_43886 = futrts_isnan32(x_43885);
            
            bool cond_43887 = !isnan_res_43886;
            int32_t defunc_0_f_res_43888 = btoi_bool_i32(cond_43887);
            int32_t defunc_1_op_res_43884 = add32(defunc_0_f_res_43888,
                                                  redout_44325);
            int32_t redout_tmp_46346 = defunc_1_op_res_43884;
            
            redout_44325 = redout_tmp_46346;
        }
        defunc_0_f_res_43881 = redout_44325;
        pre_43879 = defunc_0_f_res_43881;
    } else {
        pre_43879 = 0;
    }
    mem_45189[(int64_t) 0] = pre_43879;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_45192[1];
    int64_t ltid_43892 = sext_i32_i64(ltid_pre_46345);
    int32_t ltid_flat_43893 = local_tid_46341;
    
    mem_45192[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45196;
    
    mem_45196 = (__local char *) mem_45196_backing_0;
    
    float accs_mem_45200[1];
    float mem_param_45193[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_45193[i_1] = mem_45192[i_1];
    for (int64_t tile_id_43899 = 0; tile_id_43899 < num_whole_tiles_43891;
         tile_id_43899++) {
        int64_t binop_x_43948 = segmap_group_sizze_41211 * tile_id_43899;
        int64_t ltid_43900 = sext_i32_i64(ltid_pre_46345);
        int32_t ltid_flat_43901 = local_tid_46341;
        int64_t j_43949 = ltid_43900 + binop_x_43948;
        bool cond_43953 = slt64(j_43949, i32_res_29175);
        int32_t pre_43954;
        
        if (cond_43953) {
            int32_t index_primexp_44283 = sext_i64_i32(j_43949);
            
            pre_43954 = index_primexp_44283;
        } else {
            pre_43954 = 0;
        }
        ((__local int32_t *) mem_45196)[ltid_43900] = pre_43954;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_45199[1];
        int64_t ltid_43919 = sext_i32_i64(ltid_pre_46345);
        int32_t ltid_flat_43920 = local_tid_46341;
        int64_t gtid_43959 = binop_x_43876 + ltid_43919;
        float acc_43961 = mem_param_45193[(int64_t) 0];
        bool cond_43962 = slt64(gtid_43959, m_29166);
        float acc_43963;
        
        if (cond_43962) {
            int32_t defunc_0_f_res_43960 = mem_45189[(int64_t) 0];
            float x_43964;
            float redout_44327 = acc_43961;
            
            for (int64_t i_44328 = 0; i_44328 < segmap_group_sizze_41211;
                 i_44328++) {
                int32_t x_43968 = ((__local int32_t *) mem_45196)[i_44328];
                bool cond_43969 = slt32(x_43968, defunc_0_f_res_43960);
                float defunc_0_f_res_43970;
                
                if (cond_43969) {
                    int64_t i_43971 = sext_i32_i64(x_43968);
                    bool x_43972 = sle64((int64_t) 0, i_43971);
                    bool y_43973 = slt64(i_43971, N_29165);
                    bool bounds_check_43974 = x_43972 && y_43973;
                    bool index_certs_43975;
                    
                    if (!bounds_check_43974) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          15) == -1) {
                                global_failure_args[0] = i_43971;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_3;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_43976 = ((__global
                                                         float *) mem_45185)[i_43971 *
                                                                             m_29166 +
                                                                             gtid_43959];
                    
                    defunc_0_f_res_43970 = defunc_0_f_res_t_res_43976;
                } else {
                    defunc_0_f_res_43970 = 0.0F;
                }
                
                float defunc_0_f_res_43977 = defunc_0_f_res_43970 *
                      defunc_0_f_res_43970;
                float defunc_1_op_res_43967 = defunc_0_f_res_43977 +
                      redout_44327;
                float redout_tmp_46349 = defunc_1_op_res_43967;
                
                redout_44327 = redout_tmp_46349;
            }
            x_43964 = redout_44327;
            acc_43963 = x_43964;
        } else {
            acc_43963 = acc_43961;
        }
        mem_45199[(int64_t) 0] = acc_43963;
        
      error_3:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46347[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46347[i_2] = mem_45199[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_45193[i_3] = mem_param_tmp_46347[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_45200[i_4] = mem_param_45193[i_4];
    
    __local char *mem_45203;
    
    mem_45203 = (__local char *) mem_45203_backing_5;
    
    float mem_45206[1];
    float mem_45511[1];
    
    if (cond_43993) {
        mem_45511[(int64_t) 0] = accs_mem_45200[(int64_t) 0];
    } else {
        int64_t binop_x_44003 = segmap_group_sizze_41211 *
                num_whole_tiles_43891;
        int64_t ltid_43994 = sext_i32_i64(ltid_pre_46345);
        int32_t ltid_flat_43995 = local_tid_46341;
        int64_t j_44004 = ltid_43994 + binop_x_44003;
        bool cond_44008 = slt64(j_44004, i32_res_29175);
        int32_t pre_44009;
        
        if (cond_44008) {
            int32_t index_primexp_44284 = sext_i64_i32(j_44004);
            
            pre_44009 = index_primexp_44284;
        } else {
            pre_44009 = 0;
        }
        ((__local int32_t *) mem_45203)[ltid_43994] = pre_44009;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_44014 = sext_i32_i64(ltid_pre_46345);
        int32_t ltid_flat_44015 = local_tid_46341;
        int64_t gtid_44022 = binop_x_43876 + ltid_44014;
        float acc_44024 = accs_mem_45200[(int64_t) 0];
        bool cond_44025 = slt64(gtid_44022, m_29166);
        float acc_44026;
        
        if (cond_44025) {
            int32_t defunc_0_f_res_44023 = mem_45189[(int64_t) 0];
            float x_44027;
            float redout_44329 = acc_44024;
            
            for (int64_t i_44330 = 0; i_44330 < residual_input_43992;
                 i_44330++) {
                int32_t x_44031 = ((__local int32_t *) mem_45203)[i_44330];
                bool cond_44032 = slt32(x_44031, defunc_0_f_res_44023);
                float defunc_0_f_res_44033;
                
                if (cond_44032) {
                    int64_t i_44034 = sext_i32_i64(x_44031);
                    bool x_44035 = sle64((int64_t) 0, i_44034);
                    bool y_44036 = slt64(i_44034, N_29165);
                    bool bounds_check_44037 = x_44035 && y_44036;
                    bool index_certs_44038;
                    
                    if (!bounds_check_44037) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          16) == -1) {
                                global_failure_args[0] = i_44034;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_5;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44039 = ((__global
                                                         float *) mem_45185)[i_44034 *
                                                                             m_29166 +
                                                                             gtid_44022];
                    
                    defunc_0_f_res_44033 = defunc_0_f_res_t_res_44039;
                } else {
                    defunc_0_f_res_44033 = 0.0F;
                }
                
                float defunc_0_f_res_44040 = defunc_0_f_res_44033 *
                      defunc_0_f_res_44033;
                float defunc_1_op_res_44030 = defunc_0_f_res_44040 +
                      redout_44329;
                float redout_tmp_46350 = defunc_1_op_res_44030;
                
                redout_44329 = redout_tmp_46350;
            }
            x_44027 = redout_44329;
            acc_44026 = x_44027;
        } else {
            acc_44026 = acc_44024;
        }
        mem_45206[(int64_t) 0] = acc_44026;
        
      error_5:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45511[(int64_t) 0] = mem_45206[(int64_t) 0];
    }
    
    int32_t mem_45210[1];
    int32_t mem_45212[1];
    float mem_45214[1];
    int64_t ltid_44043 = sext_i32_i64(ltid_pre_46345);
    int32_t ltid_flat_44044 = local_tid_46341;
    int64_t gtid_44054 = binop_x_43876 + ltid_44043;
    bool cond_44056 = slt64(gtid_44054, m_29166);
    int32_t postlude_44057;
    int32_t postlude_44058;
    float postlude_44059;
    
    if (cond_44056) {
        float defunc_0_f_res_44055 = mem_45511[(int64_t) 0];
        int32_t defunc_0_f_res_44060 = mem_45189[(int64_t) 0];
        int32_t r32_arg_44061 = sub32(defunc_0_f_res_44060, k2p2_29177);
        float i32_res_44062 = sitofp_i32_f32(r32_arg_44061);
        float sqrt_arg_44063 = defunc_0_f_res_44055 / i32_res_44062;
        float sqrt_res_44064;
        
        sqrt_res_44064 = futrts_sqrt32(sqrt_arg_44063);
        
        float i32_res_44065 = sitofp_i32_f32(defunc_0_f_res_44060);
        float t32_arg_44066 = hfrac_29171 * i32_res_44065;
        int32_t f32_res_44067 = fptosi_f32_i32(t32_arg_44066);
        
        postlude_44057 = f32_res_44067;
        postlude_44058 = defunc_0_f_res_44060;
        postlude_44059 = sqrt_res_44064;
    } else {
        postlude_44057 = 0;
        postlude_44058 = 0;
        postlude_44059 = 0.0F;
    }
    mem_45210[(int64_t) 0] = postlude_44057;
    mem_45212[(int64_t) 0] = postlude_44058;
    mem_45214[(int64_t) 0] = postlude_44059;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_46341) + segmap_group_sizze_41211 *
              sext_i32_i64(group_tid_46342), m_29166)) {
        ((__global int32_t *) mem_45216)[sext_i32_i64(local_tid_46341) +
                                         segmap_group_sizze_41211 *
                                         sext_i32_i64(group_tid_46342)] =
            mem_45210[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46341) + segmap_group_sizze_41211 *
              sext_i32_i64(group_tid_46342), m_29166)) {
        ((__global int32_t *) mem_45218)[sext_i32_i64(local_tid_46341) +
                                         segmap_group_sizze_41211 *
                                         sext_i32_i64(group_tid_46342)] =
            mem_45212[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46341) + segmap_group_sizze_41211 *
              sext_i32_i64(group_tid_46342), m_29166)) {
        ((__global float *) mem_45220)[sext_i32_i64(local_tid_46341) +
                                       segmap_group_sizze_41211 *
                                       sext_i32_i64(group_tid_46342)] =
            mem_45214[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_41211
}
__kernel void mainzisegmap_intragroup_44075(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_45269_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_45262_backing_aligned_1,
                                            int64_t N_29165, int64_t m_29166,
                                            int64_t i32_res_29568,
                                            int64_t num_whole_tiles_44095,
                                            int64_t residual_input_44206,
                                            unsigned char cond_44207, __global
                                            unsigned char *defunc_4_map_res_mem_45178,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_45244,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_45245,
                                            __global unsigned char *mem_45275)
{
    #define segmap_group_sizze_41468 (mainzisegmap_group_sizze_41445)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45269_backing_5 = (__local volatile
                                                           char *) mem_45269_backing_aligned_0;
    __local volatile char *restrict mem_45262_backing_0 = (__local volatile
                                                           char *) mem_45262_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46524;
    int32_t local_tid_46525;
    int64_t group_sizze_46528;
    int32_t wave_sizze_46527;
    int32_t group_tid_46526;
    
    global_tid_46524 = get_global_id(0);
    local_tid_46525 = get_local_id(0);
    group_sizze_46528 = get_local_size(0);
    wave_sizze_46527 = LOCKSTEP_WIDTH;
    group_tid_46526 = get_group_id(0);
    
    int32_t gid_flat_44075;
    
    gid_flat_44075 = group_tid_46526;
    
    int32_t ltid_pre_46529;
    
    ltid_pre_46529 = local_tid_46525;
    
    int64_t gid_44074;
    
    gid_44074 = sext_i32_i64(group_tid_46526);
    
    int64_t binop_x_44084;
    
    binop_x_44084 = segmap_group_sizze_41468 * gid_44074;
    
    int32_t mem_45253[1];
    int32_t mem_45255[1];
    int64_t ltid_44076 = sext_i32_i64(ltid_pre_46529);
    int32_t ltid_flat_44077 = local_tid_46525;
    int64_t gtid_44085 = ltid_44076 + binop_x_44084;
    bool cond_44086 = slt64(gtid_44085, m_29166);
    int32_t pre_44087;
    int32_t pre_44088;
    
    if (cond_44086) {
        int32_t x_44089 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_44085];
        int32_t x_44090 = ((__global
                            int32_t *) defunc_3_map_res_mem_45244)[gtid_44085];
        
        pre_44087 = x_44089;
        pre_44088 = x_44090;
    } else {
        pre_44087 = 0;
        pre_44088 = 0;
    }
    mem_45253[(int64_t) 0] = pre_44087;
    mem_45255[(int64_t) 0] = pre_44088;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_45258[1];
    int64_t ltid_44096 = sext_i32_i64(ltid_pre_46529);
    int32_t ltid_flat_44097 = local_tid_46525;
    
    mem_45258[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45262;
    
    mem_45262 = (__local char *) mem_45262_backing_0;
    
    float accs_mem_45266[1];
    float mem_param_45259[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_45259[i_1] = mem_45258[i_1];
    for (int64_t tile_id_44103 = 0; tile_id_44103 < num_whole_tiles_44095;
         tile_id_44103++) {
        int64_t binop_x_44156 = segmap_group_sizze_41468 * tile_id_44103;
        int64_t ltid_44104 = sext_i32_i64(ltid_pre_46529);
        int32_t ltid_flat_44105 = local_tid_46525;
        int64_t j_44157 = ltid_44104 + binop_x_44156;
        bool cond_44162 = slt64(j_44157, i32_res_29568);
        int32_t pre_44163;
        
        if (cond_44162) {
            int32_t index_primexp_44285 = sext_i64_i32(j_44157);
            int32_t tile_elem_44164 = index_primexp_44285;
            
            pre_44163 = tile_elem_44164;
        } else {
            pre_44163 = 0;
        }
        ((__local int32_t *) mem_45262)[ltid_44104] = pre_44163;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_45265[1];
        int64_t ltid_44124 = sext_i32_i64(ltid_pre_46529);
        int32_t ltid_flat_44125 = local_tid_46525;
        int64_t gtid_44168 = binop_x_44084 + ltid_44124;
        float acc_44171 = mem_param_45259[(int64_t) 0];
        bool cond_44172 = slt64(gtid_44168, m_29166);
        float acc_44173;
        
        if (cond_44172) {
            int32_t x_44169 = mem_45253[(int64_t) 0];
            int32_t x_44170 = mem_45255[(int64_t) 0];
            float x_44174;
            float redout_44331 = acc_44171;
            
            for (int64_t i_44332 = 0; i_44332 < segmap_group_sizze_41468;
                 i_44332++) {
                int32_t x_44178 = ((__local int32_t *) mem_45262)[i_44332];
                bool cond_44179 = slt32(x_44178, x_44170);
                float defunc_0_f_res_44180;
                
                if (cond_44179) {
                    int32_t x_44181 = add32(x_44169, x_44178);
                    int32_t x_44182 = sub32(x_44181, x_44170);
                    int32_t i_44183 = add32(1, x_44182);
                    int64_t i_44184 = sext_i32_i64(i_44183);
                    bool x_44185 = sle64((int64_t) 0, i_44184);
                    bool y_44186 = slt64(i_44184, N_29165);
                    bool bounds_check_44187 = x_44185 && y_44186;
                    bool index_certs_44188;
                    
                    if (!bounds_check_44187) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          20) == -1) {
                                global_failure_args[0] = i_44184;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_3;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44189 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_44168 *
                                                                                              N_29165 +
                                                                                              i_44184];
                    
                    defunc_0_f_res_44180 = defunc_0_f_res_t_res_44189;
                } else {
                    defunc_0_f_res_44180 = 0.0F;
                }
                
                float defunc_1_op_res_44177 = defunc_0_f_res_44180 +
                      redout_44331;
                float redout_tmp_46532 = defunc_1_op_res_44177;
                
                redout_44331 = redout_tmp_46532;
            }
            x_44174 = redout_44331;
            acc_44173 = x_44174;
        } else {
            acc_44173 = acc_44171;
        }
        mem_45265[(int64_t) 0] = acc_44173;
        
      error_3:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46530[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46530[i_2] = mem_45265[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_45259[i_3] = mem_param_tmp_46530[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_45266[i_4] = mem_param_45259[i_4];
    
    __local char *mem_45269;
    
    mem_45269 = (__local char *) mem_45269_backing_5;
    
    float mem_45272[1];
    float mem_45520[1];
    
    if (cond_44207) {
        mem_45520[(int64_t) 0] = accs_mem_45266[(int64_t) 0];
    } else {
        int64_t binop_x_44217 = segmap_group_sizze_41468 *
                num_whole_tiles_44095;
        int64_t ltid_44208 = sext_i32_i64(ltid_pre_46529);
        int32_t ltid_flat_44209 = local_tid_46525;
        int64_t j_44218 = ltid_44208 + binop_x_44217;
        bool cond_44223 = slt64(j_44218, i32_res_29568);
        int32_t pre_44224;
        
        if (cond_44223) {
            int32_t index_primexp_44286 = sext_i64_i32(j_44218);
            int32_t tile_elem_44225 = index_primexp_44286;
            
            pre_44224 = tile_elem_44225;
        } else {
            pre_44224 = 0;
        }
        ((__local int32_t *) mem_45269)[ltid_44208] = pre_44224;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_44229 = sext_i32_i64(ltid_pre_46529);
        int32_t ltid_flat_44230 = local_tid_46525;
        int64_t gtid_44237 = binop_x_44084 + ltid_44229;
        float acc_44240 = accs_mem_45266[(int64_t) 0];
        bool cond_44241 = slt64(gtid_44237, m_29166);
        float acc_44242;
        
        if (cond_44241) {
            int32_t x_44238 = mem_45253[(int64_t) 0];
            int32_t x_44239 = mem_45255[(int64_t) 0];
            float x_44243;
            float redout_44333 = acc_44240;
            
            for (int64_t i_44334 = 0; i_44334 < residual_input_44206;
                 i_44334++) {
                int32_t x_44247 = ((__local int32_t *) mem_45269)[i_44334];
                bool cond_44248 = slt32(x_44247, x_44239);
                float defunc_0_f_res_44249;
                
                if (cond_44248) {
                    int32_t x_44250 = add32(x_44238, x_44247);
                    int32_t x_44251 = sub32(x_44250, x_44239);
                    int32_t i_44252 = add32(1, x_44251);
                    int64_t i_44253 = sext_i32_i64(i_44252);
                    bool x_44254 = sle64((int64_t) 0, i_44253);
                    bool y_44255 = slt64(i_44253, N_29165);
                    bool bounds_check_44256 = x_44254 && y_44255;
                    bool index_certs_44257;
                    
                    if (!bounds_check_44256) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          21) == -1) {
                                global_failure_args[0] = i_44253;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_5;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44258 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_44237 *
                                                                                              N_29165 +
                                                                                              i_44253];
                    
                    defunc_0_f_res_44249 = defunc_0_f_res_t_res_44258;
                } else {
                    defunc_0_f_res_44249 = 0.0F;
                }
                
                float defunc_1_op_res_44246 = defunc_0_f_res_44249 +
                      redout_44333;
                float redout_tmp_46533 = defunc_1_op_res_44246;
                
                redout_44333 = redout_tmp_46533;
            }
            x_44243 = redout_44333;
            acc_44242 = x_44243;
        } else {
            acc_44242 = acc_44240;
        }
        mem_45272[(int64_t) 0] = acc_44242;
        
      error_5:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45520[(int64_t) 0] = mem_45272[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46525) + segmap_group_sizze_41468 *
              sext_i32_i64(group_tid_46526), m_29166)) {
        ((__global float *) mem_45275)[sext_i32_i64(local_tid_46525) +
                                       segmap_group_sizze_41468 *
                                       sext_i32_i64(group_tid_46526)] =
            mem_45520[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_41468
}
__kernel void mainzisegred_large_39115(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45793_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45791_backing_aligned_1,
                                       int64_t N_29165, int64_t i32_res_29175,
                                       int64_t i32_res_29181,
                                       int64_t num_groups_39254,
                                       int64_t groups_per_segment_45777,
                                       int64_t elements_per_thread_45778,
                                       int64_t virt_num_groups_45779,
                                       int64_t threads_per_segment_45781,
                                       __global unsigned char *images_mem_44381,
                                       __global
                                       unsigned char *binop_p_mem_44390,
                                       __global unsigned char *mem_44531,
                                       __global unsigned char *mem_44536,
                                       __global
                                       unsigned char *group_res_arr_mem_45782,
                                       __global
                                       unsigned char *mainzicounter_mem_45784)
{
    #define segred_group_sizze_39253 (mainzisegred_group_sizze_39109)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45793_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45793_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45791_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45791_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45786;
    int32_t local_tid_45787;
    int64_t group_sizze_45790;
    int32_t wave_sizze_45789;
    int32_t group_tid_45788;
    
    global_tid_45786 = get_global_id(0);
    local_tid_45787 = get_local_id(0);
    group_sizze_45790 = get_local_size(0);
    wave_sizze_45789 = LOCKSTEP_WIDTH;
    group_tid_45788 = get_group_id(0);
    
    int32_t phys_tid_39115;
    
    phys_tid_39115 = global_tid_45786;
    
    __local char *red_arr_mem_45791;
    
    red_arr_mem_45791 = (__local char *) red_arr_mem_45791_backing_0;
    
    __local char *sync_arr_mem_45793;
    
    sync_arr_mem_45793 = (__local char *) sync_arr_mem_45793_backing_1;
    
    int32_t phys_group_id_45795;
    
    phys_group_id_45795 = get_group_id(0);
    for (int32_t i_45796 = 0; i_45796 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45779) - phys_group_id_45795,
                   sext_i64_i32(num_groups_39254)); i_45796++) {
        int32_t virt_group_id_45797 = phys_group_id_45795 + i_45796 *
                sext_i64_i32(num_groups_39254);
        int32_t flat_segment_id_45798 = squot32(virt_group_id_45797,
                                                sext_i64_i32(groups_per_segment_45777));
        int64_t global_tid_45799 = srem64(sext_i32_i64(virt_group_id_45797) *
                                          segred_group_sizze_39253 +
                                          sext_i32_i64(local_tid_45787),
                                          segred_group_sizze_39253 *
                                          groups_per_segment_45777);
        int64_t gtid_39102 = squot64(sext_i32_i64(flat_segment_id_45798),
                                     i32_res_29181 * i32_res_29181);
        int64_t gtid_39103 = squot64(sext_i32_i64(flat_segment_id_45798) -
                                     squot64(sext_i32_i64(flat_segment_id_45798),
                                             i32_res_29181 * i32_res_29181) *
                                     (i32_res_29181 * i32_res_29181),
                                     i32_res_29181);
        int64_t gtid_39104 = sext_i32_i64(flat_segment_id_45798) -
                squot64(sext_i32_i64(flat_segment_id_45798), i32_res_29181 *
                        i32_res_29181) * (i32_res_29181 * i32_res_29181) -
                squot64(sext_i32_i64(flat_segment_id_45798) -
                        squot64(sext_i32_i64(flat_segment_id_45798),
                                i32_res_29181 * i32_res_29181) *
                        (i32_res_29181 * i32_res_29181), i32_res_29181) *
                i32_res_29181;
        int64_t gtid_39114;
        float x_acc_45800;
        int64_t chunk_sizze_45801;
        
        chunk_sizze_45801 = smin64(elements_per_thread_45778,
                                   sdiv_up64(i32_res_29175 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45799)),
                                             threads_per_segment_45781));
        
        float x_39257;
        float x_39258;
        
        // neutral-initialise the accumulators
        {
            x_acc_45800 = 0.0F;
        }
        for (int64_t i_45805 = 0; i_45805 < chunk_sizze_45801; i_45805++) {
            gtid_39114 = sext_i32_i64(sext_i64_i32(global_tid_45799)) +
                threads_per_segment_45781 * i_45805;
            // apply map function
            {
                float x_39263 = ((__global
                                  float *) images_mem_44381)[gtid_39102 *
                                                             N_29165 +
                                                             gtid_39114];
                float x_39264 = ((__global
                                  float *) binop_p_mem_44390)[gtid_39103 *
                                                              N_29165 +
                                                              gtid_39114];
                float x_39265 = ((__global float *) mem_44531)[gtid_39104 *
                                                               N_29165 +
                                                               gtid_39114];
                float x_39266 = x_39264 * x_39265;
                bool isnan_res_39267;
                
                isnan_res_39267 = futrts_isnan32(x_39263);
                
                float y_39268;
                
                if (isnan_res_39267) {
                    y_39268 = 0.0F;
                } else {
                    y_39268 = 1.0F;
                }
                
                float defunc_2_f_res_39269 = x_39266 * y_39268;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39257 = x_acc_45800;
                }
                // load new values
                {
                    x_39258 = defunc_2_f_res_39269;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39259 = x_39257 + x_39258;
                    
                    // store in accumulator
                    {
                        x_acc_45800 = defunc_1_op_res_39259;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39257 = x_acc_45800;
            ((__local
              float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787)] =
                x_39257;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45806;
        int32_t skip_waves_45807;
        
        skip_waves_45807 = 1;
        
        float x_45802;
        float x_45803;
        
        offset_45806 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45787,
                      sext_i64_i32(segred_group_sizze_39253))) {
                x_45802 = ((__local
                            float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787 +
                                                        offset_45806)];
            }
        }
        offset_45806 = 1;
        while (slt32(offset_45806, wave_sizze_45789)) {
            if (slt32(local_tid_45787 + offset_45806,
                      sext_i64_i32(segred_group_sizze_39253)) &&
                ((local_tid_45787 - squot32(local_tid_45787, wave_sizze_45789) *
                  wave_sizze_45789) & (2 * offset_45806 - 1)) == 0) {
                // read array element
                {
                    x_45803 = ((volatile __local
                                float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787 +
                                                            offset_45806)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45804 = x_45802 + x_45803;
                    
                    x_45802 = defunc_1_op_res_45804;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787)] =
                        x_45802;
                }
            }
            offset_45806 *= 2;
        }
        while (slt32(skip_waves_45807,
                     squot32(sext_i64_i32(segred_group_sizze_39253) +
                             wave_sizze_45789 - 1, wave_sizze_45789))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45806 = skip_waves_45807 * wave_sizze_45789;
            if (slt32(local_tid_45787 + offset_45806,
                      sext_i64_i32(segred_group_sizze_39253)) &&
                ((local_tid_45787 - squot32(local_tid_45787, wave_sizze_45789) *
                  wave_sizze_45789) == 0 && (squot32(local_tid_45787,
                                                     wave_sizze_45789) & (2 *
                                                                          skip_waves_45807 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45803 = ((__local
                                float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787 +
                                                            offset_45806)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45804 = x_45802 + x_45803;
                    
                    x_45802 = defunc_1_op_res_45804;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787)] =
                        x_45802;
                }
            }
            skip_waves_45807 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45787) == (int64_t) 0) {
                x_acc_45800 = x_45802;
            }
        }
        if (groups_per_segment_45777 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45787 == 0) {
                    ((__global float *) mem_44536)[gtid_39102 * (i32_res_29181 *
                                                                 i32_res_29181) +
                                                   gtid_39103 * i32_res_29181 +
                                                   gtid_39104] = x_acc_45800;
                }
            }
        } else {
            int32_t old_counter_45808;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45787 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45782)[sext_i32_i64(virt_group_id_45797) *
                                                        segred_group_sizze_39253] =
                        x_acc_45800;
                    mem_fence_global();
                    old_counter_45808 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45784)[sext_i32_i64(srem32(flat_segment_id_45798,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45793)[(int64_t) 0] =
                        old_counter_45808 == groups_per_segment_45777 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45809;
            
            is_last_group_45809 = ((__local
                                    bool *) sync_arr_mem_45793)[(int64_t) 0];
            if (is_last_group_45809) {
                if (local_tid_45787 == 0) {
                    old_counter_45808 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45784)[sext_i32_i64(srem32(flat_segment_id_45798,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45777));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45810 =
                            sdiv_up64(groups_per_segment_45777,
                                      segred_group_sizze_39253);
                    
                    x_39257 = 0.0F;
                    for (int64_t i_45811 = 0; i_45811 < read_per_thread_45810;
                         i_45811++) {
                        int64_t group_res_id_45812 =
                                sext_i32_i64(local_tid_45787) *
                                read_per_thread_45810 + i_45811;
                        int64_t index_of_group_res_45813 =
                                sext_i32_i64(flat_segment_id_45798) *
                                groups_per_segment_45777 + group_res_id_45812;
                        
                        if (slt64(group_res_id_45812,
                                  groups_per_segment_45777)) {
                            x_39258 = ((__global
                                        float *) group_res_arr_mem_45782)[index_of_group_res_45813 *
                                                                          segred_group_sizze_39253];
                            
                            float defunc_1_op_res_39259;
                            
                            defunc_1_op_res_39259 = x_39257 + x_39258;
                            x_39257 = defunc_1_op_res_39259;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787)] =
                    x_39257;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45814;
                    int32_t skip_waves_45815;
                    
                    skip_waves_45815 = 1;
                    
                    float x_45802;
                    float x_45803;
                    
                    offset_45814 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45787,
                                  sext_i64_i32(segred_group_sizze_39253))) {
                            x_45802 = ((__local
                                        float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787 +
                                                                    offset_45814)];
                        }
                    }
                    offset_45814 = 1;
                    while (slt32(offset_45814, wave_sizze_45789)) {
                        if (slt32(local_tid_45787 + offset_45814,
                                  sext_i64_i32(segred_group_sizze_39253)) &&
                            ((local_tid_45787 - squot32(local_tid_45787,
                                                        wave_sizze_45789) *
                              wave_sizze_45789) & (2 * offset_45814 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45803 = ((volatile __local
                                            float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787 +
                                                                        offset_45814)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45804 = x_45802 + x_45803;
                                
                                x_45802 = defunc_1_op_res_45804;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787)] =
                                    x_45802;
                            }
                        }
                        offset_45814 *= 2;
                    }
                    while (slt32(skip_waves_45815,
                                 squot32(sext_i64_i32(segred_group_sizze_39253) +
                                         wave_sizze_45789 - 1,
                                         wave_sizze_45789))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45814 = skip_waves_45815 * wave_sizze_45789;
                        if (slt32(local_tid_45787 + offset_45814,
                                  sext_i64_i32(segred_group_sizze_39253)) &&
                            ((local_tid_45787 - squot32(local_tid_45787,
                                                        wave_sizze_45789) *
                              wave_sizze_45789) == 0 &&
                             (squot32(local_tid_45787, wave_sizze_45789) & (2 *
                                                                            skip_waves_45815 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45803 = ((__local
                                            float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787 +
                                                                        offset_45814)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45804 = x_45802 + x_45803;
                                
                                x_45802 = defunc_1_op_res_45804;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45791)[sext_i32_i64(local_tid_45787)] =
                                    x_45802;
                            }
                        }
                        skip_waves_45815 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45787 == 0) {
                            ((__global float *) mem_44536)[gtid_39102 *
                                                           (i32_res_29181 *
                                                            i32_res_29181) +
                                                           gtid_39103 *
                                                           i32_res_29181 +
                                                           gtid_39104] =
                                x_45802;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39253
}
__kernel void mainzisegred_large_40466(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45990_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45988_backing_aligned_1,
                                       int64_t N_29165, int64_t i32_res_29175,
                                       int64_t i32_res_29181,
                                       int64_t num_groups_40519,
                                       int64_t groups_per_segment_45974,
                                       int64_t elements_per_thread_45975,
                                       int64_t virt_num_groups_45976,
                                       int64_t threads_per_segment_45978,
                                       __global unsigned char *images_mem_44381,
                                       __global
                                       unsigned char *binop_p_mem_44390,
                                       __global unsigned char *mem_44844,
                                       __global
                                       unsigned char *group_res_arr_mem_45979,
                                       __global
                                       unsigned char *mainzicounter_mem_45981)
{
    #define segred_group_sizze_40518 (mainzisegred_group_sizze_40460)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45990_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45990_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45988_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45988_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45983;
    int32_t local_tid_45984;
    int64_t group_sizze_45987;
    int32_t wave_sizze_45986;
    int32_t group_tid_45985;
    
    global_tid_45983 = get_global_id(0);
    local_tid_45984 = get_local_id(0);
    group_sizze_45987 = get_local_size(0);
    wave_sizze_45986 = LOCKSTEP_WIDTH;
    group_tid_45985 = get_group_id(0);
    
    int32_t phys_tid_40466;
    
    phys_tid_40466 = global_tid_45983;
    
    __local char *red_arr_mem_45988;
    
    red_arr_mem_45988 = (__local char *) red_arr_mem_45988_backing_0;
    
    __local char *sync_arr_mem_45990;
    
    sync_arr_mem_45990 = (__local char *) sync_arr_mem_45990_backing_1;
    
    int32_t phys_group_id_45992;
    
    phys_group_id_45992 = get_group_id(0);
    for (int32_t i_45993 = 0; i_45993 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45976) - phys_group_id_45992,
                   sext_i64_i32(num_groups_40519)); i_45993++) {
        int32_t virt_group_id_45994 = phys_group_id_45992 + i_45993 *
                sext_i64_i32(num_groups_40519);
        int32_t flat_segment_id_45995 = squot32(virt_group_id_45994,
                                                sext_i64_i32(groups_per_segment_45974));
        int64_t global_tid_45996 = srem64(sext_i32_i64(virt_group_id_45994) *
                                          segred_group_sizze_40518 +
                                          sext_i32_i64(local_tid_45984),
                                          segred_group_sizze_40518 *
                                          groups_per_segment_45974);
        int64_t gtid_40455 = squot64(sext_i32_i64(flat_segment_id_45995),
                                     i32_res_29181);
        int64_t gtid_40456 = sext_i32_i64(flat_segment_id_45995) -
                squot64(sext_i32_i64(flat_segment_id_45995), i32_res_29181) *
                i32_res_29181;
        int64_t gtid_40465;
        float x_acc_45997;
        int64_t chunk_sizze_45998;
        
        chunk_sizze_45998 = smin64(elements_per_thread_45975,
                                   sdiv_up64(i32_res_29175 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45996)),
                                             threads_per_segment_45978));
        
        float x_40522;
        float x_40523;
        
        // neutral-initialise the accumulators
        {
            x_acc_45997 = 0.0F;
        }
        for (int64_t i_46002 = 0; i_46002 < chunk_sizze_45998; i_46002++) {
            gtid_40465 = sext_i32_i64(sext_i64_i32(global_tid_45996)) +
                threads_per_segment_45978 * i_46002;
            // apply map function
            {
                float x_40528 = ((__global
                                  float *) images_mem_44381)[gtid_40455 *
                                                             N_29165 +
                                                             gtid_40465];
                bool isnan_res_40529;
                
                isnan_res_40529 = futrts_isnan32(x_40528);
                
                float defunc_1_f_res_40530;
                
                if (isnan_res_40529) {
                    defunc_1_f_res_40530 = 0.0F;
                } else {
                    float x_40527 = ((__global
                                      float *) binop_p_mem_44390)[gtid_40456 *
                                                                  N_29165 +
                                                                  gtid_40465];
                    float defunc_1_f_res_f_res_40531 = x_40527 * x_40528;
                    
                    defunc_1_f_res_40530 = defunc_1_f_res_f_res_40531;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_40522 = x_acc_45997;
                }
                // load new values
                {
                    x_40523 = defunc_1_f_res_40530;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40524 = x_40522 + x_40523;
                    
                    // store in accumulator
                    {
                        x_acc_45997 = defunc_1_op_res_40524;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40522 = x_acc_45997;
            ((__local
              float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984)] =
                x_40522;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46003;
        int32_t skip_waves_46004;
        
        skip_waves_46004 = 1;
        
        float x_45999;
        float x_46000;
        
        offset_46003 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45984,
                      sext_i64_i32(segred_group_sizze_40518))) {
                x_45999 = ((__local
                            float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984 +
                                                        offset_46003)];
            }
        }
        offset_46003 = 1;
        while (slt32(offset_46003, wave_sizze_45986)) {
            if (slt32(local_tid_45984 + offset_46003,
                      sext_i64_i32(segred_group_sizze_40518)) &&
                ((local_tid_45984 - squot32(local_tid_45984, wave_sizze_45986) *
                  wave_sizze_45986) & (2 * offset_46003 - 1)) == 0) {
                // read array element
                {
                    x_46000 = ((volatile __local
                                float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984 +
                                                            offset_46003)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46001 = x_45999 + x_46000;
                    
                    x_45999 = defunc_1_op_res_46001;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984)] =
                        x_45999;
                }
            }
            offset_46003 *= 2;
        }
        while (slt32(skip_waves_46004,
                     squot32(sext_i64_i32(segred_group_sizze_40518) +
                             wave_sizze_45986 - 1, wave_sizze_45986))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46003 = skip_waves_46004 * wave_sizze_45986;
            if (slt32(local_tid_45984 + offset_46003,
                      sext_i64_i32(segred_group_sizze_40518)) &&
                ((local_tid_45984 - squot32(local_tid_45984, wave_sizze_45986) *
                  wave_sizze_45986) == 0 && (squot32(local_tid_45984,
                                                     wave_sizze_45986) & (2 *
                                                                          skip_waves_46004 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46000 = ((__local
                                float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984 +
                                                            offset_46003)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46001 = x_45999 + x_46000;
                    
                    x_45999 = defunc_1_op_res_46001;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984)] =
                        x_45999;
                }
            }
            skip_waves_46004 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45984) == (int64_t) 0) {
                x_acc_45997 = x_45999;
            }
        }
        if (groups_per_segment_45974 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45984 == 0) {
                    ((__global float *) mem_44844)[gtid_40455 * i32_res_29181 +
                                                   gtid_40456] = x_acc_45997;
                }
            }
        } else {
            int32_t old_counter_46005;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45984 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45979)[sext_i32_i64(virt_group_id_45994) *
                                                        segred_group_sizze_40518] =
                        x_acc_45997;
                    mem_fence_global();
                    old_counter_46005 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45981)[sext_i32_i64(srem32(flat_segment_id_45995,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45990)[(int64_t) 0] =
                        old_counter_46005 == groups_per_segment_45974 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46006;
            
            is_last_group_46006 = ((__local
                                    bool *) sync_arr_mem_45990)[(int64_t) 0];
            if (is_last_group_46006) {
                if (local_tid_45984 == 0) {
                    old_counter_46005 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45981)[sext_i32_i64(srem32(flat_segment_id_45995,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45974));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46007 =
                            sdiv_up64(groups_per_segment_45974,
                                      segred_group_sizze_40518);
                    
                    x_40522 = 0.0F;
                    for (int64_t i_46008 = 0; i_46008 < read_per_thread_46007;
                         i_46008++) {
                        int64_t group_res_id_46009 =
                                sext_i32_i64(local_tid_45984) *
                                read_per_thread_46007 + i_46008;
                        int64_t index_of_group_res_46010 =
                                sext_i32_i64(flat_segment_id_45995) *
                                groups_per_segment_45974 + group_res_id_46009;
                        
                        if (slt64(group_res_id_46009,
                                  groups_per_segment_45974)) {
                            x_40523 = ((__global
                                        float *) group_res_arr_mem_45979)[index_of_group_res_46010 *
                                                                          segred_group_sizze_40518];
                            
                            float defunc_1_op_res_40524;
                            
                            defunc_1_op_res_40524 = x_40522 + x_40523;
                            x_40522 = defunc_1_op_res_40524;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984)] =
                    x_40522;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46011;
                    int32_t skip_waves_46012;
                    
                    skip_waves_46012 = 1;
                    
                    float x_45999;
                    float x_46000;
                    
                    offset_46011 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45984,
                                  sext_i64_i32(segred_group_sizze_40518))) {
                            x_45999 = ((__local
                                        float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984 +
                                                                    offset_46011)];
                        }
                    }
                    offset_46011 = 1;
                    while (slt32(offset_46011, wave_sizze_45986)) {
                        if (slt32(local_tid_45984 + offset_46011,
                                  sext_i64_i32(segred_group_sizze_40518)) &&
                            ((local_tid_45984 - squot32(local_tid_45984,
                                                        wave_sizze_45986) *
                              wave_sizze_45986) & (2 * offset_46011 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46000 = ((volatile __local
                                            float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984 +
                                                                        offset_46011)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46001 = x_45999 + x_46000;
                                
                                x_45999 = defunc_1_op_res_46001;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984)] =
                                    x_45999;
                            }
                        }
                        offset_46011 *= 2;
                    }
                    while (slt32(skip_waves_46012,
                                 squot32(sext_i64_i32(segred_group_sizze_40518) +
                                         wave_sizze_45986 - 1,
                                         wave_sizze_45986))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46011 = skip_waves_46012 * wave_sizze_45986;
                        if (slt32(local_tid_45984 + offset_46011,
                                  sext_i64_i32(segred_group_sizze_40518)) &&
                            ((local_tid_45984 - squot32(local_tid_45984,
                                                        wave_sizze_45986) *
                              wave_sizze_45986) == 0 &&
                             (squot32(local_tid_45984, wave_sizze_45986) & (2 *
                                                                            skip_waves_46012 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46000 = ((__local
                                            float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984 +
                                                                        offset_46011)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46001 = x_45999 + x_46000;
                                
                                x_45999 = defunc_1_op_res_46001;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45988)[sext_i32_i64(local_tid_45984)] =
                                    x_45999;
                            }
                        }
                        skip_waves_46012 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45984 == 0) {
                            ((__global float *) mem_44844)[gtid_40455 *
                                                           i32_res_29181 +
                                                           gtid_40456] =
                                x_45999;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40518
}
__kernel void mainzisegred_large_40603(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_46078_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46076_backing_aligned_1,
                                       int64_t i32_res_29181,
                                       int64_t num_groups_40652,
                                       int64_t groups_per_segment_46062,
                                       int64_t elements_per_thread_46063,
                                       int64_t virt_num_groups_46064,
                                       int64_t threads_per_segment_46066,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44629,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44850,
                                       __global unsigned char *mem_44910,
                                       __global
                                       unsigned char *group_res_arr_mem_46067,
                                       __global
                                       unsigned char *mainzicounter_mem_46069)
{
    #define segred_group_sizze_40651 (mainzisegred_group_sizze_40597)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46078_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46078_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46076_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46076_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46071;
    int32_t local_tid_46072;
    int64_t group_sizze_46075;
    int32_t wave_sizze_46074;
    int32_t group_tid_46073;
    
    global_tid_46071 = get_global_id(0);
    local_tid_46072 = get_local_id(0);
    group_sizze_46075 = get_local_size(0);
    wave_sizze_46074 = LOCKSTEP_WIDTH;
    group_tid_46073 = get_group_id(0);
    
    int32_t phys_tid_40603;
    
    phys_tid_40603 = global_tid_46071;
    
    __local char *red_arr_mem_46076;
    
    red_arr_mem_46076 = (__local char *) red_arr_mem_46076_backing_0;
    
    __local char *sync_arr_mem_46078;
    
    sync_arr_mem_46078 = (__local char *) sync_arr_mem_46078_backing_1;
    
    int32_t phys_group_id_46080;
    
    phys_group_id_46080 = get_group_id(0);
    for (int32_t i_46081 = 0; i_46081 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46064) - phys_group_id_46080,
                   sext_i64_i32(num_groups_40652)); i_46081++) {
        int32_t virt_group_id_46082 = phys_group_id_46080 + i_46081 *
                sext_i64_i32(num_groups_40652);
        int32_t flat_segment_id_46083 = squot32(virt_group_id_46082,
                                                sext_i64_i32(groups_per_segment_46062));
        int64_t global_tid_46084 = srem64(sext_i32_i64(virt_group_id_46082) *
                                          segred_group_sizze_40651 +
                                          sext_i32_i64(local_tid_46072),
                                          segred_group_sizze_40651 *
                                          groups_per_segment_46062);
        int64_t gtid_40592 = squot64(sext_i32_i64(flat_segment_id_46083),
                                     i32_res_29181);
        int64_t gtid_40593 = sext_i32_i64(flat_segment_id_46083) -
                squot64(sext_i32_i64(flat_segment_id_46083), i32_res_29181) *
                i32_res_29181;
        int64_t gtid_40602;
        float x_acc_46085;
        int64_t chunk_sizze_46086;
        
        chunk_sizze_46086 = smin64(elements_per_thread_46063,
                                   sdiv_up64(i32_res_29181 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46084)),
                                             threads_per_segment_46066));
        
        float x_40655;
        float x_40656;
        
        // neutral-initialise the accumulators
        {
            x_acc_46085 = 0.0F;
        }
        for (int64_t i_46090 = 0; i_46090 < chunk_sizze_46086; i_46090++) {
            gtid_40602 = sext_i32_i64(sext_i64_i32(global_tid_46084)) +
                threads_per_segment_46066 * i_46090;
            // apply map function
            {
                float x_40661 = ((__global
                                  float *) defunc_3_map_res_mem_44850)[gtid_40592 *
                                                                       i32_res_29181 +
                                                                       gtid_40602];
                float x_40662 = ((__global
                                  float *) defunc_3_map_res_mem_44629)[gtid_40592 *
                                                                       (i32_res_29181 *
                                                                        i32_res_29181) +
                                                                       gtid_40593 *
                                                                       i32_res_29181 +
                                                                       gtid_40602];
                float defunc_1_f_res_40663 = x_40661 * x_40662;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40655 = x_acc_46085;
                }
                // load new values
                {
                    x_40656 = defunc_1_f_res_40663;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40657 = x_40655 + x_40656;
                    
                    // store in accumulator
                    {
                        x_acc_46085 = defunc_1_op_res_40657;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40655 = x_acc_46085;
            ((__local
              float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072)] =
                x_40655;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46091;
        int32_t skip_waves_46092;
        
        skip_waves_46092 = 1;
        
        float x_46087;
        float x_46088;
        
        offset_46091 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46072,
                      sext_i64_i32(segred_group_sizze_40651))) {
                x_46087 = ((__local
                            float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072 +
                                                        offset_46091)];
            }
        }
        offset_46091 = 1;
        while (slt32(offset_46091, wave_sizze_46074)) {
            if (slt32(local_tid_46072 + offset_46091,
                      sext_i64_i32(segred_group_sizze_40651)) &&
                ((local_tid_46072 - squot32(local_tid_46072, wave_sizze_46074) *
                  wave_sizze_46074) & (2 * offset_46091 - 1)) == 0) {
                // read array element
                {
                    x_46088 = ((volatile __local
                                float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072 +
                                                            offset_46091)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46089 = x_46087 + x_46088;
                    
                    x_46087 = defunc_1_op_res_46089;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072)] =
                        x_46087;
                }
            }
            offset_46091 *= 2;
        }
        while (slt32(skip_waves_46092,
                     squot32(sext_i64_i32(segred_group_sizze_40651) +
                             wave_sizze_46074 - 1, wave_sizze_46074))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46091 = skip_waves_46092 * wave_sizze_46074;
            if (slt32(local_tid_46072 + offset_46091,
                      sext_i64_i32(segred_group_sizze_40651)) &&
                ((local_tid_46072 - squot32(local_tid_46072, wave_sizze_46074) *
                  wave_sizze_46074) == 0 && (squot32(local_tid_46072,
                                                     wave_sizze_46074) & (2 *
                                                                          skip_waves_46092 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46088 = ((__local
                                float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072 +
                                                            offset_46091)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46089 = x_46087 + x_46088;
                    
                    x_46087 = defunc_1_op_res_46089;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072)] =
                        x_46087;
                }
            }
            skip_waves_46092 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46072) == (int64_t) 0) {
                x_acc_46085 = x_46087;
            }
        }
        if (groups_per_segment_46062 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46072 == 0) {
                    ((__global float *) mem_44910)[gtid_40592 * i32_res_29181 +
                                                   gtid_40593] = x_acc_46085;
                }
            }
        } else {
            int32_t old_counter_46093;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46072 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46067)[sext_i32_i64(virt_group_id_46082) *
                                                        segred_group_sizze_40651] =
                        x_acc_46085;
                    mem_fence_global();
                    old_counter_46093 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46069)[sext_i32_i64(srem32(flat_segment_id_46083,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46078)[(int64_t) 0] =
                        old_counter_46093 == groups_per_segment_46062 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46094;
            
            is_last_group_46094 = ((__local
                                    bool *) sync_arr_mem_46078)[(int64_t) 0];
            if (is_last_group_46094) {
                if (local_tid_46072 == 0) {
                    old_counter_46093 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46069)[sext_i32_i64(srem32(flat_segment_id_46083,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46062));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46095 =
                            sdiv_up64(groups_per_segment_46062,
                                      segred_group_sizze_40651);
                    
                    x_40655 = 0.0F;
                    for (int64_t i_46096 = 0; i_46096 < read_per_thread_46095;
                         i_46096++) {
                        int64_t group_res_id_46097 =
                                sext_i32_i64(local_tid_46072) *
                                read_per_thread_46095 + i_46096;
                        int64_t index_of_group_res_46098 =
                                sext_i32_i64(flat_segment_id_46083) *
                                groups_per_segment_46062 + group_res_id_46097;
                        
                        if (slt64(group_res_id_46097,
                                  groups_per_segment_46062)) {
                            x_40656 = ((__global
                                        float *) group_res_arr_mem_46067)[index_of_group_res_46098 *
                                                                          segred_group_sizze_40651];
                            
                            float defunc_1_op_res_40657;
                            
                            defunc_1_op_res_40657 = x_40655 + x_40656;
                            x_40655 = defunc_1_op_res_40657;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072)] =
                    x_40655;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46099;
                    int32_t skip_waves_46100;
                    
                    skip_waves_46100 = 1;
                    
                    float x_46087;
                    float x_46088;
                    
                    offset_46099 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46072,
                                  sext_i64_i32(segred_group_sizze_40651))) {
                            x_46087 = ((__local
                                        float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072 +
                                                                    offset_46099)];
                        }
                    }
                    offset_46099 = 1;
                    while (slt32(offset_46099, wave_sizze_46074)) {
                        if (slt32(local_tid_46072 + offset_46099,
                                  sext_i64_i32(segred_group_sizze_40651)) &&
                            ((local_tid_46072 - squot32(local_tid_46072,
                                                        wave_sizze_46074) *
                              wave_sizze_46074) & (2 * offset_46099 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46088 = ((volatile __local
                                            float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072 +
                                                                        offset_46099)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46089 = x_46087 + x_46088;
                                
                                x_46087 = defunc_1_op_res_46089;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072)] =
                                    x_46087;
                            }
                        }
                        offset_46099 *= 2;
                    }
                    while (slt32(skip_waves_46100,
                                 squot32(sext_i64_i32(segred_group_sizze_40651) +
                                         wave_sizze_46074 - 1,
                                         wave_sizze_46074))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46099 = skip_waves_46100 * wave_sizze_46074;
                        if (slt32(local_tid_46072 + offset_46099,
                                  sext_i64_i32(segred_group_sizze_40651)) &&
                            ((local_tid_46072 - squot32(local_tid_46072,
                                                        wave_sizze_46074) *
                              wave_sizze_46074) == 0 &&
                             (squot32(local_tid_46072, wave_sizze_46074) & (2 *
                                                                            skip_waves_46100 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46088 = ((__local
                                            float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072 +
                                                                        offset_46099)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46089 = x_46087 + x_46088;
                                
                                x_46087 = defunc_1_op_res_46089;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46076)[sext_i32_i64(local_tid_46072)] =
                                    x_46087;
                            }
                        }
                        skip_waves_46100 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46072 == 0) {
                            ((__global float *) mem_44910)[gtid_40592 *
                                                           i32_res_29181 +
                                                           gtid_40593] =
                                x_46087;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40651
}
__kernel void mainzisegred_large_40733(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_46210_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46208_backing_aligned_1,
                                       int64_t N_29165, int64_t i32_res_29181,
                                       int64_t num_groups_40780,
                                       int64_t groups_per_segment_46194,
                                       int64_t elements_per_thread_46195,
                                       int64_t virt_num_groups_46196,
                                       int64_t threads_per_segment_46198,
                                       __global unsigned char *mem_44397,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_44916,
                                       __global unsigned char *mem_45134,
                                       __global
                                       unsigned char *group_res_arr_mem_46199,
                                       __global
                                       unsigned char *mainzicounter_mem_46201)
{
    #define segred_group_sizze_40779 (mainzisegred_group_sizze_40727)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46210_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46210_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46208_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46208_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46203;
    int32_t local_tid_46204;
    int64_t group_sizze_46207;
    int32_t wave_sizze_46206;
    int32_t group_tid_46205;
    
    global_tid_46203 = get_global_id(0);
    local_tid_46204 = get_local_id(0);
    group_sizze_46207 = get_local_size(0);
    wave_sizze_46206 = LOCKSTEP_WIDTH;
    group_tid_46205 = get_group_id(0);
    
    int32_t phys_tid_40733;
    
    phys_tid_40733 = global_tid_46203;
    
    __local char *red_arr_mem_46208;
    
    red_arr_mem_46208 = (__local char *) red_arr_mem_46208_backing_0;
    
    __local char *sync_arr_mem_46210;
    
    sync_arr_mem_46210 = (__local char *) sync_arr_mem_46210_backing_1;
    
    int32_t phys_group_id_46212;
    
    phys_group_id_46212 = get_group_id(0);
    for (int32_t i_46213 = 0; i_46213 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46196) - phys_group_id_46212,
                   sext_i64_i32(num_groups_40780)); i_46213++) {
        int32_t virt_group_id_46214 = phys_group_id_46212 + i_46213 *
                sext_i64_i32(num_groups_40780);
        int32_t flat_segment_id_46215 = squot32(virt_group_id_46214,
                                                sext_i64_i32(groups_per_segment_46194));
        int64_t global_tid_46216 = srem64(sext_i32_i64(virt_group_id_46214) *
                                          segred_group_sizze_40779 +
                                          sext_i32_i64(local_tid_46204),
                                          segred_group_sizze_40779 *
                                          groups_per_segment_46194);
        int64_t gtid_40722 = squot64(sext_i32_i64(flat_segment_id_46215),
                                     N_29165);
        int64_t gtid_40723 = sext_i32_i64(flat_segment_id_46215) -
                squot64(sext_i32_i64(flat_segment_id_46215), N_29165) * N_29165;
        int64_t gtid_40732;
        float x_acc_46217;
        int64_t chunk_sizze_46218;
        
        chunk_sizze_46218 = smin64(elements_per_thread_46195,
                                   sdiv_up64(i32_res_29181 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46216)),
                                             threads_per_segment_46198));
        
        float x_40783;
        float x_40784;
        
        // neutral-initialise the accumulators
        {
            x_acc_46217 = 0.0F;
        }
        for (int64_t i_46222 = 0; i_46222 < chunk_sizze_46218; i_46222++) {
            gtid_40732 = sext_i32_i64(sext_i64_i32(global_tid_46216)) +
                threads_per_segment_46198 * i_46222;
            // apply map function
            {
                float x_40788 = ((__global
                                  float *) defunc_4_map_res_mem_44916)[gtid_40722 *
                                                                       i32_res_29181 +
                                                                       gtid_40732];
                float x_40789 = ((__global float *) mem_44397)[gtid_40723 *
                                                               i32_res_29181 +
                                                               gtid_40732];
                float defunc_1_f_res_40790 = x_40788 * x_40789;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40783 = x_acc_46217;
                }
                // load new values
                {
                    x_40784 = defunc_1_f_res_40790;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40785 = x_40783 + x_40784;
                    
                    // store in accumulator
                    {
                        x_acc_46217 = defunc_1_op_res_40785;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40783 = x_acc_46217;
            ((__local
              float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204)] =
                x_40783;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46223;
        int32_t skip_waves_46224;
        
        skip_waves_46224 = 1;
        
        float x_46219;
        float x_46220;
        
        offset_46223 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46204,
                      sext_i64_i32(segred_group_sizze_40779))) {
                x_46219 = ((__local
                            float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204 +
                                                        offset_46223)];
            }
        }
        offset_46223 = 1;
        while (slt32(offset_46223, wave_sizze_46206)) {
            if (slt32(local_tid_46204 + offset_46223,
                      sext_i64_i32(segred_group_sizze_40779)) &&
                ((local_tid_46204 - squot32(local_tid_46204, wave_sizze_46206) *
                  wave_sizze_46206) & (2 * offset_46223 - 1)) == 0) {
                // read array element
                {
                    x_46220 = ((volatile __local
                                float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204 +
                                                            offset_46223)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46221 = x_46219 + x_46220;
                    
                    x_46219 = defunc_1_op_res_46221;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204)] =
                        x_46219;
                }
            }
            offset_46223 *= 2;
        }
        while (slt32(skip_waves_46224,
                     squot32(sext_i64_i32(segred_group_sizze_40779) +
                             wave_sizze_46206 - 1, wave_sizze_46206))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46223 = skip_waves_46224 * wave_sizze_46206;
            if (slt32(local_tid_46204 + offset_46223,
                      sext_i64_i32(segred_group_sizze_40779)) &&
                ((local_tid_46204 - squot32(local_tid_46204, wave_sizze_46206) *
                  wave_sizze_46206) == 0 && (squot32(local_tid_46204,
                                                     wave_sizze_46206) & (2 *
                                                                          skip_waves_46224 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46220 = ((__local
                                float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204 +
                                                            offset_46223)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46221 = x_46219 + x_46220;
                    
                    x_46219 = defunc_1_op_res_46221;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204)] =
                        x_46219;
                }
            }
            skip_waves_46224 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46204) == (int64_t) 0) {
                x_acc_46217 = x_46219;
            }
        }
        if (groups_per_segment_46194 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46204 == 0) {
                    ((__global float *) mem_45134)[gtid_40722 * N_29165 +
                                                   gtid_40723] = x_acc_46217;
                }
            }
        } else {
            int32_t old_counter_46225;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46204 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46199)[sext_i32_i64(virt_group_id_46214) *
                                                        segred_group_sizze_40779] =
                        x_acc_46217;
                    mem_fence_global();
                    old_counter_46225 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46201)[sext_i32_i64(srem32(flat_segment_id_46215,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46210)[(int64_t) 0] =
                        old_counter_46225 == groups_per_segment_46194 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46226;
            
            is_last_group_46226 = ((__local
                                    bool *) sync_arr_mem_46210)[(int64_t) 0];
            if (is_last_group_46226) {
                if (local_tid_46204 == 0) {
                    old_counter_46225 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46201)[sext_i32_i64(srem32(flat_segment_id_46215,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46194));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46227 =
                            sdiv_up64(groups_per_segment_46194,
                                      segred_group_sizze_40779);
                    
                    x_40783 = 0.0F;
                    for (int64_t i_46228 = 0; i_46228 < read_per_thread_46227;
                         i_46228++) {
                        int64_t group_res_id_46229 =
                                sext_i32_i64(local_tid_46204) *
                                read_per_thread_46227 + i_46228;
                        int64_t index_of_group_res_46230 =
                                sext_i32_i64(flat_segment_id_46215) *
                                groups_per_segment_46194 + group_res_id_46229;
                        
                        if (slt64(group_res_id_46229,
                                  groups_per_segment_46194)) {
                            x_40784 = ((__global
                                        float *) group_res_arr_mem_46199)[index_of_group_res_46230 *
                                                                          segred_group_sizze_40779];
                            
                            float defunc_1_op_res_40785;
                            
                            defunc_1_op_res_40785 = x_40783 + x_40784;
                            x_40783 = defunc_1_op_res_40785;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204)] =
                    x_40783;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46231;
                    int32_t skip_waves_46232;
                    
                    skip_waves_46232 = 1;
                    
                    float x_46219;
                    float x_46220;
                    
                    offset_46231 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46204,
                                  sext_i64_i32(segred_group_sizze_40779))) {
                            x_46219 = ((__local
                                        float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204 +
                                                                    offset_46231)];
                        }
                    }
                    offset_46231 = 1;
                    while (slt32(offset_46231, wave_sizze_46206)) {
                        if (slt32(local_tid_46204 + offset_46231,
                                  sext_i64_i32(segred_group_sizze_40779)) &&
                            ((local_tid_46204 - squot32(local_tid_46204,
                                                        wave_sizze_46206) *
                              wave_sizze_46206) & (2 * offset_46231 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46220 = ((volatile __local
                                            float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204 +
                                                                        offset_46231)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46221 = x_46219 + x_46220;
                                
                                x_46219 = defunc_1_op_res_46221;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204)] =
                                    x_46219;
                            }
                        }
                        offset_46231 *= 2;
                    }
                    while (slt32(skip_waves_46232,
                                 squot32(sext_i64_i32(segred_group_sizze_40779) +
                                         wave_sizze_46206 - 1,
                                         wave_sizze_46206))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46231 = skip_waves_46232 * wave_sizze_46206;
                        if (slt32(local_tid_46204 + offset_46231,
                                  sext_i64_i32(segred_group_sizze_40779)) &&
                            ((local_tid_46204 - squot32(local_tid_46204,
                                                        wave_sizze_46206) *
                              wave_sizze_46206) == 0 &&
                             (squot32(local_tid_46204, wave_sizze_46206) & (2 *
                                                                            skip_waves_46232 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46220 = ((__local
                                            float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204 +
                                                                        offset_46231)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46221 = x_46219 + x_46220;
                                
                                x_46219 = defunc_1_op_res_46221;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46208)[sext_i32_i64(local_tid_46204)] =
                                    x_46219;
                            }
                        }
                        skip_waves_46232 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46204 == 0) {
                            ((__global float *) mem_45134)[gtid_40722 *
                                                           N_29165 +
                                                           gtid_40723] =
                                x_46219;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40779
}
__kernel void mainzisegred_large_41311(__global int *global_failure,
                                       int failure_is_an_option, __global
                                       int64_t *global_failure_args,
                                       __local volatile
                                       int64_t *sync_arr_mem_46462_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46460_backing_aligned_1,
                                       int64_t N_29165, int64_t i32_res_29175,
                                       int64_t num_groups_41362,
                                       int64_t groups_per_segment_46446,
                                       int64_t elements_per_thread_46447,
                                       int64_t virt_num_groups_46448,
                                       int64_t threads_per_segment_46450,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_45178,
                                       __global unsigned char *mem_45232,
                                       __global unsigned char *mem_45235,
                                       __global
                                       unsigned char *group_res_arr_mem_46451,
                                       __global
                                       unsigned char *mainzicounter_mem_46453)
{
    #define segred_group_sizze_41361 (mainzisegred_group_sizze_41305)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46462_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46462_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46460_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46460_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46455;
    int32_t local_tid_46456;
    int64_t group_sizze_46459;
    int32_t wave_sizze_46458;
    int32_t group_tid_46457;
    
    global_tid_46455 = get_global_id(0);
    local_tid_46456 = get_local_id(0);
    group_sizze_46459 = get_local_size(0);
    wave_sizze_46458 = LOCKSTEP_WIDTH;
    group_tid_46457 = get_group_id(0);
    
    int32_t phys_tid_41311;
    
    phys_tid_41311 = global_tid_46455;
    
    __local char *red_arr_mem_46460;
    
    red_arr_mem_46460 = (__local char *) red_arr_mem_46460_backing_0;
    
    __local char *sync_arr_mem_46462;
    
    sync_arr_mem_46462 = (__local char *) sync_arr_mem_46462_backing_1;
    
    int32_t phys_group_id_46464;
    
    phys_group_id_46464 = get_group_id(0);
    for (int32_t i_46465 = 0; i_46465 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46448) - phys_group_id_46464,
                   sext_i64_i32(num_groups_41362)); i_46465++) {
        int32_t virt_group_id_46466 = phys_group_id_46464 + i_46465 *
                sext_i64_i32(num_groups_41362);
        int32_t flat_segment_id_46467 = squot32(virt_group_id_46466,
                                                sext_i64_i32(groups_per_segment_46446));
        int64_t global_tid_46468 = srem64(sext_i32_i64(virt_group_id_46466) *
                                          segred_group_sizze_41361 +
                                          sext_i32_i64(local_tid_46456),
                                          segred_group_sizze_41361 *
                                          groups_per_segment_46446);
        int64_t gtid_41302 = sext_i32_i64(flat_segment_id_46467);
        int64_t gtid_41310;
        float x_acc_46469;
        int64_t chunk_sizze_46470;
        
        chunk_sizze_46470 = smin64(elements_per_thread_46447,
                                   sdiv_up64(i32_res_29175 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46468)),
                                             threads_per_segment_46450));
        
        float x_41365;
        float x_41366;
        
        // neutral-initialise the accumulators
        {
            x_acc_46469 = 0.0F;
        }
        for (int64_t i_46474 = 0; i_46474 < chunk_sizze_46470; i_46474++) {
            gtid_41310 = sext_i32_i64(sext_i64_i32(global_tid_46468)) +
                threads_per_segment_46450 * i_46474;
            // apply map function
            {
                int32_t defunc_0_f_res_41369 = ((__global
                                                 int32_t *) mem_45232)[gtid_41302];
                int32_t index_primexp_42385 = sext_i64_i32(gtid_41310);
                bool cond_41371 = slt32(index_primexp_42385,
                                        defunc_0_f_res_41369);
                float defunc_0_f_res_41372;
                
                if (cond_41371) {
                    int64_t i_41373 = sext_i32_i64(index_primexp_42385);
                    bool x_41374 = sle64((int64_t) 0, i_41373);
                    bool y_41375 = slt64(i_41373, N_29165);
                    bool bounds_check_41376 = x_41374 && y_41375;
                    bool index_certs_41377;
                    
                    if (!bounds_check_41376) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          19) == -1) {
                                global_failure_args[0] = i_41373;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_41378 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_41302 *
                                                                                              N_29165 +
                                                                                              i_41373];
                    
                    defunc_0_f_res_41372 = defunc_0_f_res_t_res_41378;
                } else {
                    defunc_0_f_res_41372 = 0.0F;
                }
                
                float defunc_0_f_res_41379 = defunc_0_f_res_41372 *
                      defunc_0_f_res_41372;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_41365 = x_acc_46469;
                }
                // load new values
                {
                    x_41366 = defunc_0_f_res_41379;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_41367 = x_41365 + x_41366;
                    
                    // store in accumulator
                    {
                        x_acc_46469 = defunc_1_op_res_41367;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_41365 = x_acc_46469;
            ((__local
              float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456)] =
                x_41365;
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46475;
        int32_t skip_waves_46476;
        
        skip_waves_46476 = 1;
        
        float x_46471;
        float x_46472;
        
        offset_46475 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46456,
                      sext_i64_i32(segred_group_sizze_41361))) {
                x_46471 = ((__local
                            float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456 +
                                                        offset_46475)];
            }
        }
        offset_46475 = 1;
        while (slt32(offset_46475, wave_sizze_46458)) {
            if (slt32(local_tid_46456 + offset_46475,
                      sext_i64_i32(segred_group_sizze_41361)) &&
                ((local_tid_46456 - squot32(local_tid_46456, wave_sizze_46458) *
                  wave_sizze_46458) & (2 * offset_46475 - 1)) == 0) {
                // read array element
                {
                    x_46472 = ((volatile __local
                                float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456 +
                                                            offset_46475)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46473 = x_46471 + x_46472;
                    
                    x_46471 = defunc_1_op_res_46473;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456)] =
                        x_46471;
                }
            }
            offset_46475 *= 2;
        }
        while (slt32(skip_waves_46476,
                     squot32(sext_i64_i32(segred_group_sizze_41361) +
                             wave_sizze_46458 - 1, wave_sizze_46458))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46475 = skip_waves_46476 * wave_sizze_46458;
            if (slt32(local_tid_46456 + offset_46475,
                      sext_i64_i32(segred_group_sizze_41361)) &&
                ((local_tid_46456 - squot32(local_tid_46456, wave_sizze_46458) *
                  wave_sizze_46458) == 0 && (squot32(local_tid_46456,
                                                     wave_sizze_46458) & (2 *
                                                                          skip_waves_46476 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46472 = ((__local
                                float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456 +
                                                            offset_46475)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46473 = x_46471 + x_46472;
                    
                    x_46471 = defunc_1_op_res_46473;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456)] =
                        x_46471;
                }
            }
            skip_waves_46476 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46456) == (int64_t) 0) {
                x_acc_46469 = x_46471;
            }
        }
        if (groups_per_segment_46446 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46456 == 0) {
                    ((__global float *) mem_45235)[gtid_41302] = x_acc_46469;
                }
            }
        } else {
            int32_t old_counter_46477;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46456 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46451)[sext_i32_i64(virt_group_id_46466) *
                                                        segred_group_sizze_41361] =
                        x_acc_46469;
                    mem_fence_global();
                    old_counter_46477 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46453)[sext_i32_i64(srem32(flat_segment_id_46467,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46462)[(int64_t) 0] =
                        old_counter_46477 == groups_per_segment_46446 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46478;
            
            is_last_group_46478 = ((__local
                                    bool *) sync_arr_mem_46462)[(int64_t) 0];
            if (is_last_group_46478) {
                if (local_tid_46456 == 0) {
                    old_counter_46477 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46453)[sext_i32_i64(srem32(flat_segment_id_46467,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46446));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46479 =
                            sdiv_up64(groups_per_segment_46446,
                                      segred_group_sizze_41361);
                    
                    x_41365 = 0.0F;
                    for (int64_t i_46480 = 0; i_46480 < read_per_thread_46479;
                         i_46480++) {
                        int64_t group_res_id_46481 =
                                sext_i32_i64(local_tid_46456) *
                                read_per_thread_46479 + i_46480;
                        int64_t index_of_group_res_46482 =
                                sext_i32_i64(flat_segment_id_46467) *
                                groups_per_segment_46446 + group_res_id_46481;
                        
                        if (slt64(group_res_id_46481,
                                  groups_per_segment_46446)) {
                            x_41366 = ((__global
                                        float *) group_res_arr_mem_46451)[index_of_group_res_46482 *
                                                                          segred_group_sizze_41361];
                            
                            float defunc_1_op_res_41367;
                            
                            defunc_1_op_res_41367 = x_41365 + x_41366;
                            x_41365 = defunc_1_op_res_41367;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456)] =
                    x_41365;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46483;
                    int32_t skip_waves_46484;
                    
                    skip_waves_46484 = 1;
                    
                    float x_46471;
                    float x_46472;
                    
                    offset_46483 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46456,
                                  sext_i64_i32(segred_group_sizze_41361))) {
                            x_46471 = ((__local
                                        float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456 +
                                                                    offset_46483)];
                        }
                    }
                    offset_46483 = 1;
                    while (slt32(offset_46483, wave_sizze_46458)) {
                        if (slt32(local_tid_46456 + offset_46483,
                                  sext_i64_i32(segred_group_sizze_41361)) &&
                            ((local_tid_46456 - squot32(local_tid_46456,
                                                        wave_sizze_46458) *
                              wave_sizze_46458) & (2 * offset_46483 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46472 = ((volatile __local
                                            float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456 +
                                                                        offset_46483)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46473 = x_46471 + x_46472;
                                
                                x_46471 = defunc_1_op_res_46473;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456)] =
                                    x_46471;
                            }
                        }
                        offset_46483 *= 2;
                    }
                    while (slt32(skip_waves_46484,
                                 squot32(sext_i64_i32(segred_group_sizze_41361) +
                                         wave_sizze_46458 - 1,
                                         wave_sizze_46458))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46483 = skip_waves_46484 * wave_sizze_46458;
                        if (slt32(local_tid_46456 + offset_46483,
                                  sext_i64_i32(segred_group_sizze_41361)) &&
                            ((local_tid_46456 - squot32(local_tid_46456,
                                                        wave_sizze_46458) *
                              wave_sizze_46458) == 0 &&
                             (squot32(local_tid_46456, wave_sizze_46458) & (2 *
                                                                            skip_waves_46484 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46472 = ((__local
                                            float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456 +
                                                                        offset_46483)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46473 = x_46471 + x_46472;
                                
                                x_46471 = defunc_1_op_res_46473;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46460)[sext_i32_i64(local_tid_46456)] =
                                    x_46471;
                            }
                        }
                        skip_waves_46484 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46456 == 0) {
                            ((__global float *) mem_45235)[gtid_41302] =
                                x_46471;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41361
}
__kernel void mainzisegred_large_41336(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_46402_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46400_backing_aligned_1,
                                       int64_t N_29165, int64_t i32_res_29175,
                                       int64_t num_groups_41348,
                                       int64_t groups_per_segment_46386,
                                       int64_t elements_per_thread_46387,
                                       int64_t virt_num_groups_46388,
                                       int64_t threads_per_segment_46390,
                                       __global unsigned char *images_mem_44381,
                                       __global unsigned char *mem_45232,
                                       __global
                                       unsigned char *group_res_arr_mem_46391,
                                       __global
                                       unsigned char *mainzicounter_mem_46393)
{
    #define segred_group_sizze_41347 (mainzisegred_group_sizze_41330)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46402_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46402_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46400_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46400_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46395;
    int32_t local_tid_46396;
    int64_t group_sizze_46399;
    int32_t wave_sizze_46398;
    int32_t group_tid_46397;
    
    global_tid_46395 = get_global_id(0);
    local_tid_46396 = get_local_id(0);
    group_sizze_46399 = get_local_size(0);
    wave_sizze_46398 = LOCKSTEP_WIDTH;
    group_tid_46397 = get_group_id(0);
    
    int32_t phys_tid_41336;
    
    phys_tid_41336 = global_tid_46395;
    
    __local char *red_arr_mem_46400;
    
    red_arr_mem_46400 = (__local char *) red_arr_mem_46400_backing_0;
    
    __local char *sync_arr_mem_46402;
    
    sync_arr_mem_46402 = (__local char *) sync_arr_mem_46402_backing_1;
    
    int32_t phys_group_id_46404;
    
    phys_group_id_46404 = get_group_id(0);
    for (int32_t i_46405 = 0; i_46405 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46388) - phys_group_id_46404,
                   sext_i64_i32(num_groups_41348)); i_46405++) {
        int32_t virt_group_id_46406 = phys_group_id_46404 + i_46405 *
                sext_i64_i32(num_groups_41348);
        int32_t flat_segment_id_46407 = squot32(virt_group_id_46406,
                                                sext_i64_i32(groups_per_segment_46386));
        int64_t global_tid_46408 = srem64(sext_i32_i64(virt_group_id_46406) *
                                          segred_group_sizze_41347 +
                                          sext_i32_i64(local_tid_46396),
                                          segred_group_sizze_41347 *
                                          groups_per_segment_46386);
        int64_t gtid_41327 = sext_i32_i64(flat_segment_id_46407);
        int64_t gtid_41335;
        int32_t x_acc_46409;
        int64_t chunk_sizze_46410;
        
        chunk_sizze_46410 = smin64(elements_per_thread_46387,
                                   sdiv_up64(i32_res_29175 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46408)),
                                             threads_per_segment_46390));
        
        int32_t x_41351;
        int32_t x_41352;
        
        // neutral-initialise the accumulators
        {
            x_acc_46409 = 0;
        }
        for (int64_t i_46414 = 0; i_46414 < chunk_sizze_46410; i_46414++) {
            gtid_41335 = sext_i32_i64(sext_i64_i32(global_tid_46408)) +
                threads_per_segment_46390 * i_46414;
            // apply map function
            {
                float x_41355 = ((__global
                                  float *) images_mem_44381)[gtid_41327 *
                                                             N_29165 +
                                                             gtid_41335];
                bool isnan_res_41356;
                
                isnan_res_41356 = futrts_isnan32(x_41355);
                
                bool cond_41357 = !isnan_res_41356;
                int32_t defunc_0_f_res_41358 = btoi_bool_i32(cond_41357);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_41351 = x_acc_46409;
                }
                // load new values
                {
                    x_41352 = defunc_0_f_res_41358;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_41353 = add32(x_41351, x_41352);
                    
                    // store in accumulator
                    {
                        x_acc_46409 = defunc_1_op_res_41353;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_41351 = x_acc_46409;
            ((__local
              int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396)] =
                x_41351;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46415;
        int32_t skip_waves_46416;
        
        skip_waves_46416 = 1;
        
        int32_t x_46411;
        int32_t x_46412;
        
        offset_46415 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46396,
                      sext_i64_i32(segred_group_sizze_41347))) {
                x_46411 = ((__local
                            int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396 +
                                                          offset_46415)];
            }
        }
        offset_46415 = 1;
        while (slt32(offset_46415, wave_sizze_46398)) {
            if (slt32(local_tid_46396 + offset_46415,
                      sext_i64_i32(segred_group_sizze_41347)) &&
                ((local_tid_46396 - squot32(local_tid_46396, wave_sizze_46398) *
                  wave_sizze_46398) & (2 * offset_46415 - 1)) == 0) {
                // read array element
                {
                    x_46412 = ((volatile __local
                                int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396 +
                                                              offset_46415)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_46413 = add32(x_46411, x_46412);
                    
                    x_46411 = defunc_1_op_res_46413;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396)] =
                        x_46411;
                }
            }
            offset_46415 *= 2;
        }
        while (slt32(skip_waves_46416,
                     squot32(sext_i64_i32(segred_group_sizze_41347) +
                             wave_sizze_46398 - 1, wave_sizze_46398))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46415 = skip_waves_46416 * wave_sizze_46398;
            if (slt32(local_tid_46396 + offset_46415,
                      sext_i64_i32(segred_group_sizze_41347)) &&
                ((local_tid_46396 - squot32(local_tid_46396, wave_sizze_46398) *
                  wave_sizze_46398) == 0 && (squot32(local_tid_46396,
                                                     wave_sizze_46398) & (2 *
                                                                          skip_waves_46416 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46412 = ((__local
                                int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396 +
                                                              offset_46415)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_46413 = add32(x_46411, x_46412);
                    
                    x_46411 = defunc_1_op_res_46413;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396)] =
                        x_46411;
                }
            }
            skip_waves_46416 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46396) == (int64_t) 0) {
                x_acc_46409 = x_46411;
            }
        }
        if (groups_per_segment_46386 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46396 == 0) {
                    ((__global int32_t *) mem_45232)[gtid_41327] = x_acc_46409;
                }
            }
        } else {
            int32_t old_counter_46417;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46396 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_46391)[sext_i32_i64(virt_group_id_46406) *
                                                          segred_group_sizze_41347] =
                        x_acc_46409;
                    mem_fence_global();
                    old_counter_46417 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46393)[sext_i32_i64(srem32(flat_segment_id_46407,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46402)[(int64_t) 0] =
                        old_counter_46417 == groups_per_segment_46386 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46418;
            
            is_last_group_46418 = ((__local
                                    bool *) sync_arr_mem_46402)[(int64_t) 0];
            if (is_last_group_46418) {
                if (local_tid_46396 == 0) {
                    old_counter_46417 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46393)[sext_i32_i64(srem32(flat_segment_id_46407,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46386));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46419 =
                            sdiv_up64(groups_per_segment_46386,
                                      segred_group_sizze_41347);
                    
                    x_41351 = 0;
                    for (int64_t i_46420 = 0; i_46420 < read_per_thread_46419;
                         i_46420++) {
                        int64_t group_res_id_46421 =
                                sext_i32_i64(local_tid_46396) *
                                read_per_thread_46419 + i_46420;
                        int64_t index_of_group_res_46422 =
                                sext_i32_i64(flat_segment_id_46407) *
                                groups_per_segment_46386 + group_res_id_46421;
                        
                        if (slt64(group_res_id_46421,
                                  groups_per_segment_46386)) {
                            x_41352 = ((__global
                                        int32_t *) group_res_arr_mem_46391)[index_of_group_res_46422 *
                                                                            segred_group_sizze_41347];
                            
                            int32_t defunc_1_op_res_41353;
                            
                            defunc_1_op_res_41353 = add32(x_41351, x_41352);
                            x_41351 = defunc_1_op_res_41353;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396)] =
                    x_41351;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46423;
                    int32_t skip_waves_46424;
                    
                    skip_waves_46424 = 1;
                    
                    int32_t x_46411;
                    int32_t x_46412;
                    
                    offset_46423 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46396,
                                  sext_i64_i32(segred_group_sizze_41347))) {
                            x_46411 = ((__local
                                        int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396 +
                                                                      offset_46423)];
                        }
                    }
                    offset_46423 = 1;
                    while (slt32(offset_46423, wave_sizze_46398)) {
                        if (slt32(local_tid_46396 + offset_46423,
                                  sext_i64_i32(segred_group_sizze_41347)) &&
                            ((local_tid_46396 - squot32(local_tid_46396,
                                                        wave_sizze_46398) *
                              wave_sizze_46398) & (2 * offset_46423 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46412 = ((volatile __local
                                            int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396 +
                                                                          offset_46423)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_46413 = add32(x_46411,
                                                                      x_46412);
                                
                                x_46411 = defunc_1_op_res_46413;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396)] =
                                    x_46411;
                            }
                        }
                        offset_46423 *= 2;
                    }
                    while (slt32(skip_waves_46424,
                                 squot32(sext_i64_i32(segred_group_sizze_41347) +
                                         wave_sizze_46398 - 1,
                                         wave_sizze_46398))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46423 = skip_waves_46424 * wave_sizze_46398;
                        if (slt32(local_tid_46396 + offset_46423,
                                  sext_i64_i32(segred_group_sizze_41347)) &&
                            ((local_tid_46396 - squot32(local_tid_46396,
                                                        wave_sizze_46398) *
                              wave_sizze_46398) == 0 &&
                             (squot32(local_tid_46396, wave_sizze_46398) & (2 *
                                                                            skip_waves_46424 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46412 = ((__local
                                            int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396 +
                                                                          offset_46423)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_46413 = add32(x_46411,
                                                                      x_46412);
                                
                                x_46411 = defunc_1_op_res_46413;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_46400)[sext_i32_i64(local_tid_46396)] =
                                    x_46411;
                            }
                        }
                        skip_waves_46424 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46396 == 0) {
                            ((__global int32_t *) mem_45232)[gtid_41327] =
                                x_46411;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41347
}
__kernel void mainzisegred_large_41499(__global int *global_failure,
                                       int failure_is_an_option, __global
                                       int64_t *global_failure_args,
                                       __local volatile
                                       int64_t *sync_arr_mem_46571_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46569_backing_aligned_1,
                                       int64_t N_29165, int64_t i32_res_29568,
                                       int64_t num_groups_41521,
                                       int64_t groups_per_segment_46555,
                                       int64_t elements_per_thread_46556,
                                       int64_t virt_num_groups_46557,
                                       int64_t threads_per_segment_46559,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_45178,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_45244,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_45245,
                                       __global unsigned char *mem_45278,
                                       __global
                                       unsigned char *group_res_arr_mem_46560,
                                       __global
                                       unsigned char *mainzicounter_mem_46562)
{
    #define segred_group_sizze_41520 (mainzisegred_group_sizze_41493)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46571_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46571_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46569_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46569_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46564;
    int32_t local_tid_46565;
    int64_t group_sizze_46568;
    int32_t wave_sizze_46567;
    int32_t group_tid_46566;
    
    global_tid_46564 = get_global_id(0);
    local_tid_46565 = get_local_id(0);
    group_sizze_46568 = get_local_size(0);
    wave_sizze_46567 = LOCKSTEP_WIDTH;
    group_tid_46566 = get_group_id(0);
    
    int32_t phys_tid_41499;
    
    phys_tid_41499 = global_tid_46564;
    
    __local char *red_arr_mem_46569;
    
    red_arr_mem_46569 = (__local char *) red_arr_mem_46569_backing_0;
    
    __local char *sync_arr_mem_46571;
    
    sync_arr_mem_46571 = (__local char *) sync_arr_mem_46571_backing_1;
    
    int32_t phys_group_id_46573;
    
    phys_group_id_46573 = get_group_id(0);
    for (int32_t i_46574 = 0; i_46574 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46557) - phys_group_id_46573,
                   sext_i64_i32(num_groups_41521)); i_46574++) {
        int32_t virt_group_id_46575 = phys_group_id_46573 + i_46574 *
                sext_i64_i32(num_groups_41521);
        int32_t flat_segment_id_46576 = squot32(virt_group_id_46575,
                                                sext_i64_i32(groups_per_segment_46555));
        int64_t global_tid_46577 = srem64(sext_i32_i64(virt_group_id_46575) *
                                          segred_group_sizze_41520 +
                                          sext_i32_i64(local_tid_46565),
                                          segred_group_sizze_41520 *
                                          groups_per_segment_46555);
        int64_t gtid_41490 = sext_i32_i64(flat_segment_id_46576);
        int64_t gtid_41498;
        float x_acc_46578;
        int64_t chunk_sizze_46579;
        
        chunk_sizze_46579 = smin64(elements_per_thread_46556,
                                   sdiv_up64(i32_res_29568 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46577)),
                                             threads_per_segment_46559));
        
        float x_41524;
        float x_41525;
        
        // neutral-initialise the accumulators
        {
            x_acc_46578 = 0.0F;
        }
        for (int64_t i_46583 = 0; i_46583 < chunk_sizze_46579; i_46583++) {
            gtid_41498 = sext_i32_i64(sext_i64_i32(global_tid_46577)) +
                threads_per_segment_46559 * i_46583;
            // apply map function
            {
                int32_t x_41529 = ((__global
                                    int32_t *) defunc_3_map_res_mem_45244)[gtid_41490];
                int32_t index_primexp_42390 = sext_i64_i32(gtid_41498);
                bool cond_41531 = slt32(index_primexp_42390, x_41529);
                float defunc_0_f_res_41532;
                
                if (cond_41531) {
                    int32_t x_41528 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_41490];
                    int32_t x_41533 = add32(x_41528, index_primexp_42390);
                    int32_t x_41534 = sub32(x_41533, x_41529);
                    int32_t i_41535 = add32(1, x_41534);
                    int64_t i_41536 = sext_i32_i64(i_41535);
                    bool x_41537 = sle64((int64_t) 0, i_41536);
                    bool y_41538 = slt64(i_41536, N_29165);
                    bool bounds_check_41539 = x_41537 && y_41538;
                    bool index_certs_41540;
                    
                    if (!bounds_check_41539) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          23) == -1) {
                                global_failure_args[0] = i_41536;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_41541 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_41490 *
                                                                                              N_29165 +
                                                                                              i_41536];
                    
                    defunc_0_f_res_41532 = defunc_0_f_res_t_res_41541;
                } else {
                    defunc_0_f_res_41532 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_41524 = x_acc_46578;
                }
                // load new values
                {
                    x_41525 = defunc_0_f_res_41532;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_41526 = x_41524 + x_41525;
                    
                    // store in accumulator
                    {
                        x_acc_46578 = defunc_1_op_res_41526;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_41524 = x_acc_46578;
            ((__local
              float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565)] =
                x_41524;
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46584;
        int32_t skip_waves_46585;
        
        skip_waves_46585 = 1;
        
        float x_46580;
        float x_46581;
        
        offset_46584 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46565,
                      sext_i64_i32(segred_group_sizze_41520))) {
                x_46580 = ((__local
                            float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565 +
                                                        offset_46584)];
            }
        }
        offset_46584 = 1;
        while (slt32(offset_46584, wave_sizze_46567)) {
            if (slt32(local_tid_46565 + offset_46584,
                      sext_i64_i32(segred_group_sizze_41520)) &&
                ((local_tid_46565 - squot32(local_tid_46565, wave_sizze_46567) *
                  wave_sizze_46567) & (2 * offset_46584 - 1)) == 0) {
                // read array element
                {
                    x_46581 = ((volatile __local
                                float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565 +
                                                            offset_46584)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46582 = x_46580 + x_46581;
                    
                    x_46580 = defunc_1_op_res_46582;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565)] =
                        x_46580;
                }
            }
            offset_46584 *= 2;
        }
        while (slt32(skip_waves_46585,
                     squot32(sext_i64_i32(segred_group_sizze_41520) +
                             wave_sizze_46567 - 1, wave_sizze_46567))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46584 = skip_waves_46585 * wave_sizze_46567;
            if (slt32(local_tid_46565 + offset_46584,
                      sext_i64_i32(segred_group_sizze_41520)) &&
                ((local_tid_46565 - squot32(local_tid_46565, wave_sizze_46567) *
                  wave_sizze_46567) == 0 && (squot32(local_tid_46565,
                                                     wave_sizze_46567) & (2 *
                                                                          skip_waves_46585 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46581 = ((__local
                                float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565 +
                                                            offset_46584)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46582 = x_46580 + x_46581;
                    
                    x_46580 = defunc_1_op_res_46582;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565)] =
                        x_46580;
                }
            }
            skip_waves_46585 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46565) == (int64_t) 0) {
                x_acc_46578 = x_46580;
            }
        }
        if (groups_per_segment_46555 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46565 == 0) {
                    ((__global float *) mem_45278)[gtid_41490] = x_acc_46578;
                }
            }
        } else {
            int32_t old_counter_46586;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46565 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46560)[sext_i32_i64(virt_group_id_46575) *
                                                        segred_group_sizze_41520] =
                        x_acc_46578;
                    mem_fence_global();
                    old_counter_46586 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46562)[sext_i32_i64(srem32(flat_segment_id_46576,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46571)[(int64_t) 0] =
                        old_counter_46586 == groups_per_segment_46555 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46587;
            
            is_last_group_46587 = ((__local
                                    bool *) sync_arr_mem_46571)[(int64_t) 0];
            if (is_last_group_46587) {
                if (local_tid_46565 == 0) {
                    old_counter_46586 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46562)[sext_i32_i64(srem32(flat_segment_id_46576,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46555));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46588 =
                            sdiv_up64(groups_per_segment_46555,
                                      segred_group_sizze_41520);
                    
                    x_41524 = 0.0F;
                    for (int64_t i_46589 = 0; i_46589 < read_per_thread_46588;
                         i_46589++) {
                        int64_t group_res_id_46590 =
                                sext_i32_i64(local_tid_46565) *
                                read_per_thread_46588 + i_46589;
                        int64_t index_of_group_res_46591 =
                                sext_i32_i64(flat_segment_id_46576) *
                                groups_per_segment_46555 + group_res_id_46590;
                        
                        if (slt64(group_res_id_46590,
                                  groups_per_segment_46555)) {
                            x_41525 = ((__global
                                        float *) group_res_arr_mem_46560)[index_of_group_res_46591 *
                                                                          segred_group_sizze_41520];
                            
                            float defunc_1_op_res_41526;
                            
                            defunc_1_op_res_41526 = x_41524 + x_41525;
                            x_41524 = defunc_1_op_res_41526;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565)] =
                    x_41524;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46592;
                    int32_t skip_waves_46593;
                    
                    skip_waves_46593 = 1;
                    
                    float x_46580;
                    float x_46581;
                    
                    offset_46592 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46565,
                                  sext_i64_i32(segred_group_sizze_41520))) {
                            x_46580 = ((__local
                                        float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565 +
                                                                    offset_46592)];
                        }
                    }
                    offset_46592 = 1;
                    while (slt32(offset_46592, wave_sizze_46567)) {
                        if (slt32(local_tid_46565 + offset_46592,
                                  sext_i64_i32(segred_group_sizze_41520)) &&
                            ((local_tid_46565 - squot32(local_tid_46565,
                                                        wave_sizze_46567) *
                              wave_sizze_46567) & (2 * offset_46592 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46581 = ((volatile __local
                                            float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565 +
                                                                        offset_46592)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46582 = x_46580 + x_46581;
                                
                                x_46580 = defunc_1_op_res_46582;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565)] =
                                    x_46580;
                            }
                        }
                        offset_46592 *= 2;
                    }
                    while (slt32(skip_waves_46593,
                                 squot32(sext_i64_i32(segred_group_sizze_41520) +
                                         wave_sizze_46567 - 1,
                                         wave_sizze_46567))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46592 = skip_waves_46593 * wave_sizze_46567;
                        if (slt32(local_tid_46565 + offset_46592,
                                  sext_i64_i32(segred_group_sizze_41520)) &&
                            ((local_tid_46565 - squot32(local_tid_46565,
                                                        wave_sizze_46567) *
                              wave_sizze_46567) == 0 &&
                             (squot32(local_tid_46565, wave_sizze_46567) & (2 *
                                                                            skip_waves_46593 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46581 = ((__local
                                            float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565 +
                                                                        offset_46592)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46582 = x_46580 + x_46581;
                                
                                x_46580 = defunc_1_op_res_46582;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46569)[sext_i32_i64(local_tid_46565)] =
                                    x_46580;
                            }
                        }
                        skip_waves_46593 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46565 == 0) {
                            ((__global float *) mem_45278)[gtid_41490] =
                                x_46580;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41520
}
__kernel void mainzisegred_large_42060(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_46752_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46750_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_46748_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_46746_backing_aligned_3,
                                       int64_t iota32_arg_29597,
                                       int64_t num_groups_42247,
                                       int64_t groups_per_segment_46728,
                                       int64_t elements_per_thread_46729,
                                       int64_t virt_num_groups_46730, __global
                                       unsigned char *mem_45284, __global
                                       unsigned char *mem_45296, __global
                                       unsigned char *mem_45298, __global
                                       unsigned char *mem_45302, __global
                                       unsigned char *mem_45305, __global
                                       unsigned char *mem_45307, __global
                                       unsigned char *mem_45309, __global
                                       unsigned char *group_res_arr_mem_46733,
                                       __global
                                       unsigned char *group_res_arr_mem_46735,
                                       __global
                                       unsigned char *group_res_arr_mem_46737,
                                       __global
                                       unsigned char *mainzicounter_mem_46739)
{
    #define segred_group_sizze_42246 (mainzisegred_group_sizze_42054)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46752_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_46752_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46750_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46750_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46748_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46748_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_46746_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46746_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46741;
    int32_t local_tid_46742;
    int64_t group_sizze_46745;
    int32_t wave_sizze_46744;
    int32_t group_tid_46743;
    
    global_tid_46741 = get_global_id(0);
    local_tid_46742 = get_local_id(0);
    group_sizze_46745 = get_local_size(0);
    wave_sizze_46744 = LOCKSTEP_WIDTH;
    group_tid_46743 = get_group_id(0);
    
    int32_t phys_tid_42060;
    
    phys_tid_42060 = global_tid_46741;
    
    __local char *red_arr_mem_46746;
    
    red_arr_mem_46746 = (__local char *) red_arr_mem_46746_backing_0;
    
    __local char *red_arr_mem_46748;
    
    red_arr_mem_46748 = (__local char *) red_arr_mem_46748_backing_1;
    
    __local char *red_arr_mem_46750;
    
    red_arr_mem_46750 = (__local char *) red_arr_mem_46750_backing_2;
    
    __local char *sync_arr_mem_46752;
    
    sync_arr_mem_46752 = (__local char *) sync_arr_mem_46752_backing_3;
    
    int32_t phys_group_id_46754;
    
    phys_group_id_46754 = get_group_id(0);
    for (int32_t i_46755 = 0; i_46755 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46730) - phys_group_id_46754,
                   sext_i64_i32(num_groups_42247)); i_46755++) {
        int32_t virt_group_id_46756 = phys_group_id_46754 + i_46755 *
                sext_i64_i32(num_groups_42247);
        int32_t flat_segment_id_46757 = squot32(virt_group_id_46756,
                                                sext_i64_i32(groups_per_segment_46728));
        int64_t global_tid_46758 = srem64(sext_i32_i64(virt_group_id_46756) *
                                          segred_group_sizze_42246 +
                                          sext_i32_i64(local_tid_46742),
                                          segred_group_sizze_42246 *
                                          groups_per_segment_46728);
        int64_t gtid_42051 = sext_i32_i64(flat_segment_id_46757);
        int64_t gtid_42059;
        bool x_acc_46759;
        int32_t x_acc_46760;
        float x_acc_46761;
        int64_t chunk_sizze_46762;
        int64_t starting_point_46763;
        
        starting_point_46763 = sext_i32_i64(sext_i64_i32(global_tid_46758)) *
            elements_per_thread_46729;
        
        int64_t remaining_elements_46764;
        
        remaining_elements_46764 = iota32_arg_29597 - starting_point_46763;
        if (sle64(remaining_elements_46764, (int64_t) 0) ||
            sle64(iota32_arg_29597, starting_point_46763)) {
            chunk_sizze_46762 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_29597,
                      (sext_i32_i64(sext_i64_i32(global_tid_46758)) +
                       (int64_t) 1) * elements_per_thread_46729)) {
                chunk_sizze_46762 = iota32_arg_29597 -
                    sext_i32_i64(sext_i64_i32(global_tid_46758)) *
                    elements_per_thread_46729;
            } else {
                chunk_sizze_46762 = elements_per_thread_46729;
            }
        }
        
        bool x_42252;
        int32_t x_42253;
        float x_42254;
        bool x_42255;
        int32_t x_42256;
        float x_42257;
        
        // neutral-initialise the accumulators
        {
            x_acc_46759 = 0;
            x_acc_46760 = -1;
            x_acc_46761 = 0.0F;
        }
        for (int64_t i_46779 = 0; i_46779 < elements_per_thread_46729;
             i_46779++) {
            gtid_42059 = sext_i32_i64(local_tid_46742) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_46758),
                                      sext_i64_i32(segred_group_sizze_42246))) *
                 elements_per_thread_46729 + i_46779) *
                segred_group_sizze_42246;
            if (slt64(gtid_42059, iota32_arg_29597)) {
                // apply map function
                {
                    int32_t y_42266 = ((__global
                                        int32_t *) mem_45298)[gtid_42051];
                    float y_42267 = ((__global float *) mem_45296)[gtid_42051];
                    float x_42271 = ((__global float *) mem_45302)[gtid_42051 *
                                                                   iota32_arg_29597 +
                                                                   gtid_42059];
                    float x_42272 = ((__global float *) mem_45284)[gtid_42059];
                    int32_t index_primexp_42404 = sext_i64_i32(gtid_42059);
                    float defunc_0_f_res_42275 = x_42271 / y_42267;
                    bool cond_42276 = slt32(index_primexp_42404, y_42266);
                    bool isnan_res_42277;
                    
                    isnan_res_42277 = futrts_isnan32(defunc_0_f_res_42275);
                    
                    bool cond_t_res_42278 = !isnan_res_42277;
                    bool x_42279 = cond_42276 && cond_t_res_42278;
                    float abs_res_42280 = (float) fabs(defunc_0_f_res_42275);
                    bool defunc_2_f_res_t_res_42281 = x_42272 < abs_res_42280;
                    bool x_42282 = x_42279 && defunc_2_f_res_t_res_42281;
                    float defunc_1_f_res_42283;
                    
                    if (cond_42276) {
                        defunc_1_f_res_42283 = defunc_0_f_res_42275;
                    } else {
                        defunc_1_f_res_42283 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_42252 = x_acc_46759;
                        x_42253 = x_acc_46760;
                        x_42254 = x_acc_46761;
                    }
                    // load new values
                    {
                        x_42255 = x_42282;
                        x_42256 = index_primexp_42404;
                        x_42257 = defunc_1_f_res_42283;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_42258;
                        int32_t defunc_1_op_res_42259;
                        
                        if (x_42252) {
                            defunc_1_op_res_42258 = x_42252;
                            defunc_1_op_res_42259 = x_42253;
                        } else {
                            bool x_42260 = x_42255 && x_42255;
                            bool x_42261 = !x_42255;
                            bool y_42262 = x_42252 && x_42261;
                            bool defunc_1_op_res_f_res_42263 = x_42260 ||
                                 y_42262;
                            int32_t defunc_1_op_res_f_res_42264;
                            
                            if (x_42255) {
                                defunc_1_op_res_f_res_42264 = x_42256;
                            } else {
                                defunc_1_op_res_f_res_42264 = x_42253;
                            }
                            defunc_1_op_res_42258 = defunc_1_op_res_f_res_42263;
                            defunc_1_op_res_42259 = defunc_1_op_res_f_res_42264;
                        }
                        
                        float defunc_1_op_res_42265 = x_42254 + x_42257;
                        
                        // store in accumulator
                        {
                            x_acc_46759 = defunc_1_op_res_42258;
                            x_acc_46760 = defunc_1_op_res_42259;
                            x_acc_46761 = defunc_1_op_res_42265;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_42252 = x_acc_46759;
                x_42253 = x_acc_46760;
                x_42254 = x_acc_46761;
                ((__local
                  bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742)] =
                    x_42252;
                ((__local
                  int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742)] =
                    x_42253;
                ((__local
                  float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742)] =
                    x_42254;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_46780;
            int32_t skip_waves_46781;
            
            skip_waves_46781 = 1;
            
            bool x_46765;
            int32_t x_46766;
            float x_46767;
            bool x_46768;
            int32_t x_46769;
            float x_46770;
            
            offset_46780 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46742,
                          sext_i64_i32(segred_group_sizze_42246))) {
                    x_46765 = ((__local
                                bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742 +
                                                           offset_46780)];
                    x_46766 = ((__local
                                int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742 +
                                                              offset_46780)];
                    x_46767 = ((__local
                                float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742 +
                                                            offset_46780)];
                }
            }
            offset_46780 = 1;
            while (slt32(offset_46780, wave_sizze_46744)) {
                if (slt32(local_tid_46742 + offset_46780,
                          sext_i64_i32(segred_group_sizze_42246)) &&
                    ((local_tid_46742 - squot32(local_tid_46742,
                                                wave_sizze_46744) *
                      wave_sizze_46744) & (2 * offset_46780 - 1)) == 0) {
                    // read array element
                    {
                        x_46768 = ((volatile __local
                                    bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742 +
                                                               offset_46780)];
                        x_46769 = ((volatile __local
                                    int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742 +
                                                                  offset_46780)];
                        x_46770 = ((volatile __local
                                    float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742 +
                                                                offset_46780)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46771;
                        int32_t defunc_1_op_res_46772;
                        
                        if (x_46765) {
                            defunc_1_op_res_46771 = x_46765;
                            defunc_1_op_res_46772 = x_46766;
                        } else {
                            bool x_46773 = x_46768 && x_46768;
                            bool x_46774 = !x_46768;
                            bool y_46775 = x_46765 && x_46774;
                            bool defunc_1_op_res_f_res_46776 = x_46773 ||
                                 y_46775;
                            int32_t defunc_1_op_res_f_res_46777;
                            
                            if (x_46768) {
                                defunc_1_op_res_f_res_46777 = x_46769;
                            } else {
                                defunc_1_op_res_f_res_46777 = x_46766;
                            }
                            defunc_1_op_res_46771 = defunc_1_op_res_f_res_46776;
                            defunc_1_op_res_46772 = defunc_1_op_res_f_res_46777;
                        }
                        
                        float defunc_1_op_res_46778 = x_46767 + x_46770;
                        
                        x_46765 = defunc_1_op_res_46771;
                        x_46766 = defunc_1_op_res_46772;
                        x_46767 = defunc_1_op_res_46778;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742)] =
                            x_46765;
                        ((volatile __local
                          int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742)] =
                            x_46766;
                        ((volatile __local
                          float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742)] =
                            x_46767;
                    }
                }
                offset_46780 *= 2;
            }
            while (slt32(skip_waves_46781,
                         squot32(sext_i64_i32(segred_group_sizze_42246) +
                                 wave_sizze_46744 - 1, wave_sizze_46744))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46780 = skip_waves_46781 * wave_sizze_46744;
                if (slt32(local_tid_46742 + offset_46780,
                          sext_i64_i32(segred_group_sizze_42246)) &&
                    ((local_tid_46742 - squot32(local_tid_46742,
                                                wave_sizze_46744) *
                      wave_sizze_46744) == 0 && (squot32(local_tid_46742,
                                                         wave_sizze_46744) &
                                                 (2 * skip_waves_46781 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46768 = ((__local
                                    bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742 +
                                                               offset_46780)];
                        x_46769 = ((__local
                                    int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742 +
                                                                  offset_46780)];
                        x_46770 = ((__local
                                    float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742 +
                                                                offset_46780)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46771;
                        int32_t defunc_1_op_res_46772;
                        
                        if (x_46765) {
                            defunc_1_op_res_46771 = x_46765;
                            defunc_1_op_res_46772 = x_46766;
                        } else {
                            bool x_46773 = x_46768 && x_46768;
                            bool x_46774 = !x_46768;
                            bool y_46775 = x_46765 && x_46774;
                            bool defunc_1_op_res_f_res_46776 = x_46773 ||
                                 y_46775;
                            int32_t defunc_1_op_res_f_res_46777;
                            
                            if (x_46768) {
                                defunc_1_op_res_f_res_46777 = x_46769;
                            } else {
                                defunc_1_op_res_f_res_46777 = x_46766;
                            }
                            defunc_1_op_res_46771 = defunc_1_op_res_f_res_46776;
                            defunc_1_op_res_46772 = defunc_1_op_res_f_res_46777;
                        }
                        
                        float defunc_1_op_res_46778 = x_46767 + x_46770;
                        
                        x_46765 = defunc_1_op_res_46771;
                        x_46766 = defunc_1_op_res_46772;
                        x_46767 = defunc_1_op_res_46778;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742)] =
                            x_46765;
                        ((__local
                          int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742)] =
                            x_46766;
                        ((__local
                          float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742)] =
                            x_46767;
                    }
                }
                skip_waves_46781 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_46742) == (int64_t) 0) {
                    x_acc_46759 = x_46765;
                    x_acc_46760 = x_46766;
                    x_acc_46761 = x_46767;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_46742) == (int64_t) 0)) {
                    x_acc_46759 = 0;
                    x_acc_46760 = -1;
                    x_acc_46761 = 0.0F;
                }
            }
        }
        x_42252 = x_acc_46759;
        x_42253 = x_acc_46760;
        x_42254 = x_acc_46761;
        if (groups_per_segment_46728 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46742 == 0) {
                    ((__global bool *) mem_45305)[gtid_42051] = x_acc_46759;
                    ((__global int32_t *) mem_45307)[gtid_42051] = x_acc_46760;
                    ((__global float *) mem_45309)[gtid_42051] = x_acc_46761;
                }
            }
        } else {
            int32_t old_counter_46782;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46742 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_46733)[sext_i32_i64(virt_group_id_46756) *
                                                       segred_group_sizze_42246] =
                        x_acc_46759;
                    ((__global
                      int32_t *) group_res_arr_mem_46735)[sext_i32_i64(virt_group_id_46756) *
                                                          segred_group_sizze_42246] =
                        x_acc_46760;
                    ((__global
                      float *) group_res_arr_mem_46737)[sext_i32_i64(virt_group_id_46756) *
                                                        segred_group_sizze_42246] =
                        x_acc_46761;
                    mem_fence_global();
                    old_counter_46782 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46739)[sext_i32_i64(srem32(flat_segment_id_46757,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46752)[(int64_t) 0] =
                        old_counter_46782 == groups_per_segment_46728 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46783;
            
            is_last_group_46783 = ((__local
                                    bool *) sync_arr_mem_46752)[(int64_t) 0];
            if (is_last_group_46783) {
                if (local_tid_46742 == 0) {
                    old_counter_46782 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46739)[sext_i32_i64(srem32(flat_segment_id_46757,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46728));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46784 =
                            sdiv_up64(groups_per_segment_46728,
                                      segred_group_sizze_42246);
                    
                    x_42252 = 0;
                    x_42253 = -1;
                    x_42254 = 0.0F;
                    for (int64_t i_46785 = 0; i_46785 < read_per_thread_46784;
                         i_46785++) {
                        int64_t group_res_id_46786 =
                                sext_i32_i64(local_tid_46742) *
                                read_per_thread_46784 + i_46785;
                        int64_t index_of_group_res_46787 =
                                sext_i32_i64(flat_segment_id_46757) *
                                groups_per_segment_46728 + group_res_id_46786;
                        
                        if (slt64(group_res_id_46786,
                                  groups_per_segment_46728)) {
                            x_42255 = ((__global
                                        bool *) group_res_arr_mem_46733)[index_of_group_res_46787 *
                                                                         segred_group_sizze_42246];
                            x_42256 = ((__global
                                        int32_t *) group_res_arr_mem_46735)[index_of_group_res_46787 *
                                                                            segred_group_sizze_42246];
                            x_42257 = ((__global
                                        float *) group_res_arr_mem_46737)[index_of_group_res_46787 *
                                                                          segred_group_sizze_42246];
                            
                            bool defunc_1_op_res_42258;
                            int32_t defunc_1_op_res_42259;
                            
                            if (x_42252) {
                                defunc_1_op_res_42258 = x_42252;
                                defunc_1_op_res_42259 = x_42253;
                            } else {
                                bool x_42260 = x_42255 && x_42255;
                                bool x_42261 = !x_42255;
                                bool y_42262 = x_42252 && x_42261;
                                bool defunc_1_op_res_f_res_42263 = x_42260 ||
                                     y_42262;
                                int32_t defunc_1_op_res_f_res_42264;
                                
                                if (x_42255) {
                                    defunc_1_op_res_f_res_42264 = x_42256;
                                } else {
                                    defunc_1_op_res_f_res_42264 = x_42253;
                                }
                                defunc_1_op_res_42258 =
                                    defunc_1_op_res_f_res_42263;
                                defunc_1_op_res_42259 =
                                    defunc_1_op_res_f_res_42264;
                            }
                            
                            float defunc_1_op_res_42265 = x_42254 + x_42257;
                            
                            x_42252 = defunc_1_op_res_42258;
                            x_42253 = defunc_1_op_res_42259;
                            x_42254 = defunc_1_op_res_42265;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742)] =
                    x_42252;
                ((__local
                  int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742)] =
                    x_42253;
                ((__local
                  float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742)] =
                    x_42254;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46788;
                    int32_t skip_waves_46789;
                    
                    skip_waves_46789 = 1;
                    
                    bool x_46765;
                    int32_t x_46766;
                    float x_46767;
                    bool x_46768;
                    int32_t x_46769;
                    float x_46770;
                    
                    offset_46788 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46742,
                                  sext_i64_i32(segred_group_sizze_42246))) {
                            x_46765 = ((__local
                                        bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742 +
                                                                   offset_46788)];
                            x_46766 = ((__local
                                        int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742 +
                                                                      offset_46788)];
                            x_46767 = ((__local
                                        float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742 +
                                                                    offset_46788)];
                        }
                    }
                    offset_46788 = 1;
                    while (slt32(offset_46788, wave_sizze_46744)) {
                        if (slt32(local_tid_46742 + offset_46788,
                                  sext_i64_i32(segred_group_sizze_42246)) &&
                            ((local_tid_46742 - squot32(local_tid_46742,
                                                        wave_sizze_46744) *
                              wave_sizze_46744) & (2 * offset_46788 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46768 = ((volatile __local
                                            bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742 +
                                                                       offset_46788)];
                                x_46769 = ((volatile __local
                                            int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742 +
                                                                          offset_46788)];
                                x_46770 = ((volatile __local
                                            float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742 +
                                                                        offset_46788)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46771;
                                int32_t defunc_1_op_res_46772;
                                
                                if (x_46765) {
                                    defunc_1_op_res_46771 = x_46765;
                                    defunc_1_op_res_46772 = x_46766;
                                } else {
                                    bool x_46773 = x_46768 && x_46768;
                                    bool x_46774 = !x_46768;
                                    bool y_46775 = x_46765 && x_46774;
                                    bool defunc_1_op_res_f_res_46776 =
                                         x_46773 || y_46775;
                                    int32_t defunc_1_op_res_f_res_46777;
                                    
                                    if (x_46768) {
                                        defunc_1_op_res_f_res_46777 = x_46769;
                                    } else {
                                        defunc_1_op_res_f_res_46777 = x_46766;
                                    }
                                    defunc_1_op_res_46771 =
                                        defunc_1_op_res_f_res_46776;
                                    defunc_1_op_res_46772 =
                                        defunc_1_op_res_f_res_46777;
                                }
                                
                                float defunc_1_op_res_46778 = x_46767 + x_46770;
                                
                                x_46765 = defunc_1_op_res_46771;
                                x_46766 = defunc_1_op_res_46772;
                                x_46767 = defunc_1_op_res_46778;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742)] =
                                    x_46765;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742)] =
                                    x_46766;
                                ((volatile __local
                                  float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742)] =
                                    x_46767;
                            }
                        }
                        offset_46788 *= 2;
                    }
                    while (slt32(skip_waves_46789,
                                 squot32(sext_i64_i32(segred_group_sizze_42246) +
                                         wave_sizze_46744 - 1,
                                         wave_sizze_46744))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46788 = skip_waves_46789 * wave_sizze_46744;
                        if (slt32(local_tid_46742 + offset_46788,
                                  sext_i64_i32(segred_group_sizze_42246)) &&
                            ((local_tid_46742 - squot32(local_tid_46742,
                                                        wave_sizze_46744) *
                              wave_sizze_46744) == 0 &&
                             (squot32(local_tid_46742, wave_sizze_46744) & (2 *
                                                                            skip_waves_46789 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46768 = ((__local
                                            bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742 +
                                                                       offset_46788)];
                                x_46769 = ((__local
                                            int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742 +
                                                                          offset_46788)];
                                x_46770 = ((__local
                                            float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742 +
                                                                        offset_46788)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46771;
                                int32_t defunc_1_op_res_46772;
                                
                                if (x_46765) {
                                    defunc_1_op_res_46771 = x_46765;
                                    defunc_1_op_res_46772 = x_46766;
                                } else {
                                    bool x_46773 = x_46768 && x_46768;
                                    bool x_46774 = !x_46768;
                                    bool y_46775 = x_46765 && x_46774;
                                    bool defunc_1_op_res_f_res_46776 =
                                         x_46773 || y_46775;
                                    int32_t defunc_1_op_res_f_res_46777;
                                    
                                    if (x_46768) {
                                        defunc_1_op_res_f_res_46777 = x_46769;
                                    } else {
                                        defunc_1_op_res_f_res_46777 = x_46766;
                                    }
                                    defunc_1_op_res_46771 =
                                        defunc_1_op_res_f_res_46776;
                                    defunc_1_op_res_46772 =
                                        defunc_1_op_res_f_res_46777;
                                }
                                
                                float defunc_1_op_res_46778 = x_46767 + x_46770;
                                
                                x_46765 = defunc_1_op_res_46771;
                                x_46766 = defunc_1_op_res_46772;
                                x_46767 = defunc_1_op_res_46778;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_46746)[sext_i32_i64(local_tid_46742)] =
                                    x_46765;
                                ((__local
                                  int32_t *) red_arr_mem_46748)[sext_i32_i64(local_tid_46742)] =
                                    x_46766;
                                ((__local
                                  float *) red_arr_mem_46750)[sext_i32_i64(local_tid_46742)] =
                                    x_46767;
                            }
                        }
                        skip_waves_46789 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46742 == 0) {
                            ((__global bool *) mem_45305)[gtid_42051] = x_46765;
                            ((__global int32_t *) mem_45307)[gtid_42051] =
                                x_46766;
                            ((__global float *) mem_45309)[gtid_42051] =
                                x_46767;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_42246
}
__kernel void mainzisegred_nonseg_41409(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_46505_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_46503_backing_aligned_1,
                                        int64_t m_29166,
                                        int64_t num_groups_41404,
                                        int64_t num_threads_46497, __global
                                        unsigned char *defunc_3_map_res_mem_45244,
                                        __global unsigned char *mem_45249,
                                        __global
                                        unsigned char *mainzicounter_mem_46493,
                                        __global
                                        unsigned char *group_res_arr_mem_46495)
{
    #define segred_group_sizze_41402 (mainzisegred_group_sizze_41401)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46505_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46505_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_46503_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_46503_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46498;
    int32_t local_tid_46499;
    int64_t group_sizze_46502;
    int32_t wave_sizze_46501;
    int32_t group_tid_46500;
    
    global_tid_46498 = get_global_id(0);
    local_tid_46499 = get_local_id(0);
    group_sizze_46502 = get_local_size(0);
    wave_sizze_46501 = LOCKSTEP_WIDTH;
    group_tid_46500 = get_group_id(0);
    
    int32_t phys_tid_41409;
    
    phys_tid_41409 = global_tid_46498;
    
    __local char *sync_arr_mem_46503;
    
    sync_arr_mem_46503 = (__local char *) sync_arr_mem_46503_backing_0;
    
    __local char *red_arr_mem_46505;
    
    red_arr_mem_46505 = (__local char *) red_arr_mem_46505_backing_1;
    
    int64_t dummy_41407;
    
    dummy_41407 = (int64_t) 0;
    
    int64_t gtid_41408;
    
    gtid_41408 = (int64_t) 0;
    
    int32_t x_acc_46507;
    int64_t chunk_sizze_46508;
    
    chunk_sizze_46508 = smin64(sdiv_up64(m_29166,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_41402 *
                                         num_groups_41404))),
                               sdiv_up64(m_29166 - sext_i32_i64(phys_tid_41409),
                                         num_threads_46497));
    
    int32_t x_29564;
    int32_t x_29565;
    
    // neutral-initialise the accumulators
    {
        x_acc_46507 = 0;
    }
    for (int64_t i_46512 = 0; i_46512 < chunk_sizze_46508; i_46512++) {
        gtid_41408 = sext_i32_i64(phys_tid_41409) + num_threads_46497 * i_46512;
        // apply map function
        {
            int32_t x_29567 = ((__global
                                int32_t *) defunc_3_map_res_mem_45244)[gtid_41408];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_29564 = x_acc_46507;
            }
            // load new values
            {
                x_29565 = x_29567;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_29566 = smax32(x_29564, x_29565);
                
                // store in accumulator
                {
                    x_acc_46507 = defunc_1_op_res_29566;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_29564 = x_acc_46507;
        ((__local int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499)] =
            x_29564;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46513;
    int32_t skip_waves_46514;
    
    skip_waves_46514 = 1;
    
    int32_t x_46509;
    int32_t x_46510;
    
    offset_46513 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46499, sext_i64_i32(segred_group_sizze_41402))) {
            x_46509 = ((__local
                        int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499 +
                                                      offset_46513)];
        }
    }
    offset_46513 = 1;
    while (slt32(offset_46513, wave_sizze_46501)) {
        if (slt32(local_tid_46499 + offset_46513,
                  sext_i64_i32(segred_group_sizze_41402)) && ((local_tid_46499 -
                                                               squot32(local_tid_46499,
                                                                       wave_sizze_46501) *
                                                               wave_sizze_46501) &
                                                              (2 *
                                                               offset_46513 -
                                                               1)) == 0) {
            // read array element
            {
                x_46510 = ((volatile __local
                            int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499 +
                                                          offset_46513)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_46511 = smax32(x_46509, x_46510);
                
                x_46509 = defunc_1_op_res_46511;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499)] =
                    x_46509;
            }
        }
        offset_46513 *= 2;
    }
    while (slt32(skip_waves_46514,
                 squot32(sext_i64_i32(segred_group_sizze_41402) +
                         wave_sizze_46501 - 1, wave_sizze_46501))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46513 = skip_waves_46514 * wave_sizze_46501;
        if (slt32(local_tid_46499 + offset_46513,
                  sext_i64_i32(segred_group_sizze_41402)) && ((local_tid_46499 -
                                                               squot32(local_tid_46499,
                                                                       wave_sizze_46501) *
                                                               wave_sizze_46501) ==
                                                              0 &&
                                                              (squot32(local_tid_46499,
                                                                       wave_sizze_46501) &
                                                               (2 *
                                                                skip_waves_46514 -
                                                                1)) == 0)) {
            // read array element
            {
                x_46510 = ((__local
                            int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499 +
                                                          offset_46513)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_46511 = smax32(x_46509, x_46510);
                
                x_46509 = defunc_1_op_res_46511;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499)] =
                    x_46509;
            }
        }
        skip_waves_46514 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_46499) == (int64_t) 0) {
            x_acc_46507 = x_46509;
        }
    }
    
    int32_t old_counter_46515;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_46499 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_46495)[sext_i32_i64(group_tid_46500) *
                                                  segred_group_sizze_41402] =
                x_acc_46507;
            mem_fence_global();
            old_counter_46515 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_46493)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_46503)[(int64_t) 0] =
                old_counter_46515 == num_groups_41404 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_46516;
    
    is_last_group_46516 = ((__local bool *) sync_arr_mem_46503)[(int64_t) 0];
    if (is_last_group_46516) {
        if (local_tid_46499 == 0) {
            old_counter_46515 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_46493)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_41404));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_46517 = sdiv_up64(num_groups_41404,
                                                      segred_group_sizze_41402);
            
            x_29564 = 0;
            for (int64_t i_46518 = 0; i_46518 < read_per_thread_46517;
                 i_46518++) {
                int64_t group_res_id_46519 = sext_i32_i64(local_tid_46499) *
                        read_per_thread_46517 + i_46518;
                int64_t index_of_group_res_46520 = group_res_id_46519;
                
                if (slt64(group_res_id_46519, num_groups_41404)) {
                    x_29565 = ((__global
                                int32_t *) group_res_arr_mem_46495)[index_of_group_res_46520 *
                                                                    segred_group_sizze_41402];
                    
                    int32_t defunc_1_op_res_29566;
                    
                    defunc_1_op_res_29566 = smax32(x_29564, x_29565);
                    x_29564 = defunc_1_op_res_29566;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499)] =
            x_29564;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_46521;
            int32_t skip_waves_46522;
            
            skip_waves_46522 = 1;
            
            int32_t x_46509;
            int32_t x_46510;
            
            offset_46521 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46499,
                          sext_i64_i32(segred_group_sizze_41402))) {
                    x_46509 = ((__local
                                int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499 +
                                                              offset_46521)];
                }
            }
            offset_46521 = 1;
            while (slt32(offset_46521, wave_sizze_46501)) {
                if (slt32(local_tid_46499 + offset_46521,
                          sext_i64_i32(segred_group_sizze_41402)) &&
                    ((local_tid_46499 - squot32(local_tid_46499,
                                                wave_sizze_46501) *
                      wave_sizze_46501) & (2 * offset_46521 - 1)) == 0) {
                    // read array element
                    {
                        x_46510 = ((volatile __local
                                    int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499 +
                                                                  offset_46521)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_46511 = smax32(x_46509,
                                                               x_46510);
                        
                        x_46509 = defunc_1_op_res_46511;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499)] =
                            x_46509;
                    }
                }
                offset_46521 *= 2;
            }
            while (slt32(skip_waves_46522,
                         squot32(sext_i64_i32(segred_group_sizze_41402) +
                                 wave_sizze_46501 - 1, wave_sizze_46501))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46521 = skip_waves_46522 * wave_sizze_46501;
                if (slt32(local_tid_46499 + offset_46521,
                          sext_i64_i32(segred_group_sizze_41402)) &&
                    ((local_tid_46499 - squot32(local_tid_46499,
                                                wave_sizze_46501) *
                      wave_sizze_46501) == 0 && (squot32(local_tid_46499,
                                                         wave_sizze_46501) &
                                                 (2 * skip_waves_46522 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46510 = ((__local
                                    int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499 +
                                                                  offset_46521)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_46511 = smax32(x_46509,
                                                               x_46510);
                        
                        x_46509 = defunc_1_op_res_46511;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_46505)[sext_i32_i64(local_tid_46499)] =
                            x_46509;
                    }
                }
                skip_waves_46522 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_46499 == 0) {
                    ((__global int32_t *) mem_45249)[(int64_t) 0] = x_46509;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41402
}
__kernel void mainzisegred_small_39115(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45763_backing_aligned_0,
                                       int64_t N_29165, int64_t m_29166,
                                       int64_t i32_res_29175,
                                       int64_t i32_res_29181,
                                       int64_t num_groups_39254,
                                       int64_t segment_sizze_nonzzero_45756,
                                       __global unsigned char *images_mem_44381,
                                       __global
                                       unsigned char *binop_p_mem_44390,
                                       __global unsigned char *mem_44531,
                                       __global unsigned char *mem_44536)
{
    #define segred_group_sizze_39253 (mainzisegred_group_sizze_39109)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45763_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45763_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45758;
    int32_t local_tid_45759;
    int64_t group_sizze_45762;
    int32_t wave_sizze_45761;
    int32_t group_tid_45760;
    
    global_tid_45758 = get_global_id(0);
    local_tid_45759 = get_local_id(0);
    group_sizze_45762 = get_local_size(0);
    wave_sizze_45761 = LOCKSTEP_WIDTH;
    group_tid_45760 = get_group_id(0);
    
    int32_t phys_tid_39115;
    
    phys_tid_39115 = global_tid_45758;
    
    __local char *red_arr_mem_45763;
    
    red_arr_mem_45763 = (__local char *) red_arr_mem_45763_backing_0;
    
    int32_t phys_group_id_45765;
    
    phys_group_id_45765 = get_group_id(0);
    for (int32_t i_45766 = 0; i_45766 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166 * i32_res_29181 *
                                          i32_res_29181,
                                          squot64(segred_group_sizze_39253,
                                                  segment_sizze_nonzzero_45756))) -
                   phys_group_id_45765, sext_i64_i32(num_groups_39254));
         i_45766++) {
        int32_t virt_group_id_45767 = phys_group_id_45765 + i_45766 *
                sext_i64_i32(num_groups_39254);
        int64_t gtid_39102 = squot64(squot64(sext_i32_i64(local_tid_45759),
                                             segment_sizze_nonzzero_45756) +
                                     sext_i32_i64(virt_group_id_45767) *
                                     squot64(segred_group_sizze_39253,
                                             segment_sizze_nonzzero_45756),
                                     i32_res_29181 * i32_res_29181);
        int64_t gtid_39103 = squot64(squot64(sext_i32_i64(local_tid_45759),
                                             segment_sizze_nonzzero_45756) +
                                     sext_i32_i64(virt_group_id_45767) *
                                     squot64(segred_group_sizze_39253,
                                             segment_sizze_nonzzero_45756) -
                                     squot64(squot64(sext_i32_i64(local_tid_45759),
                                                     segment_sizze_nonzzero_45756) +
                                             sext_i32_i64(virt_group_id_45767) *
                                             squot64(segred_group_sizze_39253,
                                                     segment_sizze_nonzzero_45756),
                                             i32_res_29181 * i32_res_29181) *
                                     (i32_res_29181 * i32_res_29181),
                                     i32_res_29181);
        int64_t gtid_39104 = squot64(sext_i32_i64(local_tid_45759),
                                     segment_sizze_nonzzero_45756) +
                sext_i32_i64(virt_group_id_45767) *
                squot64(segred_group_sizze_39253,
                        segment_sizze_nonzzero_45756) -
                squot64(squot64(sext_i32_i64(local_tid_45759),
                                segment_sizze_nonzzero_45756) +
                        sext_i32_i64(virt_group_id_45767) *
                        squot64(segred_group_sizze_39253,
                                segment_sizze_nonzzero_45756), i32_res_29181 *
                        i32_res_29181) * (i32_res_29181 * i32_res_29181) -
                squot64(squot64(sext_i32_i64(local_tid_45759),
                                segment_sizze_nonzzero_45756) +
                        sext_i32_i64(virt_group_id_45767) *
                        squot64(segred_group_sizze_39253,
                                segment_sizze_nonzzero_45756) -
                        squot64(squot64(sext_i32_i64(local_tid_45759),
                                        segment_sizze_nonzzero_45756) +
                                sext_i32_i64(virt_group_id_45767) *
                                squot64(segred_group_sizze_39253,
                                        segment_sizze_nonzzero_45756),
                                i32_res_29181 * i32_res_29181) *
                        (i32_res_29181 * i32_res_29181), i32_res_29181) *
                i32_res_29181;
        int64_t gtid_39114 = srem64(sext_i32_i64(local_tid_45759),
                                    i32_res_29175);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29175) && (((slt64(gtid_39102,
                                                              m_29166) &&
                                                        slt64(gtid_39103,
                                                              i32_res_29181)) &&
                                                       slt64(gtid_39104,
                                                             i32_res_29181)) &&
                                                      slt64(sext_i32_i64(local_tid_45759),
                                                            i32_res_29175 *
                                                            squot64(segred_group_sizze_39253,
                                                                    segment_sizze_nonzzero_45756)))) {
                float x_39263 = ((__global
                                  float *) images_mem_44381)[gtid_39102 *
                                                             N_29165 +
                                                             gtid_39114];
                float x_39264 = ((__global
                                  float *) binop_p_mem_44390)[gtid_39103 *
                                                              N_29165 +
                                                              gtid_39114];
                float x_39265 = ((__global float *) mem_44531)[gtid_39104 *
                                                               N_29165 +
                                                               gtid_39114];
                float x_39266 = x_39264 * x_39265;
                bool isnan_res_39267;
                
                isnan_res_39267 = futrts_isnan32(x_39263);
                
                float y_39268;
                
                if (isnan_res_39267) {
                    y_39268 = 0.0F;
                } else {
                    y_39268 = 1.0F;
                }
                
                float defunc_2_f_res_39269 = x_39266 * y_39268;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                        defunc_2_f_res_39269;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29175)) {
            // perform segmented scan to imitate reduction
            {
                float x_39257;
                float x_39258;
                float x_45768;
                float x_45769;
                bool ltid_in_bounds_45771;
                
                ltid_in_bounds_45771 = slt64(sext_i32_i64(local_tid_45759),
                                             i32_res_29175 *
                                             squot64(segred_group_sizze_39253,
                                                     segment_sizze_nonzzero_45756));
                
                int32_t skip_threads_45772;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45771) {
                        x_39258 = ((volatile __local
                                    float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)];
                        if ((local_tid_45759 - squot32(local_tid_45759, 32) *
                             32) == 0) {
                            x_39257 = x_39258;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45772 = 1;
                    while (slt32(skip_threads_45772, 32)) {
                        if (sle32(skip_threads_45772, local_tid_45759 -
                                  squot32(local_tid_45759, 32) * 32) &&
                            ltid_in_bounds_45771) {
                            // read operands
                            {
                                x_39257 = ((volatile __local
                                            float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759) -
                                                                        sext_i32_i64(skip_threads_45772)];
                            }
                            // perform operation
                            {
                                bool inactive_45773 =
                                     slt64(srem64(sext_i32_i64(local_tid_45759),
                                                  i32_res_29175),
                                           sext_i32_i64(local_tid_45759) -
                                           sext_i32_i64(local_tid_45759 -
                                           skip_threads_45772));
                                
                                if (inactive_45773) {
                                    x_39257 = x_39258;
                                }
                                if (!inactive_45773) {
                                    float defunc_1_op_res_39259 = x_39257 +
                                          x_39258;
                                    
                                    x_39257 = defunc_1_op_res_39259;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45761, skip_threads_45772)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45772, local_tid_45759 -
                                  squot32(local_tid_45759, 32) * 32) &&
                            ltid_in_bounds_45771) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                                    x_39257;
                                x_39258 = x_39257;
                            }
                        }
                        if (sle32(wave_sizze_45761, skip_threads_45772)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45772 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45759 - squot32(local_tid_45759, 32) * 32) ==
                        31 && ltid_in_bounds_45771) {
                        ((volatile __local
                          float *) red_arr_mem_45763)[sext_i32_i64(squot32(local_tid_45759,
                                                                           32))] =
                            x_39257;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45774;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45759, 32) == 0 &&
                            ltid_in_bounds_45771) {
                            x_45769 = ((volatile __local
                                        float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)];
                            if ((local_tid_45759 - squot32(local_tid_45759,
                                                           32) * 32) == 0) {
                                x_45768 = x_45769;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45774 = 1;
                        while (slt32(skip_threads_45774, 32)) {
                            if (sle32(skip_threads_45774, local_tid_45759 -
                                      squot32(local_tid_45759, 32) * 32) &&
                                (squot32(local_tid_45759, 32) == 0 &&
                                 ltid_in_bounds_45771)) {
                                // read operands
                                {
                                    x_45768 = ((volatile __local
                                                float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759) -
                                                                            sext_i32_i64(skip_threads_45774)];
                                }
                                // perform operation
                                {
                                    bool inactive_45775 =
                                         slt64(srem64(sext_i32_i64(local_tid_45759 *
                                                      32 + 32 - 1),
                                                      i32_res_29175),
                                               sext_i32_i64(local_tid_45759 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45759 -
                                                             skip_threads_45774) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45775) {
                                        x_45768 = x_45769;
                                    }
                                    if (!inactive_45775) {
                                        float defunc_1_op_res_45770 = x_45768 +
                                              x_45769;
                                        
                                        x_45768 = defunc_1_op_res_45770;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45761, skip_threads_45774)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45774, local_tid_45759 -
                                      squot32(local_tid_45759, 32) * 32) &&
                                (squot32(local_tid_45759, 32) == 0 &&
                                 ltid_in_bounds_45771)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                                        x_45768;
                                    x_45769 = x_45768;
                                }
                            }
                            if (sle32(wave_sizze_45761, skip_threads_45774)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45774 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45759, 32) == 0 ||
                          !ltid_in_bounds_45771)) {
                        // read operands
                        {
                            x_39258 = x_39257;
                            x_39257 = ((__local
                                        float *) red_arr_mem_45763)[sext_i32_i64(squot32(local_tid_45759,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45776 =
                                 slt64(srem64(sext_i32_i64(local_tid_45759),
                                              i32_res_29175),
                                       sext_i32_i64(local_tid_45759) -
                                       sext_i32_i64(squot32(local_tid_45759,
                                                            32) * 32 - 1));
                            
                            if (inactive_45776) {
                                x_39257 = x_39258;
                            }
                            if (!inactive_45776) {
                                float defunc_1_op_res_39259 = x_39257 + x_39258;
                                
                                x_39257 = defunc_1_op_res_39259;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                                x_39257;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45759, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45763)[sext_i32_i64(local_tid_45759)] =
                            x_39258;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45767) *
                      squot64(segred_group_sizze_39253,
                              segment_sizze_nonzzero_45756) +
                      sext_i32_i64(local_tid_45759), m_29166 * i32_res_29181 *
                      i32_res_29181) && slt64(sext_i32_i64(local_tid_45759),
                                              squot64(segred_group_sizze_39253,
                                                      segment_sizze_nonzzero_45756))) {
                ((__global
                  float *) mem_44536)[squot64(sext_i32_i64(virt_group_id_45767) *
                                              squot64(segred_group_sizze_39253,
                                                      segment_sizze_nonzzero_45756) +
                                              sext_i32_i64(local_tid_45759),
                                              i32_res_29181 * i32_res_29181) *
                                      (i32_res_29181 * i32_res_29181) +
                                      squot64(sext_i32_i64(virt_group_id_45767) *
                                              squot64(segred_group_sizze_39253,
                                                      segment_sizze_nonzzero_45756) +
                                              sext_i32_i64(local_tid_45759) -
                                              squot64(sext_i32_i64(virt_group_id_45767) *
                                                      squot64(segred_group_sizze_39253,
                                                              segment_sizze_nonzzero_45756) +
                                                      sext_i32_i64(local_tid_45759),
                                                      i32_res_29181 *
                                                      i32_res_29181) *
                                              (i32_res_29181 * i32_res_29181),
                                              i32_res_29181) * i32_res_29181 +
                                      (sext_i32_i64(virt_group_id_45767) *
                                       squot64(segred_group_sizze_39253,
                                               segment_sizze_nonzzero_45756) +
                                       sext_i32_i64(local_tid_45759) -
                                       squot64(sext_i32_i64(virt_group_id_45767) *
                                               squot64(segred_group_sizze_39253,
                                                       segment_sizze_nonzzero_45756) +
                                               sext_i32_i64(local_tid_45759),
                                               i32_res_29181 * i32_res_29181) *
                                       (i32_res_29181 * i32_res_29181) -
                                       squot64(sext_i32_i64(virt_group_id_45767) *
                                               squot64(segred_group_sizze_39253,
                                                       segment_sizze_nonzzero_45756) +
                                               sext_i32_i64(local_tid_45759) -
                                               squot64(sext_i32_i64(virt_group_id_45767) *
                                                       squot64(segred_group_sizze_39253,
                                                               segment_sizze_nonzzero_45756) +
                                                       sext_i32_i64(local_tid_45759),
                                                       i32_res_29181 *
                                                       i32_res_29181) *
                                               (i32_res_29181 * i32_res_29181),
                                               i32_res_29181) *
                                       i32_res_29181)] = ((__local
                                                           float *) red_arr_mem_45763)[(sext_i32_i64(local_tid_45759) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_45756 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39253
}
__kernel void mainzisegred_small_40466(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45960_backing_aligned_0,
                                       int64_t N_29165, int64_t m_29166,
                                       int64_t i32_res_29175,
                                       int64_t i32_res_29181,
                                       int64_t num_groups_40519,
                                       int64_t segment_sizze_nonzzero_45953,
                                       __global unsigned char *images_mem_44381,
                                       __global
                                       unsigned char *binop_p_mem_44390,
                                       __global unsigned char *mem_44844)
{
    #define segred_group_sizze_40518 (mainzisegred_group_sizze_40460)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45960_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45960_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45955;
    int32_t local_tid_45956;
    int64_t group_sizze_45959;
    int32_t wave_sizze_45958;
    int32_t group_tid_45957;
    
    global_tid_45955 = get_global_id(0);
    local_tid_45956 = get_local_id(0);
    group_sizze_45959 = get_local_size(0);
    wave_sizze_45958 = LOCKSTEP_WIDTH;
    group_tid_45957 = get_group_id(0);
    
    int32_t phys_tid_40466;
    
    phys_tid_40466 = global_tid_45955;
    
    __local char *red_arr_mem_45960;
    
    red_arr_mem_45960 = (__local char *) red_arr_mem_45960_backing_0;
    
    int32_t phys_group_id_45962;
    
    phys_group_id_45962 = get_group_id(0);
    for (int32_t i_45963 = 0; i_45963 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166 * i32_res_29181,
                                          squot64(segred_group_sizze_40518,
                                                  segment_sizze_nonzzero_45953))) -
                   phys_group_id_45962, sext_i64_i32(num_groups_40519));
         i_45963++) {
        int32_t virt_group_id_45964 = phys_group_id_45962 + i_45963 *
                sext_i64_i32(num_groups_40519);
        int64_t gtid_40455 = squot64(squot64(sext_i32_i64(local_tid_45956),
                                             segment_sizze_nonzzero_45953) +
                                     sext_i32_i64(virt_group_id_45964) *
                                     squot64(segred_group_sizze_40518,
                                             segment_sizze_nonzzero_45953),
                                     i32_res_29181);
        int64_t gtid_40456 = squot64(sext_i32_i64(local_tid_45956),
                                     segment_sizze_nonzzero_45953) +
                sext_i32_i64(virt_group_id_45964) *
                squot64(segred_group_sizze_40518,
                        segment_sizze_nonzzero_45953) -
                squot64(squot64(sext_i32_i64(local_tid_45956),
                                segment_sizze_nonzzero_45953) +
                        sext_i32_i64(virt_group_id_45964) *
                        squot64(segred_group_sizze_40518,
                                segment_sizze_nonzzero_45953), i32_res_29181) *
                i32_res_29181;
        int64_t gtid_40465 = srem64(sext_i32_i64(local_tid_45956),
                                    i32_res_29175);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29175) && ((slt64(gtid_40455,
                                                             m_29166) &&
                                                       slt64(gtid_40456,
                                                             i32_res_29181)) &&
                                                      slt64(sext_i32_i64(local_tid_45956),
                                                            i32_res_29175 *
                                                            squot64(segred_group_sizze_40518,
                                                                    segment_sizze_nonzzero_45953)))) {
                float x_40528 = ((__global
                                  float *) images_mem_44381)[gtid_40455 *
                                                             N_29165 +
                                                             gtid_40465];
                bool isnan_res_40529;
                
                isnan_res_40529 = futrts_isnan32(x_40528);
                
                float defunc_1_f_res_40530;
                
                if (isnan_res_40529) {
                    defunc_1_f_res_40530 = 0.0F;
                } else {
                    float x_40527 = ((__global
                                      float *) binop_p_mem_44390)[gtid_40456 *
                                                                  N_29165 +
                                                                  gtid_40465];
                    float defunc_1_f_res_f_res_40531 = x_40527 * x_40528;
                    
                    defunc_1_f_res_40530 = defunc_1_f_res_f_res_40531;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)] =
                        defunc_1_f_res_40530;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29175)) {
            // perform segmented scan to imitate reduction
            {
                float x_40522;
                float x_40523;
                float x_45965;
                float x_45966;
                bool ltid_in_bounds_45968;
                
                ltid_in_bounds_45968 = slt64(sext_i32_i64(local_tid_45956),
                                             i32_res_29175 *
                                             squot64(segred_group_sizze_40518,
                                                     segment_sizze_nonzzero_45953));
                
                int32_t skip_threads_45969;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45968) {
                        x_40523 = ((volatile __local
                                    float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)];
                        if ((local_tid_45956 - squot32(local_tid_45956, 32) *
                             32) == 0) {
                            x_40522 = x_40523;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45969 = 1;
                    while (slt32(skip_threads_45969, 32)) {
                        if (sle32(skip_threads_45969, local_tid_45956 -
                                  squot32(local_tid_45956, 32) * 32) &&
                            ltid_in_bounds_45968) {
                            // read operands
                            {
                                x_40522 = ((volatile __local
                                            float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956) -
                                                                        sext_i32_i64(skip_threads_45969)];
                            }
                            // perform operation
                            {
                                bool inactive_45970 =
                                     slt64(srem64(sext_i32_i64(local_tid_45956),
                                                  i32_res_29175),
                                           sext_i32_i64(local_tid_45956) -
                                           sext_i32_i64(local_tid_45956 -
                                           skip_threads_45969));
                                
                                if (inactive_45970) {
                                    x_40522 = x_40523;
                                }
                                if (!inactive_45970) {
                                    float defunc_1_op_res_40524 = x_40522 +
                                          x_40523;
                                    
                                    x_40522 = defunc_1_op_res_40524;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45958, skip_threads_45969)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45969, local_tid_45956 -
                                  squot32(local_tid_45956, 32) * 32) &&
                            ltid_in_bounds_45968) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)] =
                                    x_40522;
                                x_40523 = x_40522;
                            }
                        }
                        if (sle32(wave_sizze_45958, skip_threads_45969)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45969 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45956 - squot32(local_tid_45956, 32) * 32) ==
                        31 && ltid_in_bounds_45968) {
                        ((volatile __local
                          float *) red_arr_mem_45960)[sext_i32_i64(squot32(local_tid_45956,
                                                                           32))] =
                            x_40522;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45971;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45956, 32) == 0 &&
                            ltid_in_bounds_45968) {
                            x_45966 = ((volatile __local
                                        float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)];
                            if ((local_tid_45956 - squot32(local_tid_45956,
                                                           32) * 32) == 0) {
                                x_45965 = x_45966;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45971 = 1;
                        while (slt32(skip_threads_45971, 32)) {
                            if (sle32(skip_threads_45971, local_tid_45956 -
                                      squot32(local_tid_45956, 32) * 32) &&
                                (squot32(local_tid_45956, 32) == 0 &&
                                 ltid_in_bounds_45968)) {
                                // read operands
                                {
                                    x_45965 = ((volatile __local
                                                float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956) -
                                                                            sext_i32_i64(skip_threads_45971)];
                                }
                                // perform operation
                                {
                                    bool inactive_45972 =
                                         slt64(srem64(sext_i32_i64(local_tid_45956 *
                                                      32 + 32 - 1),
                                                      i32_res_29175),
                                               sext_i32_i64(local_tid_45956 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45956 -
                                                             skip_threads_45971) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45972) {
                                        x_45965 = x_45966;
                                    }
                                    if (!inactive_45972) {
                                        float defunc_1_op_res_45967 = x_45965 +
                                              x_45966;
                                        
                                        x_45965 = defunc_1_op_res_45967;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45958, skip_threads_45971)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45971, local_tid_45956 -
                                      squot32(local_tid_45956, 32) * 32) &&
                                (squot32(local_tid_45956, 32) == 0 &&
                                 ltid_in_bounds_45968)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)] =
                                        x_45965;
                                    x_45966 = x_45965;
                                }
                            }
                            if (sle32(wave_sizze_45958, skip_threads_45971)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45971 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45956, 32) == 0 ||
                          !ltid_in_bounds_45968)) {
                        // read operands
                        {
                            x_40523 = x_40522;
                            x_40522 = ((__local
                                        float *) red_arr_mem_45960)[sext_i32_i64(squot32(local_tid_45956,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45973 =
                                 slt64(srem64(sext_i32_i64(local_tid_45956),
                                              i32_res_29175),
                                       sext_i32_i64(local_tid_45956) -
                                       sext_i32_i64(squot32(local_tid_45956,
                                                            32) * 32 - 1));
                            
                            if (inactive_45973) {
                                x_40522 = x_40523;
                            }
                            if (!inactive_45973) {
                                float defunc_1_op_res_40524 = x_40522 + x_40523;
                                
                                x_40522 = defunc_1_op_res_40524;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)] =
                                x_40522;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45956, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45960)[sext_i32_i64(local_tid_45956)] =
                            x_40523;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45964) *
                      squot64(segred_group_sizze_40518,
                              segment_sizze_nonzzero_45953) +
                      sext_i32_i64(local_tid_45956), m_29166 * i32_res_29181) &&
                slt64(sext_i32_i64(local_tid_45956),
                      squot64(segred_group_sizze_40518,
                              segment_sizze_nonzzero_45953))) {
                ((__global
                  float *) mem_44844)[squot64(sext_i32_i64(virt_group_id_45964) *
                                              squot64(segred_group_sizze_40518,
                                                      segment_sizze_nonzzero_45953) +
                                              sext_i32_i64(local_tid_45956),
                                              i32_res_29181) * i32_res_29181 +
                                      (sext_i32_i64(virt_group_id_45964) *
                                       squot64(segred_group_sizze_40518,
                                               segment_sizze_nonzzero_45953) +
                                       sext_i32_i64(local_tid_45956) -
                                       squot64(sext_i32_i64(virt_group_id_45964) *
                                               squot64(segred_group_sizze_40518,
                                                       segment_sizze_nonzzero_45953) +
                                               sext_i32_i64(local_tid_45956),
                                               i32_res_29181) *
                                       i32_res_29181)] = ((__local
                                                           float *) red_arr_mem_45960)[(sext_i32_i64(local_tid_45956) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_45953 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40518
}
__kernel void mainzisegred_small_40603(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_46048_backing_aligned_0,
                                       int64_t m_29166, int64_t i32_res_29181,
                                       int64_t num_groups_40652,
                                       int64_t segment_sizze_nonzzero_46041,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44629,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44850,
                                       __global unsigned char *mem_44910)
{
    #define segred_group_sizze_40651 (mainzisegred_group_sizze_40597)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46048_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46048_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46043;
    int32_t local_tid_46044;
    int64_t group_sizze_46047;
    int32_t wave_sizze_46046;
    int32_t group_tid_46045;
    
    global_tid_46043 = get_global_id(0);
    local_tid_46044 = get_local_id(0);
    group_sizze_46047 = get_local_size(0);
    wave_sizze_46046 = LOCKSTEP_WIDTH;
    group_tid_46045 = get_group_id(0);
    
    int32_t phys_tid_40603;
    
    phys_tid_40603 = global_tid_46043;
    
    __local char *red_arr_mem_46048;
    
    red_arr_mem_46048 = (__local char *) red_arr_mem_46048_backing_0;
    
    int32_t phys_group_id_46050;
    
    phys_group_id_46050 = get_group_id(0);
    for (int32_t i_46051 = 0; i_46051 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166 * i32_res_29181,
                                          squot64(segred_group_sizze_40651,
                                                  segment_sizze_nonzzero_46041))) -
                   phys_group_id_46050, sext_i64_i32(num_groups_40652));
         i_46051++) {
        int32_t virt_group_id_46052 = phys_group_id_46050 + i_46051 *
                sext_i64_i32(num_groups_40652);
        int64_t gtid_40592 = squot64(squot64(sext_i32_i64(local_tid_46044),
                                             segment_sizze_nonzzero_46041) +
                                     sext_i32_i64(virt_group_id_46052) *
                                     squot64(segred_group_sizze_40651,
                                             segment_sizze_nonzzero_46041),
                                     i32_res_29181);
        int64_t gtid_40593 = squot64(sext_i32_i64(local_tid_46044),
                                     segment_sizze_nonzzero_46041) +
                sext_i32_i64(virt_group_id_46052) *
                squot64(segred_group_sizze_40651,
                        segment_sizze_nonzzero_46041) -
                squot64(squot64(sext_i32_i64(local_tid_46044),
                                segment_sizze_nonzzero_46041) +
                        sext_i32_i64(virt_group_id_46052) *
                        squot64(segred_group_sizze_40651,
                                segment_sizze_nonzzero_46041), i32_res_29181) *
                i32_res_29181;
        int64_t gtid_40602 = srem64(sext_i32_i64(local_tid_46044),
                                    i32_res_29181);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29181) && ((slt64(gtid_40592,
                                                             m_29166) &&
                                                       slt64(gtid_40593,
                                                             i32_res_29181)) &&
                                                      slt64(sext_i32_i64(local_tid_46044),
                                                            i32_res_29181 *
                                                            squot64(segred_group_sizze_40651,
                                                                    segment_sizze_nonzzero_46041)))) {
                float x_40661 = ((__global
                                  float *) defunc_3_map_res_mem_44850)[gtid_40592 *
                                                                       i32_res_29181 +
                                                                       gtid_40602];
                float x_40662 = ((__global
                                  float *) defunc_3_map_res_mem_44629)[gtid_40592 *
                                                                       (i32_res_29181 *
                                                                        i32_res_29181) +
                                                                       gtid_40593 *
                                                                       i32_res_29181 +
                                                                       gtid_40602];
                float defunc_1_f_res_40663 = x_40661 * x_40662;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)] =
                        defunc_1_f_res_40663;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29181)) {
            // perform segmented scan to imitate reduction
            {
                float x_40655;
                float x_40656;
                float x_46053;
                float x_46054;
                bool ltid_in_bounds_46056;
                
                ltid_in_bounds_46056 = slt64(sext_i32_i64(local_tid_46044),
                                             i32_res_29181 *
                                             squot64(segred_group_sizze_40651,
                                                     segment_sizze_nonzzero_46041));
                
                int32_t skip_threads_46057;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46056) {
                        x_40656 = ((volatile __local
                                    float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)];
                        if ((local_tid_46044 - squot32(local_tid_46044, 32) *
                             32) == 0) {
                            x_40655 = x_40656;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46057 = 1;
                    while (slt32(skip_threads_46057, 32)) {
                        if (sle32(skip_threads_46057, local_tid_46044 -
                                  squot32(local_tid_46044, 32) * 32) &&
                            ltid_in_bounds_46056) {
                            // read operands
                            {
                                x_40655 = ((volatile __local
                                            float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044) -
                                                                        sext_i32_i64(skip_threads_46057)];
                            }
                            // perform operation
                            {
                                bool inactive_46058 =
                                     slt64(srem64(sext_i32_i64(local_tid_46044),
                                                  i32_res_29181),
                                           sext_i32_i64(local_tid_46044) -
                                           sext_i32_i64(local_tid_46044 -
                                           skip_threads_46057));
                                
                                if (inactive_46058) {
                                    x_40655 = x_40656;
                                }
                                if (!inactive_46058) {
                                    float defunc_1_op_res_40657 = x_40655 +
                                          x_40656;
                                    
                                    x_40655 = defunc_1_op_res_40657;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46046, skip_threads_46057)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46057, local_tid_46044 -
                                  squot32(local_tid_46044, 32) * 32) &&
                            ltid_in_bounds_46056) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)] =
                                    x_40655;
                                x_40656 = x_40655;
                            }
                        }
                        if (sle32(wave_sizze_46046, skip_threads_46057)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46057 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46044 - squot32(local_tid_46044, 32) * 32) ==
                        31 && ltid_in_bounds_46056) {
                        ((volatile __local
                          float *) red_arr_mem_46048)[sext_i32_i64(squot32(local_tid_46044,
                                                                           32))] =
                            x_40655;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46059;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46044, 32) == 0 &&
                            ltid_in_bounds_46056) {
                            x_46054 = ((volatile __local
                                        float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)];
                            if ((local_tid_46044 - squot32(local_tid_46044,
                                                           32) * 32) == 0) {
                                x_46053 = x_46054;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46059 = 1;
                        while (slt32(skip_threads_46059, 32)) {
                            if (sle32(skip_threads_46059, local_tid_46044 -
                                      squot32(local_tid_46044, 32) * 32) &&
                                (squot32(local_tid_46044, 32) == 0 &&
                                 ltid_in_bounds_46056)) {
                                // read operands
                                {
                                    x_46053 = ((volatile __local
                                                float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044) -
                                                                            sext_i32_i64(skip_threads_46059)];
                                }
                                // perform operation
                                {
                                    bool inactive_46060 =
                                         slt64(srem64(sext_i32_i64(local_tid_46044 *
                                                      32 + 32 - 1),
                                                      i32_res_29181),
                                               sext_i32_i64(local_tid_46044 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46044 -
                                                             skip_threads_46059) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46060) {
                                        x_46053 = x_46054;
                                    }
                                    if (!inactive_46060) {
                                        float defunc_1_op_res_46055 = x_46053 +
                                              x_46054;
                                        
                                        x_46053 = defunc_1_op_res_46055;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46046, skip_threads_46059)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46059, local_tid_46044 -
                                      squot32(local_tid_46044, 32) * 32) &&
                                (squot32(local_tid_46044, 32) == 0 &&
                                 ltid_in_bounds_46056)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)] =
                                        x_46053;
                                    x_46054 = x_46053;
                                }
                            }
                            if (sle32(wave_sizze_46046, skip_threads_46059)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46059 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46044, 32) == 0 ||
                          !ltid_in_bounds_46056)) {
                        // read operands
                        {
                            x_40656 = x_40655;
                            x_40655 = ((__local
                                        float *) red_arr_mem_46048)[sext_i32_i64(squot32(local_tid_46044,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46061 =
                                 slt64(srem64(sext_i32_i64(local_tid_46044),
                                              i32_res_29181),
                                       sext_i32_i64(local_tid_46044) -
                                       sext_i32_i64(squot32(local_tid_46044,
                                                            32) * 32 - 1));
                            
                            if (inactive_46061) {
                                x_40655 = x_40656;
                            }
                            if (!inactive_46061) {
                                float defunc_1_op_res_40657 = x_40655 + x_40656;
                                
                                x_40655 = defunc_1_op_res_40657;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)] =
                                x_40655;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46044, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46048)[sext_i32_i64(local_tid_46044)] =
                            x_40656;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46052) *
                      squot64(segred_group_sizze_40651,
                              segment_sizze_nonzzero_46041) +
                      sext_i32_i64(local_tid_46044), m_29166 * i32_res_29181) &&
                slt64(sext_i32_i64(local_tid_46044),
                      squot64(segred_group_sizze_40651,
                              segment_sizze_nonzzero_46041))) {
                ((__global
                  float *) mem_44910)[squot64(sext_i32_i64(virt_group_id_46052) *
                                              squot64(segred_group_sizze_40651,
                                                      segment_sizze_nonzzero_46041) +
                                              sext_i32_i64(local_tid_46044),
                                              i32_res_29181) * i32_res_29181 +
                                      (sext_i32_i64(virt_group_id_46052) *
                                       squot64(segred_group_sizze_40651,
                                               segment_sizze_nonzzero_46041) +
                                       sext_i32_i64(local_tid_46044) -
                                       squot64(sext_i32_i64(virt_group_id_46052) *
                                               squot64(segred_group_sizze_40651,
                                                       segment_sizze_nonzzero_46041) +
                                               sext_i32_i64(local_tid_46044),
                                               i32_res_29181) *
                                       i32_res_29181)] = ((__local
                                                           float *) red_arr_mem_46048)[(sext_i32_i64(local_tid_46044) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_46041 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40651
}
__kernel void mainzisegred_small_40733(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_46180_backing_aligned_0,
                                       int64_t N_29165, int64_t m_29166,
                                       int64_t i32_res_29181,
                                       int64_t num_groups_40780,
                                       int64_t segment_sizze_nonzzero_46173,
                                       __global unsigned char *mem_44397,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_44916,
                                       __global unsigned char *mem_45134)
{
    #define segred_group_sizze_40779 (mainzisegred_group_sizze_40727)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46180_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46180_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46175;
    int32_t local_tid_46176;
    int64_t group_sizze_46179;
    int32_t wave_sizze_46178;
    int32_t group_tid_46177;
    
    global_tid_46175 = get_global_id(0);
    local_tid_46176 = get_local_id(0);
    group_sizze_46179 = get_local_size(0);
    wave_sizze_46178 = LOCKSTEP_WIDTH;
    group_tid_46177 = get_group_id(0);
    
    int32_t phys_tid_40733;
    
    phys_tid_40733 = global_tid_46175;
    
    __local char *red_arr_mem_46180;
    
    red_arr_mem_46180 = (__local char *) red_arr_mem_46180_backing_0;
    
    int32_t phys_group_id_46182;
    
    phys_group_id_46182 = get_group_id(0);
    for (int32_t i_46183 = 0; i_46183 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166 * N_29165,
                                          squot64(segred_group_sizze_40779,
                                                  segment_sizze_nonzzero_46173))) -
                   phys_group_id_46182, sext_i64_i32(num_groups_40780));
         i_46183++) {
        int32_t virt_group_id_46184 = phys_group_id_46182 + i_46183 *
                sext_i64_i32(num_groups_40780);
        int64_t gtid_40722 = squot64(squot64(sext_i32_i64(local_tid_46176),
                                             segment_sizze_nonzzero_46173) +
                                     sext_i32_i64(virt_group_id_46184) *
                                     squot64(segred_group_sizze_40779,
                                             segment_sizze_nonzzero_46173),
                                     N_29165);
        int64_t gtid_40723 = squot64(sext_i32_i64(local_tid_46176),
                                     segment_sizze_nonzzero_46173) +
                sext_i32_i64(virt_group_id_46184) *
                squot64(segred_group_sizze_40779,
                        segment_sizze_nonzzero_46173) -
                squot64(squot64(sext_i32_i64(local_tid_46176),
                                segment_sizze_nonzzero_46173) +
                        sext_i32_i64(virt_group_id_46184) *
                        squot64(segred_group_sizze_40779,
                                segment_sizze_nonzzero_46173), N_29165) *
                N_29165;
        int64_t gtid_40732 = srem64(sext_i32_i64(local_tid_46176),
                                    i32_res_29181);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29181) && ((slt64(gtid_40722,
                                                             m_29166) &&
                                                       slt64(gtid_40723,
                                                             N_29165)) &&
                                                      slt64(sext_i32_i64(local_tid_46176),
                                                            i32_res_29181 *
                                                            squot64(segred_group_sizze_40779,
                                                                    segment_sizze_nonzzero_46173)))) {
                float x_40788 = ((__global
                                  float *) defunc_4_map_res_mem_44916)[gtid_40722 *
                                                                       i32_res_29181 +
                                                                       gtid_40732];
                float x_40789 = ((__global float *) mem_44397)[gtid_40723 *
                                                               i32_res_29181 +
                                                               gtid_40732];
                float defunc_1_f_res_40790 = x_40788 * x_40789;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)] =
                        defunc_1_f_res_40790;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29181)) {
            // perform segmented scan to imitate reduction
            {
                float x_40783;
                float x_40784;
                float x_46185;
                float x_46186;
                bool ltid_in_bounds_46188;
                
                ltid_in_bounds_46188 = slt64(sext_i32_i64(local_tid_46176),
                                             i32_res_29181 *
                                             squot64(segred_group_sizze_40779,
                                                     segment_sizze_nonzzero_46173));
                
                int32_t skip_threads_46189;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46188) {
                        x_40784 = ((volatile __local
                                    float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)];
                        if ((local_tid_46176 - squot32(local_tid_46176, 32) *
                             32) == 0) {
                            x_40783 = x_40784;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46189 = 1;
                    while (slt32(skip_threads_46189, 32)) {
                        if (sle32(skip_threads_46189, local_tid_46176 -
                                  squot32(local_tid_46176, 32) * 32) &&
                            ltid_in_bounds_46188) {
                            // read operands
                            {
                                x_40783 = ((volatile __local
                                            float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176) -
                                                                        sext_i32_i64(skip_threads_46189)];
                            }
                            // perform operation
                            {
                                bool inactive_46190 =
                                     slt64(srem64(sext_i32_i64(local_tid_46176),
                                                  i32_res_29181),
                                           sext_i32_i64(local_tid_46176) -
                                           sext_i32_i64(local_tid_46176 -
                                           skip_threads_46189));
                                
                                if (inactive_46190) {
                                    x_40783 = x_40784;
                                }
                                if (!inactive_46190) {
                                    float defunc_1_op_res_40785 = x_40783 +
                                          x_40784;
                                    
                                    x_40783 = defunc_1_op_res_40785;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46178, skip_threads_46189)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46189, local_tid_46176 -
                                  squot32(local_tid_46176, 32) * 32) &&
                            ltid_in_bounds_46188) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)] =
                                    x_40783;
                                x_40784 = x_40783;
                            }
                        }
                        if (sle32(wave_sizze_46178, skip_threads_46189)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46189 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46176 - squot32(local_tid_46176, 32) * 32) ==
                        31 && ltid_in_bounds_46188) {
                        ((volatile __local
                          float *) red_arr_mem_46180)[sext_i32_i64(squot32(local_tid_46176,
                                                                           32))] =
                            x_40783;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46191;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46176, 32) == 0 &&
                            ltid_in_bounds_46188) {
                            x_46186 = ((volatile __local
                                        float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)];
                            if ((local_tid_46176 - squot32(local_tid_46176,
                                                           32) * 32) == 0) {
                                x_46185 = x_46186;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46191 = 1;
                        while (slt32(skip_threads_46191, 32)) {
                            if (sle32(skip_threads_46191, local_tid_46176 -
                                      squot32(local_tid_46176, 32) * 32) &&
                                (squot32(local_tid_46176, 32) == 0 &&
                                 ltid_in_bounds_46188)) {
                                // read operands
                                {
                                    x_46185 = ((volatile __local
                                                float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176) -
                                                                            sext_i32_i64(skip_threads_46191)];
                                }
                                // perform operation
                                {
                                    bool inactive_46192 =
                                         slt64(srem64(sext_i32_i64(local_tid_46176 *
                                                      32 + 32 - 1),
                                                      i32_res_29181),
                                               sext_i32_i64(local_tid_46176 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46176 -
                                                             skip_threads_46191) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46192) {
                                        x_46185 = x_46186;
                                    }
                                    if (!inactive_46192) {
                                        float defunc_1_op_res_46187 = x_46185 +
                                              x_46186;
                                        
                                        x_46185 = defunc_1_op_res_46187;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46178, skip_threads_46191)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46191, local_tid_46176 -
                                      squot32(local_tid_46176, 32) * 32) &&
                                (squot32(local_tid_46176, 32) == 0 &&
                                 ltid_in_bounds_46188)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)] =
                                        x_46185;
                                    x_46186 = x_46185;
                                }
                            }
                            if (sle32(wave_sizze_46178, skip_threads_46191)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46191 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46176, 32) == 0 ||
                          !ltid_in_bounds_46188)) {
                        // read operands
                        {
                            x_40784 = x_40783;
                            x_40783 = ((__local
                                        float *) red_arr_mem_46180)[sext_i32_i64(squot32(local_tid_46176,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46193 =
                                 slt64(srem64(sext_i32_i64(local_tid_46176),
                                              i32_res_29181),
                                       sext_i32_i64(local_tid_46176) -
                                       sext_i32_i64(squot32(local_tid_46176,
                                                            32) * 32 - 1));
                            
                            if (inactive_46193) {
                                x_40783 = x_40784;
                            }
                            if (!inactive_46193) {
                                float defunc_1_op_res_40785 = x_40783 + x_40784;
                                
                                x_40783 = defunc_1_op_res_40785;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)] =
                                x_40783;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46176, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46180)[sext_i32_i64(local_tid_46176)] =
                            x_40784;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46184) *
                      squot64(segred_group_sizze_40779,
                              segment_sizze_nonzzero_46173) +
                      sext_i32_i64(local_tid_46176), m_29166 * N_29165) &&
                slt64(sext_i32_i64(local_tid_46176),
                      squot64(segred_group_sizze_40779,
                              segment_sizze_nonzzero_46173))) {
                ((__global
                  float *) mem_45134)[squot64(sext_i32_i64(virt_group_id_46184) *
                                              squot64(segred_group_sizze_40779,
                                                      segment_sizze_nonzzero_46173) +
                                              sext_i32_i64(local_tid_46176),
                                              N_29165) * N_29165 +
                                      (sext_i32_i64(virt_group_id_46184) *
                                       squot64(segred_group_sizze_40779,
                                               segment_sizze_nonzzero_46173) +
                                       sext_i32_i64(local_tid_46176) -
                                       squot64(sext_i32_i64(virt_group_id_46184) *
                                               squot64(segred_group_sizze_40779,
                                                       segment_sizze_nonzzero_46173) +
                                               sext_i32_i64(local_tid_46176),
                                               N_29165) * N_29165)] = ((__local
                                                                        float *) red_arr_mem_46180)[(sext_i32_i64(local_tid_46176) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_46173 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40779
}
__kernel void mainzisegred_small_41311(__global int *global_failure,
                                       int failure_is_an_option, __global
                                       int64_t *global_failure_args,
                                       __local volatile
                                       int64_t *red_arr_mem_46432_backing_aligned_0,
                                       int64_t N_29165, int64_t m_29166,
                                       int64_t i32_res_29175,
                                       int64_t num_groups_41362,
                                       int64_t segment_sizze_nonzzero_46425,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_45178,
                                       __global unsigned char *mem_45232,
                                       __global unsigned char *mem_45235)
{
    #define segred_group_sizze_41361 (mainzisegred_group_sizze_41305)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46432_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46432_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46427;
    int32_t local_tid_46428;
    int64_t group_sizze_46431;
    int32_t wave_sizze_46430;
    int32_t group_tid_46429;
    
    global_tid_46427 = get_global_id(0);
    local_tid_46428 = get_local_id(0);
    group_sizze_46431 = get_local_size(0);
    wave_sizze_46430 = LOCKSTEP_WIDTH;
    group_tid_46429 = get_group_id(0);
    
    int32_t phys_tid_41311;
    
    phys_tid_41311 = global_tid_46427;
    
    __local char *red_arr_mem_46432;
    
    red_arr_mem_46432 = (__local char *) red_arr_mem_46432_backing_0;
    
    int32_t phys_group_id_46434;
    
    phys_group_id_46434 = get_group_id(0);
    for (int32_t i_46435 = 0; i_46435 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166,
                                          squot64(segred_group_sizze_41361,
                                                  segment_sizze_nonzzero_46425))) -
                   phys_group_id_46434, sext_i64_i32(num_groups_41362));
         i_46435++) {
        int32_t virt_group_id_46436 = phys_group_id_46434 + i_46435 *
                sext_i64_i32(num_groups_41362);
        int64_t gtid_41302 = squot64(sext_i32_i64(local_tid_46428),
                                     segment_sizze_nonzzero_46425) +
                sext_i32_i64(virt_group_id_46436) *
                squot64(segred_group_sizze_41361, segment_sizze_nonzzero_46425);
        int64_t gtid_41310 = srem64(sext_i32_i64(local_tid_46428),
                                    i32_res_29175);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29175) && (slt64(gtid_41302,
                                                            m_29166) &&
                                                      slt64(sext_i32_i64(local_tid_46428),
                                                            i32_res_29175 *
                                                            squot64(segred_group_sizze_41361,
                                                                    segment_sizze_nonzzero_46425)))) {
                int32_t defunc_0_f_res_41369 = ((__global
                                                 int32_t *) mem_45232)[gtid_41302];
                int32_t index_primexp_42385 = sext_i64_i32(gtid_41310);
                bool cond_41371 = slt32(index_primexp_42385,
                                        defunc_0_f_res_41369);
                float defunc_0_f_res_41372;
                
                if (cond_41371) {
                    int64_t i_41373 = sext_i32_i64(index_primexp_42385);
                    bool x_41374 = sle64((int64_t) 0, i_41373);
                    bool y_41375 = slt64(i_41373, N_29165);
                    bool bounds_check_41376 = x_41374 && y_41375;
                    bool index_certs_41377;
                    
                    if (!bounds_check_41376) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_41373;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_41378 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_41302 *
                                                                                              N_29165 +
                                                                                              i_41373];
                    
                    defunc_0_f_res_41372 = defunc_0_f_res_t_res_41378;
                } else {
                    defunc_0_f_res_41372 = 0.0F;
                }
                
                float defunc_0_f_res_41379 = defunc_0_f_res_41372 *
                      defunc_0_f_res_41372;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)] =
                        defunc_0_f_res_41379;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)] =
                    0.0F;
            }
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29175)) {
            // perform segmented scan to imitate reduction
            {
                float x_41365;
                float x_41366;
                float x_46437;
                float x_46438;
                bool ltid_in_bounds_46440;
                
                ltid_in_bounds_46440 = slt64(sext_i32_i64(local_tid_46428),
                                             i32_res_29175 *
                                             squot64(segred_group_sizze_41361,
                                                     segment_sizze_nonzzero_46425));
                
                int32_t skip_threads_46441;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46440) {
                        x_41366 = ((volatile __local
                                    float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)];
                        if ((local_tid_46428 - squot32(local_tid_46428, 32) *
                             32) == 0) {
                            x_41365 = x_41366;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46441 = 1;
                    while (slt32(skip_threads_46441, 32)) {
                        if (sle32(skip_threads_46441, local_tid_46428 -
                                  squot32(local_tid_46428, 32) * 32) &&
                            ltid_in_bounds_46440) {
                            // read operands
                            {
                                x_41365 = ((volatile __local
                                            float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428) -
                                                                        sext_i32_i64(skip_threads_46441)];
                            }
                            // perform operation
                            {
                                bool inactive_46442 =
                                     slt64(srem64(sext_i32_i64(local_tid_46428),
                                                  i32_res_29175),
                                           sext_i32_i64(local_tid_46428) -
                                           sext_i32_i64(local_tid_46428 -
                                           skip_threads_46441));
                                
                                if (inactive_46442) {
                                    x_41365 = x_41366;
                                }
                                if (!inactive_46442) {
                                    float defunc_1_op_res_41367 = x_41365 +
                                          x_41366;
                                    
                                    x_41365 = defunc_1_op_res_41367;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46430, skip_threads_46441)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46441, local_tid_46428 -
                                  squot32(local_tid_46428, 32) * 32) &&
                            ltid_in_bounds_46440) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)] =
                                    x_41365;
                                x_41366 = x_41365;
                            }
                        }
                        if (sle32(wave_sizze_46430, skip_threads_46441)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46441 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46428 - squot32(local_tid_46428, 32) * 32) ==
                        31 && ltid_in_bounds_46440) {
                        ((volatile __local
                          float *) red_arr_mem_46432)[sext_i32_i64(squot32(local_tid_46428,
                                                                           32))] =
                            x_41365;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46443;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46428, 32) == 0 &&
                            ltid_in_bounds_46440) {
                            x_46438 = ((volatile __local
                                        float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)];
                            if ((local_tid_46428 - squot32(local_tid_46428,
                                                           32) * 32) == 0) {
                                x_46437 = x_46438;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46443 = 1;
                        while (slt32(skip_threads_46443, 32)) {
                            if (sle32(skip_threads_46443, local_tid_46428 -
                                      squot32(local_tid_46428, 32) * 32) &&
                                (squot32(local_tid_46428, 32) == 0 &&
                                 ltid_in_bounds_46440)) {
                                // read operands
                                {
                                    x_46437 = ((volatile __local
                                                float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428) -
                                                                            sext_i32_i64(skip_threads_46443)];
                                }
                                // perform operation
                                {
                                    bool inactive_46444 =
                                         slt64(srem64(sext_i32_i64(local_tid_46428 *
                                                      32 + 32 - 1),
                                                      i32_res_29175),
                                               sext_i32_i64(local_tid_46428 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46428 -
                                                             skip_threads_46443) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46444) {
                                        x_46437 = x_46438;
                                    }
                                    if (!inactive_46444) {
                                        float defunc_1_op_res_46439 = x_46437 +
                                              x_46438;
                                        
                                        x_46437 = defunc_1_op_res_46439;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46430, skip_threads_46443)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46443, local_tid_46428 -
                                      squot32(local_tid_46428, 32) * 32) &&
                                (squot32(local_tid_46428, 32) == 0 &&
                                 ltid_in_bounds_46440)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)] =
                                        x_46437;
                                    x_46438 = x_46437;
                                }
                            }
                            if (sle32(wave_sizze_46430, skip_threads_46443)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46443 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46428, 32) == 0 ||
                          !ltid_in_bounds_46440)) {
                        // read operands
                        {
                            x_41366 = x_41365;
                            x_41365 = ((__local
                                        float *) red_arr_mem_46432)[sext_i32_i64(squot32(local_tid_46428,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46445 =
                                 slt64(srem64(sext_i32_i64(local_tid_46428),
                                              i32_res_29175),
                                       sext_i32_i64(local_tid_46428) -
                                       sext_i32_i64(squot32(local_tid_46428,
                                                            32) * 32 - 1));
                            
                            if (inactive_46445) {
                                x_41365 = x_41366;
                            }
                            if (!inactive_46445) {
                                float defunc_1_op_res_41367 = x_41365 + x_41366;
                                
                                x_41365 = defunc_1_op_res_41367;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)] =
                                x_41365;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46428, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46432)[sext_i32_i64(local_tid_46428)] =
                            x_41366;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46436) *
                      squot64(segred_group_sizze_41361,
                              segment_sizze_nonzzero_46425) +
                      sext_i32_i64(local_tid_46428), m_29166) &&
                slt64(sext_i32_i64(local_tid_46428),
                      squot64(segred_group_sizze_41361,
                              segment_sizze_nonzzero_46425))) {
                ((__global
                  float *) mem_45235)[sext_i32_i64(virt_group_id_46436) *
                                      squot64(segred_group_sizze_41361,
                                              segment_sizze_nonzzero_46425) +
                                      sext_i32_i64(local_tid_46428)] = ((__local
                                                                         float *) red_arr_mem_46432)[(sext_i32_i64(local_tid_46428) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46425 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41361
}
__kernel void mainzisegred_small_41336(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_46372_backing_aligned_0,
                                       int64_t N_29165, int64_t m_29166,
                                       int64_t i32_res_29175,
                                       int64_t num_groups_41348,
                                       int64_t segment_sizze_nonzzero_46365,
                                       __global unsigned char *images_mem_44381,
                                       __global unsigned char *mem_45232)
{
    #define segred_group_sizze_41347 (mainzisegred_group_sizze_41330)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46372_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46372_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46367;
    int32_t local_tid_46368;
    int64_t group_sizze_46371;
    int32_t wave_sizze_46370;
    int32_t group_tid_46369;
    
    global_tid_46367 = get_global_id(0);
    local_tid_46368 = get_local_id(0);
    group_sizze_46371 = get_local_size(0);
    wave_sizze_46370 = LOCKSTEP_WIDTH;
    group_tid_46369 = get_group_id(0);
    
    int32_t phys_tid_41336;
    
    phys_tid_41336 = global_tid_46367;
    
    __local char *red_arr_mem_46372;
    
    red_arr_mem_46372 = (__local char *) red_arr_mem_46372_backing_0;
    
    int32_t phys_group_id_46374;
    
    phys_group_id_46374 = get_group_id(0);
    for (int32_t i_46375 = 0; i_46375 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166,
                                          squot64(segred_group_sizze_41347,
                                                  segment_sizze_nonzzero_46365))) -
                   phys_group_id_46374, sext_i64_i32(num_groups_41348));
         i_46375++) {
        int32_t virt_group_id_46376 = phys_group_id_46374 + i_46375 *
                sext_i64_i32(num_groups_41348);
        int64_t gtid_41327 = squot64(sext_i32_i64(local_tid_46368),
                                     segment_sizze_nonzzero_46365) +
                sext_i32_i64(virt_group_id_46376) *
                squot64(segred_group_sizze_41347, segment_sizze_nonzzero_46365);
        int64_t gtid_41335 = srem64(sext_i32_i64(local_tid_46368),
                                    i32_res_29175);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29175) && (slt64(gtid_41327,
                                                            m_29166) &&
                                                      slt64(sext_i32_i64(local_tid_46368),
                                                            i32_res_29175 *
                                                            squot64(segred_group_sizze_41347,
                                                                    segment_sizze_nonzzero_46365)))) {
                float x_41355 = ((__global
                                  float *) images_mem_44381)[gtid_41327 *
                                                             N_29165 +
                                                             gtid_41335];
                bool isnan_res_41356;
                
                isnan_res_41356 = futrts_isnan32(x_41355);
                
                bool cond_41357 = !isnan_res_41356;
                int32_t defunc_0_f_res_41358 = btoi_bool_i32(cond_41357);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)] =
                        defunc_0_f_res_41358;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29175)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_41351;
                int32_t x_41352;
                int32_t x_46377;
                int32_t x_46378;
                bool ltid_in_bounds_46380;
                
                ltid_in_bounds_46380 = slt64(sext_i32_i64(local_tid_46368),
                                             i32_res_29175 *
                                             squot64(segred_group_sizze_41347,
                                                     segment_sizze_nonzzero_46365));
                
                int32_t skip_threads_46381;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46380) {
                        x_41352 = ((volatile __local
                                    int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)];
                        if ((local_tid_46368 - squot32(local_tid_46368, 32) *
                             32) == 0) {
                            x_41351 = x_41352;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46381 = 1;
                    while (slt32(skip_threads_46381, 32)) {
                        if (sle32(skip_threads_46381, local_tid_46368 -
                                  squot32(local_tid_46368, 32) * 32) &&
                            ltid_in_bounds_46380) {
                            // read operands
                            {
                                x_41351 = ((volatile __local
                                            int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368) -
                                                                          sext_i32_i64(skip_threads_46381)];
                            }
                            // perform operation
                            {
                                bool inactive_46382 =
                                     slt64(srem64(sext_i32_i64(local_tid_46368),
                                                  i32_res_29175),
                                           sext_i32_i64(local_tid_46368) -
                                           sext_i32_i64(local_tid_46368 -
                                           skip_threads_46381));
                                
                                if (inactive_46382) {
                                    x_41351 = x_41352;
                                }
                                if (!inactive_46382) {
                                    int32_t defunc_1_op_res_41353 =
                                            add32(x_41351, x_41352);
                                    
                                    x_41351 = defunc_1_op_res_41353;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46370, skip_threads_46381)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46381, local_tid_46368 -
                                  squot32(local_tid_46368, 32) * 32) &&
                            ltid_in_bounds_46380) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)] =
                                    x_41351;
                                x_41352 = x_41351;
                            }
                        }
                        if (sle32(wave_sizze_46370, skip_threads_46381)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46381 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46368 - squot32(local_tid_46368, 32) * 32) ==
                        31 && ltid_in_bounds_46380) {
                        ((volatile __local
                          int32_t *) red_arr_mem_46372)[sext_i32_i64(squot32(local_tid_46368,
                                                                             32))] =
                            x_41351;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46383;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46368, 32) == 0 &&
                            ltid_in_bounds_46380) {
                            x_46378 = ((volatile __local
                                        int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)];
                            if ((local_tid_46368 - squot32(local_tid_46368,
                                                           32) * 32) == 0) {
                                x_46377 = x_46378;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46383 = 1;
                        while (slt32(skip_threads_46383, 32)) {
                            if (sle32(skip_threads_46383, local_tid_46368 -
                                      squot32(local_tid_46368, 32) * 32) &&
                                (squot32(local_tid_46368, 32) == 0 &&
                                 ltid_in_bounds_46380)) {
                                // read operands
                                {
                                    x_46377 = ((volatile __local
                                                int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368) -
                                                                              sext_i32_i64(skip_threads_46383)];
                                }
                                // perform operation
                                {
                                    bool inactive_46384 =
                                         slt64(srem64(sext_i32_i64(local_tid_46368 *
                                                      32 + 32 - 1),
                                                      i32_res_29175),
                                               sext_i32_i64(local_tid_46368 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46368 -
                                                             skip_threads_46383) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46384) {
                                        x_46377 = x_46378;
                                    }
                                    if (!inactive_46384) {
                                        int32_t defunc_1_op_res_46379 =
                                                add32(x_46377, x_46378);
                                        
                                        x_46377 = defunc_1_op_res_46379;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46370, skip_threads_46383)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46383, local_tid_46368 -
                                      squot32(local_tid_46368, 32) * 32) &&
                                (squot32(local_tid_46368, 32) == 0 &&
                                 ltid_in_bounds_46380)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)] =
                                        x_46377;
                                    x_46378 = x_46377;
                                }
                            }
                            if (sle32(wave_sizze_46370, skip_threads_46383)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46383 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46368, 32) == 0 ||
                          !ltid_in_bounds_46380)) {
                        // read operands
                        {
                            x_41352 = x_41351;
                            x_41351 = ((__local
                                        int32_t *) red_arr_mem_46372)[sext_i32_i64(squot32(local_tid_46368,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46385 =
                                 slt64(srem64(sext_i32_i64(local_tid_46368),
                                              i32_res_29175),
                                       sext_i32_i64(local_tid_46368) -
                                       sext_i32_i64(squot32(local_tid_46368,
                                                            32) * 32 - 1));
                            
                            if (inactive_46385) {
                                x_41351 = x_41352;
                            }
                            if (!inactive_46385) {
                                int32_t defunc_1_op_res_41353 = add32(x_41351,
                                                                      x_41352);
                                
                                x_41351 = defunc_1_op_res_41353;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)] =
                                x_41351;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46368, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_46372)[sext_i32_i64(local_tid_46368)] =
                            x_41352;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46376) *
                      squot64(segred_group_sizze_41347,
                              segment_sizze_nonzzero_46365) +
                      sext_i32_i64(local_tid_46368), m_29166) &&
                slt64(sext_i32_i64(local_tid_46368),
                      squot64(segred_group_sizze_41347,
                              segment_sizze_nonzzero_46365))) {
                ((__global
                  int32_t *) mem_45232)[sext_i32_i64(virt_group_id_46376) *
                                        squot64(segred_group_sizze_41347,
                                                segment_sizze_nonzzero_46365) +
                                        sext_i32_i64(local_tid_46368)] =
                    ((__local
                      int32_t *) red_arr_mem_46372)[(sext_i32_i64(local_tid_46368) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_46365 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41347
}
__kernel void mainzisegred_small_41499(__global int *global_failure,
                                       int failure_is_an_option, __global
                                       int64_t *global_failure_args,
                                       __local volatile
                                       int64_t *red_arr_mem_46541_backing_aligned_0,
                                       int64_t N_29165, int64_t m_29166,
                                       int64_t i32_res_29568,
                                       int64_t num_groups_41521,
                                       int64_t segment_sizze_nonzzero_46534,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_45178,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_45244,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_45245,
                                       __global unsigned char *mem_45278)
{
    #define segred_group_sizze_41520 (mainzisegred_group_sizze_41493)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46541_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46541_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46536;
    int32_t local_tid_46537;
    int64_t group_sizze_46540;
    int32_t wave_sizze_46539;
    int32_t group_tid_46538;
    
    global_tid_46536 = get_global_id(0);
    local_tid_46537 = get_local_id(0);
    group_sizze_46540 = get_local_size(0);
    wave_sizze_46539 = LOCKSTEP_WIDTH;
    group_tid_46538 = get_group_id(0);
    
    int32_t phys_tid_41499;
    
    phys_tid_41499 = global_tid_46536;
    
    __local char *red_arr_mem_46541;
    
    red_arr_mem_46541 = (__local char *) red_arr_mem_46541_backing_0;
    
    int32_t phys_group_id_46543;
    
    phys_group_id_46543 = get_group_id(0);
    for (int32_t i_46544 = 0; i_46544 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166,
                                          squot64(segred_group_sizze_41520,
                                                  segment_sizze_nonzzero_46534))) -
                   phys_group_id_46543, sext_i64_i32(num_groups_41521));
         i_46544++) {
        int32_t virt_group_id_46545 = phys_group_id_46543 + i_46544 *
                sext_i64_i32(num_groups_41521);
        int64_t gtid_41490 = squot64(sext_i32_i64(local_tid_46537),
                                     segment_sizze_nonzzero_46534) +
                sext_i32_i64(virt_group_id_46545) *
                squot64(segred_group_sizze_41520, segment_sizze_nonzzero_46534);
        int64_t gtid_41498 = srem64(sext_i32_i64(local_tid_46537),
                                    i32_res_29568);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29568) && (slt64(gtid_41490,
                                                            m_29166) &&
                                                      slt64(sext_i32_i64(local_tid_46537),
                                                            i32_res_29568 *
                                                            squot64(segred_group_sizze_41520,
                                                                    segment_sizze_nonzzero_46534)))) {
                int32_t x_41529 = ((__global
                                    int32_t *) defunc_3_map_res_mem_45244)[gtid_41490];
                int32_t index_primexp_42390 = sext_i64_i32(gtid_41498);
                bool cond_41531 = slt32(index_primexp_42390, x_41529);
                float defunc_0_f_res_41532;
                
                if (cond_41531) {
                    int32_t x_41528 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_41490];
                    int32_t x_41533 = add32(x_41528, index_primexp_42390);
                    int32_t x_41534 = sub32(x_41533, x_41529);
                    int32_t i_41535 = add32(1, x_41534);
                    int64_t i_41536 = sext_i32_i64(i_41535);
                    bool x_41537 = sle64((int64_t) 0, i_41536);
                    bool y_41538 = slt64(i_41536, N_29165);
                    bool bounds_check_41539 = x_41537 && y_41538;
                    bool index_certs_41540;
                    
                    if (!bounds_check_41539) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          22) == -1) {
                                global_failure_args[0] = i_41536;
                                global_failure_args[1] = N_29165;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_41541 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_41490 *
                                                                                              N_29165 +
                                                                                              i_41536];
                    
                    defunc_0_f_res_41532 = defunc_0_f_res_t_res_41541;
                } else {
                    defunc_0_f_res_41532 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)] =
                        defunc_0_f_res_41532;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)] =
                    0.0F;
            }
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29568)) {
            // perform segmented scan to imitate reduction
            {
                float x_41524;
                float x_41525;
                float x_46546;
                float x_46547;
                bool ltid_in_bounds_46549;
                
                ltid_in_bounds_46549 = slt64(sext_i32_i64(local_tid_46537),
                                             i32_res_29568 *
                                             squot64(segred_group_sizze_41520,
                                                     segment_sizze_nonzzero_46534));
                
                int32_t skip_threads_46550;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46549) {
                        x_41525 = ((volatile __local
                                    float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)];
                        if ((local_tid_46537 - squot32(local_tid_46537, 32) *
                             32) == 0) {
                            x_41524 = x_41525;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46550 = 1;
                    while (slt32(skip_threads_46550, 32)) {
                        if (sle32(skip_threads_46550, local_tid_46537 -
                                  squot32(local_tid_46537, 32) * 32) &&
                            ltid_in_bounds_46549) {
                            // read operands
                            {
                                x_41524 = ((volatile __local
                                            float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537) -
                                                                        sext_i32_i64(skip_threads_46550)];
                            }
                            // perform operation
                            {
                                bool inactive_46551 =
                                     slt64(srem64(sext_i32_i64(local_tid_46537),
                                                  i32_res_29568),
                                           sext_i32_i64(local_tid_46537) -
                                           sext_i32_i64(local_tid_46537 -
                                           skip_threads_46550));
                                
                                if (inactive_46551) {
                                    x_41524 = x_41525;
                                }
                                if (!inactive_46551) {
                                    float defunc_1_op_res_41526 = x_41524 +
                                          x_41525;
                                    
                                    x_41524 = defunc_1_op_res_41526;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46539, skip_threads_46550)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46550, local_tid_46537 -
                                  squot32(local_tid_46537, 32) * 32) &&
                            ltid_in_bounds_46549) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)] =
                                    x_41524;
                                x_41525 = x_41524;
                            }
                        }
                        if (sle32(wave_sizze_46539, skip_threads_46550)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46550 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46537 - squot32(local_tid_46537, 32) * 32) ==
                        31 && ltid_in_bounds_46549) {
                        ((volatile __local
                          float *) red_arr_mem_46541)[sext_i32_i64(squot32(local_tid_46537,
                                                                           32))] =
                            x_41524;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46552;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46537, 32) == 0 &&
                            ltid_in_bounds_46549) {
                            x_46547 = ((volatile __local
                                        float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)];
                            if ((local_tid_46537 - squot32(local_tid_46537,
                                                           32) * 32) == 0) {
                                x_46546 = x_46547;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46552 = 1;
                        while (slt32(skip_threads_46552, 32)) {
                            if (sle32(skip_threads_46552, local_tid_46537 -
                                      squot32(local_tid_46537, 32) * 32) &&
                                (squot32(local_tid_46537, 32) == 0 &&
                                 ltid_in_bounds_46549)) {
                                // read operands
                                {
                                    x_46546 = ((volatile __local
                                                float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537) -
                                                                            sext_i32_i64(skip_threads_46552)];
                                }
                                // perform operation
                                {
                                    bool inactive_46553 =
                                         slt64(srem64(sext_i32_i64(local_tid_46537 *
                                                      32 + 32 - 1),
                                                      i32_res_29568),
                                               sext_i32_i64(local_tid_46537 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46537 -
                                                             skip_threads_46552) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46553) {
                                        x_46546 = x_46547;
                                    }
                                    if (!inactive_46553) {
                                        float defunc_1_op_res_46548 = x_46546 +
                                              x_46547;
                                        
                                        x_46546 = defunc_1_op_res_46548;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46539, skip_threads_46552)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46552, local_tid_46537 -
                                      squot32(local_tid_46537, 32) * 32) &&
                                (squot32(local_tid_46537, 32) == 0 &&
                                 ltid_in_bounds_46549)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)] =
                                        x_46546;
                                    x_46547 = x_46546;
                                }
                            }
                            if (sle32(wave_sizze_46539, skip_threads_46552)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46552 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46537, 32) == 0 ||
                          !ltid_in_bounds_46549)) {
                        // read operands
                        {
                            x_41525 = x_41524;
                            x_41524 = ((__local
                                        float *) red_arr_mem_46541)[sext_i32_i64(squot32(local_tid_46537,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46554 =
                                 slt64(srem64(sext_i32_i64(local_tid_46537),
                                              i32_res_29568),
                                       sext_i32_i64(local_tid_46537) -
                                       sext_i32_i64(squot32(local_tid_46537,
                                                            32) * 32 - 1));
                            
                            if (inactive_46554) {
                                x_41524 = x_41525;
                            }
                            if (!inactive_46554) {
                                float defunc_1_op_res_41526 = x_41524 + x_41525;
                                
                                x_41524 = defunc_1_op_res_41526;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)] =
                                x_41524;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46537, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46541)[sext_i32_i64(local_tid_46537)] =
                            x_41525;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46545) *
                      squot64(segred_group_sizze_41520,
                              segment_sizze_nonzzero_46534) +
                      sext_i32_i64(local_tid_46537), m_29166) &&
                slt64(sext_i32_i64(local_tid_46537),
                      squot64(segred_group_sizze_41520,
                              segment_sizze_nonzzero_46534))) {
                ((__global
                  float *) mem_45278)[sext_i32_i64(virt_group_id_46545) *
                                      squot64(segred_group_sizze_41520,
                                              segment_sizze_nonzzero_46534) +
                                      sext_i32_i64(local_tid_46537)] = ((__local
                                                                         float *) red_arr_mem_46541)[(sext_i32_i64(local_tid_46537) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46534 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41520
}
__kernel void mainzisegred_small_42060(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_46703_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46701_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_46699_backing_aligned_2,
                                       int64_t m_29166,
                                       int64_t iota32_arg_29597,
                                       int64_t num_groups_42247,
                                       int64_t segment_sizze_nonzzero_46692,
                                       __global unsigned char *mem_45284,
                                       __global unsigned char *mem_45296,
                                       __global unsigned char *mem_45298,
                                       __global unsigned char *mem_45302,
                                       __global unsigned char *mem_45305,
                                       __global unsigned char *mem_45307,
                                       __global unsigned char *mem_45309)
{
    #define segred_group_sizze_42246 (mainzisegred_group_sizze_42054)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46703_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46703_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46701_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46701_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46699_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46699_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46694;
    int32_t local_tid_46695;
    int64_t group_sizze_46698;
    int32_t wave_sizze_46697;
    int32_t group_tid_46696;
    
    global_tid_46694 = get_global_id(0);
    local_tid_46695 = get_local_id(0);
    group_sizze_46698 = get_local_size(0);
    wave_sizze_46697 = LOCKSTEP_WIDTH;
    group_tid_46696 = get_group_id(0);
    
    int32_t phys_tid_42060;
    
    phys_tid_42060 = global_tid_46694;
    
    __local char *red_arr_mem_46699;
    
    red_arr_mem_46699 = (__local char *) red_arr_mem_46699_backing_0;
    
    __local char *red_arr_mem_46701;
    
    red_arr_mem_46701 = (__local char *) red_arr_mem_46701_backing_1;
    
    __local char *red_arr_mem_46703;
    
    red_arr_mem_46703 = (__local char *) red_arr_mem_46703_backing_2;
    
    int32_t phys_group_id_46705;
    
    phys_group_id_46705 = get_group_id(0);
    for (int32_t i_46706 = 0; i_46706 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29166,
                                          squot64(segred_group_sizze_42246,
                                                  segment_sizze_nonzzero_46692))) -
                   phys_group_id_46705, sext_i64_i32(num_groups_42247));
         i_46706++) {
        int32_t virt_group_id_46707 = phys_group_id_46705 + i_46706 *
                sext_i64_i32(num_groups_42247);
        int64_t gtid_42051 = squot64(sext_i32_i64(local_tid_46695),
                                     segment_sizze_nonzzero_46692) +
                sext_i32_i64(virt_group_id_46707) *
                squot64(segred_group_sizze_42246, segment_sizze_nonzzero_46692);
        int64_t gtid_42059 = srem64(sext_i32_i64(local_tid_46695),
                                    iota32_arg_29597);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_29597) && (slt64(gtid_42051,
                                                               m_29166) &&
                                                         slt64(sext_i32_i64(local_tid_46695),
                                                               iota32_arg_29597 *
                                                               squot64(segred_group_sizze_42246,
                                                                       segment_sizze_nonzzero_46692)))) {
                int32_t y_42266 = ((__global int32_t *) mem_45298)[gtid_42051];
                float y_42267 = ((__global float *) mem_45296)[gtid_42051];
                float x_42271 = ((__global float *) mem_45302)[gtid_42051 *
                                                               iota32_arg_29597 +
                                                               gtid_42059];
                float x_42272 = ((__global float *) mem_45284)[gtid_42059];
                int32_t index_primexp_42404 = sext_i64_i32(gtid_42059);
                float defunc_0_f_res_42275 = x_42271 / y_42267;
                bool cond_42276 = slt32(index_primexp_42404, y_42266);
                bool isnan_res_42277;
                
                isnan_res_42277 = futrts_isnan32(defunc_0_f_res_42275);
                
                bool cond_t_res_42278 = !isnan_res_42277;
                bool x_42279 = cond_42276 && cond_t_res_42278;
                float abs_res_42280 = (float) fabs(defunc_0_f_res_42275);
                bool defunc_2_f_res_t_res_42281 = x_42272 < abs_res_42280;
                bool x_42282 = x_42279 && defunc_2_f_res_t_res_42281;
                float defunc_1_f_res_42283;
                
                if (cond_42276) {
                    defunc_1_f_res_42283 = defunc_0_f_res_42275;
                } else {
                    defunc_1_f_res_42283 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)] =
                        x_42282;
                    ((__local
                      int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)] =
                        index_primexp_42404;
                    ((__local
                      float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)] =
                        defunc_1_f_res_42283;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)] = 0;
                ((__local
                  int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)] =
                    -1;
                ((__local
                  float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_29597)) {
            // perform segmented scan to imitate reduction
            {
                bool x_42252;
                int32_t x_42253;
                float x_42254;
                bool x_42255;
                int32_t x_42256;
                float x_42257;
                bool x_46708;
                int32_t x_46709;
                float x_46710;
                bool x_46711;
                int32_t x_46712;
                float x_46713;
                bool ltid_in_bounds_46722;
                
                ltid_in_bounds_46722 = slt64(sext_i32_i64(local_tid_46695),
                                             iota32_arg_29597 *
                                             squot64(segred_group_sizze_42246,
                                                     segment_sizze_nonzzero_46692));
                
                int32_t skip_threads_46723;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46722) {
                        x_42255 = ((volatile __local
                                    bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)];
                        x_42256 = ((volatile __local
                                    int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)];
                        x_42257 = ((volatile __local
                                    float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)];
                        if ((local_tid_46695 - squot32(local_tid_46695, 32) *
                             32) == 0) {
                            x_42252 = x_42255;
                            x_42253 = x_42256;
                            x_42254 = x_42257;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46723 = 1;
                    while (slt32(skip_threads_46723, 32)) {
                        if (sle32(skip_threads_46723, local_tid_46695 -
                                  squot32(local_tid_46695, 32) * 32) &&
                            ltid_in_bounds_46722) {
                            // read operands
                            {
                                x_42252 = ((volatile __local
                                            bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695) -
                                                                       sext_i32_i64(skip_threads_46723)];
                                x_42253 = ((volatile __local
                                            int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695) -
                                                                          sext_i32_i64(skip_threads_46723)];
                                x_42254 = ((volatile __local
                                            float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695) -
                                                                        sext_i32_i64(skip_threads_46723)];
                            }
                            // perform operation
                            {
                                bool inactive_46724 =
                                     slt64(srem64(sext_i32_i64(local_tid_46695),
                                                  iota32_arg_29597),
                                           sext_i32_i64(local_tid_46695) -
                                           sext_i32_i64(local_tid_46695 -
                                           skip_threads_46723));
                                
                                if (inactive_46724) {
                                    x_42252 = x_42255;
                                    x_42253 = x_42256;
                                    x_42254 = x_42257;
                                }
                                if (!inactive_46724) {
                                    bool defunc_1_op_res_42258;
                                    int32_t defunc_1_op_res_42259;
                                    
                                    if (x_42252) {
                                        defunc_1_op_res_42258 = x_42252;
                                        defunc_1_op_res_42259 = x_42253;
                                    } else {
                                        bool x_42260 = x_42255 && x_42255;
                                        bool x_42261 = !x_42255;
                                        bool y_42262 = x_42252 && x_42261;
                                        bool defunc_1_op_res_f_res_42263 =
                                             x_42260 || y_42262;
                                        int32_t defunc_1_op_res_f_res_42264;
                                        
                                        if (x_42255) {
                                            defunc_1_op_res_f_res_42264 =
                                                x_42256;
                                        } else {
                                            defunc_1_op_res_f_res_42264 =
                                                x_42253;
                                        }
                                        defunc_1_op_res_42258 =
                                            defunc_1_op_res_f_res_42263;
                                        defunc_1_op_res_42259 =
                                            defunc_1_op_res_f_res_42264;
                                    }
                                    
                                    float defunc_1_op_res_42265 = x_42254 +
                                          x_42257;
                                    
                                    x_42252 = defunc_1_op_res_42258;
                                    x_42253 = defunc_1_op_res_42259;
                                    x_42254 = defunc_1_op_res_42265;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46697, skip_threads_46723)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46723, local_tid_46695 -
                                  squot32(local_tid_46695, 32) * 32) &&
                            ltid_in_bounds_46722) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)] =
                                    x_42252;
                                x_42255 = x_42252;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)] =
                                    x_42253;
                                x_42256 = x_42253;
                                ((volatile __local
                                  float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)] =
                                    x_42254;
                                x_42257 = x_42254;
                            }
                        }
                        if (sle32(wave_sizze_46697, skip_threads_46723)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46723 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46695 - squot32(local_tid_46695, 32) * 32) ==
                        31 && ltid_in_bounds_46722) {
                        ((volatile __local
                          bool *) red_arr_mem_46699)[sext_i32_i64(squot32(local_tid_46695,
                                                                          32))] =
                            x_42252;
                        ((volatile __local
                          int32_t *) red_arr_mem_46701)[sext_i32_i64(squot32(local_tid_46695,
                                                                             32))] =
                            x_42253;
                        ((volatile __local
                          float *) red_arr_mem_46703)[sext_i32_i64(squot32(local_tid_46695,
                                                                           32))] =
                            x_42254;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46725;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46695, 32) == 0 &&
                            ltid_in_bounds_46722) {
                            x_46711 = ((volatile __local
                                        bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)];
                            x_46712 = ((volatile __local
                                        int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)];
                            x_46713 = ((volatile __local
                                        float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)];
                            if ((local_tid_46695 - squot32(local_tid_46695,
                                                           32) * 32) == 0) {
                                x_46708 = x_46711;
                                x_46709 = x_46712;
                                x_46710 = x_46713;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46725 = 1;
                        while (slt32(skip_threads_46725, 32)) {
                            if (sle32(skip_threads_46725, local_tid_46695 -
                                      squot32(local_tid_46695, 32) * 32) &&
                                (squot32(local_tid_46695, 32) == 0 &&
                                 ltid_in_bounds_46722)) {
                                // read operands
                                {
                                    x_46708 = ((volatile __local
                                                bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695) -
                                                                           sext_i32_i64(skip_threads_46725)];
                                    x_46709 = ((volatile __local
                                                int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695) -
                                                                              sext_i32_i64(skip_threads_46725)];
                                    x_46710 = ((volatile __local
                                                float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695) -
                                                                            sext_i32_i64(skip_threads_46725)];
                                }
                                // perform operation
                                {
                                    bool inactive_46726 =
                                         slt64(srem64(sext_i32_i64(local_tid_46695 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29597),
                                               sext_i32_i64(local_tid_46695 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46695 -
                                                             skip_threads_46725) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46726) {
                                        x_46708 = x_46711;
                                        x_46709 = x_46712;
                                        x_46710 = x_46713;
                                    }
                                    if (!inactive_46726) {
                                        bool defunc_1_op_res_46714;
                                        int32_t defunc_1_op_res_46715;
                                        
                                        if (x_46708) {
                                            defunc_1_op_res_46714 = x_46708;
                                            defunc_1_op_res_46715 = x_46709;
                                        } else {
                                            bool x_46716 = x_46711 && x_46711;
                                            bool x_46717 = !x_46711;
                                            bool y_46718 = x_46708 && x_46717;
                                            bool defunc_1_op_res_f_res_46719 =
                                                 x_46716 || y_46718;
                                            int32_t defunc_1_op_res_f_res_46720;
                                            
                                            if (x_46711) {
                                                defunc_1_op_res_f_res_46720 =
                                                    x_46712;
                                            } else {
                                                defunc_1_op_res_f_res_46720 =
                                                    x_46709;
                                            }
                                            defunc_1_op_res_46714 =
                                                defunc_1_op_res_f_res_46719;
                                            defunc_1_op_res_46715 =
                                                defunc_1_op_res_f_res_46720;
                                        }
                                        
                                        float defunc_1_op_res_46721 = x_46710 +
                                              x_46713;
                                        
                                        x_46708 = defunc_1_op_res_46714;
                                        x_46709 = defunc_1_op_res_46715;
                                        x_46710 = defunc_1_op_res_46721;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46697, skip_threads_46725)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46725, local_tid_46695 -
                                      squot32(local_tid_46695, 32) * 32) &&
                                (squot32(local_tid_46695, 32) == 0 &&
                                 ltid_in_bounds_46722)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)] =
                                        x_46708;
                                    x_46711 = x_46708;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)] =
                                        x_46709;
                                    x_46712 = x_46709;
                                    ((volatile __local
                                      float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)] =
                                        x_46710;
                                    x_46713 = x_46710;
                                }
                            }
                            if (sle32(wave_sizze_46697, skip_threads_46725)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46725 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46695, 32) == 0 ||
                          !ltid_in_bounds_46722)) {
                        // read operands
                        {
                            x_42255 = x_42252;
                            x_42256 = x_42253;
                            x_42257 = x_42254;
                            x_42252 = ((__local
                                        bool *) red_arr_mem_46699)[sext_i32_i64(squot32(local_tid_46695,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_42253 = ((__local
                                        int32_t *) red_arr_mem_46701)[sext_i32_i64(squot32(local_tid_46695,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_42254 = ((__local
                                        float *) red_arr_mem_46703)[sext_i32_i64(squot32(local_tid_46695,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46727 =
                                 slt64(srem64(sext_i32_i64(local_tid_46695),
                                              iota32_arg_29597),
                                       sext_i32_i64(local_tid_46695) -
                                       sext_i32_i64(squot32(local_tid_46695,
                                                            32) * 32 - 1));
                            
                            if (inactive_46727) {
                                x_42252 = x_42255;
                                x_42253 = x_42256;
                                x_42254 = x_42257;
                            }
                            if (!inactive_46727) {
                                bool defunc_1_op_res_42258;
                                int32_t defunc_1_op_res_42259;
                                
                                if (x_42252) {
                                    defunc_1_op_res_42258 = x_42252;
                                    defunc_1_op_res_42259 = x_42253;
                                } else {
                                    bool x_42260 = x_42255 && x_42255;
                                    bool x_42261 = !x_42255;
                                    bool y_42262 = x_42252 && x_42261;
                                    bool defunc_1_op_res_f_res_42263 =
                                         x_42260 || y_42262;
                                    int32_t defunc_1_op_res_f_res_42264;
                                    
                                    if (x_42255) {
                                        defunc_1_op_res_f_res_42264 = x_42256;
                                    } else {
                                        defunc_1_op_res_f_res_42264 = x_42253;
                                    }
                                    defunc_1_op_res_42258 =
                                        defunc_1_op_res_f_res_42263;
                                    defunc_1_op_res_42259 =
                                        defunc_1_op_res_f_res_42264;
                                }
                                
                                float defunc_1_op_res_42265 = x_42254 + x_42257;
                                
                                x_42252 = defunc_1_op_res_42258;
                                x_42253 = defunc_1_op_res_42259;
                                x_42254 = defunc_1_op_res_42265;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)] =
                                x_42252;
                            ((__local
                              int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)] =
                                x_42253;
                            ((__local
                              float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)] =
                                x_42254;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46695, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_46699)[sext_i32_i64(local_tid_46695)] =
                            x_42255;
                        ((__local
                          int32_t *) red_arr_mem_46701)[sext_i32_i64(local_tid_46695)] =
                            x_42256;
                        ((__local
                          float *) red_arr_mem_46703)[sext_i32_i64(local_tid_46695)] =
                            x_42257;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46707) *
                      squot64(segred_group_sizze_42246,
                              segment_sizze_nonzzero_46692) +
                      sext_i32_i64(local_tid_46695), m_29166) &&
                slt64(sext_i32_i64(local_tid_46695),
                      squot64(segred_group_sizze_42246,
                              segment_sizze_nonzzero_46692))) {
                ((__global
                  bool *) mem_45305)[sext_i32_i64(virt_group_id_46707) *
                                     squot64(segred_group_sizze_42246,
                                             segment_sizze_nonzzero_46692) +
                                     sext_i32_i64(local_tid_46695)] = ((__local
                                                                        bool *) red_arr_mem_46699)[(sext_i32_i64(local_tid_46695) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_46692 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_45307)[sext_i32_i64(virt_group_id_46707) *
                                        squot64(segred_group_sizze_42246,
                                                segment_sizze_nonzzero_46692) +
                                        sext_i32_i64(local_tid_46695)] =
                    ((__local
                      int32_t *) red_arr_mem_46701)[(sext_i32_i64(local_tid_46695) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_46692 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_45309)[sext_i32_i64(virt_group_id_46707) *
                                      squot64(segred_group_sizze_42246,
                                              segment_sizze_nonzzero_46692) +
                                      sext_i32_i64(local_tid_46695)] = ((__local
                                                                         float *) red_arr_mem_46703)[(sext_i32_i64(local_tid_46695) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46692 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_42246
}
__kernel void mainDetailedzicopy_45861(int64_t m_27772, int64_t nm_27920,
                                       int64_t ctx_param_ext_44580,
                                       int64_t ctx_param_ext_44581,
                                       int64_t ctx_param_ext_44583, __global
                                       unsigned char *mem_param_44585, __global
                                       unsigned char *mem_44590)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_45861;
    int32_t copy_ltid_45862;
    int32_t copy_gid_45863;
    
    copy_gtid_45861 = get_global_id(0);
    copy_ltid_45862 = get_local_id(0);
    copy_gid_45863 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_45861), m_27772 * nm_27920)) {
        ((__global float *) mem_44590)[(sext_i32_i64(copy_gtid_45861) -
                                        squot64(sext_i32_i64(copy_gtid_45861),
                                                nm_27920) * nm_27920) *
                                       m_27772 +
                                       squot64(sext_i32_i64(copy_gtid_45861),
                                               nm_27920)] = ((__global
                                                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_45861),
                                                                                                 nm_27920) *
                                                                                         ctx_param_ext_44581 +
                                                                                         (sext_i32_i64(copy_gtid_45861) -
                                                                                          squot64(sext_i32_i64(copy_gtid_45861),
                                                                                                  nm_27920) *
                                                                                          nm_27920) *
                                                                                         ctx_param_ext_44583)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_32356(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46273_backing_aligned_0,
                                              int64_t N_27771, int64_t m_27772,
                                              int32_t num_threads_46267,
                                              __global
                                              unsigned char *images_mem_44381,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_45140,
                                              __global unsigned char *mem_45163,
                                              __global unsigned char *mem_45166)
{
    #define segscan_group_sizze_32373 (mainDetailedzisegscan_group_sizze_32350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46273_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46273_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46268;
    int32_t local_tid_46269;
    int64_t group_sizze_46272;
    int32_t wave_sizze_46271;
    int32_t group_tid_46270;
    
    global_tid_46268 = get_global_id(0);
    local_tid_46269 = get_local_id(0);
    group_sizze_46272 = get_local_size(0);
    wave_sizze_46271 = LOCKSTEP_WIDTH;
    group_tid_46270 = get_group_id(0);
    
    int32_t phys_tid_32356;
    
    phys_tid_32356 = global_tid_46268;
    
    __local char *scan_arr_mem_46273;
    
    scan_arr_mem_46273 = (__local char *) scan_arr_mem_46273_backing_0;
    
    int64_t x_32378;
    int64_t x_32379;
    
    x_32378 = (int64_t) 0;
    for (int64_t j_46275 = 0; j_46275 < sdiv_up64(m_27772 * N_27771,
                                                  sext_i32_i64(num_threads_46267));
         j_46275++) {
        int64_t chunk_offset_46276 = segscan_group_sizze_32373 * j_46275 +
                sext_i32_i64(group_tid_46270) * (segscan_group_sizze_32373 *
                                                 sdiv_up64(m_27772 * N_27771,
                                                           sext_i32_i64(num_threads_46267)));
        int64_t flat_idx_46277 = chunk_offset_46276 +
                sext_i32_i64(local_tid_46269);
        int64_t gtid_32347 = squot64(flat_idx_46277, N_27771);
        int64_t gtid_32355 = flat_idx_46277 - squot64(flat_idx_46277, N_27771) *
                N_27771;
        
        // threads in bounds read input
        {
            if (slt64(gtid_32347, m_27772) && slt64(gtid_32355, N_27771)) {
                float x_32383 = ((__global
                                  float *) images_mem_44381)[gtid_32347 *
                                                             N_27771 +
                                                             gtid_32355];
                bool isnan_res_32385;
                
                isnan_res_32385 = futrts_isnan32(x_32383);
                
                bool cond_32386 = !isnan_res_32385;
                float defunc_1_f_res_32387;
                
                if (cond_32386) {
                    float x_32384 = ((__global
                                      float *) defunc_3_map_res_mem_45140)[gtid_32347 *
                                                                           N_27771 +
                                                                           gtid_32355];
                    float defunc_1_f_res_t_res_32388 = x_32383 - x_32384;
                    
                    defunc_1_f_res_32387 = defunc_1_f_res_t_res_32388;
                } else {
                    defunc_1_f_res_32387 = NAN;
                }
                
                bool isnan_res_32389;
                
                isnan_res_32389 = futrts_isnan32(defunc_1_f_res_32387);
                
                bool defunc_0_p_res_32390 = !isnan_res_32389;
                int64_t defunc_0_f_res_32391 =
                        btoi_bool_i64(defunc_0_p_res_32390);
                
                // write to-scan values to parameters
                {
                    x_32379 = defunc_0_f_res_32391;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_45166)[gtid_32347 * N_27771 +
                                                   gtid_32355] =
                        defunc_1_f_res_32387;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_32347, m_27772) && slt64(gtid_32355,
                                                          N_27771))) {
                    x_32379 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_32380 = add64(x_32378, x_32379);
                
                ((__local
                  int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)] =
                    defunc_1_op_res_32380;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_46278;
            int64_t x_46279;
            int64_t x_46281;
            int64_t x_46282;
            bool ltid_in_bounds_46284;
            
            ltid_in_bounds_46284 = slt64(sext_i32_i64(local_tid_46269),
                                         segscan_group_sizze_32373);
            
            int32_t skip_threads_46285;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46284) {
                    x_46279 = ((volatile __local
                                int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)];
                    if ((local_tid_46269 - squot32(local_tid_46269, 32) * 32) ==
                        0) {
                        x_46278 = x_46279;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46285 = 1;
                while (slt32(skip_threads_46285, 32)) {
                    if (sle32(skip_threads_46285, local_tid_46269 -
                              squot32(local_tid_46269, 32) * 32) &&
                        ltid_in_bounds_46284) {
                        // read operands
                        {
                            x_46278 = ((volatile __local
                                        int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269) -
                                                                       sext_i32_i64(skip_threads_46285)];
                        }
                        // perform operation
                        {
                            bool inactive_46286 =
                                 slt64(srem64(sext_i32_i64(local_tid_46269) +
                                              chunk_offset_46276, N_27771),
                                       sext_i32_i64(local_tid_46269) +
                                       chunk_offset_46276 -
                                       (sext_i32_i64(local_tid_46269 -
                                        skip_threads_46285) +
                                        chunk_offset_46276));
                            
                            if (inactive_46286) {
                                x_46278 = x_46279;
                            }
                            if (!inactive_46286) {
                                int64_t defunc_1_op_res_46280 = add64(x_46278,
                                                                      x_46279);
                                
                                x_46278 = defunc_1_op_res_46280;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46271, skip_threads_46285)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46285, local_tid_46269 -
                              squot32(local_tid_46269, 32) * 32) &&
                        ltid_in_bounds_46284) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)] =
                                x_46278;
                            x_46279 = x_46278;
                        }
                    }
                    if (sle32(wave_sizze_46271, skip_threads_46285)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46285 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46269 - squot32(local_tid_46269, 32) * 32) ==
                    31 && ltid_in_bounds_46284) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46273)[sext_i32_i64(squot32(local_tid_46269,
                                                                          32))] =
                        x_46278;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46287;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46269, 32) == 0 &&
                        ltid_in_bounds_46284) {
                        x_46282 = ((volatile __local
                                    int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)];
                        if ((local_tid_46269 - squot32(local_tid_46269, 32) *
                             32) == 0) {
                            x_46281 = x_46282;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46287 = 1;
                    while (slt32(skip_threads_46287, 32)) {
                        if (sle32(skip_threads_46287, local_tid_46269 -
                                  squot32(local_tid_46269, 32) * 32) &&
                            (squot32(local_tid_46269, 32) == 0 &&
                             ltid_in_bounds_46284)) {
                            // read operands
                            {
                                x_46281 = ((volatile __local
                                            int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269) -
                                                                           sext_i32_i64(skip_threads_46287)];
                            }
                            // perform operation
                            {
                                bool inactive_46288 =
                                     slt64(srem64(sext_i32_i64(local_tid_46269 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46276, N_27771),
                                           sext_i32_i64(local_tid_46269 * 32 +
                                           32 - 1) + chunk_offset_46276 -
                                           (sext_i32_i64((local_tid_46269 -
                                                          skip_threads_46287) *
                                            32 + 32 - 1) + chunk_offset_46276));
                                
                                if (inactive_46288) {
                                    x_46281 = x_46282;
                                }
                                if (!inactive_46288) {
                                    int64_t defunc_1_op_res_46283 =
                                            add64(x_46281, x_46282);
                                    
                                    x_46281 = defunc_1_op_res_46283;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46271, skip_threads_46287)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46287, local_tid_46269 -
                                  squot32(local_tid_46269, 32) * 32) &&
                            (squot32(local_tid_46269, 32) == 0 &&
                             ltid_in_bounds_46284)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)] =
                                    x_46281;
                                x_46282 = x_46281;
                            }
                        }
                        if (sle32(wave_sizze_46271, skip_threads_46287)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46287 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46269, 32) == 0 ||
                      !ltid_in_bounds_46284)) {
                    // read operands
                    {
                        x_46279 = x_46278;
                        x_46278 = ((__local
                                    int64_t *) scan_arr_mem_46273)[sext_i32_i64(squot32(local_tid_46269,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_46289 =
                             slt64(srem64(sext_i32_i64(local_tid_46269) +
                                          chunk_offset_46276, N_27771),
                                   sext_i32_i64(local_tid_46269) +
                                   chunk_offset_46276 -
                                   (sext_i32_i64(squot32(local_tid_46269, 32) *
                                    32 - 1) + chunk_offset_46276));
                        
                        if (inactive_46289) {
                            x_46278 = x_46279;
                        }
                        if (!inactive_46289) {
                            int64_t defunc_1_op_res_46280 = add64(x_46278,
                                                                  x_46279);
                            
                            x_46278 = defunc_1_op_res_46280;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)] =
                            x_46278;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46269, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)] =
                        x_46279;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_32347, m_27772) && slt64(gtid_32355, N_27771)) {
                    ((__global int64_t *) mem_45163)[gtid_32347 * N_27771 +
                                                     gtid_32355] = ((__local
                                                                     int64_t *) scan_arr_mem_46273)[sext_i32_i64(local_tid_46269)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46290 = slt64(srem64(chunk_offset_46276 +
                                                          segscan_group_sizze_32373,
                                                          N_27771),
                                                   chunk_offset_46276 +
                                                   segscan_group_sizze_32373 -
                                                   (chunk_offset_46276 +
                                                    segscan_group_sizze_32373 -
                                                    (int64_t) 1));
                bool should_load_carry_46291 = local_tid_46269 == 0 &&
                     !crosses_segment_46290;
                
                if (should_load_carry_46291) {
                    x_32378 = ((__local
                                int64_t *) scan_arr_mem_46273)[segscan_group_sizze_32373 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_46291) {
                    x_32378 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_32373
}
__kernel void mainDetailedziscan_stage1_34045(__global int *global_failure,
                                              int failure_is_an_option, __global
                                              int64_t *global_failure_args,
                                              __local volatile
                                              int64_t *scan_arr_mem_46697_backing_aligned_0,
                                              int64_t N_27771, int64_t m_27772,
                                              int64_t iota32_arg_28233,
                                              int32_t num_threads_46691,
                                              __global
                                              unsigned char *defunc_4_map_res_mem_45178,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_45244,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_45245,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_45279,
                                              __global unsigned char *mem_45399,
                                              __global unsigned char *mem_45403)
{
    #define segscan_group_sizze_34093 (mainDetailedzisegscan_group_sizze_34039)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46697_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46697_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46692;
    int32_t local_tid_46693;
    int64_t group_sizze_46696;
    int32_t wave_sizze_46695;
    int32_t group_tid_46694;
    
    global_tid_46692 = get_global_id(0);
    local_tid_46693 = get_local_id(0);
    group_sizze_46696 = get_local_size(0);
    wave_sizze_46695 = LOCKSTEP_WIDTH;
    group_tid_46694 = get_group_id(0);
    
    int32_t phys_tid_34045;
    
    phys_tid_34045 = global_tid_46692;
    
    __local char *scan_arr_mem_46697;
    
    scan_arr_mem_46697 = (__local char *) scan_arr_mem_46697_backing_0;
    
    float x_34097;
    float x_34098;
    
    x_34097 = 0.0F;
    for (int64_t j_46699 = 0; j_46699 < sdiv_up64(m_27772 * iota32_arg_28233,
                                                  sext_i32_i64(num_threads_46691));
         j_46699++) {
        int64_t chunk_offset_46700 = segscan_group_sizze_34093 * j_46699 +
                sext_i32_i64(group_tid_46694) * (segscan_group_sizze_34093 *
                                                 sdiv_up64(m_27772 *
                                                           iota32_arg_28233,
                                                           sext_i32_i64(num_threads_46691)));
        int64_t flat_idx_46701 = chunk_offset_46700 +
                sext_i32_i64(local_tid_46693);
        int64_t gtid_34036 = squot64(flat_idx_46701, iota32_arg_28233);
        int64_t gtid_34044 = flat_idx_46701 - squot64(flat_idx_46701,
                                                      iota32_arg_28233) *
                iota32_arg_28233;
        
        // threads in bounds read input
        {
            if (slt64(gtid_34036, m_27772) && slt64(gtid_34044,
                                                    iota32_arg_28233)) {
                int32_t y_34104 = ((__global int32_t *) mem_45399)[gtid_34036];
                int32_t index_primexp_42411 = sext_i64_i32(gtid_34044);
                bool cond_34106 = sle32(y_34104, index_primexp_42411);
                float defunc_0_f_res_34107;
                
                if (cond_34106) {
                    defunc_0_f_res_34107 = 0.0F;
                } else {
                    int32_t x_34100 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_34036];
                    int32_t x_34101 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45244)[gtid_34036];
                    float x_34102 = ((__global
                                      float *) defunc_0_f_res_mem_45279)[gtid_34036];
                    bool cond_34108 = index_primexp_42411 == 0;
                    float defunc_0_f_res_f_res_34109;
                    
                    if (cond_34108) {
                        defunc_0_f_res_f_res_34109 = x_34102;
                    } else {
                        int32_t i_34110 = add32(x_34100, index_primexp_42411);
                        int64_t i_34111 = sext_i32_i64(i_34110);
                        bool x_34112 = sle64((int64_t) 0, i_34111);
                        bool y_34113 = slt64(i_34111, N_27771);
                        bool bounds_check_34114 = x_34112 && y_34113;
                        bool index_certs_34115;
                        
                        if (!bounds_check_34114) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 75) == -1) {
                                    global_failure_args[0] = i_34111;
                                    global_failure_args[1] = N_27771;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float x_34116 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_34036 *
                                                                               N_27771 +
                                                                               i_34111];
                        int32_t x_34117 = sub32(x_34100, x_34101);
                        int32_t i_34118 = add32(x_34117, index_primexp_42411);
                        int64_t i_34119 = sext_i32_i64(i_34118);
                        bool x_34120 = sle64((int64_t) 0, i_34119);
                        bool y_34121 = slt64(i_34119, N_27771);
                        bool bounds_check_34122 = x_34120 && y_34121;
                        bool index_certs_34123;
                        
                        if (!bounds_check_34122) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 76) == -1) {
                                    global_failure_args[0] = i_34119;
                                    global_failure_args[1] = N_27771;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float y_34124 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_34036 *
                                                                               N_27771 +
                                                                               i_34119];
                        float defunc_0_f_res_f_res_f_res_34125 = x_34116 -
                              y_34124;
                        
                        defunc_0_f_res_f_res_34109 =
                            defunc_0_f_res_f_res_f_res_34125;
                    }
                    defunc_0_f_res_34107 = defunc_0_f_res_f_res_34109;
                }
                // write to-scan values to parameters
                {
                    x_34098 = defunc_0_f_res_34107;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_34036, m_27772) && slt64(gtid_34044,
                                                          iota32_arg_28233))) {
                    x_34098 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_34099 = x_34097 + x_34098;
                
                ((__local
                  float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)] =
                    defunc_1_op_res_34099;
            }
            
          error_0:
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_failure)
                return;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_46702;
            float x_46703;
            float x_46705;
            float x_46706;
            bool ltid_in_bounds_46708;
            
            ltid_in_bounds_46708 = slt64(sext_i32_i64(local_tid_46693),
                                         segscan_group_sizze_34093);
            
            int32_t skip_threads_46709;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46708) {
                    x_46703 = ((volatile __local
                                float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)];
                    if ((local_tid_46693 - squot32(local_tid_46693, 32) * 32) ==
                        0) {
                        x_46702 = x_46703;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46709 = 1;
                while (slt32(skip_threads_46709, 32)) {
                    if (sle32(skip_threads_46709, local_tid_46693 -
                              squot32(local_tid_46693, 32) * 32) &&
                        ltid_in_bounds_46708) {
                        // read operands
                        {
                            x_46702 = ((volatile __local
                                        float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693) -
                                                                     sext_i32_i64(skip_threads_46709)];
                        }
                        // perform operation
                        {
                            bool inactive_46710 =
                                 slt64(srem64(sext_i32_i64(local_tid_46693) +
                                              chunk_offset_46700,
                                              iota32_arg_28233),
                                       sext_i32_i64(local_tid_46693) +
                                       chunk_offset_46700 -
                                       (sext_i32_i64(local_tid_46693 -
                                        skip_threads_46709) +
                                        chunk_offset_46700));
                            
                            if (inactive_46710) {
                                x_46702 = x_46703;
                            }
                            if (!inactive_46710) {
                                float defunc_1_op_res_46704 = x_46702 + x_46703;
                                
                                x_46702 = defunc_1_op_res_46704;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46695, skip_threads_46709)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46709, local_tid_46693 -
                              squot32(local_tid_46693, 32) * 32) &&
                        ltid_in_bounds_46708) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)] =
                                x_46702;
                            x_46703 = x_46702;
                        }
                    }
                    if (sle32(wave_sizze_46695, skip_threads_46709)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46709 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46693 - squot32(local_tid_46693, 32) * 32) ==
                    31 && ltid_in_bounds_46708) {
                    ((volatile __local
                      float *) scan_arr_mem_46697)[sext_i32_i64(squot32(local_tid_46693,
                                                                        32))] =
                        x_46702;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46711;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46693, 32) == 0 &&
                        ltid_in_bounds_46708) {
                        x_46706 = ((volatile __local
                                    float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)];
                        if ((local_tid_46693 - squot32(local_tid_46693, 32) *
                             32) == 0) {
                            x_46705 = x_46706;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46711 = 1;
                    while (slt32(skip_threads_46711, 32)) {
                        if (sle32(skip_threads_46711, local_tid_46693 -
                                  squot32(local_tid_46693, 32) * 32) &&
                            (squot32(local_tid_46693, 32) == 0 &&
                             ltid_in_bounds_46708)) {
                            // read operands
                            {
                                x_46705 = ((volatile __local
                                            float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693) -
                                                                         sext_i32_i64(skip_threads_46711)];
                            }
                            // perform operation
                            {
                                bool inactive_46712 =
                                     slt64(srem64(sext_i32_i64(local_tid_46693 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46700,
                                                  iota32_arg_28233),
                                           sext_i32_i64(local_tid_46693 * 32 +
                                           32 - 1) + chunk_offset_46700 -
                                           (sext_i32_i64((local_tid_46693 -
                                                          skip_threads_46711) *
                                            32 + 32 - 1) + chunk_offset_46700));
                                
                                if (inactive_46712) {
                                    x_46705 = x_46706;
                                }
                                if (!inactive_46712) {
                                    float defunc_1_op_res_46707 = x_46705 +
                                          x_46706;
                                    
                                    x_46705 = defunc_1_op_res_46707;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46695, skip_threads_46711)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46711, local_tid_46693 -
                                  squot32(local_tid_46693, 32) * 32) &&
                            (squot32(local_tid_46693, 32) == 0 &&
                             ltid_in_bounds_46708)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)] =
                                    x_46705;
                                x_46706 = x_46705;
                            }
                        }
                        if (sle32(wave_sizze_46695, skip_threads_46711)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46711 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46693, 32) == 0 ||
                      !ltid_in_bounds_46708)) {
                    // read operands
                    {
                        x_46703 = x_46702;
                        x_46702 = ((__local
                                    float *) scan_arr_mem_46697)[sext_i32_i64(squot32(local_tid_46693,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_46713 =
                             slt64(srem64(sext_i32_i64(local_tid_46693) +
                                          chunk_offset_46700, iota32_arg_28233),
                                   sext_i32_i64(local_tid_46693) +
                                   chunk_offset_46700 -
                                   (sext_i32_i64(squot32(local_tid_46693, 32) *
                                    32 - 1) + chunk_offset_46700));
                        
                        if (inactive_46713) {
                            x_46702 = x_46703;
                        }
                        if (!inactive_46713) {
                            float defunc_1_op_res_46704 = x_46702 + x_46703;
                            
                            x_46702 = defunc_1_op_res_46704;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)] =
                            x_46702;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46693, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)] =
                        x_46703;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_34036, m_27772) && slt64(gtid_34044,
                                                        iota32_arg_28233)) {
                    ((__global float *) mem_45403)[gtid_34036 *
                                                   iota32_arg_28233 +
                                                   gtid_34044] = ((__local
                                                                   float *) scan_arr_mem_46697)[sext_i32_i64(local_tid_46693)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46714 = slt64(srem64(chunk_offset_46700 +
                                                          segscan_group_sizze_34093,
                                                          iota32_arg_28233),
                                                   chunk_offset_46700 +
                                                   segscan_group_sizze_34093 -
                                                   (chunk_offset_46700 +
                                                    segscan_group_sizze_34093 -
                                                    (int64_t) 1));
                bool should_load_carry_46715 = local_tid_46693 == 0 &&
                     !crosses_segment_46714;
                
                if (should_load_carry_46715) {
                    x_34097 = ((__local
                                float *) scan_arr_mem_46697)[segscan_group_sizze_34093 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_46715) {
                    x_34097 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_34093
}
__kernel void mainDetailedziscan_stage2_32356(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46297_backing_aligned_0,
                                              int64_t N_27771, int64_t m_27772,
                                              int64_t stage1_num_groups_46266,
                                              int32_t num_threads_46267,
                                              __global unsigned char *mem_45163)
{
    #define segscan_group_sizze_32373 (mainDetailedzisegscan_group_sizze_32350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46297_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46297_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46292;
    int32_t local_tid_46293;
    int64_t group_sizze_46296;
    int32_t wave_sizze_46295;
    int32_t group_tid_46294;
    
    global_tid_46292 = get_global_id(0);
    local_tid_46293 = get_local_id(0);
    group_sizze_46296 = get_local_size(0);
    wave_sizze_46295 = LOCKSTEP_WIDTH;
    group_tid_46294 = get_group_id(0);
    
    int32_t phys_tid_32356;
    
    phys_tid_32356 = global_tid_46292;
    
    __local char *scan_arr_mem_46297;
    
    scan_arr_mem_46297 = (__local char *) scan_arr_mem_46297_backing_0;
    
    int64_t flat_idx_46299;
    
    flat_idx_46299 = (sext_i32_i64(local_tid_46293) + (int64_t) 1) *
        (segscan_group_sizze_32373 * sdiv_up64(m_27772 * N_27771,
                                               sext_i32_i64(num_threads_46267))) -
        (int64_t) 1;
    
    int64_t gtid_32347;
    
    gtid_32347 = squot64(flat_idx_46299, N_27771);
    
    int64_t gtid_32355;
    
    gtid_32355 = flat_idx_46299 - squot64(flat_idx_46299, N_27771) * N_27771;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_32347, m_27772) && slt64(gtid_32355, N_27771)) {
            ((__local
              int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)] =
                ((__global int64_t *) mem_45163)[gtid_32347 * N_27771 +
                                                 gtid_32355];
        } else {
            ((__local
              int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_32378;
    int64_t x_32379;
    int64_t x_46300;
    int64_t x_46301;
    bool ltid_in_bounds_46303;
    
    ltid_in_bounds_46303 = slt64(sext_i32_i64(local_tid_46293),
                                 stage1_num_groups_46266);
    
    int32_t skip_threads_46304;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46303) {
            x_32379 = ((volatile __local
                        int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)];
            if ((local_tid_46293 - squot32(local_tid_46293, 32) * 32) == 0) {
                x_32378 = x_32379;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46304 = 1;
        while (slt32(skip_threads_46304, 32)) {
            if (sle32(skip_threads_46304, local_tid_46293 -
                      squot32(local_tid_46293, 32) * 32) &&
                ltid_in_bounds_46303) {
                // read operands
                {
                    x_32378 = ((volatile __local
                                int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293) -
                                                               sext_i32_i64(skip_threads_46304)];
                }
                // perform operation
                {
                    bool inactive_46305 =
                         slt64(srem64((sext_i32_i64(local_tid_46293) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_32373 *
                                       sdiv_up64(m_27772 * N_27771,
                                                 sext_i32_i64(num_threads_46267))) -
                                      (int64_t) 1, N_27771),
                               (sext_i32_i64(local_tid_46293) + (int64_t) 1) *
                               (segscan_group_sizze_32373 * sdiv_up64(m_27772 *
                                                                      N_27771,
                                                                      sext_i32_i64(num_threads_46267))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_46293 -
                                               skip_threads_46304) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_32373 *
                                               sdiv_up64(m_27772 * N_27771,
                                                         sext_i32_i64(num_threads_46267))) -
                                              (int64_t) 1));
                    
                    if (inactive_46305) {
                        x_32378 = x_32379;
                    }
                    if (!inactive_46305) {
                        int64_t defunc_1_op_res_32380 = add64(x_32378, x_32379);
                        
                        x_32378 = defunc_1_op_res_32380;
                    }
                }
            }
            if (sle32(wave_sizze_46295, skip_threads_46304)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46304, local_tid_46293 -
                      squot32(local_tid_46293, 32) * 32) &&
                ltid_in_bounds_46303) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)] =
                        x_32378;
                    x_32379 = x_32378;
                }
            }
            if (sle32(wave_sizze_46295, skip_threads_46304)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46304 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46293 - squot32(local_tid_46293, 32) * 32) == 31 &&
            ltid_in_bounds_46303) {
            ((volatile __local
              int64_t *) scan_arr_mem_46297)[sext_i32_i64(squot32(local_tid_46293,
                                                                  32))] =
                x_32378;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46306;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46293, 32) == 0 && ltid_in_bounds_46303) {
                x_46301 = ((volatile __local
                            int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)];
                if ((local_tid_46293 - squot32(local_tid_46293, 32) * 32) ==
                    0) {
                    x_46300 = x_46301;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46306 = 1;
            while (slt32(skip_threads_46306, 32)) {
                if (sle32(skip_threads_46306, local_tid_46293 -
                          squot32(local_tid_46293, 32) * 32) &&
                    (squot32(local_tid_46293, 32) == 0 &&
                     ltid_in_bounds_46303)) {
                    // read operands
                    {
                        x_46300 = ((volatile __local
                                    int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293) -
                                                                   sext_i32_i64(skip_threads_46306)];
                    }
                    // perform operation
                    {
                        bool inactive_46307 =
                             slt64(srem64((sext_i32_i64(local_tid_46293 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_32373 *
                                           sdiv_up64(m_27772 * N_27771,
                                                     sext_i32_i64(num_threads_46267))) -
                                          (int64_t) 1, N_27771),
                                   (sext_i32_i64(local_tid_46293 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_32373 *
                                    sdiv_up64(m_27772 * N_27771,
                                              sext_i32_i64(num_threads_46267))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_46293 -
                                                   skip_threads_46306) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_32373 *
                                     sdiv_up64(m_27772 * N_27771,
                                               sext_i32_i64(num_threads_46267))) -
                                    (int64_t) 1));
                        
                        if (inactive_46307) {
                            x_46300 = x_46301;
                        }
                        if (!inactive_46307) {
                            int64_t defunc_1_op_res_46302 = add64(x_46300,
                                                                  x_46301);
                            
                            x_46300 = defunc_1_op_res_46302;
                        }
                    }
                }
                if (sle32(wave_sizze_46295, skip_threads_46306)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46306, local_tid_46293 -
                          squot32(local_tid_46293, 32) * 32) &&
                    (squot32(local_tid_46293, 32) == 0 &&
                     ltid_in_bounds_46303)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)] =
                            x_46300;
                        x_46301 = x_46300;
                    }
                }
                if (sle32(wave_sizze_46295, skip_threads_46306)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46306 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46293, 32) == 0 || !ltid_in_bounds_46303)) {
            // read operands
            {
                x_32379 = x_32378;
                x_32378 = ((__local
                            int64_t *) scan_arr_mem_46297)[sext_i32_i64(squot32(local_tid_46293,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46308 =
                     slt64(srem64((sext_i32_i64(local_tid_46293) +
                                   (int64_t) 1) * (segscan_group_sizze_32373 *
                                                   sdiv_up64(m_27772 * N_27771,
                                                             sext_i32_i64(num_threads_46267))) -
                                  (int64_t) 1, N_27771),
                           (sext_i32_i64(local_tid_46293) + (int64_t) 1) *
                           (segscan_group_sizze_32373 * sdiv_up64(m_27772 *
                                                                  N_27771,
                                                                  sext_i32_i64(num_threads_46267))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_46293,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_32373 *
                                           sdiv_up64(m_27772 * N_27771,
                                                     sext_i32_i64(num_threads_46267))) -
                                          (int64_t) 1));
                
                if (inactive_46308) {
                    x_32378 = x_32379;
                }
                if (!inactive_46308) {
                    int64_t defunc_1_op_res_32380 = add64(x_32378, x_32379);
                    
                    x_32378 = defunc_1_op_res_32380;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)] =
                    x_32378;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46293, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)] =
                x_32379;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_32347, m_27772) && slt64(gtid_32355, N_27771)) {
            ((__global int64_t *) mem_45163)[gtid_32347 * N_27771 +
                                             gtid_32355] = ((__local
                                                             int64_t *) scan_arr_mem_46297)[sext_i32_i64(local_tid_46293)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_32373
}
__kernel void mainDetailedziscan_stage2_34045(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46721_backing_aligned_0,
                                              int64_t m_27772,
                                              int64_t iota32_arg_28233,
                                              int64_t stage1_num_groups_46690,
                                              int32_t num_threads_46691,
                                              __global unsigned char *mem_45403)
{
    #define segscan_group_sizze_34093 (mainDetailedzisegscan_group_sizze_34039)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46721_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46721_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46716;
    int32_t local_tid_46717;
    int64_t group_sizze_46720;
    int32_t wave_sizze_46719;
    int32_t group_tid_46718;
    
    global_tid_46716 = get_global_id(0);
    local_tid_46717 = get_local_id(0);
    group_sizze_46720 = get_local_size(0);
    wave_sizze_46719 = LOCKSTEP_WIDTH;
    group_tid_46718 = get_group_id(0);
    
    int32_t phys_tid_34045;
    
    phys_tid_34045 = global_tid_46716;
    
    __local char *scan_arr_mem_46721;
    
    scan_arr_mem_46721 = (__local char *) scan_arr_mem_46721_backing_0;
    
    int64_t flat_idx_46723;
    
    flat_idx_46723 = (sext_i32_i64(local_tid_46717) + (int64_t) 1) *
        (segscan_group_sizze_34093 * sdiv_up64(m_27772 * iota32_arg_28233,
                                               sext_i32_i64(num_threads_46691))) -
        (int64_t) 1;
    
    int64_t gtid_34036;
    
    gtid_34036 = squot64(flat_idx_46723, iota32_arg_28233);
    
    int64_t gtid_34044;
    
    gtid_34044 = flat_idx_46723 - squot64(flat_idx_46723, iota32_arg_28233) *
        iota32_arg_28233;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_34036, m_27772) && slt64(gtid_34044, iota32_arg_28233)) {
            ((__local
              float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)] =
                ((__global float *) mem_45403)[gtid_34036 * iota32_arg_28233 +
                                               gtid_34044];
        } else {
            ((__local
              float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_34097;
    float x_34098;
    float x_46724;
    float x_46725;
    bool ltid_in_bounds_46727;
    
    ltid_in_bounds_46727 = slt64(sext_i32_i64(local_tid_46717),
                                 stage1_num_groups_46690);
    
    int32_t skip_threads_46728;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46727) {
            x_34098 = ((volatile __local
                        float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)];
            if ((local_tid_46717 - squot32(local_tid_46717, 32) * 32) == 0) {
                x_34097 = x_34098;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46728 = 1;
        while (slt32(skip_threads_46728, 32)) {
            if (sle32(skip_threads_46728, local_tid_46717 -
                      squot32(local_tid_46717, 32) * 32) &&
                ltid_in_bounds_46727) {
                // read operands
                {
                    x_34097 = ((volatile __local
                                float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717) -
                                                             sext_i32_i64(skip_threads_46728)];
                }
                // perform operation
                {
                    bool inactive_46729 =
                         slt64(srem64((sext_i32_i64(local_tid_46717) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_34093 *
                                       sdiv_up64(m_27772 * iota32_arg_28233,
                                                 sext_i32_i64(num_threads_46691))) -
                                      (int64_t) 1, iota32_arg_28233),
                               (sext_i32_i64(local_tid_46717) + (int64_t) 1) *
                               (segscan_group_sizze_34093 * sdiv_up64(m_27772 *
                                                                      iota32_arg_28233,
                                                                      sext_i32_i64(num_threads_46691))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_46717 -
                                               skip_threads_46728) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_34093 *
                                               sdiv_up64(m_27772 *
                                                         iota32_arg_28233,
                                                         sext_i32_i64(num_threads_46691))) -
                                              (int64_t) 1));
                    
                    if (inactive_46729) {
                        x_34097 = x_34098;
                    }
                    if (!inactive_46729) {
                        float defunc_1_op_res_34099 = x_34097 + x_34098;
                        
                        x_34097 = defunc_1_op_res_34099;
                    }
                }
            }
            if (sle32(wave_sizze_46719, skip_threads_46728)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46728, local_tid_46717 -
                      squot32(local_tid_46717, 32) * 32) &&
                ltid_in_bounds_46727) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)] =
                        x_34097;
                    x_34098 = x_34097;
                }
            }
            if (sle32(wave_sizze_46719, skip_threads_46728)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46728 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46717 - squot32(local_tid_46717, 32) * 32) == 31 &&
            ltid_in_bounds_46727) {
            ((volatile __local
              float *) scan_arr_mem_46721)[sext_i32_i64(squot32(local_tid_46717,
                                                                32))] = x_34097;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46730;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46717, 32) == 0 && ltid_in_bounds_46727) {
                x_46725 = ((volatile __local
                            float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)];
                if ((local_tid_46717 - squot32(local_tid_46717, 32) * 32) ==
                    0) {
                    x_46724 = x_46725;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46730 = 1;
            while (slt32(skip_threads_46730, 32)) {
                if (sle32(skip_threads_46730, local_tid_46717 -
                          squot32(local_tid_46717, 32) * 32) &&
                    (squot32(local_tid_46717, 32) == 0 &&
                     ltid_in_bounds_46727)) {
                    // read operands
                    {
                        x_46724 = ((volatile __local
                                    float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717) -
                                                                 sext_i32_i64(skip_threads_46730)];
                    }
                    // perform operation
                    {
                        bool inactive_46731 =
                             slt64(srem64((sext_i32_i64(local_tid_46717 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_34093 *
                                           sdiv_up64(m_27772 * iota32_arg_28233,
                                                     sext_i32_i64(num_threads_46691))) -
                                          (int64_t) 1, iota32_arg_28233),
                                   (sext_i32_i64(local_tid_46717 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_34093 *
                                    sdiv_up64(m_27772 * iota32_arg_28233,
                                              sext_i32_i64(num_threads_46691))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_46717 -
                                                   skip_threads_46730) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_34093 *
                                     sdiv_up64(m_27772 * iota32_arg_28233,
                                               sext_i32_i64(num_threads_46691))) -
                                    (int64_t) 1));
                        
                        if (inactive_46731) {
                            x_46724 = x_46725;
                        }
                        if (!inactive_46731) {
                            float defunc_1_op_res_46726 = x_46724 + x_46725;
                            
                            x_46724 = defunc_1_op_res_46726;
                        }
                    }
                }
                if (sle32(wave_sizze_46719, skip_threads_46730)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46730, local_tid_46717 -
                          squot32(local_tid_46717, 32) * 32) &&
                    (squot32(local_tid_46717, 32) == 0 &&
                     ltid_in_bounds_46727)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)] =
                            x_46724;
                        x_46725 = x_46724;
                    }
                }
                if (sle32(wave_sizze_46719, skip_threads_46730)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46730 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46717, 32) == 0 || !ltid_in_bounds_46727)) {
            // read operands
            {
                x_34098 = x_34097;
                x_34097 = ((__local
                            float *) scan_arr_mem_46721)[sext_i32_i64(squot32(local_tid_46717,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46732 =
                     slt64(srem64((sext_i32_i64(local_tid_46717) +
                                   (int64_t) 1) * (segscan_group_sizze_34093 *
                                                   sdiv_up64(m_27772 *
                                                             iota32_arg_28233,
                                                             sext_i32_i64(num_threads_46691))) -
                                  (int64_t) 1, iota32_arg_28233),
                           (sext_i32_i64(local_tid_46717) + (int64_t) 1) *
                           (segscan_group_sizze_34093 * sdiv_up64(m_27772 *
                                                                  iota32_arg_28233,
                                                                  sext_i32_i64(num_threads_46691))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_46717,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_34093 *
                                           sdiv_up64(m_27772 * iota32_arg_28233,
                                                     sext_i32_i64(num_threads_46691))) -
                                          (int64_t) 1));
                
                if (inactive_46732) {
                    x_34097 = x_34098;
                }
                if (!inactive_46732) {
                    float defunc_1_op_res_34099 = x_34097 + x_34098;
                    
                    x_34097 = defunc_1_op_res_34099;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)] =
                    x_34097;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46717, 32) == 0) {
            ((__local
              float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)] =
                x_34098;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_34036, m_27772) && slt64(gtid_34044, iota32_arg_28233)) {
            ((__global float *) mem_45403)[gtid_34036 * iota32_arg_28233 +
                                           gtid_34044] = ((__local
                                                           float *) scan_arr_mem_46721)[sext_i32_i64(local_tid_46717)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_34093
}
__kernel void mainDetailedziscan_stage3_32356(__global int *global_failure,
                                              int64_t N_27771, int64_t m_27772,
                                              int64_t num_groups_32374,
                                              int32_t num_threads_46267,
                                              int32_t required_groups_46309,
                                              __global unsigned char *mem_45163)
{
    #define segscan_group_sizze_32373 (mainDetailedzisegscan_group_sizze_32350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46310;
    int32_t local_tid_46311;
    int64_t group_sizze_46314;
    int32_t wave_sizze_46313;
    int32_t group_tid_46312;
    
    global_tid_46310 = get_global_id(0);
    local_tid_46311 = get_local_id(0);
    group_sizze_46314 = get_local_size(0);
    wave_sizze_46313 = LOCKSTEP_WIDTH;
    group_tid_46312 = get_group_id(0);
    
    int32_t phys_tid_32356;
    
    phys_tid_32356 = global_tid_46310;
    
    int32_t phys_group_id_46315;
    
    phys_group_id_46315 = get_group_id(0);
    for (int32_t i_46316 = 0; i_46316 < sdiv_up32(required_groups_46309 -
                                                  phys_group_id_46315,
                                                  sext_i64_i32(num_groups_32374));
         i_46316++) {
        int32_t virt_group_id_46317 = phys_group_id_46315 + i_46316 *
                sext_i64_i32(num_groups_32374);
        int64_t flat_idx_46318 = sext_i32_i64(virt_group_id_46317) *
                segscan_group_sizze_32373 + sext_i32_i64(local_tid_46311);
        int64_t gtid_32347 = squot64(flat_idx_46318, N_27771);
        int64_t gtid_32355 = flat_idx_46318 - squot64(flat_idx_46318, N_27771) *
                N_27771;
        int64_t orig_group_46319 = squot64(flat_idx_46318,
                                           segscan_group_sizze_32373 *
                                           sdiv_up64(m_27772 * N_27771,
                                                     sext_i32_i64(num_threads_46267)));
        int64_t carry_in_flat_idx_46320 = orig_group_46319 *
                (segscan_group_sizze_32373 * sdiv_up64(m_27772 * N_27771,
                                                       sext_i32_i64(num_threads_46267))) -
                (int64_t) 1;
        
        if (slt64(gtid_32347, m_27772) && slt64(gtid_32355, N_27771)) {
            if (!(orig_group_46319 == (int64_t) 0 || (flat_idx_46318 ==
                                                      (orig_group_46319 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_32373 *
                                                       sdiv_up64(m_27772 *
                                                                 N_27771,
                                                                 sext_i32_i64(num_threads_46267))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_46318,
                                                                   N_27771),
                                                            flat_idx_46318 -
                                                            carry_in_flat_idx_46320)))) {
                int64_t x_32378;
                int64_t x_32379;
                
                x_32378 = ((__global
                            int64_t *) mem_45163)[squot64(carry_in_flat_idx_46320,
                                                          N_27771) * N_27771 +
                                                  (carry_in_flat_idx_46320 -
                                                   squot64(carry_in_flat_idx_46320,
                                                           N_27771) * N_27771)];
                x_32379 = ((__global int64_t *) mem_45163)[gtid_32347 *
                                                           N_27771 +
                                                           gtid_32355];
                
                int64_t defunc_1_op_res_32380;
                
                defunc_1_op_res_32380 = add64(x_32378, x_32379);
                x_32378 = defunc_1_op_res_32380;
                ((__global int64_t *) mem_45163)[gtid_32347 * N_27771 +
                                                 gtid_32355] = x_32378;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_32373
}
__kernel void mainDetailedziscan_stage3_34045(__global int *global_failure,
                                              int64_t m_27772,
                                              int64_t iota32_arg_28233,
                                              int64_t num_groups_34094,
                                              int32_t num_threads_46691,
                                              int32_t required_groups_46733,
                                              __global unsigned char *mem_45403)
{
    #define segscan_group_sizze_34093 (mainDetailedzisegscan_group_sizze_34039)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46734;
    int32_t local_tid_46735;
    int64_t group_sizze_46738;
    int32_t wave_sizze_46737;
    int32_t group_tid_46736;
    
    global_tid_46734 = get_global_id(0);
    local_tid_46735 = get_local_id(0);
    group_sizze_46738 = get_local_size(0);
    wave_sizze_46737 = LOCKSTEP_WIDTH;
    group_tid_46736 = get_group_id(0);
    
    int32_t phys_tid_34045;
    
    phys_tid_34045 = global_tid_46734;
    
    int32_t phys_group_id_46739;
    
    phys_group_id_46739 = get_group_id(0);
    for (int32_t i_46740 = 0; i_46740 < sdiv_up32(required_groups_46733 -
                                                  phys_group_id_46739,
                                                  sext_i64_i32(num_groups_34094));
         i_46740++) {
        int32_t virt_group_id_46741 = phys_group_id_46739 + i_46740 *
                sext_i64_i32(num_groups_34094);
        int64_t flat_idx_46742 = sext_i32_i64(virt_group_id_46741) *
                segscan_group_sizze_34093 + sext_i32_i64(local_tid_46735);
        int64_t gtid_34036 = squot64(flat_idx_46742, iota32_arg_28233);
        int64_t gtid_34044 = flat_idx_46742 - squot64(flat_idx_46742,
                                                      iota32_arg_28233) *
                iota32_arg_28233;
        int64_t orig_group_46743 = squot64(flat_idx_46742,
                                           segscan_group_sizze_34093 *
                                           sdiv_up64(m_27772 * iota32_arg_28233,
                                                     sext_i32_i64(num_threads_46691)));
        int64_t carry_in_flat_idx_46744 = orig_group_46743 *
                (segscan_group_sizze_34093 * sdiv_up64(m_27772 *
                                                       iota32_arg_28233,
                                                       sext_i32_i64(num_threads_46691))) -
                (int64_t) 1;
        
        if (slt64(gtid_34036, m_27772) && slt64(gtid_34044, iota32_arg_28233)) {
            if (!(orig_group_46743 == (int64_t) 0 || (flat_idx_46742 ==
                                                      (orig_group_46743 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_34093 *
                                                       sdiv_up64(m_27772 *
                                                                 iota32_arg_28233,
                                                                 sext_i32_i64(num_threads_46691))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_46742,
                                                                   iota32_arg_28233),
                                                            flat_idx_46742 -
                                                            carry_in_flat_idx_46744)))) {
                float x_34097;
                float x_34098;
                
                x_34097 = ((__global
                            float *) mem_45403)[squot64(carry_in_flat_idx_46744,
                                                        iota32_arg_28233) *
                                                iota32_arg_28233 +
                                                (carry_in_flat_idx_46744 -
                                                 squot64(carry_in_flat_idx_46744,
                                                         iota32_arg_28233) *
                                                 iota32_arg_28233)];
                x_34098 = ((__global float *) mem_45403)[gtid_34036 *
                                                         iota32_arg_28233 +
                                                         gtid_34044];
                
                float defunc_1_op_res_34099;
                
                defunc_1_op_res_34099 = x_34097 + x_34098;
                x_34097 = defunc_1_op_res_34099;
                ((__global float *) mem_45403)[gtid_34036 * iota32_arg_28233 +
                                               gtid_34044] = x_34097;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_34093
}
__kernel void mainDetailedzisegmap_29975(__global int *global_failure,
                                         int64_t N_27771, float freq_27776,
                                         int64_t i32_res_27787, __global
                                         unsigned char *mappingindices_mem_44380,
                                         __global unsigned char *mem_44385)
{
    #define segmap_group_sizze_30048 (mainDetailedzisegmap_group_sizze_29978)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45691;
    int32_t local_tid_45692;
    int64_t group_sizze_45695;
    int32_t wave_sizze_45694;
    int32_t group_tid_45693;
    
    global_tid_45691 = get_global_id(0);
    local_tid_45692 = get_local_id(0);
    group_sizze_45695 = get_local_size(0);
    wave_sizze_45694 = LOCKSTEP_WIDTH;
    group_tid_45693 = get_group_id(0);
    
    int32_t phys_tid_29975;
    
    phys_tid_29975 = global_tid_45691;
    
    int64_t gtid_29973;
    
    gtid_29973 = squot64(sext_i32_i64(group_tid_45693) *
                         segmap_group_sizze_30048 +
                         sext_i32_i64(local_tid_45692), N_27771);
    
    int64_t gtid_29974;
    
    gtid_29974 = sext_i32_i64(group_tid_45693) * segmap_group_sizze_30048 +
        sext_i32_i64(local_tid_45692) - squot64(sext_i32_i64(group_tid_45693) *
                                                segmap_group_sizze_30048 +
                                                sext_i32_i64(local_tid_45692),
                                                N_27771) * N_27771;
    if (slt64(gtid_29973, i32_res_27787) && slt64(gtid_29974, N_27771)) {
        int32_t index_primexp_42340 = sext_i64_i32(gtid_29973);
        bool index_primexp_42337 = index_primexp_42340 == 0;
        float defunc_0_f_res_30054;
        
        if (index_primexp_42337) {
            defunc_0_f_res_30054 = 1.0F;
        } else {
            int32_t x_30053 = ((__global
                                int32_t *) mappingindices_mem_44380)[gtid_29974];
            bool cond_30055 = index_primexp_42340 == 1;
            float defunc_0_f_res_f_res_30056;
            
            if (cond_30055) {
                float i32_res_30057 = sitofp_i32_f32(x_30053);
                
                defunc_0_f_res_f_res_30056 = i32_res_30057;
            } else {
                int32_t r32_arg_30058 = sdiv32(index_primexp_42340, 2);
                float i32_res_30059 = sitofp_i32_f32(r32_arg_30058);
                float i32_res_30060 = sitofp_i32_f32(x_30053);
                float x_30061 = 6.2831855F * i32_res_30059;
                float x_30062 = i32_res_30060 * x_30061;
                float angle_30063 = x_30062 / freq_27776;
                int32_t x_30064 = smod32(index_primexp_42340, 2);
                bool cond_30065 = x_30064 == 0;
                float defunc_0_f_res_f_res_f_res_30066;
                
                if (cond_30065) {
                    float sin_res_30067;
                    
                    sin_res_30067 = futrts_sin32(angle_30063);
                    defunc_0_f_res_f_res_f_res_30066 = sin_res_30067;
                } else {
                    float cos_res_30068;
                    
                    cos_res_30068 = futrts_cos32(angle_30063);
                    defunc_0_f_res_f_res_f_res_30066 = cos_res_30068;
                }
                defunc_0_f_res_f_res_30056 = defunc_0_f_res_f_res_f_res_30066;
            }
            defunc_0_f_res_30054 = defunc_0_f_res_f_res_30056;
        }
        ((__global float *) mem_44385)[gtid_29973 * N_27771 + gtid_29974] =
            defunc_0_f_res_30054;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30048
}
__kernel void mainDetailedzisegmap_30153(__global int *global_failure,
                                         int64_t N_27771, float freq_27776,
                                         int64_t i32_res_27787, __global
                                         unsigned char *mappingindices_mem_44380,
                                         __global unsigned char *mem_44389)
{
    #define segmap_group_sizze_30222 (mainDetailedzisegmap_group_sizze_30156)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45696;
    int32_t local_tid_45697;
    int64_t group_sizze_45700;
    int32_t wave_sizze_45699;
    int32_t group_tid_45698;
    
    global_tid_45696 = get_global_id(0);
    local_tid_45697 = get_local_id(0);
    group_sizze_45700 = get_local_size(0);
    wave_sizze_45699 = LOCKSTEP_WIDTH;
    group_tid_45698 = get_group_id(0);
    
    int32_t phys_tid_30153;
    
    phys_tid_30153 = global_tid_45696;
    
    int64_t gtid_30151;
    
    gtid_30151 = squot64(sext_i32_i64(group_tid_45698) *
                         segmap_group_sizze_30222 +
                         sext_i32_i64(local_tid_45697), N_27771);
    
    int64_t gtid_30152;
    
    gtid_30152 = sext_i32_i64(group_tid_45698) * segmap_group_sizze_30222 +
        sext_i32_i64(local_tid_45697) - squot64(sext_i32_i64(group_tid_45698) *
                                                segmap_group_sizze_30222 +
                                                sext_i32_i64(local_tid_45697),
                                                N_27771) * N_27771;
    if (slt64(gtid_30151, i32_res_27787) && slt64(gtid_30152, N_27771)) {
        int32_t index_primexp_42349 = sext_i64_i32(gtid_30151);
        bool index_primexp_42346 = index_primexp_42349 == 0;
        float defunc_0_f_res_30228;
        
        if (index_primexp_42346) {
            defunc_0_f_res_30228 = 1.0F;
        } else {
            int32_t x_30227 = ((__global
                                int32_t *) mappingindices_mem_44380)[gtid_30152];
            int32_t i_30229 = add32(1, index_primexp_42349);
            int32_t r32_arg_30230 = sdiv32(i_30229, 2);
            float i32_res_30231 = sitofp_i32_f32(r32_arg_30230);
            float i32_res_30232 = sitofp_i32_f32(x_30227);
            float x_30233 = 6.2831855F * i32_res_30231;
            float x_30234 = i32_res_30232 * x_30233;
            float angle_30235 = x_30234 / freq_27776;
            int32_t x_30236 = smod32(i_30229, 2);
            bool cond_30237 = x_30236 == 0;
            float defunc_0_f_res_f_res_30238;
            
            if (cond_30237) {
                float sin_res_30239;
                
                sin_res_30239 = futrts_sin32(angle_30235);
                defunc_0_f_res_f_res_30238 = sin_res_30239;
            } else {
                float cos_res_30240;
                
                cos_res_30240 = futrts_cos32(angle_30235);
                defunc_0_f_res_f_res_30238 = cos_res_30240;
            }
            defunc_0_f_res_30228 = defunc_0_f_res_f_res_30238;
        }
        ((__global float *) mem_44389)[gtid_30151 * N_27771 + gtid_30152] =
            defunc_0_f_res_30228;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30222
}
__kernel void mainDetailedzisegmap_30281(__global int *global_failure,
                                         int64_t N_27771, int64_t i32_res_27787,
                                         float i32_res_27852, __global
                                         unsigned char *mem_44393, __global
                                         unsigned char *mem_44397)
{
    #define segmap_group_sizze_30305 (mainDetailedzisegmap_group_sizze_30284)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45701;
    int32_t local_tid_45702;
    int64_t group_sizze_45705;
    int32_t wave_sizze_45704;
    int32_t group_tid_45703;
    
    global_tid_45701 = get_global_id(0);
    local_tid_45702 = get_local_id(0);
    group_sizze_45705 = get_local_size(0);
    wave_sizze_45704 = LOCKSTEP_WIDTH;
    group_tid_45703 = get_group_id(0);
    
    int32_t phys_tid_30281;
    
    phys_tid_30281 = global_tid_45701;
    
    int64_t gtid_30279;
    
    gtid_30279 = squot64(sext_i32_i64(group_tid_45703) *
                         segmap_group_sizze_30305 +
                         sext_i32_i64(local_tid_45702), i32_res_27787);
    
    int64_t gtid_30280;
    
    gtid_30280 = sext_i32_i64(group_tid_45703) * segmap_group_sizze_30305 +
        sext_i32_i64(local_tid_45702) - squot64(sext_i32_i64(group_tid_45703) *
                                                segmap_group_sizze_30305 +
                                                sext_i32_i64(local_tid_45702),
                                                i32_res_27787) * i32_res_27787;
    if (slt64(gtid_30279, N_27771) && slt64(gtid_30280, i32_res_27787)) {
        float x_30308 = ((__global float *) mem_44393)[gtid_30279 *
                                                       i32_res_27787 +
                                                       gtid_30280];
        float defunc_0_f_res_30309 = i32_res_27852 + x_30308;
        
        ((__global float *) mem_44397)[gtid_30279 * i32_res_27787 +
                                       gtid_30280] = defunc_0_f_res_30309;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30305
}
__kernel void mainDetailedzisegmap_30314(__global int *global_failure,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t n_27775, int32_t k2p2zq_27785,
                                         int64_t i32_res_27787,
                                         int64_t num_groups_30339, __global
                                         unsigned char *binop_p_mem_44390,
                                         __global unsigned char *mem_44397,
                                         __global unsigned char *mem_44400,
                                         __global unsigned char *mem_44404,
                                         __global unsigned char *mem_44446)
{
    #define segmap_group_sizze_30338 (mainDetailedzisegmap_group_sizze_30316)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45709;
    int32_t local_tid_45710;
    int64_t group_sizze_45713;
    int32_t wave_sizze_45712;
    int32_t group_tid_45711;
    
    global_tid_45709 = get_global_id(0);
    local_tid_45710 = get_local_id(0);
    group_sizze_45713 = get_local_size(0);
    wave_sizze_45712 = LOCKSTEP_WIDTH;
    group_tid_45711 = get_group_id(0);
    
    int32_t phys_tid_30314;
    
    phys_tid_30314 = global_tid_45709;
    
    int32_t phys_group_id_45714;
    
    phys_group_id_45714 = get_group_id(0);
    for (int32_t i_45715 = 0; i_45715 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772, segmap_group_sizze_30338)) -
                   phys_group_id_45714, sext_i64_i32(num_groups_30339));
         i_45715++) {
        int32_t virt_group_id_45716 = phys_group_id_45714 + i_45715 *
                sext_i64_i32(num_groups_30339);
        int64_t gtid_30313 = sext_i32_i64(virt_group_id_45716) *
                segmap_group_sizze_30338 + sext_i32_i64(local_tid_45710);
        
        if (slt64(gtid_30313, m_27772)) {
            for (int32_t i_44360 = 0; i_44360 < k2p2zq_27785; i_44360++) {
                int64_t i_44289 = sext_i32_i64(i_44360);
                
                for (int32_t i_44359 = 0; i_44359 < k2p2zq_27785; i_44359++) {
                    int64_t i_44293 = sext_i32_i64(i_44359);
                    float defunc_2_reduce_res_30347;
                    float redout_44295 = 0.0F;
                    
                    for (int32_t i_44358 = 0; i_44358 < n_27775; i_44358++) {
                        int64_t i_44296 = sext_i32_i64(i_44358);
                        float x_30351 = ((__global float *) mem_44400)[i_44296 *
                                                                       m_27772 +
                                                                       gtid_30313];
                        float x_30352 = ((__global
                                          float *) binop_p_mem_44390)[i_44289 *
                                                                      N_27771 +
                                                                      i_44296];
                        float x_30353 = ((__global float *) mem_44397)[i_44296 *
                                                                       i32_res_27787 +
                                                                       i_44293];
                        float x_30354 = x_30352 * x_30353;
                        bool isnan_res_30355;
                        
                        isnan_res_30355 = futrts_isnan32(x_30351);
                        
                        float y_30356;
                        
                        if (isnan_res_30355) {
                            y_30356 = 0.0F;
                        } else {
                            y_30356 = 1.0F;
                        }
                        
                        float defunc_2_f_res_30357 = x_30354 * y_30356;
                        float defunc_1_op_res_30350 = defunc_2_f_res_30357 +
                              redout_44295;
                        float redout_tmp_45719 = defunc_1_op_res_30350;
                        
                        redout_44295 = redout_tmp_45719;
                    }
                    defunc_2_reduce_res_30347 = redout_44295;
                    ((__global float *) mem_44404)[phys_tid_30314 + (i_44289 *
                                                                     (num_groups_30339 *
                                                                      segmap_group_sizze_30338 *
                                                                      i32_res_27787) +
                                                                     i_44293 *
                                                                     (num_groups_30339 *
                                                                      segmap_group_sizze_30338))] =
                        defunc_2_reduce_res_30347;
                }
            }
            for (int64_t i_45720 = 0; i_45720 < i32_res_27787; i_45720++) {
                for (int64_t i_45721 = 0; i_45721 < i32_res_27787; i_45721++) {
                    ((__global float *) mem_44446)[i_45720 * (m_27772 *
                                                              i32_res_27787) +
                                                   i_45721 * m_27772 +
                                                   gtid_30313] = ((__global
                                                                   float *) mem_44404)[phys_tid_30314 +
                                                                                       (i_45720 *
                                                                                        (num_groups_30339 *
                                                                                         segmap_group_sizze_30338 *
                                                                                         i32_res_27787) +
                                                                                        i_45721 *
                                                                                        (num_groups_30339 *
                                                                                         segmap_group_sizze_30338))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30338
}
__kernel void mainDetailedzisegmap_30360(__global int *global_failure,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t n_27775, int32_t k2p2zq_27785,
                                         int64_t i32_res_27787,
                                         int64_t num_groups_30516, __global
                                         unsigned char *images_mem_44381,
                                         __global unsigned char *mem_44393,
                                         __global unsigned char *mem_44397,
                                         __global unsigned char *mem_44449,
                                         __global unsigned char *mem_44465)
{
    #define segmap_group_sizze_30515 (mainDetailedzisegmap_group_sizze_30363)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45722;
    int32_t local_tid_45723;
    int64_t group_sizze_45726;
    int32_t wave_sizze_45725;
    int32_t group_tid_45724;
    
    global_tid_45722 = get_global_id(0);
    local_tid_45723 = get_local_id(0);
    group_sizze_45726 = get_local_size(0);
    wave_sizze_45725 = LOCKSTEP_WIDTH;
    group_tid_45724 = get_group_id(0);
    
    int32_t phys_tid_30360;
    
    phys_tid_30360 = global_tid_45722;
    
    int32_t phys_group_id_45727;
    
    phys_group_id_45727 = get_group_id(0);
    for (int32_t i_45728 = 0; i_45728 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772 * i32_res_27787,
                                          segmap_group_sizze_30515)) -
                   phys_group_id_45727, sext_i64_i32(num_groups_30516));
         i_45728++) {
        int32_t virt_group_id_45729 = phys_group_id_45727 + i_45728 *
                sext_i64_i32(num_groups_30516);
        int64_t gtid_30358 = squot64(sext_i32_i64(virt_group_id_45729) *
                                     segmap_group_sizze_30515 +
                                     sext_i32_i64(local_tid_45723),
                                     i32_res_27787);
        int64_t gtid_30359 = sext_i32_i64(virt_group_id_45729) *
                segmap_group_sizze_30515 + sext_i32_i64(local_tid_45723) -
                squot64(sext_i32_i64(virt_group_id_45729) *
                        segmap_group_sizze_30515 +
                        sext_i32_i64(local_tid_45723), i32_res_27787) *
                i32_res_27787;
        
        if (slt64(gtid_30358, m_27772) && slt64(gtid_30359, i32_res_27787)) {
            for (int32_t i_44362 = 0; i_44362 < k2p2zq_27785; i_44362++) {
                int64_t i_44299 = sext_i32_i64(i_44362);
                float defunc_2_reduce_res_30527;
                float redout_44301 = 0.0F;
                
                for (int32_t i_44361 = 0; i_44361 < n_27775; i_44361++) {
                    int64_t i_44302 = sext_i32_i64(i_44361);
                    float x_30531 = ((__global
                                      float *) images_mem_44381)[gtid_30358 *
                                                                 N_27771 +
                                                                 i_44302];
                    float x_30532 = ((__global float *) mem_44393)[i_44302 *
                                                                   i32_res_27787 +
                                                                   gtid_30359];
                    float x_30533 = ((__global float *) mem_44397)[i_44302 *
                                                                   i32_res_27787 +
                                                                   i_44299];
                    float x_30534 = x_30532 * x_30533;
                    bool isnan_res_30535;
                    
                    isnan_res_30535 = futrts_isnan32(x_30531);
                    
                    float y_30536;
                    
                    if (isnan_res_30535) {
                        y_30536 = 0.0F;
                    } else {
                        y_30536 = 1.0F;
                    }
                    
                    float defunc_2_f_res_30537 = x_30534 * y_30536;
                    float defunc_1_op_res_30530 = defunc_2_f_res_30537 +
                          redout_44301;
                    float redout_tmp_45731 = defunc_1_op_res_30530;
                    
                    redout_44301 = redout_tmp_45731;
                }
                defunc_2_reduce_res_30527 = redout_44301;
                ((__global float *) mem_44449)[phys_tid_30360 + i_44299 *
                                               (num_groups_30516 *
                                                segmap_group_sizze_30515)] =
                    defunc_2_reduce_res_30527;
            }
            for (int64_t i_45732 = 0; i_45732 < i32_res_27787; i_45732++) {
                ((__global float *) mem_44465)[i_45732 * (i32_res_27787 *
                                                          m_27772) +
                                               gtid_30358 * i32_res_27787 +
                                               gtid_30359] = ((__global
                                                               float *) mem_44449)[phys_tid_30360 +
                                                                                   i_45732 *
                                                                                   (num_groups_30516 *
                                                                                    segmap_group_sizze_30515)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30515
}
__kernel void mainDetailedzisegmap_30952(__global int *global_failure,
                                         int64_t m_27772, int64_t i32_res_27787,
                                         int64_t nm_27920,
                                         int64_t i32_res_27935, int64_t x_27936,
                                         int64_t j_m_i_27939,
                                         int64_t gauss_jordan_res_r_ixfn_44617,
                                         int64_t gauss_jordan_res_r_ixfn_44618,
                                         int64_t gauss_jordan_res_r_ixfn_44620,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_44622,
                                         __global unsigned char *mem_44627)
{
    #define segmap_group_sizze_31699 (mainDetailedzisegmap_group_sizze_30956)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45889;
    int32_t local_tid_45890;
    int64_t group_sizze_45893;
    int32_t wave_sizze_45892;
    int32_t group_tid_45891;
    
    global_tid_45889 = get_global_id(0);
    local_tid_45890 = get_local_id(0);
    group_sizze_45893 = get_local_size(0);
    wave_sizze_45892 = LOCKSTEP_WIDTH;
    group_tid_45891 = get_group_id(0);
    
    int32_t phys_tid_30952;
    
    phys_tid_30952 = global_tid_45889;
    
    int64_t gtid_30949;
    
    gtid_30949 = squot64(sext_i32_i64(group_tid_45891) *
                         segmap_group_sizze_31699 +
                         sext_i32_i64(local_tid_45890), i32_res_27787 *
                         j_m_i_27939);
    
    int64_t gtid_slice_30947;
    
    gtid_slice_30947 = squot64(sext_i32_i64(group_tid_45891) *
                               segmap_group_sizze_31699 +
                               sext_i32_i64(local_tid_45890) -
                               squot64(sext_i32_i64(group_tid_45891) *
                                       segmap_group_sizze_31699 +
                                       sext_i32_i64(local_tid_45890),
                                       i32_res_27787 * j_m_i_27939) *
                               (i32_res_27787 * j_m_i_27939), j_m_i_27939);
    
    int64_t gtid_slice_30948;
    
    gtid_slice_30948 = sext_i32_i64(group_tid_45891) *
        segmap_group_sizze_31699 + sext_i32_i64(local_tid_45890) -
        squot64(sext_i32_i64(group_tid_45891) * segmap_group_sizze_31699 +
                sext_i32_i64(local_tid_45890), i32_res_27787 * j_m_i_27939) *
        (i32_res_27787 * j_m_i_27939) - squot64(sext_i32_i64(group_tid_45891) *
                                                segmap_group_sizze_31699 +
                                                sext_i32_i64(local_tid_45890) -
                                                squot64(sext_i32_i64(group_tid_45891) *
                                                        segmap_group_sizze_31699 +
                                                        sext_i32_i64(local_tid_45890),
                                                        i32_res_27787 *
                                                        j_m_i_27939) *
                                                (i32_res_27787 * j_m_i_27939),
                                                j_m_i_27939) * j_m_i_27939;
    if ((slt64(gtid_30949, m_27772) && slt64(gtid_slice_30947,
                                             i32_res_27787)) &&
        slt64(gtid_slice_30948, j_m_i_27939)) {
        int64_t slice_31703 = i32_res_27787 + gtid_slice_30948;
        int64_t binop_x_42430 = x_27936 * gtid_30949;
        int64_t binop_y_42431 = i32_res_27935 * gtid_slice_30947;
        int64_t binop_x_42432 = binop_x_42430 + binop_y_42431;
        int64_t binop_x_42433 = slice_31703 + binop_x_42432;
        int64_t new_index_42434 = squot64(binop_x_42433, nm_27920);
        int64_t binop_y_42446 = nm_27920 * new_index_42434;
        int64_t new_index_42447 = binop_x_42433 - binop_y_42446;
        float v_31704 = ((__global
                          float *) gauss_jordan_res_r_mem_44622)[gauss_jordan_res_r_ixfn_44617 +
                                                                 (new_index_42434 *
                                                                  gauss_jordan_res_r_ixfn_44618 +
                                                                  new_index_42447 *
                                                                  gauss_jordan_res_r_ixfn_44620)];
        
        ((__global float *) mem_44627)[gtid_30949 * (j_m_i_27939 *
                                                     i32_res_27787) +
                                       gtid_slice_30947 * j_m_i_27939 +
                                       gtid_slice_30948] = v_31704;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31699
}
__kernel void mainDetailedzisegmap_31182(__global int *global_failure,
                                         int64_t m_27772, int64_t nm_27920,
                                         int64_t ctx_param_ext_44580,
                                         int64_t ctx_param_ext_44581,
                                         int64_t ctx_param_ext_44583, __global
                                         unsigned char *mem_param_44585,
                                         __global unsigned char *mem_44605)
{
    #define segmap_group_sizze_31687 (mainDetailedzisegmap_group_sizze_31185)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45883;
    int32_t local_tid_45884;
    int64_t group_sizze_45887;
    int32_t wave_sizze_45886;
    int32_t group_tid_45885;
    
    global_tid_45883 = get_global_id(0);
    local_tid_45884 = get_local_id(0);
    group_sizze_45887 = get_local_size(0);
    wave_sizze_45886 = LOCKSTEP_WIDTH;
    group_tid_45885 = get_group_id(0);
    
    int32_t phys_tid_31182;
    
    phys_tid_31182 = global_tid_45883;
    
    int64_t gtid_31180;
    
    gtid_31180 = squot64(sext_i32_i64(group_tid_45885) *
                         segmap_group_sizze_31687 +
                         sext_i32_i64(local_tid_45884), nm_27920);
    
    int64_t gtid_31181;
    
    gtid_31181 = sext_i32_i64(group_tid_45885) * segmap_group_sizze_31687 +
        sext_i32_i64(local_tid_45884) - squot64(sext_i32_i64(group_tid_45885) *
                                                segmap_group_sizze_31687 +
                                                sext_i32_i64(local_tid_45884),
                                                nm_27920) * nm_27920;
    if (slt64(gtid_31180, m_27772) && slt64(gtid_31181, nm_27920)) {
        float write_value_31693 = ((__global float *) mem_44605)[gtid_31180 *
                                                                 nm_27920 +
                                                                 gtid_31181];
        
        if ((sle64((int64_t) 0, gtid_31180) && slt64(gtid_31180, m_27772)) &&
            (sle64((int64_t) 0, gtid_31181) && slt64(gtid_31181, nm_27920))) {
            ((__global float *) mem_param_44585)[ctx_param_ext_44580 +
                                                 (gtid_31180 *
                                                  ctx_param_ext_44581 +
                                                  gtid_31181 *
                                                  ctx_param_ext_44583)] =
                write_value_31693;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31687
}
__kernel void mainDetailedzisegmap_31252(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27772, int32_t k2p2zq_27785,
                                         int32_t m_27918, int64_t nm_27920,
                                         int32_t i_31554, int64_t i32_res_31556,
                                         int64_t ctx_param_ext_44580,
                                         int64_t ctx_param_ext_44581,
                                         int64_t ctx_param_ext_44583, __global
                                         unsigned char *mem_param_44585,
                                         __global unsigned char *mem_44601,
                                         __global unsigned char *mem_44605)
{
    #define segmap_group_sizze_31637 (mainDetailedzisegmap_group_sizze_31255)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45878;
    int32_t local_tid_45879;
    int64_t group_sizze_45882;
    int32_t wave_sizze_45881;
    int32_t group_tid_45880;
    
    global_tid_45878 = get_global_id(0);
    local_tid_45879 = get_local_id(0);
    group_sizze_45882 = get_local_size(0);
    wave_sizze_45881 = LOCKSTEP_WIDTH;
    group_tid_45880 = get_group_id(0);
    
    int32_t phys_tid_31252;
    
    phys_tid_31252 = global_tid_45878;
    
    int64_t gtid_31250;
    
    gtid_31250 = squot64(sext_i32_i64(group_tid_45880) *
                         segmap_group_sizze_31637 +
                         sext_i32_i64(local_tid_45879), nm_27920);
    
    int64_t gtid_31251;
    
    gtid_31251 = sext_i32_i64(group_tid_45880) * segmap_group_sizze_31637 +
        sext_i32_i64(local_tid_45879) - squot64(sext_i32_i64(group_tid_45880) *
                                                segmap_group_sizze_31637 +
                                                sext_i32_i64(local_tid_45879),
                                                nm_27920) * nm_27920;
    if (slt64(gtid_31250, m_27772) && slt64(gtid_31251, nm_27920)) {
        bool cond_31642 = ((__global bool *) mem_44601)[gtid_31250];
        int32_t defunc_0_f_res_31644 = sext_i64_i32(gtid_31251);
        int32_t defunc_0_f_res_31645 = sdiv32(defunc_0_f_res_31644, m_27918);
        int32_t defunc_0_f_res_31646 = smod32(defunc_0_f_res_31644, m_27918);
        float defunc_0_f_res_31647;
        
        if (cond_31642) {
            int32_t x_31648 = mul32(m_27918, defunc_0_f_res_31645);
            int32_t i32_arg_31649 = add32(defunc_0_f_res_31646, x_31648);
            int64_t i32_res_31650 = sext_i32_i64(i32_arg_31649);
            bool x_31651 = sle64((int64_t) 0, i32_res_31650);
            bool y_31652 = slt64(i32_res_31650, nm_27920);
            bool bounds_check_31653 = x_31651 && y_31652;
            bool index_certs_31654;
            
            if (!bounds_check_31653) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 42) ==
                        -1) {
                        global_failure_args[0] = i32_res_31650;
                        global_failure_args[1] = nm_27920;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_31655 = ((__global
                                                 float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                           (gtid_31250 *
                                                                            ctx_param_ext_44581 +
                                                                            i32_res_31650 *
                                                                            ctx_param_ext_44583)];
            
            defunc_0_f_res_31647 = defunc_0_f_res_t_res_31655;
        } else {
            float v1_31641 = ((__global
                               float *) mem_param_44585)[ctx_param_ext_44580 +
                                                         (gtid_31250 *
                                                          ctx_param_ext_44581 +
                                                          i32_res_31556 *
                                                          ctx_param_ext_44583)];
            int64_t i32_res_31656 = sext_i32_i64(defunc_0_f_res_31646);
            bool x_31657 = sle64((int64_t) 0, i32_res_31656);
            bool y_31658 = slt64(i32_res_31656, nm_27920);
            bool bounds_check_31659 = x_31657 && y_31658;
            bool index_certs_31660;
            
            if (!bounds_check_31659) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 43) ==
                        -1) {
                        global_failure_args[0] = i32_res_31656;
                        global_failure_args[1] = nm_27920;
                        ;
                    }
                    return;
                }
            }
            
            float x_31661 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_31250 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_31656 *
                                                         ctx_param_ext_44583)];
            float x_31662 = x_31661 / v1_31641;
            int32_t y_31663 = sub32(k2p2zq_27785, 1);
            bool cond_31664 = slt32(defunc_0_f_res_31645, y_31663);
            float defunc_0_f_res_f_res_31665;
            
            if (cond_31664) {
                int32_t x_31666 = add32(1, defunc_0_f_res_31645);
                int32_t x_31667 = mul32(m_27918, x_31666);
                int32_t i32_arg_31668 = add32(defunc_0_f_res_31646, x_31667);
                int64_t i32_res_31669 = sext_i32_i64(i32_arg_31668);
                bool x_31670 = sle64((int64_t) 0, i32_res_31669);
                bool y_31671 = slt64(i32_res_31669, nm_27920);
                bool bounds_check_31672 = x_31670 && y_31671;
                bool index_certs_31673;
                
                if (!bounds_check_31672) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 44) ==
                            -1) {
                            global_failure_args[0] = i32_res_31669;
                            global_failure_args[1] = nm_27920;
                            ;
                        }
                        return;
                    }
                }
                
                float x_31674 = ((__global
                                  float *) mem_param_44585)[ctx_param_ext_44580 +
                                                            (gtid_31250 *
                                                             ctx_param_ext_44581 +
                                                             i32_res_31669 *
                                                             ctx_param_ext_44583)];
                int32_t i32_arg_31675 = add32(i_31554, x_31667);
                int64_t i32_res_31676 = sext_i32_i64(i32_arg_31675);
                bool x_31677 = sle64((int64_t) 0, i32_res_31676);
                bool y_31678 = slt64(i32_res_31676, nm_27920);
                bool bounds_check_31679 = x_31677 && y_31678;
                bool index_certs_31680;
                
                if (!bounds_check_31679) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 45) ==
                            -1) {
                            global_failure_args[0] = i32_res_31676;
                            global_failure_args[1] = nm_27920;
                            ;
                        }
                        return;
                    }
                }
                
                float x_31681 = ((__global
                                  float *) mem_param_44585)[ctx_param_ext_44580 +
                                                            (gtid_31250 *
                                                             ctx_param_ext_44581 +
                                                             i32_res_31676 *
                                                             ctx_param_ext_44583)];
                float y_31682 = x_31662 * x_31681;
                float defunc_0_f_res_f_res_t_res_31683 = x_31674 - y_31682;
                
                defunc_0_f_res_f_res_31665 = defunc_0_f_res_f_res_t_res_31683;
            } else {
                defunc_0_f_res_f_res_31665 = x_31662;
            }
            defunc_0_f_res_31647 = defunc_0_f_res_f_res_31665;
        }
        ((__global float *) mem_44605)[gtid_31250 * nm_27920 + gtid_31251] =
            defunc_0_f_res_31647;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31637
}
__kernel void mainDetailedzisegmap_31352(__global int *global_failure,
                                         int64_t m_27772, int64_t i32_res_31556,
                                         int64_t ctx_param_ext_44580,
                                         int64_t ctx_param_ext_44581,
                                         int64_t ctx_param_ext_44583, __global
                                         unsigned char *mem_param_44585,
                                         __global unsigned char *mem_44601)
{
    #define segmap_group_sizze_31621 (mainDetailedzisegmap_group_sizze_31354)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45873;
    int32_t local_tid_45874;
    int64_t group_sizze_45877;
    int32_t wave_sizze_45876;
    int32_t group_tid_45875;
    
    global_tid_45873 = get_global_id(0);
    local_tid_45874 = get_local_id(0);
    group_sizze_45877 = get_local_size(0);
    wave_sizze_45876 = LOCKSTEP_WIDTH;
    group_tid_45875 = get_group_id(0);
    
    int32_t phys_tid_31352;
    
    phys_tid_31352 = global_tid_45873;
    
    int64_t gtid_31351;
    
    gtid_31351 = sext_i32_i64(group_tid_45875) * segmap_group_sizze_31621 +
        sext_i32_i64(local_tid_45874);
    if (slt64(gtid_31351, m_27772)) {
        float v1_31626 = ((__global
                           float *) mem_param_44585)[ctx_param_ext_44580 +
                                                     (gtid_31351 *
                                                      ctx_param_ext_44581 +
                                                      i32_res_31556 *
                                                      ctx_param_ext_44583)];
        bool cond_31627 = v1_31626 == 0.0F;
        
        ((__global bool *) mem_44601)[gtid_31351] = cond_31627;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31621
}
__kernel void mainDetailedzisegmap_31469(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27772, int32_t k2p2zq_27785,
                                         int64_t i32_res_27787, int32_t m_27918,
                                         int64_t nm_27920, __global
                                         unsigned char *defunc_3_map_res_mem_44549,
                                         __global unsigned char *mem_44577)
{
    #define segmap_group_sizze_31529 (mainDetailedzisegmap_group_sizze_31472)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45840;
    int32_t local_tid_45841;
    int64_t group_sizze_45844;
    int32_t wave_sizze_45843;
    int32_t group_tid_45842;
    
    global_tid_45840 = get_global_id(0);
    local_tid_45841 = get_local_id(0);
    group_sizze_45844 = get_local_size(0);
    wave_sizze_45843 = LOCKSTEP_WIDTH;
    group_tid_45842 = get_group_id(0);
    
    int32_t phys_tid_31469;
    
    phys_tid_31469 = global_tid_45840;
    
    int64_t gtid_31467;
    
    gtid_31467 = squot64(sext_i32_i64(group_tid_45842) *
                         segmap_group_sizze_31529 +
                         sext_i32_i64(local_tid_45841), nm_27920);
    
    int64_t gtid_31468;
    
    gtid_31468 = sext_i32_i64(group_tid_45842) * segmap_group_sizze_31529 +
        sext_i32_i64(local_tid_45841) - squot64(sext_i32_i64(group_tid_45842) *
                                                segmap_group_sizze_31529 +
                                                sext_i32_i64(local_tid_45841),
                                                nm_27920) * nm_27920;
    if (slt64(gtid_31467, m_27772) && slt64(gtid_31468, nm_27920)) {
        int32_t index_primexp_42361 = sext_i64_i32(gtid_31468);
        int32_t defunc_0_f_res_31534 = sdiv32(index_primexp_42361, m_27918);
        int32_t defunc_0_f_res_31535 = smod32(index_primexp_42361, m_27918);
        bool cond_31536 = slt32(defunc_0_f_res_31535, k2p2zq_27785);
        float defunc_0_f_res_31537;
        
        if (cond_31536) {
            int64_t i_31538 = sext_i32_i64(defunc_0_f_res_31534);
            bool x_31539 = sle64((int64_t) 0, i_31538);
            bool y_31540 = slt64(i_31538, i32_res_27787);
            bool bounds_check_31541 = x_31539 && y_31540;
            int64_t j_31542 = sext_i32_i64(defunc_0_f_res_31535);
            bool x_31543 = sle64((int64_t) 0, j_31542);
            bool y_31544 = slt64(j_31542, i32_res_27787);
            bool bounds_check_31545 = x_31543 && y_31544;
            bool index_ok_31546 = bounds_check_31541 && bounds_check_31545;
            bool index_certs_31547;
            
            if (!index_ok_31546) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 37) ==
                        -1) {
                        global_failure_args[0] = i_31538;
                        global_failure_args[1] = j_31542;
                        global_failure_args[2] = i32_res_27787;
                        global_failure_args[3] = i32_res_27787;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_31548 = ((__global
                                                 float *) defunc_3_map_res_mem_44549)[gtid_31467 *
                                                                                      (i32_res_27787 *
                                                                                       i32_res_27787) +
                                                                                      i_31538 *
                                                                                      i32_res_27787 +
                                                                                      j_31542];
            
            defunc_0_f_res_31537 = defunc_0_f_res_t_res_31548;
        } else {
            int32_t y_31549 = add32(k2p2zq_27785, defunc_0_f_res_31534);
            bool cond_31550 = defunc_0_f_res_31535 == y_31549;
            float defunc_0_f_res_f_res_31551;
            
            if (cond_31550) {
                defunc_0_f_res_f_res_31551 = 1.0F;
            } else {
                defunc_0_f_res_f_res_31551 = 0.0F;
            }
            defunc_0_f_res_31537 = defunc_0_f_res_f_res_31551;
        }
        ((__global float *) mem_44577)[gtid_31467 * nm_27920 + gtid_31468] =
            defunc_0_f_res_31537;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31529
}
__kernel void mainDetailedzisegmap_31710(__global int *global_failure,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t n_27775, int32_t k2p2zq_27785,
                                         int64_t i32_res_27787,
                                         int64_t num_groups_31731, __global
                                         unsigned char *binop_p_mem_44390,
                                         __global unsigned char *mem_44632,
                                         __global unsigned char *mem_44635,
                                         __global unsigned char *mem_44650)
{
    #define segmap_group_sizze_31730 (mainDetailedzisegmap_group_sizze_31712)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45897;
    int32_t local_tid_45898;
    int64_t group_sizze_45901;
    int32_t wave_sizze_45900;
    int32_t group_tid_45899;
    
    global_tid_45897 = get_global_id(0);
    local_tid_45898 = get_local_id(0);
    group_sizze_45901 = get_local_size(0);
    wave_sizze_45900 = LOCKSTEP_WIDTH;
    group_tid_45899 = get_group_id(0);
    
    int32_t phys_tid_31710;
    
    phys_tid_31710 = global_tid_45897;
    
    int32_t phys_group_id_45902;
    
    phys_group_id_45902 = get_group_id(0);
    for (int32_t i_45903 = 0; i_45903 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772, segmap_group_sizze_31730)) -
                   phys_group_id_45902, sext_i64_i32(num_groups_31731));
         i_45903++) {
        int32_t virt_group_id_45904 = phys_group_id_45902 + i_45903 *
                sext_i64_i32(num_groups_31731);
        int64_t gtid_31709 = sext_i32_i64(virt_group_id_45904) *
                segmap_group_sizze_31730 + sext_i32_i64(local_tid_45898);
        
        if (slt64(gtid_31709, m_27772)) {
            for (int32_t i_44364 = 0; i_44364 < k2p2zq_27785; i_44364++) {
                int64_t i_44305 = sext_i32_i64(i_44364);
                float defunc_2_reduce_res_31737;
                float redout_44307 = 0.0F;
                
                for (int32_t i_44363 = 0; i_44363 < n_27775; i_44363++) {
                    int64_t i_44308 = sext_i32_i64(i_44363);
                    float x_31742 = ((__global float *) mem_44632)[i_44308 *
                                                                   m_27772 +
                                                                   gtid_31709];
                    bool isnan_res_31743;
                    
                    isnan_res_31743 = futrts_isnan32(x_31742);
                    
                    float defunc_1_f_res_31744;
                    
                    if (isnan_res_31743) {
                        defunc_1_f_res_31744 = 0.0F;
                    } else {
                        float x_31741 = ((__global
                                          float *) binop_p_mem_44390)[i_44305 *
                                                                      N_27771 +
                                                                      i_44308];
                        float defunc_1_f_res_f_res_31745 = x_31741 * x_31742;
                        
                        defunc_1_f_res_31744 = defunc_1_f_res_f_res_31745;
                    }
                    
                    float defunc_1_op_res_31740 = defunc_1_f_res_31744 +
                          redout_44307;
                    float redout_tmp_45906 = defunc_1_op_res_31740;
                    
                    redout_44307 = redout_tmp_45906;
                }
                defunc_2_reduce_res_31737 = redout_44307;
                ((__global float *) mem_44635)[phys_tid_31710 + i_44305 *
                                               (num_groups_31731 *
                                                segmap_group_sizze_31730)] =
                    defunc_2_reduce_res_31737;
            }
            for (int64_t i_45907 = 0; i_45907 < i32_res_27787; i_45907++) {
                ((__global float *) mem_44650)[i_45907 * m_27772 + gtid_31709] =
                    ((__global float *) mem_44635)[phys_tid_31710 + i_45907 *
                                                   (num_groups_31731 *
                                                    segmap_group_sizze_31730)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31730
}
__kernel void mainDetailedzisegmap_31851(__global int *global_failure,
                                         int64_t m_27772, int32_t k2p2zq_27785,
                                         int64_t i32_res_27787,
                                         int64_t num_groups_31871, __global
                                         unsigned char *mem_44854, __global
                                         unsigned char *mem_44857, __global
                                         unsigned char *mem_44860, __global
                                         unsigned char *mem_44875)
{
    #define segmap_group_sizze_31870 (mainDetailedzisegmap_group_sizze_31853)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46029;
    int32_t local_tid_46030;
    int64_t group_sizze_46033;
    int32_t wave_sizze_46032;
    int32_t group_tid_46031;
    
    global_tid_46029 = get_global_id(0);
    local_tid_46030 = get_local_id(0);
    group_sizze_46033 = get_local_size(0);
    wave_sizze_46032 = LOCKSTEP_WIDTH;
    group_tid_46031 = get_group_id(0);
    
    int32_t phys_tid_31851;
    
    phys_tid_31851 = global_tid_46029;
    
    int32_t phys_group_id_46034;
    
    phys_group_id_46034 = get_group_id(0);
    for (int32_t i_46035 = 0; i_46035 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772, segmap_group_sizze_31870)) -
                   phys_group_id_46034, sext_i64_i32(num_groups_31871));
         i_46035++) {
        int32_t virt_group_id_46036 = phys_group_id_46034 + i_46035 *
                sext_i64_i32(num_groups_31871);
        int64_t gtid_31850 = sext_i32_i64(virt_group_id_46036) *
                segmap_group_sizze_31870 + sext_i32_i64(local_tid_46030);
        
        if (slt64(gtid_31850, m_27772)) {
            for (int32_t i_44366 = 0; i_44366 < k2p2zq_27785; i_44366++) {
                int64_t i_44311 = sext_i32_i64(i_44366);
                float defunc_0_f_res_31878;
                float redout_44313 = 0.0F;
                
                for (int32_t i_44365 = 0; i_44365 < k2p2zq_27785; i_44365++) {
                    int64_t i_44314 = sext_i32_i64(i_44365);
                    float x_31882 = ((__global float *) mem_44857)[i_44314 *
                                                                   m_27772 +
                                                                   gtid_31850];
                    float x_31883 = ((__global float *) mem_44854)[i_44311 *
                                                                   (m_27772 *
                                                                    i32_res_27787) +
                                                                   i_44314 *
                                                                   m_27772 +
                                                                   gtid_31850];
                    float defunc_1_f_res_31884 = x_31882 * x_31883;
                    float defunc_1_op_res_31881 = defunc_1_f_res_31884 +
                          redout_44313;
                    float redout_tmp_46038 = defunc_1_op_res_31881;
                    
                    redout_44313 = redout_tmp_46038;
                }
                defunc_0_f_res_31878 = redout_44313;
                ((__global float *) mem_44860)[phys_tid_31851 + i_44311 *
                                               (num_groups_31871 *
                                                segmap_group_sizze_31870)] =
                    defunc_0_f_res_31878;
            }
            for (int64_t i_46039 = 0; i_46039 < i32_res_27787; i_46039++) {
                ((__global float *) mem_44875)[i_46039 * m_27772 + gtid_31850] =
                    ((__global float *) mem_44860)[phys_tid_31851 + i_46039 *
                                                   (num_groups_31871 *
                                                    segmap_group_sizze_31870)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31870
}
__kernel void mainDetailedzisegmap_31983(__global int *global_failure,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t k2p2zq_27785,
                                         int64_t i32_res_27787,
                                         int64_t num_groups_32002, __global
                                         unsigned char *mem_44397, __global
                                         unsigned char *mem_44919, __global
                                         unsigned char *mem_44922, __global
                                         unsigned char *mem_44937)
{
    #define segmap_group_sizze_32001 (mainDetailedzisegmap_group_sizze_31985)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46117;
    int32_t local_tid_46118;
    int64_t group_sizze_46121;
    int32_t wave_sizze_46120;
    int32_t group_tid_46119;
    
    global_tid_46117 = get_global_id(0);
    local_tid_46118 = get_local_id(0);
    group_sizze_46121 = get_local_size(0);
    wave_sizze_46120 = LOCKSTEP_WIDTH;
    group_tid_46119 = get_group_id(0);
    
    int32_t phys_tid_31983;
    
    phys_tid_31983 = global_tid_46117;
    
    int32_t phys_group_id_46122;
    
    phys_group_id_46122 = get_group_id(0);
    for (int32_t i_46123 = 0; i_46123 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772, segmap_group_sizze_32001)) -
                   phys_group_id_46122, sext_i64_i32(num_groups_32002));
         i_46123++) {
        int32_t virt_group_id_46124 = phys_group_id_46122 + i_46123 *
                sext_i64_i32(num_groups_32002);
        int64_t gtid_31982 = sext_i32_i64(virt_group_id_46124) *
                segmap_group_sizze_32001 + sext_i32_i64(local_tid_46118);
        
        if (slt64(gtid_31982, m_27772)) {
            for (int64_t i_44321 = 0; i_44321 < N_27771; i_44321++) {
                float defunc_0_f_res_32008;
                float redout_44323 = 0.0F;
                
                for (int32_t i_44369 = 0; i_44369 < k2p2zq_27785; i_44369++) {
                    int64_t i_44324 = sext_i32_i64(i_44369);
                    float x_32012 = ((__global float *) mem_44919)[i_44324 *
                                                                   m_27772 +
                                                                   gtid_31982];
                    float x_32013 = ((__global float *) mem_44397)[i_44321 *
                                                                   i32_res_27787 +
                                                                   i_44324];
                    float defunc_1_f_res_32014 = x_32012 * x_32013;
                    float defunc_1_op_res_32011 = defunc_1_f_res_32014 +
                          redout_44323;
                    float redout_tmp_46126 = defunc_1_op_res_32011;
                    
                    redout_44323 = redout_tmp_46126;
                }
                defunc_0_f_res_32008 = redout_44323;
                ((__global float *) mem_44922)[phys_tid_31983 + i_44321 *
                                               (num_groups_32002 *
                                                segmap_group_sizze_32001)] =
                    defunc_0_f_res_32008;
            }
            for (int64_t i_46127 = 0; i_46127 < N_27771; i_46127++) {
                ((__global float *) mem_44937)[i_46127 * m_27772 + gtid_31982] =
                    ((__global float *) mem_44922)[phys_tid_31983 + i_46127 *
                                                   (num_groups_32002 *
                                                    segmap_group_sizze_32001)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32001
}
__kernel void mainDetailedzisegmap_32263(__global int *global_failure,
                                         int64_t N_27771, int64_t m_27772,
                                         __global unsigned char *mem_45163,
                                         __global unsigned char *mem_45166,
                                         __global unsigned char *mem_45172,
                                         __global unsigned char *mem_45175)
{
    #define segmap_group_sizze_32429 (mainDetailedzisegmap_group_sizze_32266)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46344;
    int32_t local_tid_46345;
    int64_t group_sizze_46348;
    int32_t wave_sizze_46347;
    int32_t group_tid_46346;
    
    global_tid_46344 = get_global_id(0);
    local_tid_46345 = get_local_id(0);
    group_sizze_46348 = get_local_size(0);
    wave_sizze_46347 = LOCKSTEP_WIDTH;
    group_tid_46346 = get_group_id(0);
    
    int32_t phys_tid_32263;
    
    phys_tid_32263 = global_tid_46344;
    
    int64_t gtid_32261;
    
    gtid_32261 = squot64(sext_i32_i64(group_tid_46346) *
                         segmap_group_sizze_32429 +
                         sext_i32_i64(local_tid_46345), N_27771);
    
    int64_t gtid_32262;
    
    gtid_32262 = sext_i32_i64(group_tid_46346) * segmap_group_sizze_32429 +
        sext_i32_i64(local_tid_46345) - squot64(sext_i32_i64(group_tid_46346) *
                                                segmap_group_sizze_32429 +
                                                sext_i32_i64(local_tid_46345),
                                                N_27771) * N_27771;
    if (slt64(gtid_32261, m_27772) && slt64(gtid_32262, N_27771)) {
        float x_32437 = ((__global float *) mem_45166)[gtid_32261 * N_27771 +
                                                       gtid_32262];
        int32_t index_primexp_42377 = sext_i64_i32(gtid_32262);
        bool isnan_res_32440;
        
        isnan_res_32440 = futrts_isnan32(x_32437);
        
        bool defunc_0_p_res_32441 = !isnan_res_32440;
        int64_t defunc_1_f_res_32442;
        
        if (defunc_0_p_res_32441) {
            int64_t x_32438 = ((__global int64_t *) mem_45163)[gtid_32261 *
                                                               N_27771 +
                                                               gtid_32262];
            int64_t defunc_1_f_res_t_res_32443 = sub64(x_32438, (int64_t) 1);
            
            defunc_1_f_res_32442 = defunc_1_f_res_t_res_32443;
        } else {
            defunc_1_f_res_32442 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_32261) && slt64(gtid_32261, m_27772)) &&
            (sle64((int64_t) 0, defunc_1_f_res_32442) &&
             slt64(defunc_1_f_res_32442, N_27771))) {
            ((__global int32_t *) mem_45175)[gtid_32261 * N_27771 +
                                             defunc_1_f_res_32442] =
                index_primexp_42377;
        }
        if ((sle64((int64_t) 0, gtid_32261) && slt64(gtid_32261, m_27772)) &&
            (sle64((int64_t) 0, defunc_1_f_res_32442) &&
             slt64(defunc_1_f_res_32442, N_27771))) {
            ((__global float *) mem_45172)[gtid_32261 * N_27771 +
                                           defunc_1_f_res_32442] = x_32437;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32429
}
__kernel void mainDetailedzisegmap_32339(__global int *global_failure,
                                         int64_t N_27771, int64_t m_27772,
                                         int64_t i_28075, __global
                                         unsigned char *mem_45163, __global
                                         unsigned char *mem_45169)
{
    #define segmap_group_sizze_32393 (mainDetailedzisegmap_group_sizze_32341)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46321;
    int32_t local_tid_46322;
    int64_t group_sizze_46325;
    int32_t wave_sizze_46324;
    int32_t group_tid_46323;
    
    global_tid_46321 = get_global_id(0);
    local_tid_46322 = get_local_id(0);
    group_sizze_46325 = get_local_size(0);
    wave_sizze_46324 = LOCKSTEP_WIDTH;
    group_tid_46323 = get_group_id(0);
    
    int32_t phys_tid_32339;
    
    phys_tid_32339 = global_tid_46321;
    
    int64_t gtid_32338;
    
    gtid_32338 = sext_i32_i64(group_tid_46323) * segmap_group_sizze_32393 +
        sext_i32_i64(local_tid_46322);
    if (slt64(gtid_32338, m_27772)) {
        int64_t last_res_32397 = ((__global int64_t *) mem_45163)[gtid_32338 *
                                                                  N_27771 +
                                                                  i_28075];
        int32_t defunc_0_f_res_32398 = sext_i64_i32(last_res_32397);
        
        ((__global int32_t *) mem_45169)[gtid_32338] = defunc_0_f_res_32398;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32393
}
__kernel void mainDetailedzisegmap_32602(__global int *global_failure,
                                         int64_t m_27772, float hfrac_27777,
                                         int32_t k2p2_27783, __global
                                         unsigned char *mem_45232, __global
                                         unsigned char *mem_45235, __global
                                         unsigned char *mem_45238, __global
                                         unsigned char *mem_45240)
{
    #define segmap_group_sizze_32695 (mainDetailedzisegmap_group_sizze_32604)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46497;
    int32_t local_tid_46498;
    int64_t group_sizze_46501;
    int32_t wave_sizze_46500;
    int32_t group_tid_46499;
    
    global_tid_46497 = get_global_id(0);
    local_tid_46498 = get_local_id(0);
    group_sizze_46501 = get_local_size(0);
    wave_sizze_46500 = LOCKSTEP_WIDTH;
    group_tid_46499 = get_group_id(0);
    
    int32_t phys_tid_32602;
    
    phys_tid_32602 = global_tid_46497;
    
    int64_t gtid_32601;
    
    gtid_32601 = sext_i32_i64(group_tid_46499) * segmap_group_sizze_32695 +
        sext_i32_i64(local_tid_46498);
    if (slt64(gtid_32601, m_27772)) {
        int32_t defunc_0_f_res_32699 = ((__global
                                         int32_t *) mem_45232)[gtid_32601];
        float defunc_0_f_res_32700 = ((__global float *) mem_45235)[gtid_32601];
        int32_t r32_arg_32701 = sub32(defunc_0_f_res_32699, k2p2_27783);
        float i32_res_32702 = sitofp_i32_f32(r32_arg_32701);
        float sqrt_arg_32703 = defunc_0_f_res_32700 / i32_res_32702;
        float sqrt_res_32704;
        
        sqrt_res_32704 = futrts_sqrt32(sqrt_arg_32703);
        
        float i32_res_32705 = sitofp_i32_f32(defunc_0_f_res_32699);
        float t32_arg_32706 = hfrac_27777 * i32_res_32705;
        int32_t f32_res_32707 = fptosi_f32_i32(t32_arg_32706);
        
        ((__global int32_t *) mem_45238)[gtid_32601] = f32_res_32707;
        ((__global float *) mem_45240)[gtid_32601] = sqrt_res_32704;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32695
}
__kernel void mainDetailedzisegmap_32902(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27771, int32_t n_27775,
                                         float lam_27778,
                                         int64_t iota32_arg_28203,
                                         float i32_res_28215, __global
                                         unsigned char *mappingindices_mem_44380,
                                         __global unsigned char *mem_45282)
{
    #define segmap_group_sizze_32924 (mainDetailedzisegmap_group_sizze_32904)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46607;
    int32_t local_tid_46608;
    int64_t group_sizze_46611;
    int32_t wave_sizze_46610;
    int32_t group_tid_46609;
    
    global_tid_46607 = get_global_id(0);
    local_tid_46608 = get_local_id(0);
    group_sizze_46611 = get_local_size(0);
    wave_sizze_46610 = LOCKSTEP_WIDTH;
    group_tid_46609 = get_group_id(0);
    
    int32_t phys_tid_32902;
    
    phys_tid_32902 = global_tid_46607;
    
    int64_t gtid_32901;
    
    gtid_32901 = sext_i32_i64(group_tid_46609) * segmap_group_sizze_32924 +
        sext_i32_i64(local_tid_46608);
    if (slt64(gtid_32901, iota32_arg_28203)) {
        int32_t defunc_0_f_res_32928 = sext_i64_i32(gtid_32901);
        int32_t i_32929 = add32(n_27775, defunc_0_f_res_32928);
        int64_t i_32930 = sext_i32_i64(i_32929);
        bool x_32931 = sle64((int64_t) 0, i_32930);
        bool y_32932 = slt64(i_32930, N_27771);
        bool bounds_check_32933 = x_32931 && y_32932;
        bool index_certs_32934;
        
        if (!bounds_check_32933) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 55) == -1) {
                    global_failure_args[0] = i_32930;
                    global_failure_args[1] = N_27771;
                    ;
                }
                return;
            }
        }
        
        int32_t time_32935 = ((__global
                               int32_t *) mappingindices_mem_44380)[i_32930];
        float i32_res_32936 = sitofp_i32_f32(time_32935);
        float logplus_arg_32937 = i32_res_32936 / i32_res_28215;
        bool cond_32938 = 2.7182817F < logplus_arg_32937;
        float logplus_res_32939;
        
        if (cond_32938) {
            float log_res_32940;
            
            log_res_32940 = futrts_log32(logplus_arg_32937);
            logplus_res_32939 = log_res_32940;
        } else {
            logplus_res_32939 = 1.0F;
        }
        
        float sqrt_res_32941;
        
        sqrt_res_32941 = futrts_sqrt32(logplus_res_32939);
        
        float defunc_0_f_res_32942 = lam_27778 * sqrt_res_32941;
        
        ((__global float *) mem_45282)[gtid_32901] = defunc_0_f_res_32942;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32924
}
__kernel void mainDetailedzisegmap_33188(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27772,
                                         int64_t iota32_arg_28203,
                                         int64_t iota32_arg_28233,
                                         int64_t distance_28243,
                                         int64_t segmap_usable_groups_33421,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_45177,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global unsigned char *mem_45285,
                                         __global unsigned char *mem_45292,
                                         __global unsigned char *mem_45303,
                                         __global unsigned char *mem_45323)
{
    #define segmap_group_sizze_33420 (mainDetailedzisegmap_group_sizze_33190)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46622;
    int32_t local_tid_46623;
    int64_t group_sizze_46626;
    int32_t wave_sizze_46625;
    int32_t group_tid_46624;
    
    global_tid_46622 = get_global_id(0);
    local_tid_46623 = get_local_id(0);
    group_sizze_46626 = get_local_size(0);
    wave_sizze_46625 = LOCKSTEP_WIDTH;
    group_tid_46624 = get_group_id(0);
    
    int32_t phys_tid_33188;
    
    phys_tid_33188 = global_tid_46622;
    
    int64_t gtid_33187;
    
    gtid_33187 = sext_i32_i64(group_tid_46624) * segmap_group_sizze_33420 +
        sext_i32_i64(local_tid_46623);
    if (slt64(gtid_33187, m_27772)) {
        int32_t x_33423 = ((__global
                            int32_t *) defunc_4_map_res_mem_45177)[gtid_33187];
        int32_t x_33424 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_33187];
        int32_t y_33425 = ((__global int32_t *) mem_45285)[gtid_33187];
        
        for (int64_t i_46627 = 0; i_46627 < iota32_arg_28233; i_46627++) {
            ((__global float *) mem_45303)[phys_tid_33188 + i_46627 *
                                           (segmap_usable_groups_33421 *
                                            segmap_group_sizze_33420)] =
                ((__global float *) mem_45292)[gtid_33187 + i_46627 * m_27772];
        }
        for (int64_t i_33428 = 0; i_33428 < distance_28243; i_33428++) {
            int64_t index_primexp_33430 = add64((int64_t) 1, i_33428);
            bool cond_33431 = slt64((int64_t) 0, index_primexp_33430);
            bool loop_cond_33432;
            
            if (cond_33431) {
                bool x_33433 = sle64((int64_t) 0, index_primexp_33430);
                bool y_33434 = slt64(index_primexp_33430, iota32_arg_28233);
                bool bounds_check_33435 = x_33433 && y_33434;
                bool index_certs_33436;
                
                if (!bounds_check_33435) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 58) ==
                            -1) {
                            global_failure_args[0] = index_primexp_33430;
                            global_failure_args[1] = iota32_arg_28233;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_33437 = ((__global
                                                       float *) mem_45303)[phys_tid_33188 +
                                                                           index_primexp_33430 *
                                                                           (segmap_usable_groups_33421 *
                                                                            segmap_group_sizze_33420)];
                bool y_33438 = slt64(i_33428, iota32_arg_28233);
                bool index_certs_33439;
                
                if (!y_33438) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 59) ==
                            -1) {
                            global_failure_args[0] = i_33428;
                            global_failure_args[1] = iota32_arg_28233;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_33440 = ((__global
                                                       float *) mem_45303)[phys_tid_33188 +
                                                                           i_33428 *
                                                                           (segmap_usable_groups_33421 *
                                                                            segmap_group_sizze_33420)];
                bool defunc_1_zlze_res_33441 = defunc_1_lifted_gt_arg_33440 <=
                     defunc_2_lifted_gt_arg_33437;
                bool defunc_2_lifted_gt_res_33442 = !defunc_1_zlze_res_33441;
                
                loop_cond_33432 = defunc_2_lifted_gt_res_33442;
            } else {
                loop_cond_33432 = 0;
            }
            
            bool xszq_33443;
            int64_t xszq_33444;
            bool loop_while_33446;
            int64_t j_33447;
            
            loop_while_33446 = loop_cond_33432;
            j_33447 = index_primexp_33430;
            while (loop_while_33446) {
                int64_t loopres_33449 = sub64(j_33447, (int64_t) 1);
                bool x_33450 = sle64((int64_t) 0, j_33447);
                bool y_33451 = slt64(j_33447, iota32_arg_28233);
                bool bounds_check_33452 = x_33450 && y_33451;
                bool index_certs_33453;
                
                if (!bounds_check_33452) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 60) ==
                            -1) {
                            global_failure_args[0] = j_33447;
                            global_failure_args[1] = iota32_arg_28233;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_33454 = ((__global
                                         float *) mem_45303)[phys_tid_33188 +
                                                             j_33447 *
                                                             (segmap_usable_groups_33421 *
                                                              segmap_group_sizze_33420)];
                bool x_33455 = sle64((int64_t) 0, loopres_33449);
                bool y_33456 = slt64(loopres_33449, iota32_arg_28233);
                bool bounds_check_33457 = x_33455 && y_33456;
                bool index_certs_33458;
                
                if (!bounds_check_33457) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 61) ==
                            -1) {
                            global_failure_args[0] = loopres_33449;
                            global_failure_args[1] = iota32_arg_28233;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_33459 = ((__global
                                         float *) mem_45303)[phys_tid_33188 +
                                                             loopres_33449 *
                                                             (segmap_usable_groups_33421 *
                                                              segmap_group_sizze_33420)];
                
                ((__global float *) mem_45303)[phys_tid_33188 + j_33447 *
                                               (segmap_usable_groups_33421 *
                                                segmap_group_sizze_33420)] =
                    copy_arg_33459;
                ((__global float *) mem_45303)[phys_tid_33188 + loopres_33449 *
                                               (segmap_usable_groups_33421 *
                                                segmap_group_sizze_33420)] =
                    copy_arg_33454;
                
                bool cond_33462 = slt64((int64_t) 0, loopres_33449);
                bool loop_cond_33463;
                
                if (cond_33462) {
                    bool index_certs_33464;
                    
                    if (!bounds_check_33457) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          62) == -1) {
                                global_failure_args[0] = loopres_33449;
                                global_failure_args[1] = iota32_arg_28233;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_33465 = ((__global
                                                           float *) mem_45303)[phys_tid_33188 +
                                                                               loopres_33449 *
                                                                               (segmap_usable_groups_33421 *
                                                                                segmap_group_sizze_33420)];
                    int64_t i_33466 = sub64(loopres_33449, (int64_t) 1);
                    bool x_33467 = sle64((int64_t) 0, i_33466);
                    bool y_33468 = slt64(i_33466, iota32_arg_28233);
                    bool bounds_check_33469 = x_33467 && y_33468;
                    bool index_certs_33470;
                    
                    if (!bounds_check_33469) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          63) == -1) {
                                global_failure_args[0] = i_33466;
                                global_failure_args[1] = iota32_arg_28233;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_33471 = ((__global
                                                           float *) mem_45303)[phys_tid_33188 +
                                                                               i_33466 *
                                                                               (segmap_usable_groups_33421 *
                                                                                segmap_group_sizze_33420)];
                    bool defunc_1_zlze_res_33472 =
                         defunc_1_lifted_gt_arg_33471 <=
                         defunc_2_lifted_gt_arg_33465;
                    bool defunc_2_lifted_gt_res_33473 =
                         !defunc_1_zlze_res_33472;
                    
                    loop_cond_33463 = defunc_2_lifted_gt_res_33473;
                } else {
                    loop_cond_33463 = 0;
                }
                
                bool loop_while_tmp_46629 = loop_cond_33463;
                int64_t j_tmp_46630 = loopres_33449;
                
                loop_while_33446 = loop_while_tmp_46629;
                j_33447 = j_tmp_46630;
            }
            xszq_33443 = loop_while_33446;
            xszq_33444 = j_33447;
        }
        
        int32_t i_33474 = sdiv32(y_33425, 2);
        int32_t j_33475 = sub32(i_33474, 1);
        bool cond_33476 = x_33423 == x_33424;
        float defunc_0_f_res_33477;
        
        if (cond_33476) {
            defunc_0_f_res_33477 = 0.0F;
        } else {
            int32_t x_33478 = smod32(y_33425, 2);
            bool cond_33479 = x_33478 == 0;
            float defunc_0_f_res_f_res_33480;
            
            if (cond_33479) {
                int64_t j_33481 = sext_i32_i64(j_33475);
                bool x_33482 = sle64((int64_t) 0, j_33481);
                bool y_33483 = slt64(j_33481, iota32_arg_28203);
                bool bounds_check_33484 = x_33482 && y_33483;
                bool index_certs_33485;
                
                if (!bounds_check_33484) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 64) ==
                            -1) {
                            global_failure_args[0] = j_33481;
                            global_failure_args[1] = iota32_arg_28203;
                            ;
                        }
                        return;
                    }
                }
                
                float x_33486 = ((__global float *) mem_45303)[phys_tid_33188 +
                                                               j_33481 *
                                                               (segmap_usable_groups_33421 *
                                                                segmap_group_sizze_33420)];
                int64_t i_33487 = sext_i32_i64(i_33474);
                bool x_33488 = sle64((int64_t) 0, i_33487);
                bool y_33489 = slt64(i_33487, iota32_arg_28203);
                bool bounds_check_33490 = x_33488 && y_33489;
                bool index_certs_33491;
                
                if (!bounds_check_33490) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 65) ==
                            -1) {
                            global_failure_args[0] = i_33487;
                            global_failure_args[1] = iota32_arg_28203;
                            ;
                        }
                        return;
                    }
                }
                
                float y_33492 = ((__global float *) mem_45303)[phys_tid_33188 +
                                                               i_33487 *
                                                               (segmap_usable_groups_33421 *
                                                                segmap_group_sizze_33420)];
                float x_33493 = x_33486 + y_33492;
                float defunc_0_f_res_f_res_t_res_33494 = x_33493 / 2.0F;
                
                defunc_0_f_res_f_res_33480 = defunc_0_f_res_f_res_t_res_33494;
            } else {
                int64_t i_33495 = sext_i32_i64(i_33474);
                bool x_33496 = sle64((int64_t) 0, i_33495);
                bool y_33497 = slt64(i_33495, iota32_arg_28203);
                bool bounds_check_33498 = x_33496 && y_33497;
                bool index_certs_33499;
                
                if (!bounds_check_33498) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 66) ==
                            -1) {
                            global_failure_args[0] = i_33495;
                            global_failure_args[1] = iota32_arg_28203;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_33500 = ((__global
                                                           float *) mem_45303)[phys_tid_33188 +
                                                                               i_33495 *
                                                                               (segmap_usable_groups_33421 *
                                                                                segmap_group_sizze_33420)];
                
                defunc_0_f_res_f_res_33480 = defunc_0_f_res_f_res_f_res_33500;
            }
            defunc_0_f_res_33477 = defunc_0_f_res_f_res_33480;
        }
        ((__global float *) mem_45323)[gtid_33187] = defunc_0_f_res_33477;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33420
}
__kernel void mainDetailedzisegmap_33309(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27771, int64_t m_27772,
                                         int64_t iota32_arg_28233, __global
                                         unsigned char *defunc_4_map_res_mem_45178,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global unsigned char *mem_45285,
                                         __global unsigned char *mem_45289)
{
    #define segmap_group_sizze_33391 (mainDetailedzisegmap_group_sizze_33312)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46617;
    int32_t local_tid_46618;
    int64_t group_sizze_46621;
    int32_t wave_sizze_46620;
    int32_t group_tid_46619;
    
    global_tid_46617 = get_global_id(0);
    local_tid_46618 = get_local_id(0);
    group_sizze_46621 = get_local_size(0);
    wave_sizze_46620 = LOCKSTEP_WIDTH;
    group_tid_46619 = get_group_id(0);
    
    int32_t phys_tid_33309;
    
    phys_tid_33309 = global_tid_46617;
    
    int64_t gtid_33307;
    
    gtid_33307 = squot64(sext_i32_i64(group_tid_46619) *
                         segmap_group_sizze_33391 +
                         sext_i32_i64(local_tid_46618), iota32_arg_28233);
    
    int64_t gtid_33308;
    
    gtid_33308 = sext_i32_i64(group_tid_46619) * segmap_group_sizze_33391 +
        sext_i32_i64(local_tid_46618) - squot64(sext_i32_i64(group_tid_46619) *
                                                segmap_group_sizze_33391 +
                                                sext_i32_i64(local_tid_46618),
                                                iota32_arg_28233) *
        iota32_arg_28233;
    if (slt64(gtid_33307, m_27772) && slt64(gtid_33308, iota32_arg_28233)) {
        int32_t x_33394 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_33307];
        int32_t y_33396 = ((__global int32_t *) mem_45285)[gtid_33307];
        int32_t index_primexp_42397 = sext_i64_i32(gtid_33308);
        bool cond_33398 = slt32(index_primexp_42397, y_33396);
        bool cond_33399;
        
        if (cond_33398) {
            int32_t i_33400 = add32(x_33394, index_primexp_42397);
            int64_t i_33401 = sext_i32_i64(i_33400);
            bool x_33402 = sle64((int64_t) 0, i_33401);
            bool y_33403 = slt64(i_33401, N_27771);
            bool bounds_check_33404 = x_33402 && y_33403;
            bool index_certs_33405;
            
            if (!bounds_check_33404) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 56) ==
                        -1) {
                        global_failure_args[0] = i_33401;
                        global_failure_args[1] = N_27771;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_33406 = ((__global
                                      float *) defunc_4_map_res_mem_45178)[gtid_33307 *
                                                                           N_27771 +
                                                                           i_33401];
            bool isnan_res_33407;
            
            isnan_res_33407 = futrts_isnan32(isnan_arg_33406);
            
            bool cond_t_res_33408 = !isnan_res_33407;
            
            cond_33399 = cond_t_res_33408;
        } else {
            cond_33399 = 0;
        }
        
        float defunc_0_f_res_33409;
        
        if (cond_33399) {
            int32_t i_33410 = add32(x_33394, index_primexp_42397);
            int64_t i_33411 = sext_i32_i64(i_33410);
            bool x_33412 = sle64((int64_t) 0, i_33411);
            bool y_33413 = slt64(i_33411, N_27771);
            bool bounds_check_33414 = x_33412 && y_33413;
            bool index_certs_33415;
            
            if (!bounds_check_33414) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 57) ==
                        -1) {
                        global_failure_args[0] = i_33411;
                        global_failure_args[1] = N_27771;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_33416 = ((__global
                                                 float *) defunc_4_map_res_mem_45178)[gtid_33307 *
                                                                                      N_27771 +
                                                                                      i_33411];
            
            defunc_0_f_res_33409 = defunc_0_f_res_t_res_33416;
        } else {
            defunc_0_f_res_33409 = INFINITY;
        }
        ((__global float *) mem_45289)[gtid_33307 * iota32_arg_28233 +
                                       gtid_33308] = defunc_0_f_res_33409;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33391
}
__kernel void mainDetailedzisegmap_33367(__global int *global_failure,
                                         int64_t m_27772, __global
                                         unsigned char *defunc_4_map_res_mem_45177,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global unsigned char *mem_45285)
{
    #define segmap_group_sizze_33376 (mainDetailedzisegmap_group_sizze_33369)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46612;
    int32_t local_tid_46613;
    int64_t group_sizze_46616;
    int32_t wave_sizze_46615;
    int32_t group_tid_46614;
    
    global_tid_46612 = get_global_id(0);
    local_tid_46613 = get_local_id(0);
    group_sizze_46616 = get_local_size(0);
    wave_sizze_46615 = LOCKSTEP_WIDTH;
    group_tid_46614 = get_group_id(0);
    
    int32_t phys_tid_33367;
    
    phys_tid_33367 = global_tid_46612;
    
    int64_t gtid_33366;
    
    gtid_33366 = sext_i32_i64(group_tid_46614) * segmap_group_sizze_33376 +
        sext_i32_i64(local_tid_46613);
    if (slt64(gtid_33366, m_27772)) {
        int32_t x_33379 = ((__global
                            int32_t *) defunc_4_map_res_mem_45177)[gtid_33366];
        int32_t x_33380 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_33366];
        int32_t y_33381 = sub32(x_33379, x_33380);
        
        ((__global int32_t *) mem_45285)[gtid_33366] = y_33381;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33376
}
__kernel void mainDetailedzisegmap_33545(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t n_27775,
                                         int64_t iota32_arg_28203,
                                         int64_t iota32_arg_28233,
                                         int64_t num_groups_33660, __global
                                         unsigned char *defunc_4_map_res_mem_45177,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_45178,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_45179,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45244,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45246,
                                         __global
                                         unsigned char *defunc_0_f_res_mem_45279,
                                         __global unsigned char *mem_45282,
                                         __global unsigned char *mem_45326,
                                         __global unsigned char *mem_45340,
                                         __global unsigned char *mem_45354,
                                         __global unsigned char *mem_45369,
                                         __global unsigned char *mem_45372,
                                         __global unsigned char *mem_45374,
                                         __global unsigned char *mem_45376)
{
    #define segmap_group_sizze_33659 (mainDetailedzisegmap_group_sizze_33547)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46636;
    int32_t local_tid_46637;
    int64_t group_sizze_46640;
    int32_t wave_sizze_46639;
    int32_t group_tid_46638;
    
    global_tid_46636 = get_global_id(0);
    local_tid_46637 = get_local_id(0);
    group_sizze_46640 = get_local_size(0);
    wave_sizze_46639 = LOCKSTEP_WIDTH;
    group_tid_46638 = get_group_id(0);
    
    int32_t phys_tid_33545;
    
    phys_tid_33545 = global_tid_46636;
    
    int32_t phys_group_id_46641;
    
    phys_group_id_46641 = get_group_id(0);
    for (int32_t i_46642 = 0; i_46642 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772, segmap_group_sizze_33659)) -
                   phys_group_id_46641, sext_i64_i32(num_groups_33660));
         i_46642++) {
        int32_t virt_group_id_46643 = phys_group_id_46641 + i_46642 *
                sext_i64_i32(num_groups_33660);
        int64_t gtid_33544 = sext_i32_i64(virt_group_id_46643) *
                segmap_group_sizze_33659 + sext_i32_i64(local_tid_46637);
        
        if (slt64(gtid_33544, m_27772)) {
            int32_t x_33666 = ((__global
                                int32_t *) defunc_4_map_res_mem_45177)[gtid_33544];
            int32_t x_33667 = ((__global
                                int32_t *) defunc_3_map_res_mem_45245)[gtid_33544];
            float x_33668 = ((__global
                              float *) defunc_3_map_res_mem_45246)[gtid_33544];
            int32_t x_33669 = ((__global
                                int32_t *) defunc_3_map_res_mem_45244)[gtid_33544];
            float x_33670 = ((__global
                              float *) defunc_0_f_res_mem_45279)[gtid_33544];
            int32_t y_33673 = sub32(x_33666, x_33667);
            float discard_44340;
            float scanacc_44336 = 0.0F;
            
            for (int64_t i_44338 = 0; i_44338 < iota32_arg_28233; i_44338++) {
                int32_t index_primexp_44371 = sext_i64_i32(i_44338);
                bool cond_33679 = sle32(y_33673, index_primexp_44371);
                float defunc_0_f_res_33680;
                
                if (cond_33679) {
                    defunc_0_f_res_33680 = 0.0F;
                } else {
                    bool cond_33681 = index_primexp_44371 == 0;
                    float defunc_0_f_res_f_res_33682;
                    
                    if (cond_33681) {
                        defunc_0_f_res_f_res_33682 = x_33670;
                    } else {
                        int32_t i_33683 = add32(x_33667, index_primexp_44371);
                        int64_t i_33684 = sext_i32_i64(i_33683);
                        bool x_33685 = sle64((int64_t) 0, i_33684);
                        bool y_33686 = slt64(i_33684, N_27771);
                        bool bounds_check_33687 = x_33685 && y_33686;
                        bool index_certs_33688;
                        
                        if (!bounds_check_33687) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 67) == -1) {
                                    global_failure_args[0] = i_33684;
                                    global_failure_args[1] = N_27771;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float x_33689 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_33544 *
                                                                               N_27771 +
                                                                               i_33684];
                        int32_t x_33690 = sub32(x_33667, x_33669);
                        int32_t i_33691 = add32(x_33690, index_primexp_44371);
                        int64_t i_33692 = sext_i32_i64(i_33691);
                        bool x_33693 = sle64((int64_t) 0, i_33692);
                        bool y_33694 = slt64(i_33692, N_27771);
                        bool bounds_check_33695 = x_33693 && y_33694;
                        bool index_certs_33696;
                        
                        if (!bounds_check_33695) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 68) == -1) {
                                    global_failure_args[0] = i_33692;
                                    global_failure_args[1] = N_27771;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float y_33697 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_33544 *
                                                                               N_27771 +
                                                                               i_33692];
                        float defunc_0_f_res_f_res_f_res_33698 = x_33689 -
                              y_33697;
                        
                        defunc_0_f_res_f_res_33682 =
                            defunc_0_f_res_f_res_f_res_33698;
                    }
                    defunc_0_f_res_33680 = defunc_0_f_res_f_res_33682;
                }
                
                float defunc_1_op_res_33677 = defunc_0_f_res_33680 +
                      scanacc_44336;
                
                ((__global float *) mem_45326)[phys_tid_33545 + i_44338 *
                                               (num_groups_33660 *
                                                segmap_group_sizze_33659)] =
                    defunc_1_op_res_33677;
                
                float scanacc_tmp_46644 = defunc_1_op_res_33677;
                
                scanacc_44336 = scanacc_tmp_46644;
            }
            discard_44340 = scanacc_44336;
            
            float i32_res_33699 = sitofp_i32_f32(x_33667);
            float sqrt_res_33700;
            
            sqrt_res_33700 = futrts_sqrt32(i32_res_33699);
            
            float y_33701 = x_33668 * sqrt_res_33700;
            bool defunc_0_f_res_33703;
            int32_t defunc_0_f_res_33704;
            float defunc_0_f_res_33705;
            bool redout_44342;
            int32_t redout_44343;
            float redout_44344;
            
            redout_44342 = 0;
            redout_44343 = -1;
            redout_44344 = 0.0F;
            for (int64_t i_44346 = 0; i_44346 < iota32_arg_28203; i_44346++) {
                float x_33721 = ((__global float *) mem_45326)[phys_tid_33545 +
                                                               i_44346 *
                                                               (num_groups_33660 *
                                                                segmap_group_sizze_33659)];
                float x_33722 = ((__global float *) mem_45282)[i_44346];
                int32_t index_primexp_44372 = sext_i64_i32(i_44346);
                int32_t x_33723 = index_primexp_44372;
                float defunc_0_f_res_33724 = x_33721 / y_33701;
                bool cond_33725 = slt32(index_primexp_44372, y_33673);
                bool isnan_res_33726;
                
                isnan_res_33726 = futrts_isnan32(defunc_0_f_res_33724);
                
                bool cond_t_res_33727 = !isnan_res_33726;
                bool x_33728 = cond_33725 && cond_t_res_33727;
                float abs_res_33729 = (float) fabs(defunc_0_f_res_33724);
                bool defunc_2_f_res_t_res_33730 = x_33722 < abs_res_33729;
                bool x_33731 = x_33728 && defunc_2_f_res_t_res_33730;
                float defunc_1_f_res_33732;
                
                if (cond_33725) {
                    defunc_1_f_res_33732 = defunc_0_f_res_33724;
                } else {
                    defunc_1_f_res_33732 = 0.0F;
                }
                
                bool defunc_1_op_res_33711;
                int32_t defunc_1_op_res_33712;
                
                if (redout_44342) {
                    defunc_1_op_res_33711 = redout_44342;
                    defunc_1_op_res_33712 = redout_44343;
                } else {
                    bool x_33713 = x_33731 && x_33731;
                    bool x_33714 = !x_33731;
                    bool y_33715 = x_33714 && redout_44342;
                    bool defunc_1_op_res_f_res_33716 = x_33713 || y_33715;
                    int32_t defunc_1_op_res_f_res_33717;
                    
                    if (x_33731) {
                        defunc_1_op_res_f_res_33717 = x_33723;
                    } else {
                        defunc_1_op_res_f_res_33717 = redout_44343;
                    }
                    defunc_1_op_res_33711 = defunc_1_op_res_f_res_33716;
                    defunc_1_op_res_33712 = defunc_1_op_res_f_res_33717;
                }
                
                float defunc_1_op_res_33720 = defunc_1_f_res_33732 +
                      redout_44344;
                
                ((__global float *) mem_45340)[phys_tid_33545 + i_44346 *
                                               (num_groups_33660 *
                                                segmap_group_sizze_33659)] =
                    defunc_0_f_res_33724;
                
                bool redout_tmp_46646 = defunc_1_op_res_33711;
                int32_t redout_tmp_46647 = defunc_1_op_res_33712;
                float redout_tmp_46648 = defunc_1_op_res_33720;
                
                redout_44342 = redout_tmp_46646;
                redout_44343 = redout_tmp_46647;
                redout_44344 = redout_tmp_46648;
            }
            defunc_0_f_res_33703 = redout_44342;
            defunc_0_f_res_33704 = redout_44343;
            defunc_0_f_res_33705 = redout_44344;
            
            bool cond_33733 = y_33673 == 0;
            float defunc_0_f_res_33734;
            
            if (cond_33733) {
                defunc_0_f_res_33734 = 0.0F;
            } else {
                float i32_res_33735 = sitofp_i32_f32(y_33673);
                float defunc_0_f_res_f_res_33736 = defunc_0_f_res_33705 /
                      i32_res_33735;
                
                defunc_0_f_res_33734 = defunc_0_f_res_f_res_33736;
            }
            
            bool cond_33737 = !defunc_0_f_res_33703;
            int32_t fst_breakzq_33738;
            
            if (cond_33737) {
                fst_breakzq_33738 = -1;
            } else {
                bool cond_33739 = slt32(defunc_0_f_res_33704, y_33673);
                int32_t adjustValInds_res_33740;
                
                if (cond_33739) {
                    int32_t i_33741 = add32(x_33667, defunc_0_f_res_33704);
                    int64_t i_33742 = sext_i32_i64(i_33741);
                    bool x_33743 = sle64((int64_t) 0, i_33742);
                    bool y_33744 = slt64(i_33742, N_27771);
                    bool bounds_check_33745 = x_33743 && y_33744;
                    bool index_certs_33746;
                    
                    if (!bounds_check_33745) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          69) == -1) {
                                global_failure_args[0] = i_33742;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    int32_t x_33747 = ((__global
                                        int32_t *) defunc_4_map_res_mem_45179)[gtid_33544 *
                                                                               N_27771 +
                                                                               i_33742];
                    int32_t adjustValInds_res_t_res_33748 = sub32(x_33747,
                                                                  n_27775);
                    
                    adjustValInds_res_33740 = adjustValInds_res_t_res_33748;
                } else {
                    adjustValInds_res_33740 = -1;
                }
                fst_breakzq_33738 = adjustValInds_res_33740;
            }
            
            bool cond_33749 = sle32(x_33667, 5);
            bool cond_f_res_33750 = sle32(y_33673, 5);
            bool x_33751 = !cond_33749;
            bool y_33752 = cond_f_res_33750 && x_33751;
            bool cond_33753 = cond_33749 || y_33752;
            int32_t fst_breakzq_33754;
            
            if (cond_33753) {
                fst_breakzq_33754 = -2;
            } else {
                fst_breakzq_33754 = fst_breakzq_33738;
            }
            for (int64_t i_46650 = 0; i_46650 < iota32_arg_28233; i_46650++) {
                ((__global float *) mem_45354)[phys_tid_33545 + i_46650 *
                                               (num_groups_33660 *
                                                segmap_group_sizze_33659)] =
                    NAN;
            }
            for (int64_t write_iter_44348 = 0; write_iter_44348 <
                 iota32_arg_28233; write_iter_44348++) {
                int32_t index_primexp_44374 = sext_i64_i32(write_iter_44348);
                bool cond_33760 = slt32(index_primexp_44374, y_33673);
                int32_t defunc_0_f_res_33761;
                
                if (cond_33760) {
                    int32_t i_33762 = add32(x_33667, index_primexp_44374);
                    int64_t i_33763 = sext_i32_i64(i_33762);
                    bool x_33764 = sle64((int64_t) 0, i_33763);
                    bool y_33765 = slt64(i_33763, N_27771);
                    bool bounds_check_33766 = x_33764 && y_33765;
                    bool index_certs_33767;
                    
                    if (!bounds_check_33766) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          70) == -1) {
                                global_failure_args[0] = i_33763;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    int32_t x_33768 = ((__global
                                        int32_t *) defunc_4_map_res_mem_45179)[gtid_33544 *
                                                                               N_27771 +
                                                                               i_33763];
                    int32_t defunc_0_f_res_t_res_33769 = sub32(x_33768,
                                                               n_27775);
                    
                    defunc_0_f_res_33761 = defunc_0_f_res_t_res_33769;
                } else {
                    defunc_0_f_res_33761 = -1;
                }
                
                int64_t defunc_0_f_res_33770 =
                        sext_i32_i64(defunc_0_f_res_33761);
                bool less_than_zzero_44352 = slt64(defunc_0_f_res_33770,
                                                   (int64_t) 0);
                bool greater_than_sizze_44353 = sle64(iota32_arg_28233,
                                                      defunc_0_f_res_33770);
                bool outside_bounds_dim_44354 = less_than_zzero_44352 ||
                     greater_than_sizze_44353;
                
                if (!outside_bounds_dim_44354) {
                    for (int64_t i_46652 = 0; i_46652 < (int64_t) 1;
                         i_46652++) {
                        ((__global float *) mem_45354)[phys_tid_33545 +
                                                       (defunc_0_f_res_33770 +
                                                        i_46652) *
                                                       (num_groups_33660 *
                                                        segmap_group_sizze_33659)] =
                            ((__global float *) mem_45340)[phys_tid_33545 +
                                                           num_groups_33660 *
                                                           segmap_group_sizze_33659 *
                                                           write_iter_44348 +
                                                           i_46652 *
                                                           (num_groups_33660 *
                                                            segmap_group_sizze_33659)];
                    }
                }
            }
            for (int64_t i_46653 = 0; i_46653 < iota32_arg_28203; i_46653++) {
                ((__global float *) mem_45369)[i_46653 * m_27772 + gtid_33544] =
                    ((__global float *) mem_45354)[phys_tid_33545 + i_46653 *
                                                   (num_groups_33660 *
                                                    segmap_group_sizze_33659)];
            }
            for (int64_t i_46654 = 0; i_46654 < iota32_arg_28203; i_46654++) {
                ((__global float *) mem_45372)[i_46654 * m_27772 + gtid_33544] =
                    ((__global float *) mem_45340)[phys_tid_33545 + i_46654 *
                                                   (num_groups_33660 *
                                                    segmap_group_sizze_33659)];
            }
            ((__global int32_t *) mem_45374)[gtid_33544] = fst_breakzq_33754;
            ((__global float *) mem_45376)[gtid_33544] = defunc_0_f_res_33734;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33659
}
__kernel void mainDetailedzisegmap_33893(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t n_27775,
                                         int64_t iota32_arg_28203,
                                         int64_t iota32_arg_28233, __global
                                         unsigned char *defunc_4_map_res_mem_45179,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global unsigned char *mem_45399,
                                         __global unsigned char *mem_45416,
                                         __global unsigned char *mem_45424)
{
    #define segmap_group_sizze_34224 (mainDetailedzisegmap_group_sizze_33896)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46853;
    int32_t local_tid_46854;
    int64_t group_sizze_46857;
    int32_t wave_sizze_46856;
    int32_t group_tid_46855;
    
    global_tid_46853 = get_global_id(0);
    local_tid_46854 = get_local_id(0);
    group_sizze_46857 = get_local_size(0);
    wave_sizze_46856 = LOCKSTEP_WIDTH;
    group_tid_46855 = get_group_id(0);
    
    int32_t phys_tid_33893;
    
    phys_tid_33893 = global_tid_46853;
    
    int64_t gtid_33891;
    
    gtid_33891 = squot64(sext_i32_i64(group_tid_46855) *
                         segmap_group_sizze_34224 +
                         sext_i32_i64(local_tid_46854), iota32_arg_28233);
    
    int64_t gtid_33892;
    
    gtid_33892 = sext_i32_i64(group_tid_46855) * segmap_group_sizze_34224 +
        sext_i32_i64(local_tid_46854) - squot64(sext_i32_i64(group_tid_46855) *
                                                segmap_group_sizze_34224 +
                                                sext_i32_i64(local_tid_46854),
                                                iota32_arg_28233) *
        iota32_arg_28233;
    if (slt64(gtid_33891, m_27772) && slt64(gtid_33892, iota32_arg_28233)) {
        int32_t y_34229 = ((__global int32_t *) mem_45399)[gtid_33891];
        int32_t index_primexp_42427 = sext_i64_i32(gtid_33892);
        int64_t binop_x_42415 = iota32_arg_28233 * gtid_33891;
        int64_t binop_x_42416 = gtid_33892 + binop_x_42415;
        int64_t new_index_42417 = squot64(binop_x_42416, iota32_arg_28203);
        int64_t binop_y_42423 = iota32_arg_28203 * new_index_42417;
        int64_t new_index_42424 = binop_x_42416 - binop_y_42423;
        float write_value_34233 = ((__global
                                    float *) mem_45416)[new_index_42417 *
                                                        iota32_arg_28203 +
                                                        new_index_42424];
        bool cond_34234 = slt32(index_primexp_42427, y_34229);
        int32_t defunc_0_f_res_34235;
        
        if (cond_34234) {
            int32_t x_34227 = ((__global
                                int32_t *) defunc_3_map_res_mem_45245)[gtid_33891];
            int32_t i_34236 = add32(x_34227, index_primexp_42427);
            int64_t i_34237 = sext_i32_i64(i_34236);
            bool x_34238 = sle64((int64_t) 0, i_34237);
            bool y_34239 = slt64(i_34237, N_27771);
            bool bounds_check_34240 = x_34238 && y_34239;
            bool index_certs_34241;
            
            if (!bounds_check_34240) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 78) ==
                        -1) {
                        global_failure_args[0] = i_34237;
                        global_failure_args[1] = N_27771;
                        ;
                    }
                    return;
                }
            }
            
            int32_t x_34242 = ((__global
                                int32_t *) defunc_4_map_res_mem_45179)[gtid_33891 *
                                                                       N_27771 +
                                                                       i_34237];
            int32_t defunc_0_f_res_t_res_34243 = sub32(x_34242, n_27775);
            
            defunc_0_f_res_34235 = defunc_0_f_res_t_res_34243;
        } else {
            defunc_0_f_res_34235 = -1;
        }
        
        int64_t defunc_0_f_res_34244 = sext_i32_i64(defunc_0_f_res_34235);
        
        if ((sle64((int64_t) 0, gtid_33891) && slt64(gtid_33891, m_27772)) &&
            (sle64((int64_t) 0, defunc_0_f_res_34244) &&
             slt64(defunc_0_f_res_34244, iota32_arg_28233))) {
            ((__global float *) mem_45424)[gtid_33891 * iota32_arg_28233 +
                                           defunc_0_f_res_34244] =
                write_value_34233;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34224
}
__kernel void mainDetailedzisegmap_33950(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27771, int64_t m_27772,
                                         int32_t n_27775, __global
                                         unsigned char *defunc_4_map_res_mem_45179,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global unsigned char *mem_45399,
                                         __global unsigned char *mem_45409,
                                         __global unsigned char *mem_45411,
                                         __global unsigned char *mem_45413,
                                         __global unsigned char *mem_45419,
                                         __global unsigned char *mem_45421)
{
    #define segmap_group_sizze_34175 (mainDetailedzisegmap_group_sizze_33952)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46848;
    int32_t local_tid_46849;
    int64_t group_sizze_46852;
    int32_t wave_sizze_46851;
    int32_t group_tid_46850;
    
    global_tid_46848 = get_global_id(0);
    local_tid_46849 = get_local_id(0);
    group_sizze_46852 = get_local_size(0);
    wave_sizze_46851 = LOCKSTEP_WIDTH;
    group_tid_46850 = get_group_id(0);
    
    int32_t phys_tid_33950;
    
    phys_tid_33950 = global_tid_46848;
    
    int64_t gtid_33949;
    
    gtid_33949 = sext_i32_i64(group_tid_46850) * segmap_group_sizze_34175 +
        sext_i32_i64(local_tid_46849);
    if (slt64(gtid_33949, m_27772)) {
        int32_t x_34179 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_33949];
        int32_t y_34181 = ((__global int32_t *) mem_45399)[gtid_33949];
        bool defunc_0_f_res_34182 = ((__global bool *) mem_45409)[gtid_33949];
        bool cond_34185 = y_34181 == 0;
        float defunc_0_f_res_34186;
        
        if (cond_34185) {
            defunc_0_f_res_34186 = 0.0F;
        } else {
            float defunc_0_f_res_34184 = ((__global
                                           float *) mem_45413)[gtid_33949];
            float i32_res_34187 = sitofp_i32_f32(y_34181);
            float defunc_0_f_res_f_res_34188 = defunc_0_f_res_34184 /
                  i32_res_34187;
            
            defunc_0_f_res_34186 = defunc_0_f_res_f_res_34188;
        }
        
        bool cond_34189 = !defunc_0_f_res_34182;
        int32_t fst_breakzq_34190;
        
        if (cond_34189) {
            fst_breakzq_34190 = -1;
        } else {
            int32_t defunc_0_f_res_34183 = ((__global
                                             int32_t *) mem_45411)[gtid_33949];
            bool cond_34191 = slt32(defunc_0_f_res_34183, y_34181);
            int32_t adjustValInds_res_34192;
            
            if (cond_34191) {
                int32_t i_34193 = add32(x_34179, defunc_0_f_res_34183);
                int64_t i_34194 = sext_i32_i64(i_34193);
                bool x_34195 = sle64((int64_t) 0, i_34194);
                bool y_34196 = slt64(i_34194, N_27771);
                bool bounds_check_34197 = x_34195 && y_34196;
                bool index_certs_34198;
                
                if (!bounds_check_34197) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 77) ==
                            -1) {
                            global_failure_args[0] = i_34194;
                            global_failure_args[1] = N_27771;
                            ;
                        }
                        return;
                    }
                }
                
                int32_t x_34199 = ((__global
                                    int32_t *) defunc_4_map_res_mem_45179)[gtid_33949 *
                                                                           N_27771 +
                                                                           i_34194];
                int32_t adjustValInds_res_t_res_34200 = sub32(x_34199, n_27775);
                
                adjustValInds_res_34192 = adjustValInds_res_t_res_34200;
            } else {
                adjustValInds_res_34192 = -1;
            }
            fst_breakzq_34190 = adjustValInds_res_34192;
        }
        
        bool cond_34201 = sle32(x_34179, 5);
        bool cond_f_res_34202 = sle32(y_34181, 5);
        bool x_34203 = !cond_34201;
        bool y_34204 = cond_f_res_34202 && x_34203;
        bool cond_34205 = cond_34201 || y_34204;
        int32_t fst_breakzq_34206;
        
        if (cond_34205) {
            fst_breakzq_34206 = -2;
        } else {
            fst_breakzq_34206 = fst_breakzq_34190;
        }
        ((__global int32_t *) mem_45419)[gtid_33949] = fst_breakzq_34206;
        ((__global float *) mem_45421)[gtid_33949] = defunc_0_f_res_34186;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34175
}
__kernel void mainDetailedzisegmap_34026(__global int *global_failure,
                                         int64_t m_27772, __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45246,
                                         __global unsigned char *mem_45406)
{
    #define segmap_group_sizze_34127 (mainDetailedzisegmap_group_sizze_34028)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46745;
    int32_t local_tid_46746;
    int64_t group_sizze_46749;
    int32_t wave_sizze_46748;
    int32_t group_tid_46747;
    
    global_tid_46745 = get_global_id(0);
    local_tid_46746 = get_local_id(0);
    group_sizze_46749 = get_local_size(0);
    wave_sizze_46748 = LOCKSTEP_WIDTH;
    group_tid_46747 = get_group_id(0);
    
    int32_t phys_tid_34026;
    
    phys_tid_34026 = global_tid_46745;
    
    int64_t gtid_34025;
    
    gtid_34025 = sext_i32_i64(group_tid_46747) * segmap_group_sizze_34127 +
        sext_i32_i64(local_tid_46746);
    if (slt64(gtid_34025, m_27772)) {
        int32_t x_34130 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_34025];
        float x_34131 = ((__global
                          float *) defunc_3_map_res_mem_45246)[gtid_34025];
        float i32_res_34132 = sitofp_i32_f32(x_34130);
        float sqrt_res_34133;
        
        sqrt_res_34133 = futrts_sqrt32(i32_res_34132);
        
        float y_34134 = x_34131 * sqrt_res_34133;
        
        ((__global float *) mem_45406)[gtid_34025] = y_34134;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34127
}
__kernel void mainDetailedzisegmap_34076(__global int *global_failure,
                                         int64_t m_27772, __global
                                         unsigned char *defunc_4_map_res_mem_45177,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_45245,
                                         __global unsigned char *mem_45399)
{
    #define segmap_group_sizze_34085 (mainDetailedzisegmap_group_sizze_34078)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46684;
    int32_t local_tid_46685;
    int64_t group_sizze_46688;
    int32_t wave_sizze_46687;
    int32_t group_tid_46686;
    
    global_tid_46684 = get_global_id(0);
    local_tid_46685 = get_local_id(0);
    group_sizze_46688 = get_local_size(0);
    wave_sizze_46687 = LOCKSTEP_WIDTH;
    group_tid_46686 = get_group_id(0);
    
    int32_t phys_tid_34076;
    
    phys_tid_34076 = global_tid_46684;
    
    int64_t gtid_34075;
    
    gtid_34075 = sext_i32_i64(group_tid_46686) * segmap_group_sizze_34085 +
        sext_i32_i64(local_tid_46685);
    if (slt64(gtid_34075, m_27772)) {
        int32_t x_34088 = ((__global
                            int32_t *) defunc_4_map_res_mem_45177)[gtid_34075];
        int32_t x_34089 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_34075];
        int32_t y_34090 = sub32(x_34088, x_34089);
        
        ((__global int32_t *) mem_45399)[gtid_34075] = y_34090;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34085
}
__kernel void mainDetailedzisegmap_intragroup_30688(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_44563_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44553_backing_aligned_1,
                                                    int32_t k2p2zq_27785,
                                                    int64_t i32_res_27787,
                                                    int32_t m_27918,
                                                    int64_t nm_27920,
                                                    int64_t i32_res_27935,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44549,
                                                    __global
                                                    unsigned char *mem_44573)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44563_backing_1 = (__local volatile
                                                           char *) mem_44563_backing_aligned_0;
    __local volatile char *restrict mem_44553_backing_0 = (__local volatile
                                                           char *) mem_44553_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45832;
    int32_t local_tid_45833;
    int64_t group_sizze_45836;
    int32_t wave_sizze_45835;
    int32_t group_tid_45834;
    
    global_tid_45832 = get_global_id(0);
    local_tid_45833 = get_local_id(0);
    group_sizze_45836 = get_local_size(0);
    wave_sizze_45835 = LOCKSTEP_WIDTH;
    group_tid_45834 = get_group_id(0);
    
    int32_t phys_tid_30688;
    
    phys_tid_30688 = group_tid_45834;
    
    int32_t ltid_pre_45837;
    
    ltid_pre_45837 = local_tid_45833;
    
    int64_t gtid_30619;
    
    gtid_30619 = sext_i32_i64(group_tid_45834);
    
    __local char *mem_44553;
    
    mem_44553 = (__local char *) mem_44553_backing_0;
    
    int64_t gtid_30622 = sext_i32_i64(ltid_pre_45837);
    int32_t phys_tid_30623 = local_tid_45833;
    int32_t index_primexp_42354 = sext_i64_i32(gtid_30622);
    int32_t defunc_0_f_res_30869 = sdiv32(index_primexp_42354, m_27918);
    int32_t defunc_0_f_res_30870 = smod32(index_primexp_42354, m_27918);
    bool cond_30871 = slt32(defunc_0_f_res_30870, k2p2zq_27785);
    float defunc_0_f_res_30872;
    
    if (cond_30871) {
        int64_t i_30873 = sext_i32_i64(defunc_0_f_res_30869);
        bool x_30874 = sle64((int64_t) 0, i_30873);
        bool y_30875 = slt64(i_30873, i32_res_27787);
        bool bounds_check_30876 = x_30874 && y_30875;
        int64_t j_30877 = sext_i32_i64(defunc_0_f_res_30870);
        bool x_30878 = sle64((int64_t) 0, j_30877);
        bool y_30879 = slt64(j_30877, i32_res_27787);
        bool bounds_check_30880 = x_30878 && y_30879;
        bool index_ok_30881 = bounds_check_30876 && bounds_check_30880;
        bool index_certs_30882;
        
        if (!index_ok_30881) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 31) == -1) {
                    global_failure_args[0] = i_30873;
                    global_failure_args[1] = j_30877;
                    global_failure_args[2] = i32_res_27787;
                    global_failure_args[3] = i32_res_27787;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float defunc_0_f_res_t_res_30883 = ((__global
                                             float *) defunc_3_map_res_mem_44549)[gtid_30619 *
                                                                                  (i32_res_27787 *
                                                                                   i32_res_27787) +
                                                                                  i_30873 *
                                                                                  i32_res_27787 +
                                                                                  j_30877];
        
        defunc_0_f_res_30872 = defunc_0_f_res_t_res_30883;
    } else {
        int32_t y_30884 = add32(k2p2zq_27785, defunc_0_f_res_30869);
        bool cond_30885 = defunc_0_f_res_30870 == y_30884;
        float defunc_0_f_res_f_res_30886;
        
        if (cond_30885) {
            defunc_0_f_res_f_res_30886 = 1.0F;
        } else {
            defunc_0_f_res_f_res_30886 = 0.0F;
        }
        defunc_0_f_res_30872 = defunc_0_f_res_f_res_30886;
    }
    ((__local float *) mem_44553)[gtid_30622] = defunc_0_f_res_30872;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44563;
    
    mem_44563 = (__local char *) mem_44563_backing_1;
    for (int32_t i_30888 = 0; i_30888 < k2p2zq_27785; i_30888++) {
        int64_t i32_res_30890 = sext_i32_i64(i_30888);
        bool x_30891 = sle64((int64_t) 0, i32_res_30890);
        bool y_30892 = slt64(i32_res_30890, nm_27920);
        bool bounds_check_30893 = x_30891 && y_30892;
        bool index_certs_30894;
        
        if (!bounds_check_30893) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 32) == -1) {
                    global_failure_args[0] = i32_res_30890;
                    global_failure_args[1] = nm_27920;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_30895 = ((__local float *) mem_44553)[i32_res_30890];
        bool cond_30896 = v1_30895 == 0.0F;
        int64_t gtid_30643 = sext_i32_i64(ltid_pre_45837);
        int32_t phys_tid_30644 = local_tid_45833;
        int32_t defunc_0_f_res_30899 = sext_i64_i32(gtid_30643);
        int32_t defunc_0_f_res_30900 = sdiv32(defunc_0_f_res_30899, m_27918);
        int32_t defunc_0_f_res_30901 = smod32(defunc_0_f_res_30899, m_27918);
        float defunc_0_f_res_30902;
        
        if (cond_30896) {
            int32_t x_30903 = mul32(m_27918, defunc_0_f_res_30900);
            int32_t i32_arg_30904 = add32(defunc_0_f_res_30901, x_30903);
            int64_t i32_res_30905 = sext_i32_i64(i32_arg_30904);
            bool x_30906 = sle64((int64_t) 0, i32_res_30905);
            bool y_30907 = slt64(i32_res_30905, nm_27920);
            bool bounds_check_30908 = x_30906 && y_30907;
            bool index_certs_30909;
            
            if (!bounds_check_30908) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 33) ==
                        -1) {
                        global_failure_args[0] = i32_res_30905;
                        global_failure_args[1] = nm_27920;
                        ;
                    }
                    local_failure = true;
                    goto error_1;
                }
            }
            
            float defunc_0_f_res_t_res_30910 = ((__local
                                                 float *) mem_44553)[i32_res_30905];
            
            defunc_0_f_res_30902 = defunc_0_f_res_t_res_30910;
        } else {
            int64_t i32_res_30911 = sext_i32_i64(defunc_0_f_res_30901);
            bool x_30912 = sle64((int64_t) 0, i32_res_30911);
            bool y_30913 = slt64(i32_res_30911, nm_27920);
            bool bounds_check_30914 = x_30912 && y_30913;
            bool index_certs_30915;
            
            if (!bounds_check_30914) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 34) ==
                        -1) {
                        global_failure_args[0] = i32_res_30911;
                        global_failure_args[1] = nm_27920;
                        ;
                    }
                    local_failure = true;
                    goto error_1;
                }
            }
            
            float x_30916 = ((__local float *) mem_44553)[i32_res_30911];
            float x_30917 = x_30916 / v1_30895;
            int32_t y_30918 = sub32(k2p2zq_27785, 1);
            bool cond_30919 = slt32(defunc_0_f_res_30900, y_30918);
            float defunc_0_f_res_f_res_30920;
            
            if (cond_30919) {
                int32_t x_30921 = add32(1, defunc_0_f_res_30900);
                int32_t x_30922 = mul32(m_27918, x_30921);
                int32_t i32_arg_30923 = add32(defunc_0_f_res_30901, x_30922);
                int64_t i32_res_30924 = sext_i32_i64(i32_arg_30923);
                bool x_30925 = sle64((int64_t) 0, i32_res_30924);
                bool y_30926 = slt64(i32_res_30924, nm_27920);
                bool bounds_check_30927 = x_30925 && y_30926;
                bool index_certs_30928;
                
                if (!bounds_check_30927) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 35) ==
                            -1) {
                            global_failure_args[0] = i32_res_30924;
                            global_failure_args[1] = nm_27920;
                            ;
                        }
                        local_failure = true;
                        goto error_1;
                    }
                }
                
                float x_30929 = ((__local float *) mem_44553)[i32_res_30924];
                int32_t i32_arg_30930 = add32(i_30888, x_30922);
                int64_t i32_res_30931 = sext_i32_i64(i32_arg_30930);
                bool x_30932 = sle64((int64_t) 0, i32_res_30931);
                bool y_30933 = slt64(i32_res_30931, nm_27920);
                bool bounds_check_30934 = x_30932 && y_30933;
                bool index_certs_30935;
                
                if (!bounds_check_30934) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 36) ==
                            -1) {
                            global_failure_args[0] = i32_res_30931;
                            global_failure_args[1] = nm_27920;
                            ;
                        }
                        local_failure = true;
                        goto error_1;
                    }
                }
                
                float x_30936 = ((__local float *) mem_44553)[i32_res_30931];
                float y_30937 = x_30917 * x_30936;
                float defunc_0_f_res_f_res_t_res_30938 = x_30929 - y_30937;
                
                defunc_0_f_res_f_res_30920 = defunc_0_f_res_f_res_t_res_30938;
            } else {
                defunc_0_f_res_f_res_30920 = x_30917;
            }
            defunc_0_f_res_30902 = defunc_0_f_res_f_res_30920;
        }
        ((__local float *) mem_44563)[gtid_30643] = defunc_0_f_res_30902;
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_30686 = sext_i32_i64(ltid_pre_45837);
        int32_t phys_tid_30687 = local_tid_45833;
        float write_value_30941 = ((__local float *) mem_44563)[write_i_30686];
        
        if (sle64((int64_t) 0, write_i_30686) && slt64(write_i_30686,
                                                       nm_27920)) {
            ((__local float *) mem_44553)[write_i_30686] = write_value_30941;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_45839 = 0; i_45839 < sdiv_up64(i32_res_27787 *
                                                  i32_res_27787 -
                                                  sext_i32_i64(local_tid_45833),
                                                  nm_27920); i_45839++) {
        ((__global float *) mem_44573)[gtid_30619 * (i32_res_27787 *
                                                     i32_res_27787) +
                                       squot64(i_45839 * nm_27920 +
                                               sext_i32_i64(local_tid_45833),
                                               i32_res_27787) * i32_res_27787 +
                                       (i_45839 * nm_27920 +
                                        sext_i32_i64(local_tid_45833) -
                                        squot64(i_45839 * nm_27920 +
                                                sext_i32_i64(local_tid_45833),
                                                i32_res_27787) *
                                        i32_res_27787)] = ((__local
                                                            float *) mem_44553)[i32_res_27787 +
                                                                                (squot64(i_45839 *
                                                                                         nm_27920 +
                                                                                         sext_i32_i64(local_tid_45833),
                                                                                         i32_res_27787) *
                                                                                 i32_res_27935 +
                                                                                 (i_45839 *
                                                                                  nm_27920 +
                                                                                  sext_i32_i64(local_tid_45833) -
                                                                                  squot64(i_45839 *
                                                                                          nm_27920 +
                                                                                          sext_i32_i64(local_tid_45833),
                                                                                          i32_res_27787) *
                                                                                  i32_res_27787))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31015(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_44594_backing_aligned_0,
                                                    int64_t m_27772,
                                                    int32_t k2p2zq_27785,
                                                    int32_t m_27918,
                                                    int64_t nm_27920,
                                                    int32_t i_31554,
                                                    int64_t i32_res_31556,
                                                    int64_t ctx_param_ext_44580,
                                                    int64_t ctx_param_ext_44581,
                                                    int64_t ctx_param_ext_44583,
                                                    __global
                                                    unsigned char *mem_param_44585,
                                                    __global
                                                    unsigned char *mem_44590,
                                                    __global
                                                    unsigned char *mem_44598)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44594_backing_0 = (__local volatile
                                                           char *) mem_44594_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45866;
    int32_t local_tid_45867;
    int64_t group_sizze_45870;
    int32_t wave_sizze_45869;
    int32_t group_tid_45868;
    
    global_tid_45866 = get_global_id(0);
    local_tid_45867 = get_local_id(0);
    group_sizze_45870 = get_local_size(0);
    wave_sizze_45869 = LOCKSTEP_WIDTH;
    group_tid_45868 = get_group_id(0);
    
    int32_t phys_tid_31015;
    
    phys_tid_31015 = group_tid_45868;
    
    int32_t ltid_pre_45871;
    
    ltid_pre_45871 = local_tid_45867;
    
    int64_t gtid_30967;
    
    gtid_30967 = sext_i32_i64(group_tid_45868);
    
    float v1_31573 = ((__global float *) mem_param_44585)[ctx_param_ext_44580 +
                                                          (gtid_30967 *
                                                           ctx_param_ext_44581 +
                                                           i32_res_31556 *
                                                           ctx_param_ext_44583)];
    bool cond_31574 = v1_31573 == 0.0F;
    __local char *mem_44594;
    
    mem_44594 = (__local char *) mem_44594_backing_0;
    
    int64_t gtid_30970 = sext_i32_i64(ltid_pre_45871);
    int32_t phys_tid_30971 = local_tid_45867;
    int32_t defunc_0_f_res_31577 = sext_i64_i32(gtid_30970);
    int32_t defunc_0_f_res_31578 = sdiv32(defunc_0_f_res_31577, m_27918);
    int32_t defunc_0_f_res_31579 = smod32(defunc_0_f_res_31577, m_27918);
    float defunc_0_f_res_31580;
    
    if (cond_31574) {
        int32_t x_31581 = mul32(m_27918, defunc_0_f_res_31578);
        int32_t i32_arg_31582 = add32(defunc_0_f_res_31579, x_31581);
        int64_t i32_res_31583 = sext_i32_i64(i32_arg_31582);
        bool x_31584 = sle64((int64_t) 0, i32_res_31583);
        bool y_31585 = slt64(i32_res_31583, nm_27920);
        bool bounds_check_31586 = x_31584 && y_31585;
        bool index_certs_31587;
        
        if (!bounds_check_31586) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 38) == -1) {
                    global_failure_args[0] = i32_res_31583;
                    global_failure_args[1] = nm_27920;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float defunc_0_f_res_t_res_31588 = ((__global
                                             float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                       (gtid_30967 *
                                                                        ctx_param_ext_44581 +
                                                                        i32_res_31583 *
                                                                        ctx_param_ext_44583)];
        
        defunc_0_f_res_31580 = defunc_0_f_res_t_res_31588;
    } else {
        int64_t i32_res_31589 = sext_i32_i64(defunc_0_f_res_31579);
        bool x_31590 = sle64((int64_t) 0, i32_res_31589);
        bool y_31591 = slt64(i32_res_31589, nm_27920);
        bool bounds_check_31592 = x_31590 && y_31591;
        bool index_certs_31593;
        
        if (!bounds_check_31592) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 39) == -1) {
                    global_failure_args[0] = i32_res_31589;
                    global_failure_args[1] = nm_27920;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float x_31594 = ((__global
                          float *) mem_param_44585)[ctx_param_ext_44580 +
                                                    (gtid_30967 *
                                                     ctx_param_ext_44581 +
                                                     i32_res_31589 *
                                                     ctx_param_ext_44583)];
        float x_31595 = x_31594 / v1_31573;
        int32_t y_31596 = sub32(k2p2zq_27785, 1);
        bool cond_31597 = slt32(defunc_0_f_res_31578, y_31596);
        float defunc_0_f_res_f_res_31598;
        
        if (cond_31597) {
            int32_t x_31599 = add32(1, defunc_0_f_res_31578);
            int32_t x_31600 = mul32(m_27918, x_31599);
            int32_t i32_arg_31601 = add32(defunc_0_f_res_31579, x_31600);
            int64_t i32_res_31602 = sext_i32_i64(i32_arg_31601);
            bool x_31603 = sle64((int64_t) 0, i32_res_31602);
            bool y_31604 = slt64(i32_res_31602, nm_27920);
            bool bounds_check_31605 = x_31603 && y_31604;
            bool index_certs_31606;
            
            if (!bounds_check_31605) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 40) ==
                        -1) {
                        global_failure_args[0] = i32_res_31602;
                        global_failure_args[1] = nm_27920;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_31607 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_30967 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_31602 *
                                                         ctx_param_ext_44583)];
            int32_t i32_arg_31608 = add32(i_31554, x_31600);
            int64_t i32_res_31609 = sext_i32_i64(i32_arg_31608);
            bool x_31610 = sle64((int64_t) 0, i32_res_31609);
            bool y_31611 = slt64(i32_res_31609, nm_27920);
            bool bounds_check_31612 = x_31610 && y_31611;
            bool index_certs_31613;
            
            if (!bounds_check_31612) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 41) ==
                        -1) {
                        global_failure_args[0] = i32_res_31609;
                        global_failure_args[1] = nm_27920;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_31614 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_30967 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_31609 *
                                                         ctx_param_ext_44583)];
            float y_31615 = x_31595 * x_31614;
            float defunc_0_f_res_f_res_t_res_31616 = x_31607 - y_31615;
            
            defunc_0_f_res_f_res_31598 = defunc_0_f_res_f_res_t_res_31616;
        } else {
            defunc_0_f_res_f_res_31598 = x_31595;
        }
        defunc_0_f_res_31580 = defunc_0_f_res_f_res_31598;
    }
    ((__local float *) mem_44594)[gtid_30970] = defunc_0_f_res_31580;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31013 = sext_i32_i64(ltid_pre_45871);
    int32_t phys_tid_31014 = local_tid_45867;
    float write_value_31619 = ((__local float *) mem_44594)[write_i_31013];
    
    if (sle64((int64_t) 0, write_i_31013) && slt64(write_i_31013, nm_27920)) {
        ((__global float *) mem_44590)[gtid_30967 + write_i_31013 * m_27772] =
            write_value_31619;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45867 == 0) {
        for (int64_t i_45872 = 0; i_45872 < nm_27920; i_45872++) {
            ((__global float *) mem_44598)[gtid_30967 * nm_27920 + i_45872] =
                ((__global float *) mem_44590)[gtid_30967 + i_45872 * m_27772];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32146(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_45150_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_45148_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_45146_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_45144_backing_aligned_3,
                                                    int64_t N_27771,
                                                    int64_t i_28075, __global
                                                    unsigned char *images_mem_44381,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_45140,
                                                    __global
                                                    unsigned char *mem_45153,
                                                    __global
                                                    unsigned char *mem_45156,
                                                    __global
                                                    unsigned char *mem_45159)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45150_backing_3 = (__local volatile
                                                           char *) mem_45150_backing_aligned_0;
    __local volatile char *restrict mem_45148_backing_2 = (__local volatile
                                                           char *) mem_45148_backing_aligned_1;
    __local volatile char *restrict mem_45146_backing_1 = (__local volatile
                                                           char *) mem_45146_backing_aligned_2;
    __local volatile char *restrict mem_45144_backing_0 = (__local volatile
                                                           char *) mem_45144_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46248;
    int32_t local_tid_46249;
    int64_t group_sizze_46252;
    int32_t wave_sizze_46251;
    int32_t group_tid_46250;
    
    global_tid_46248 = get_global_id(0);
    local_tid_46249 = get_local_id(0);
    group_sizze_46252 = get_local_size(0);
    wave_sizze_46251 = LOCKSTEP_WIDTH;
    group_tid_46250 = get_group_id(0);
    
    int32_t phys_tid_32146;
    
    phys_tid_32146 = group_tid_46250;
    
    int32_t ltid_pre_46253;
    
    ltid_pre_46253 = local_tid_46249;
    
    int64_t gtid_32139;
    
    gtid_32139 = sext_i32_i64(group_tid_46250);
    
    __local char *mem_45144;
    
    mem_45144 = (__local char *) mem_45144_backing_0;
    
    __local char *mem_45146;
    
    mem_45146 = (__local char *) mem_45146_backing_1;
    
    int64_t gtid_32142 = sext_i32_i64(ltid_pre_46253);
    int32_t phys_tid_32143 = local_tid_46249;
    float x_32235 = ((__global float *) images_mem_44381)[gtid_32139 * N_27771 +
                                                          gtid_32142];
    bool isnan_res_32237;
    
    isnan_res_32237 = futrts_isnan32(x_32235);
    
    bool cond_32238 = !isnan_res_32237;
    float defunc_1_f_res_32239;
    
    if (cond_32238) {
        float x_32236 = ((__global
                          float *) defunc_3_map_res_mem_45140)[gtid_32139 *
                                                               N_27771 +
                                                               gtid_32142];
        float defunc_1_f_res_t_res_32240 = x_32235 - x_32236;
        
        defunc_1_f_res_32239 = defunc_1_f_res_t_res_32240;
    } else {
        defunc_1_f_res_32239 = NAN;
    }
    
    bool isnan_res_32241;
    
    isnan_res_32241 = futrts_isnan32(defunc_1_f_res_32239);
    
    bool defunc_0_p_res_32242 = !isnan_res_32241;
    int64_t defunc_0_f_res_32243 = btoi_bool_i64(defunc_0_p_res_32242);
    
    ((__local int64_t *) mem_45144)[gtid_32142] = defunc_0_f_res_32243;
    ((__local float *) mem_45146)[gtid_32142] = defunc_1_f_res_32239;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46254;
    
    dims_flat_46254 = N_27771;
    
    int64_t x_32232;
    int64_t x_32233;
    int64_t x_46256;
    int64_t x_46257;
    bool ltid_in_bounds_46259;
    
    ltid_in_bounds_46259 = slt64(sext_i32_i64(local_tid_46249), N_27771);
    
    int32_t skip_threads_46260;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46259) {
            x_32233 = ((volatile __local
                        int64_t *) mem_45144)[sext_i32_i64(local_tid_46249)];
            if ((local_tid_46249 - squot32(local_tid_46249, 32) * 32) == 0) {
                x_32232 = x_32233;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46260 = 1;
        while (slt32(skip_threads_46260, 32)) {
            if (sle32(skip_threads_46260, local_tid_46249 -
                      squot32(local_tid_46249, 32) * 32) &&
                ltid_in_bounds_46259) {
                // read operands
                {
                    x_32232 = ((volatile __local
                                int64_t *) mem_45144)[sext_i32_i64(local_tid_46249) -
                                                      sext_i32_i64(skip_threads_46260)];
                }
                // perform operation
                {
                    bool inactive_46261 =
                         slt64(srem64(sext_i32_i64(local_tid_46249), N_27771),
                               sext_i32_i64(local_tid_46249) -
                               sext_i32_i64(local_tid_46249 -
                               skip_threads_46260));
                    
                    if (inactive_46261) {
                        x_32232 = x_32233;
                    }
                    if (!inactive_46261) {
                        int64_t defunc_1_op_res_32234 = add64(x_32232, x_32233);
                        
                        x_32232 = defunc_1_op_res_32234;
                    }
                }
            }
            if (sle32(wave_sizze_46251, skip_threads_46260)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46260, local_tid_46249 -
                      squot32(local_tid_46249, 32) * 32) &&
                ltid_in_bounds_46259) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_45144)[sext_i32_i64(local_tid_46249)] =
                        x_32232;
                    x_32233 = x_32232;
                }
            }
            if (sle32(wave_sizze_46251, skip_threads_46260)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46260 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46249 - squot32(local_tid_46249, 32) * 32) == 31 &&
            ltid_in_bounds_46259) {
            ((volatile __local
              int64_t *) mem_45144)[sext_i32_i64(squot32(local_tid_46249,
                                                         32))] = x_32232;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46262;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46249, 32) == 0 && ltid_in_bounds_46259) {
                x_46257 = ((volatile __local
                            int64_t *) mem_45144)[sext_i32_i64(local_tid_46249)];
                if ((local_tid_46249 - squot32(local_tid_46249, 32) * 32) ==
                    0) {
                    x_46256 = x_46257;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46262 = 1;
            while (slt32(skip_threads_46262, 32)) {
                if (sle32(skip_threads_46262, local_tid_46249 -
                          squot32(local_tid_46249, 32) * 32) &&
                    (squot32(local_tid_46249, 32) == 0 &&
                     ltid_in_bounds_46259)) {
                    // read operands
                    {
                        x_46256 = ((volatile __local
                                    int64_t *) mem_45144)[sext_i32_i64(local_tid_46249) -
                                                          sext_i32_i64(skip_threads_46262)];
                    }
                    // perform operation
                    {
                        bool inactive_46263 =
                             slt64(srem64(sext_i32_i64(local_tid_46249 * 32 +
                                          32 - 1), N_27771),
                                   sext_i32_i64(local_tid_46249 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46249 -
                                                 skip_threads_46262) * 32 + 32 -
                                   1));
                        
                        if (inactive_46263) {
                            x_46256 = x_46257;
                        }
                        if (!inactive_46263) {
                            int64_t defunc_1_op_res_46258 = add64(x_46256,
                                                                  x_46257);
                            
                            x_46256 = defunc_1_op_res_46258;
                        }
                    }
                }
                if (sle32(wave_sizze_46251, skip_threads_46262)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46262, local_tid_46249 -
                          squot32(local_tid_46249, 32) * 32) &&
                    (squot32(local_tid_46249, 32) == 0 &&
                     ltid_in_bounds_46259)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_45144)[sext_i32_i64(local_tid_46249)] =
                            x_46256;
                        x_46257 = x_46256;
                    }
                }
                if (sle32(wave_sizze_46251, skip_threads_46262)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46262 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46249, 32) == 0 || !ltid_in_bounds_46259)) {
            // read operands
            {
                x_32233 = x_32232;
                x_32232 = ((__local
                            int64_t *) mem_45144)[sext_i32_i64(squot32(local_tid_46249,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46264 =
                     slt64(srem64(sext_i32_i64(local_tid_46249), N_27771),
                           sext_i32_i64(local_tid_46249) -
                           sext_i32_i64(squot32(local_tid_46249, 32) * 32 - 1));
                
                if (inactive_46264) {
                    x_32232 = x_32233;
                }
                if (!inactive_46264) {
                    int64_t defunc_1_op_res_32234 = add64(x_32232, x_32233);
                    
                    x_32232 = defunc_1_op_res_32234;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_45144)[sext_i32_i64(local_tid_46249)] =
                    x_32232;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46249, 32) == 0) {
            ((__local int64_t *) mem_45144)[sext_i32_i64(local_tid_46249)] =
                x_32233;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_32244 = ((__local int64_t *) mem_45144)[i_28075];
    int32_t defunc_0_f_res_32245 = sext_i64_i32(last_res_32244);
    __local char *mem_45148;
    
    mem_45148 = (__local char *) mem_45148_backing_2;
    ((__local float *) mem_45148)[sext_i32_i64(local_tid_46249)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45150;
    
    mem_45150 = (__local char *) mem_45150_backing_3;
    ((__local int32_t *) mem_45150)[sext_i32_i64(local_tid_46249)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32144 = sext_i32_i64(ltid_pre_46253);
    int32_t phys_tid_32145 = local_tid_46249;
    float x_32250 = ((__local float *) mem_45146)[write_i_32144];
    int32_t index_primexp_42374 = sext_i64_i32(write_i_32144);
    bool isnan_res_32253;
    
    isnan_res_32253 = futrts_isnan32(x_32250);
    
    bool defunc_0_p_res_32254 = !isnan_res_32253;
    int64_t defunc_1_f_res_32255;
    
    if (defunc_0_p_res_32254) {
        int64_t x_32251 = ((__local int64_t *) mem_45144)[write_i_32144];
        int64_t defunc_1_f_res_t_res_32256 = sub64(x_32251, (int64_t) 1);
        
        defunc_1_f_res_32255 = defunc_1_f_res_t_res_32256;
    } else {
        defunc_1_f_res_32255 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_32255) && slt64(defunc_1_f_res_32255,
                                                          N_27771)) {
        ((__local int32_t *) mem_45150)[defunc_1_f_res_32255] =
            index_primexp_42374;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_32255) && slt64(defunc_1_f_res_32255,
                                                          N_27771)) {
        ((__local float *) mem_45148)[defunc_1_f_res_32255] = x_32250;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_46249 == 0) {
        ((__global int32_t *) mem_45153)[gtid_32139] = defunc_0_f_res_32245;
    }
    ((__global float *) mem_45156)[gtid_32139 * N_27771 +
                                   sext_i32_i64(local_tid_46249)] = ((__local
                                                                      float *) mem_45148)[sext_i32_i64(local_tid_46249)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_45159)[gtid_32139 * N_27771 +
                                     sext_i32_i64(local_tid_46249)] = ((__local
                                                                        int32_t *) mem_45150)[sext_i32_i64(local_tid_46249)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32486(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *red_arr_mem_46373_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_46369_backing_aligned_1,
                                                    int64_t N_27771,
                                                    float hfrac_27777,
                                                    int64_t i32_res_27781,
                                                    int32_t k2p2_27783, __global
                                                    unsigned char *images_mem_44381,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_45178,
                                                    __global
                                                    unsigned char *mem_45225,
                                                    __global
                                                    unsigned char *mem_45227,
                                                    __global
                                                    unsigned char *mem_45229)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46373_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46373_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46369_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46369_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46363;
    int32_t local_tid_46364;
    int64_t group_sizze_46367;
    int32_t wave_sizze_46366;
    int32_t group_tid_46365;
    
    global_tid_46363 = get_global_id(0);
    local_tid_46364 = get_local_id(0);
    group_sizze_46367 = get_local_size(0);
    wave_sizze_46366 = LOCKSTEP_WIDTH;
    group_tid_46365 = get_group_id(0);
    
    int32_t phys_tid_32486;
    
    phys_tid_32486 = group_tid_46365;
    
    int32_t ltid_pre_46368;
    
    ltid_pre_46368 = local_tid_46364;
    
    int64_t gtid_32479;
    
    gtid_32479 = sext_i32_i64(group_tid_46365);
    
    int32_t defunc_0_f_res_32571;
    int64_t gtid_32482 = sext_i32_i64(ltid_pre_46368);
    int32_t phys_tid_32483 = local_tid_46364;
    __local char *red_arr_mem_46369;
    
    red_arr_mem_46369 = (__local char *) red_arr_mem_46369_backing_0;
    
    float x_32575;
    
    x_32575 = ((__global float *) images_mem_44381)[gtid_32479 * N_27771 +
                                                    gtid_32482];
    
    bool isnan_res_32576;
    
    isnan_res_32576 = futrts_isnan32(x_32575);
    
    bool cond_32577 = !isnan_res_32576;
    int32_t defunc_0_f_res_32578 = btoi_bool_i32(cond_32577);
    
    ((__local int32_t *) red_arr_mem_46369)[gtid_32482] = defunc_0_f_res_32578;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46371;
    int32_t skip_waves_46372;
    
    skip_waves_46372 = 1;
    
    int32_t x_32572;
    int32_t x_32573;
    
    offset_46371 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46364, sext_i64_i32(i32_res_27781))) {
            x_32572 = ((__local
                        int32_t *) red_arr_mem_46369)[sext_i32_i64(local_tid_46364 +
                                                      offset_46371)];
        }
    }
    offset_46371 = 1;
    while (slt32(offset_46371, wave_sizze_46366)) {
        if (slt32(local_tid_46364 + offset_46371,
                  sext_i64_i32(i32_res_27781)) && ((local_tid_46364 -
                                                    squot32(local_tid_46364,
                                                            wave_sizze_46366) *
                                                    wave_sizze_46366) & (2 *
                                                                         offset_46371 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_32573 = ((volatile __local
                            int32_t *) red_arr_mem_46369)[sext_i32_i64(local_tid_46364 +
                                                          offset_46371)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_32574 = add32(x_32572, x_32573);
                
                x_32572 = defunc_1_op_res_32574;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_46369)[sext_i32_i64(local_tid_46364)] =
                    x_32572;
            }
        }
        offset_46371 *= 2;
    }
    while (slt32(skip_waves_46372, squot32(sext_i64_i32(i32_res_27781) +
                                           wave_sizze_46366 - 1,
                                           wave_sizze_46366))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46371 = skip_waves_46372 * wave_sizze_46366;
        if (slt32(local_tid_46364 + offset_46371,
                  sext_i64_i32(i32_res_27781)) && ((local_tid_46364 -
                                                    squot32(local_tid_46364,
                                                            wave_sizze_46366) *
                                                    wave_sizze_46366) == 0 &&
                                                   (squot32(local_tid_46364,
                                                            wave_sizze_46366) &
                                                    (2 * skip_waves_46372 -
                                                     1)) == 0)) {
            // read array element
            {
                x_32573 = ((__local
                            int32_t *) red_arr_mem_46369)[sext_i32_i64(local_tid_46364 +
                                                          offset_46371)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_32574 = add32(x_32572, x_32573);
                
                x_32572 = defunc_1_op_res_32574;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_46369)[sext_i32_i64(local_tid_46364)] =
                    x_32572;
            }
        }
        skip_waves_46372 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32571 = ((__local int32_t *) red_arr_mem_46369)[(int64_t) 0];
    
    float defunc_0_f_res_32579;
    int64_t gtid_32484 = sext_i32_i64(ltid_pre_46368);
    int32_t phys_tid_32485 = local_tid_46364;
    __local char *red_arr_mem_46373;
    
    red_arr_mem_46373 = (__local char *) red_arr_mem_46373_backing_1;
    
    int32_t index_primexp_42382;
    
    index_primexp_42382 = sext_i64_i32(gtid_32484);
    
    bool cond_32584 = slt32(index_primexp_42382, defunc_0_f_res_32571);
    float defunc_0_f_res_32585;
    
    if (cond_32584) {
        int64_t i_32586 = sext_i32_i64(index_primexp_42382);
        bool x_32587 = sle64((int64_t) 0, i_32586);
        bool y_32588 = slt64(i_32586, N_27771);
        bool bounds_check_32589 = x_32587 && y_32588;
        bool index_certs_32590;
        
        if (!bounds_check_32589) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 48) == -1) {
                    global_failure_args[0] = i_32586;
                    global_failure_args[1] = N_27771;
                    ;
                }
                local_failure = true;
                goto error_2;
            }
        }
        
        float defunc_0_f_res_t_res_32591 = ((__global
                                             float *) defunc_4_map_res_mem_45178)[gtid_32479 *
                                                                                  N_27771 +
                                                                                  i_32586];
        
        defunc_0_f_res_32585 = defunc_0_f_res_t_res_32591;
    } else {
        defunc_0_f_res_32585 = 0.0F;
    }
    
    float defunc_0_f_res_32592 = defunc_0_f_res_32585 * defunc_0_f_res_32585;
    
    ((__local float *) red_arr_mem_46373)[gtid_32484] = defunc_0_f_res_32592;
    
  error_2:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46375;
    int32_t skip_waves_46376;
    
    skip_waves_46376 = 1;
    
    float x_32580;
    float x_32581;
    
    offset_46375 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46364, sext_i64_i32(i32_res_27781))) {
            x_32580 = ((__local
                        float *) red_arr_mem_46373)[sext_i32_i64(local_tid_46364 +
                                                    offset_46375)];
        }
    }
    offset_46375 = 1;
    while (slt32(offset_46375, wave_sizze_46366)) {
        if (slt32(local_tid_46364 + offset_46375,
                  sext_i64_i32(i32_res_27781)) && ((local_tid_46364 -
                                                    squot32(local_tid_46364,
                                                            wave_sizze_46366) *
                                                    wave_sizze_46366) & (2 *
                                                                         offset_46375 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_32581 = ((volatile __local
                            float *) red_arr_mem_46373)[sext_i32_i64(local_tid_46364 +
                                                        offset_46375)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_32582 = x_32580 + x_32581;
                
                x_32580 = defunc_1_op_res_32582;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_46373)[sext_i32_i64(local_tid_46364)] =
                    x_32580;
            }
        }
        offset_46375 *= 2;
    }
    while (slt32(skip_waves_46376, squot32(sext_i64_i32(i32_res_27781) +
                                           wave_sizze_46366 - 1,
                                           wave_sizze_46366))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46375 = skip_waves_46376 * wave_sizze_46366;
        if (slt32(local_tid_46364 + offset_46375,
                  sext_i64_i32(i32_res_27781)) && ((local_tid_46364 -
                                                    squot32(local_tid_46364,
                                                            wave_sizze_46366) *
                                                    wave_sizze_46366) == 0 &&
                                                   (squot32(local_tid_46364,
                                                            wave_sizze_46366) &
                                                    (2 * skip_waves_46376 -
                                                     1)) == 0)) {
            // read array element
            {
                x_32581 = ((__local
                            float *) red_arr_mem_46373)[sext_i32_i64(local_tid_46364 +
                                                        offset_46375)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_32582 = x_32580 + x_32581;
                
                x_32580 = defunc_1_op_res_32582;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_46373)[sext_i32_i64(local_tid_46364)] =
                    x_32580;
            }
        }
        skip_waves_46376 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32579 = ((__local float *) red_arr_mem_46373)[(int64_t) 0];
    
    int32_t r32_arg_32593 = sub32(defunc_0_f_res_32571, k2p2_27783);
    float i32_res_32594 = sitofp_i32_f32(r32_arg_32593);
    float sqrt_arg_32595 = defunc_0_f_res_32579 / i32_res_32594;
    float sqrt_res_32596;
    
    sqrt_res_32596 = futrts_sqrt32(sqrt_arg_32595);
    
    float i32_res_32597 = sitofp_i32_f32(defunc_0_f_res_32571);
    float t32_arg_32598 = hfrac_27777 * i32_res_32597;
    int32_t f32_res_32599 = fptosi_f32_i32(t32_arg_32598);
    
    if (local_tid_46364 == 0) {
        ((__global int32_t *) mem_45225)[gtid_32479] = f32_res_32599;
    }
    if (local_tid_46364 == 0) {
        ((__global int32_t *) mem_45227)[gtid_32479] = defunc_0_f_res_32571;
    }
    if (local_tid_46364 == 0) {
        ((__global float *) mem_45229)[gtid_32479] = sqrt_res_32596;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_33543(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_45385_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_46677_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *red_arr_mem_46675_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_46673_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_45383_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_45380_backing_aligned_5,
                                                    int64_t N_27771,
                                                    int32_t n_27775,
                                                    int64_t iota32_arg_28203,
                                                    int64_t iota32_arg_28233,
                                                    int64_t computed_group_sizze_33535,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_45177,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_45178,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_45179,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_45244,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_45245,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_45246,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_45279,
                                                    __global
                                                    unsigned char *mem_45282,
                                                    __global
                                                    unsigned char *mem_45389,
                                                    __global
                                                    unsigned char *mem_45392,
                                                    __global
                                                    unsigned char *mem_45394,
                                                    __global
                                                    unsigned char *mem_45396)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45385_backing_5 = (__local volatile
                                                           char *) mem_45385_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46677_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_46677_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46675_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_46675_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_46673_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46673_backing_aligned_3;
    __local volatile char *restrict mem_45383_backing_1 = (__local volatile
                                                           char *) mem_45383_backing_aligned_4;
    __local volatile char *restrict mem_45380_backing_0 = (__local volatile
                                                           char *) mem_45380_backing_aligned_5;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46655;
    int32_t local_tid_46656;
    int64_t group_sizze_46659;
    int32_t wave_sizze_46658;
    int32_t group_tid_46657;
    
    global_tid_46655 = get_global_id(0);
    local_tid_46656 = get_local_id(0);
    group_sizze_46659 = get_local_size(0);
    wave_sizze_46658 = LOCKSTEP_WIDTH;
    group_tid_46657 = get_group_id(0);
    
    int32_t phys_tid_33543;
    
    phys_tid_33543 = group_tid_46657;
    
    int32_t ltid_pre_46660;
    
    ltid_pre_46660 = local_tid_46656;
    
    int32_t ltid_pre_46661;
    
    ltid_pre_46661 = local_tid_46656;
    
    int64_t gtid_33533;
    
    gtid_33533 = sext_i32_i64(group_tid_46657);
    
    int32_t x_33781;
    
    x_33781 = ((__global int32_t *) defunc_4_map_res_mem_45177)[gtid_33533];
    
    int32_t x_33782 = ((__global
                        int32_t *) defunc_3_map_res_mem_45245)[gtid_33533];
    float x_33783 = ((__global float *) defunc_3_map_res_mem_45246)[gtid_33533];
    int32_t x_33784 = ((__global
                        int32_t *) defunc_3_map_res_mem_45244)[gtid_33533];
    float x_33785 = ((__global float *) defunc_0_f_res_mem_45279)[gtid_33533];
    int32_t y_33788 = sub32(x_33781, x_33782);
    __local char *mem_45380;
    
    mem_45380 = (__local char *) mem_45380_backing_0;
    
    int64_t gtid_33536 = sext_i32_i64(ltid_pre_46661);
    int32_t phys_tid_33537 = local_tid_46656;
    
    if (slt64(gtid_33536, iota32_arg_28233)) {
        int32_t index_primexp_42402 = sext_i64_i32(gtid_33536);
        bool cond_33794 = sle32(y_33788, index_primexp_42402);
        float defunc_0_f_res_33795;
        
        if (cond_33794) {
            defunc_0_f_res_33795 = 0.0F;
        } else {
            bool cond_33796 = index_primexp_42402 == 0;
            float defunc_0_f_res_f_res_33797;
            
            if (cond_33796) {
                defunc_0_f_res_f_res_33797 = x_33785;
            } else {
                int32_t i_33798 = add32(x_33782, index_primexp_42402);
                int64_t i_33799 = sext_i32_i64(i_33798);
                bool x_33800 = sle64((int64_t) 0, i_33799);
                bool y_33801 = slt64(i_33799, N_27771);
                bool bounds_check_33802 = x_33800 && y_33801;
                bool index_certs_33803;
                
                if (!bounds_check_33802) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 71) ==
                            -1) {
                            global_failure_args[0] = i_33799;
                            global_failure_args[1] = N_27771;
                            ;
                        }
                        local_failure = true;
                        goto error_0;
                    }
                }
                
                float x_33804 = ((__global
                                  float *) defunc_4_map_res_mem_45178)[gtid_33533 *
                                                                       N_27771 +
                                                                       i_33799];
                int32_t x_33805 = sub32(x_33782, x_33784);
                int32_t i_33806 = add32(x_33805, index_primexp_42402);
                int64_t i_33807 = sext_i32_i64(i_33806);
                bool x_33808 = sle64((int64_t) 0, i_33807);
                bool y_33809 = slt64(i_33807, N_27771);
                bool bounds_check_33810 = x_33808 && y_33809;
                bool index_certs_33811;
                
                if (!bounds_check_33810) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 72) ==
                            -1) {
                            global_failure_args[0] = i_33807;
                            global_failure_args[1] = N_27771;
                            ;
                        }
                        local_failure = true;
                        goto error_0;
                    }
                }
                
                float y_33812 = ((__global
                                  float *) defunc_4_map_res_mem_45178)[gtid_33533 *
                                                                       N_27771 +
                                                                       i_33807];
                float defunc_0_f_res_f_res_f_res_33813 = x_33804 - y_33812;
                
                defunc_0_f_res_f_res_33797 = defunc_0_f_res_f_res_f_res_33813;
            }
            defunc_0_f_res_33795 = defunc_0_f_res_f_res_33797;
        }
        ((__local float *) mem_45380)[gtid_33536] = defunc_0_f_res_33795;
    }
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46662;
    
    dims_flat_46662 = iota32_arg_28233;
    
    float x_33790;
    float x_33791;
    float x_46664;
    float x_46665;
    bool ltid_in_bounds_46667;
    
    ltid_in_bounds_46667 = slt64(sext_i32_i64(local_tid_46656),
                                 iota32_arg_28233);
    
    int32_t skip_threads_46668;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46667) {
            x_33791 = ((volatile __local
                        float *) mem_45380)[sext_i32_i64(local_tid_46656)];
            if ((local_tid_46656 - squot32(local_tid_46656, 32) * 32) == 0) {
                x_33790 = x_33791;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46668 = 1;
        while (slt32(skip_threads_46668, 32)) {
            if (sle32(skip_threads_46668, local_tid_46656 -
                      squot32(local_tid_46656, 32) * 32) &&
                ltid_in_bounds_46667) {
                // read operands
                {
                    x_33790 = ((volatile __local
                                float *) mem_45380)[sext_i32_i64(local_tid_46656) -
                                                    sext_i32_i64(skip_threads_46668)];
                }
                // perform operation
                {
                    bool inactive_46669 =
                         slt64(srem64(sext_i32_i64(local_tid_46656),
                                      iota32_arg_28233),
                               sext_i32_i64(local_tid_46656) -
                               sext_i32_i64(local_tid_46656 -
                               skip_threads_46668));
                    
                    if (inactive_46669) {
                        x_33790 = x_33791;
                    }
                    if (!inactive_46669) {
                        float defunc_1_op_res_33792 = x_33790 + x_33791;
                        
                        x_33790 = defunc_1_op_res_33792;
                    }
                }
            }
            if (sle32(wave_sizze_46658, skip_threads_46668)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46668, local_tid_46656 -
                      squot32(local_tid_46656, 32) * 32) &&
                ltid_in_bounds_46667) {
                // write result
                {
                    ((volatile __local
                      float *) mem_45380)[sext_i32_i64(local_tid_46656)] =
                        x_33790;
                    x_33791 = x_33790;
                }
            }
            if (sle32(wave_sizze_46658, skip_threads_46668)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46668 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46656 - squot32(local_tid_46656, 32) * 32) == 31 &&
            ltid_in_bounds_46667) {
            ((volatile __local
              float *) mem_45380)[sext_i32_i64(squot32(local_tid_46656, 32))] =
                x_33790;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46670;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46656, 32) == 0 && ltid_in_bounds_46667) {
                x_46665 = ((volatile __local
                            float *) mem_45380)[sext_i32_i64(local_tid_46656)];
                if ((local_tid_46656 - squot32(local_tid_46656, 32) * 32) ==
                    0) {
                    x_46664 = x_46665;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46670 = 1;
            while (slt32(skip_threads_46670, 32)) {
                if (sle32(skip_threads_46670, local_tid_46656 -
                          squot32(local_tid_46656, 32) * 32) &&
                    (squot32(local_tid_46656, 32) == 0 &&
                     ltid_in_bounds_46667)) {
                    // read operands
                    {
                        x_46664 = ((volatile __local
                                    float *) mem_45380)[sext_i32_i64(local_tid_46656) -
                                                        sext_i32_i64(skip_threads_46670)];
                    }
                    // perform operation
                    {
                        bool inactive_46671 =
                             slt64(srem64(sext_i32_i64(local_tid_46656 * 32 +
                                          32 - 1), iota32_arg_28233),
                                   sext_i32_i64(local_tid_46656 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46656 -
                                                 skip_threads_46670) * 32 + 32 -
                                   1));
                        
                        if (inactive_46671) {
                            x_46664 = x_46665;
                        }
                        if (!inactive_46671) {
                            float defunc_1_op_res_46666 = x_46664 + x_46665;
                            
                            x_46664 = defunc_1_op_res_46666;
                        }
                    }
                }
                if (sle32(wave_sizze_46658, skip_threads_46670)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46670, local_tid_46656 -
                          squot32(local_tid_46656, 32) * 32) &&
                    (squot32(local_tid_46656, 32) == 0 &&
                     ltid_in_bounds_46667)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_45380)[sext_i32_i64(local_tid_46656)] =
                            x_46664;
                        x_46665 = x_46664;
                    }
                }
                if (sle32(wave_sizze_46658, skip_threads_46670)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46670 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46656, 32) == 0 || !ltid_in_bounds_46667)) {
            // read operands
            {
                x_33791 = x_33790;
                x_33790 = ((__local
                            float *) mem_45380)[sext_i32_i64(squot32(local_tid_46656,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46672 =
                     slt64(srem64(sext_i32_i64(local_tid_46656),
                                  iota32_arg_28233),
                           sext_i32_i64(local_tid_46656) -
                           sext_i32_i64(squot32(local_tid_46656, 32) * 32 - 1));
                
                if (inactive_46672) {
                    x_33790 = x_33791;
                }
                if (!inactive_46672) {
                    float defunc_1_op_res_33792 = x_33790 + x_33791;
                    
                    x_33790 = defunc_1_op_res_33792;
                }
            }
            // write final result
            {
                ((__local float *) mem_45380)[sext_i32_i64(local_tid_46656)] =
                    x_33790;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46656, 32) == 0) {
            ((__local float *) mem_45380)[sext_i32_i64(local_tid_46656)] =
                x_33791;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float i32_res_33814 = sitofp_i32_f32(x_33782);
    float sqrt_res_33815;
    
    sqrt_res_33815 = futrts_sqrt32(i32_res_33814);
    
    float y_33816 = x_33783 * sqrt_res_33815;
    __local char *mem_45383;
    
    mem_45383 = (__local char *) mem_45383_backing_1;
    
    bool defunc_0_f_res_33818;
    int32_t defunc_0_f_res_33819;
    float defunc_0_f_res_33820;
    int64_t gtid_33538 = sext_i32_i64(ltid_pre_46660);
    int32_t phys_tid_33539 = local_tid_46656;
    __local char *red_arr_mem_46673;
    
    red_arr_mem_46673 = (__local char *) red_arr_mem_46673_backing_2;
    
    __local char *red_arr_mem_46675;
    
    red_arr_mem_46675 = (__local char *) red_arr_mem_46675_backing_3;
    
    __local char *red_arr_mem_46677;
    
    red_arr_mem_46677 = (__local char *) red_arr_mem_46677_backing_4;
    if (slt64(gtid_33538, iota32_arg_28203)) {
        float x_33836 = ((__local float *) mem_45380)[gtid_33538];
        float x_33837 = ((__global float *) mem_45282)[gtid_33538];
        int32_t index_primexp_42405 = sext_i64_i32(gtid_33538);
        float defunc_0_f_res_33839 = x_33836 / y_33816;
        bool cond_33840 = slt32(index_primexp_42405, y_33788);
        bool isnan_res_33841;
        
        isnan_res_33841 = futrts_isnan32(defunc_0_f_res_33839);
        
        bool cond_t_res_33842 = !isnan_res_33841;
        bool x_33843 = cond_33840 && cond_t_res_33842;
        float abs_res_33844 = (float) fabs(defunc_0_f_res_33839);
        bool defunc_2_f_res_t_res_33845 = x_33837 < abs_res_33844;
        bool x_33846 = x_33843 && defunc_2_f_res_t_res_33845;
        float defunc_1_f_res_33847;
        
        if (cond_33840) {
            defunc_1_f_res_33847 = defunc_0_f_res_33839;
        } else {
            defunc_1_f_res_33847 = 0.0F;
        }
        ((__local bool *) red_arr_mem_46673)[gtid_33538] = x_33846;
        ((__local int32_t *) red_arr_mem_46675)[gtid_33538] =
            index_primexp_42405;
        ((__local float *) red_arr_mem_46677)[gtid_33538] =
            defunc_1_f_res_33847;
        ((__local float *) mem_45383)[gtid_33538] = defunc_0_f_res_33839;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46679;
    int32_t skip_waves_46680;
    
    skip_waves_46680 = 1;
    
    bool x_33822;
    int32_t x_33823;
    float x_33824;
    bool x_33825;
    int32_t x_33826;
    float x_33827;
    
    offset_46679 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46656, sext_i64_i32(iota32_arg_28203))) {
            x_33822 = ((__local
                        bool *) red_arr_mem_46673)[sext_i32_i64(local_tid_46656 +
                                                   offset_46679)];
            x_33823 = ((__local
                        int32_t *) red_arr_mem_46675)[sext_i32_i64(local_tid_46656 +
                                                      offset_46679)];
            x_33824 = ((__local
                        float *) red_arr_mem_46677)[sext_i32_i64(local_tid_46656 +
                                                    offset_46679)];
        }
    }
    offset_46679 = 1;
    while (slt32(offset_46679, wave_sizze_46658)) {
        if (slt32(local_tid_46656 + offset_46679,
                  sext_i64_i32(iota32_arg_28203)) && ((local_tid_46656 -
                                                       squot32(local_tid_46656,
                                                               wave_sizze_46658) *
                                                       wave_sizze_46658) & (2 *
                                                                            offset_46679 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_33825 = ((volatile __local
                            bool *) red_arr_mem_46673)[sext_i32_i64(local_tid_46656 +
                                                       offset_46679)];
                x_33826 = ((volatile __local
                            int32_t *) red_arr_mem_46675)[sext_i32_i64(local_tid_46656 +
                                                          offset_46679)];
                x_33827 = ((volatile __local
                            float *) red_arr_mem_46677)[sext_i32_i64(local_tid_46656 +
                                                        offset_46679)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33828;
                int32_t defunc_1_op_res_33829;
                
                if (x_33822) {
                    defunc_1_op_res_33828 = x_33822;
                    defunc_1_op_res_33829 = x_33823;
                } else {
                    bool x_33830 = x_33825 && x_33825;
                    bool x_33831 = !x_33825;
                    bool y_33832 = x_33822 && x_33831;
                    bool defunc_1_op_res_f_res_33833 = x_33830 || y_33832;
                    int32_t defunc_1_op_res_f_res_33834;
                    
                    if (x_33825) {
                        defunc_1_op_res_f_res_33834 = x_33826;
                    } else {
                        defunc_1_op_res_f_res_33834 = x_33823;
                    }
                    defunc_1_op_res_33828 = defunc_1_op_res_f_res_33833;
                    defunc_1_op_res_33829 = defunc_1_op_res_f_res_33834;
                }
                
                float defunc_1_op_res_33835 = x_33824 + x_33827;
                
                x_33822 = defunc_1_op_res_33828;
                x_33823 = defunc_1_op_res_33829;
                x_33824 = defunc_1_op_res_33835;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_46673)[sext_i32_i64(local_tid_46656)] =
                    x_33822;
                ((volatile __local
                  int32_t *) red_arr_mem_46675)[sext_i32_i64(local_tid_46656)] =
                    x_33823;
                ((volatile __local
                  float *) red_arr_mem_46677)[sext_i32_i64(local_tid_46656)] =
                    x_33824;
            }
        }
        offset_46679 *= 2;
    }
    while (slt32(skip_waves_46680,
                 squot32(sext_i64_i32(computed_group_sizze_33535) +
                         wave_sizze_46658 - 1, wave_sizze_46658))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46679 = skip_waves_46680 * wave_sizze_46658;
        if (slt32(local_tid_46656 + offset_46679,
                  sext_i64_i32(iota32_arg_28203)) && ((local_tid_46656 -
                                                       squot32(local_tid_46656,
                                                               wave_sizze_46658) *
                                                       wave_sizze_46658) == 0 &&
                                                      (squot32(local_tid_46656,
                                                               wave_sizze_46658) &
                                                       (2 * skip_waves_46680 -
                                                        1)) == 0)) {
            // read array element
            {
                x_33825 = ((__local
                            bool *) red_arr_mem_46673)[sext_i32_i64(local_tid_46656 +
                                                       offset_46679)];
                x_33826 = ((__local
                            int32_t *) red_arr_mem_46675)[sext_i32_i64(local_tid_46656 +
                                                          offset_46679)];
                x_33827 = ((__local
                            float *) red_arr_mem_46677)[sext_i32_i64(local_tid_46656 +
                                                        offset_46679)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33828;
                int32_t defunc_1_op_res_33829;
                
                if (x_33822) {
                    defunc_1_op_res_33828 = x_33822;
                    defunc_1_op_res_33829 = x_33823;
                } else {
                    bool x_33830 = x_33825 && x_33825;
                    bool x_33831 = !x_33825;
                    bool y_33832 = x_33822 && x_33831;
                    bool defunc_1_op_res_f_res_33833 = x_33830 || y_33832;
                    int32_t defunc_1_op_res_f_res_33834;
                    
                    if (x_33825) {
                        defunc_1_op_res_f_res_33834 = x_33826;
                    } else {
                        defunc_1_op_res_f_res_33834 = x_33823;
                    }
                    defunc_1_op_res_33828 = defunc_1_op_res_f_res_33833;
                    defunc_1_op_res_33829 = defunc_1_op_res_f_res_33834;
                }
                
                float defunc_1_op_res_33835 = x_33824 + x_33827;
                
                x_33822 = defunc_1_op_res_33828;
                x_33823 = defunc_1_op_res_33829;
                x_33824 = defunc_1_op_res_33835;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_46673)[sext_i32_i64(local_tid_46656)] =
                    x_33822;
                ((__local
                  int32_t *) red_arr_mem_46675)[sext_i32_i64(local_tid_46656)] =
                    x_33823;
                ((__local
                  float *) red_arr_mem_46677)[sext_i32_i64(local_tid_46656)] =
                    x_33824;
            }
        }
        skip_waves_46680 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_33818 = ((__local bool *) red_arr_mem_46673)[(int64_t) 0];
    defunc_0_f_res_33819 = ((__local int32_t *) red_arr_mem_46675)[(int64_t) 0];
    defunc_0_f_res_33820 = ((__local float *) red_arr_mem_46677)[(int64_t) 0];
    
    bool cond_33848 = y_33788 == 0;
    float defunc_0_f_res_33849;
    
    if (cond_33848) {
        defunc_0_f_res_33849 = 0.0F;
    } else {
        float i32_res_33850 = sitofp_i32_f32(y_33788);
        float defunc_0_f_res_f_res_33851 = defunc_0_f_res_33820 / i32_res_33850;
        
        defunc_0_f_res_33849 = defunc_0_f_res_f_res_33851;
    }
    
    bool cond_33852 = !defunc_0_f_res_33818;
    int32_t fst_breakzq_33853;
    
    if (cond_33852) {
        fst_breakzq_33853 = -1;
    } else {
        bool cond_33854 = slt32(defunc_0_f_res_33819, y_33788);
        int32_t adjustValInds_res_33855;
        
        if (cond_33854) {
            int32_t i_33856 = add32(x_33782, defunc_0_f_res_33819);
            int64_t i_33857 = sext_i32_i64(i_33856);
            bool x_33858 = sle64((int64_t) 0, i_33857);
            bool y_33859 = slt64(i_33857, N_27771);
            bool bounds_check_33860 = x_33858 && y_33859;
            bool index_certs_33861;
            
            if (!bounds_check_33860) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 73) ==
                        -1) {
                        global_failure_args[0] = i_33857;
                        global_failure_args[1] = N_27771;
                        ;
                    }
                    local_failure = true;
                    goto error_3;
                }
            }
            
            int32_t x_33862 = ((__global
                                int32_t *) defunc_4_map_res_mem_45179)[gtid_33533 *
                                                                       N_27771 +
                                                                       i_33857];
            int32_t adjustValInds_res_t_res_33863 = sub32(x_33862, n_27775);
            
            adjustValInds_res_33855 = adjustValInds_res_t_res_33863;
        } else {
            adjustValInds_res_33855 = -1;
        }
        fst_breakzq_33853 = adjustValInds_res_33855;
    }
    
    bool cond_33864 = sle32(x_33782, 5);
    bool cond_f_res_33865 = sle32(y_33788, 5);
    bool x_33866 = !cond_33864;
    bool y_33867 = cond_f_res_33865 && x_33866;
    bool cond_33868 = cond_33864 || y_33867;
    int32_t fst_breakzq_33869;
    
    if (cond_33868) {
        fst_breakzq_33869 = -2;
    } else {
        fst_breakzq_33869 = fst_breakzq_33853;
    }
    
    __local char *mem_45385;
    
    mem_45385 = (__local char *) mem_45385_backing_5;
    for (int64_t i_46681 = 0; i_46681 < sdiv_up64(iota32_arg_28233 -
                                                  sext_i32_i64(local_tid_46656),
                                                  computed_group_sizze_33535);
         i_46681++) {
        ((__local float *) mem_45385)[i_46681 * computed_group_sizze_33535 +
                                      sext_i32_i64(local_tid_46656)] = NAN;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_33540 = sext_i32_i64(ltid_pre_46661);
    int32_t phys_tid_33541 = local_tid_46656;
    
    if (slt64(write_i_33540, iota32_arg_28233)) {
        int32_t index_primexp_42408 = sext_i64_i32(write_i_33540);
        float write_value_33874 = ((__local float *) mem_45383)[write_i_33540];
        bool cond_33875 = slt32(index_primexp_42408, y_33788);
        int32_t defunc_0_f_res_33876;
        
        if (cond_33875) {
            int32_t i_33877 = add32(x_33782, index_primexp_42408);
            int64_t i_33878 = sext_i32_i64(i_33877);
            bool x_33879 = sle64((int64_t) 0, i_33878);
            bool y_33880 = slt64(i_33878, N_27771);
            bool bounds_check_33881 = x_33879 && y_33880;
            bool index_certs_33882;
            
            if (!bounds_check_33881) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 74) ==
                        -1) {
                        global_failure_args[0] = i_33878;
                        global_failure_args[1] = N_27771;
                        ;
                    }
                    local_failure = true;
                    goto error_3;
                }
            }
            
            int32_t x_33883 = ((__global
                                int32_t *) defunc_4_map_res_mem_45179)[gtid_33533 *
                                                                       N_27771 +
                                                                       i_33878];
            int32_t defunc_0_f_res_t_res_33884 = sub32(x_33883, n_27775);
            
            defunc_0_f_res_33876 = defunc_0_f_res_t_res_33884;
        } else {
            defunc_0_f_res_33876 = -1;
        }
        
        int64_t defunc_0_f_res_33885 = sext_i32_i64(defunc_0_f_res_33876);
        
        if (sle64((int64_t) 0, defunc_0_f_res_33885) &&
            slt64(defunc_0_f_res_33885, iota32_arg_28233)) {
            ((__local float *) mem_45385)[defunc_0_f_res_33885] =
                write_value_33874;
        }
    }
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_46682 = 0; i_46682 < sdiv_up64(iota32_arg_28203 -
                                                  sext_i32_i64(local_tid_46656),
                                                  computed_group_sizze_33535);
         i_46682++) {
        ((__global float *) mem_45389)[gtid_33533 * iota32_arg_28203 +
                                       (i_46682 * computed_group_sizze_33535 +
                                        sext_i32_i64(local_tid_46656))] =
            ((__local float *) mem_45385)[i_46682 * computed_group_sizze_33535 +
                                          sext_i32_i64(local_tid_46656)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_46683 = 0; i_46683 < sdiv_up64(iota32_arg_28203 -
                                                  sext_i32_i64(local_tid_46656),
                                                  computed_group_sizze_33535);
         i_46683++) {
        ((__global float *) mem_45392)[gtid_33533 * iota32_arg_28203 +
                                       (i_46683 * computed_group_sizze_33535 +
                                        sext_i32_i64(local_tid_46656))] =
            ((__local float *) mem_45383)[i_46683 * computed_group_sizze_33535 +
                                          sext_i32_i64(local_tid_46656)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_46656 == 0) {
        ((__global int32_t *) mem_45394)[gtid_33533] = fst_breakzq_33869;
    }
    if (local_tid_46656 == 0) {
        ((__global float *) mem_45396)[gtid_33533] = defunc_0_f_res_33849;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_42541(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44480_backing_aligned_0,
                                                    int64_t m_27772,
                                                    int32_t n_27775,
                                                    int64_t i32_res_27787,
                                                    int64_t Ty_42529,
                                                    int64_t Tx_42530,
                                                    int64_t gridDim_x_42531,
                                                    int64_t gridDim_y_42532,
                                                    int64_t group_sizze_tile3d_42536,
                                                    int64_t count_shmem_42537,
                                                    __global
                                                    unsigned char *mem_44393,
                                                    __global
                                                    unsigned char *mem_44397,
                                                    __global
                                                    unsigned char *mem_44468,
                                                    __global
                                                    unsigned char *mem_44528)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44480_backing_0 = (__local volatile
                                                           char *) mem_44480_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45733;
    int32_t local_tid_45734;
    int64_t group_sizze_45737;
    int32_t wave_sizze_45736;
    int32_t group_tid_45735;
    
    global_tid_45733 = get_global_id(0);
    local_tid_45734 = get_local_id(0);
    group_sizze_45737 = get_local_size(0);
    wave_sizze_45736 = LOCKSTEP_WIDTH;
    group_tid_45735 = get_group_id(0);
    
    int32_t gid_flat_42541;
    
    gid_flat_42541 = group_tid_45735;
    
    int32_t ltid_pre_45738;
    
    ltid_pre_45738 = squot32(local_tid_45734, sext_i64_i32(Ty_42529) *
                             sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45739;
    
    ltid_pre_45739 = squot32(local_tid_45734 - squot32(local_tid_45734,
                                                       sext_i64_i32(Ty_42529) *
                                                       sext_i64_i32(Tx_42530)) *
                             (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)),
                             sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45740;
    
    ltid_pre_45740 = local_tid_45734 - squot32(local_tid_45734,
                                               sext_i64_i32(Ty_42529) *
                                               sext_i64_i32(Tx_42530)) *
        (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)) -
        squot32(local_tid_45734 - squot32(local_tid_45734,
                                          sext_i64_i32(Ty_42529) *
                                          sext_i64_i32(Tx_42530)) *
                (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)),
                sext_i64_i32(Tx_42530)) * sext_i64_i32(Tx_42530);
    
    int32_t ltid_pre_45741;
    
    ltid_pre_45741 = squot32(local_tid_45734, sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45742;
    
    ltid_pre_45742 = local_tid_45734 - squot32(local_tid_45734,
                                               sext_i64_i32(Tx_42530)) *
        sext_i64_i32(Tx_42530);
    
    int32_t ltid_pre_45743;
    
    ltid_pre_45743 = local_tid_45734;
    
    int64_t gid_zz_42540;
    
    gid_zz_42540 = squot64(sext_i32_i64(group_tid_45735), gridDim_y_42532 *
                           gridDim_x_42531);
    
    int64_t gid_y_42539;
    
    gid_y_42539 = squot64(sext_i32_i64(group_tid_45735) -
                          squot64(sext_i32_i64(group_tid_45735),
                                  gridDim_y_42532 * gridDim_x_42531) *
                          (gridDim_y_42532 * gridDim_x_42531), gridDim_x_42531);
    
    int64_t gid_x_42538;
    
    gid_x_42538 = sext_i32_i64(group_tid_45735) -
        squot64(sext_i32_i64(group_tid_45735), gridDim_y_42532 *
                gridDim_x_42531) * (gridDim_y_42532 * gridDim_x_42531) -
        squot64(sext_i32_i64(group_tid_45735) -
                squot64(sext_i32_i64(group_tid_45735), gridDim_y_42532 *
                        gridDim_x_42531) * (gridDim_y_42532 * gridDim_x_42531),
                gridDim_x_42531) * gridDim_x_42531;
    
    int64_t ii_42542;
    
    ii_42542 = (int64_t) 30 * gid_zz_42540;
    
    int64_t jj1_42543 = Ty_42529 * gid_y_42539;
    int64_t jj2_42544 = Tx_42530 * gid_x_42538;
    float mem_44478[30];
    int64_t ltid_y_42547 = sext_i32_i64(ltid_pre_45741);
    int64_t ltid_x_42545 = sext_i32_i64(ltid_pre_45742);
    int32_t ltid_flat_42546 = local_tid_45734;
    float mem_44472[30];
    
    for (int32_t i_44270 = 0; i_44270 < 30; i_44270++) {
        int64_t i_42555 = sext_i32_i64(i_44270);
        
        mem_44472[i_42555] = 0.0F;
    }
    for (int64_t i_45745 = 0; i_45745 < (int64_t) 30; i_45745++) {
        mem_44478[i_45745] = mem_44472[i_45745];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44480;
    
    mem_44480 = (__local char *) mem_44480_backing_0;
    
    float loop_mem_44510[30];
    float mem_param_44481[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_44481[i_1] = mem_44478[i_1];
    for (int32_t i_44272 = 0; i_44272 < n_27775; i_44272++) {
        int64_t i_42560 = sext_i32_i64(i_44272);
        
        for (int64_t i_42563 = 0; i_42563 < count_shmem_42537; i_42563++) {
            int64_t offs_42576 = group_sizze_tile3d_42536 * i_42563;
            int64_t ltid_42566 = sext_i32_i64(ltid_pre_45743);
            int32_t ltid_flat_42565 = local_tid_45734;
            int64_t loc_ind_42577 = ltid_42566 + offs_42576;
            int64_t gtid_42578 = ii_42542 + loc_ind_42577;
            bool cond_42579 = slt64(gtid_42578, m_27772);
            float y_elem_42580;
            
            if (cond_42579) {
                float Y_elem_42582 = ((__global float *) mem_44468)[i_42560 *
                                                                    m_27772 +
                                                                    gtid_42578];
                
                y_elem_42580 = Y_elem_42582;
            } else {
                y_elem_42580 = 0.0F;
            }
            
            bool cond_42584 = slt64(loc_ind_42577, (int64_t) 30);
            int64_t y_loc_ind_42585;
            
            if (cond_42584) {
                y_loc_ind_42585 = loc_ind_42577;
            } else {
                y_loc_ind_42585 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_42585) && slt64(y_loc_ind_42585,
                                                             (int64_t) 30)) {
                ((__local float *) mem_44480)[y_loc_ind_42585] = y_elem_42580;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_44509[30];
        int64_t ltid_y_42591 = sext_i32_i64(ltid_pre_45741);
        int64_t ltid_x_42589 = sext_i32_i64(ltid_pre_45742);
        int32_t ltid_flat_42590 = local_tid_45734;
        int64_t gtid_42618 = jj1_42543 + ltid_y_42591;
        int64_t gtid_42619 = jj2_42544 + ltid_x_42589;
        bool binop_x_42621 = slt64(gtid_42618, i32_res_27787);
        bool binop_y_42622 = slt64(gtid_42619, i32_res_27787);
        bool cond_42623 = binop_x_42621 && binop_y_42622;
        float mem_45450[30];
        
        if (cond_42623) {
            float x_42626 = ((__global float *) mem_44393)[i_42560 *
                                                           i32_res_27787 +
                                                           gtid_42618];
            float x_42628 = ((__global float *) mem_44397)[i_42560 *
                                                           i32_res_27787 +
                                                           gtid_42619];
            
            for (int32_t i_44271 = 0; i_44271 < 30; i_44271++) {
                int64_t i_42630 = sext_i32_i64(i_44271);
                int64_t gtid_42632 = ii_42542 + i_42630;
                bool cond_42633 = slt64(gtid_42632, m_27772);
                
                if (cond_42633) {
                    float inp_reg_var2zz_42635 = ((__local
                                                   float *) mem_44480)[i_42630];
                    float res_reg_var2zz_42636 = mem_param_44481[i_42630];
                    float x_42640 = x_42626 * x_42628;
                    bool isnan_res_42641;
                    
                    isnan_res_42641 = futrts_isnan32(inp_reg_var2zz_42635);
                    
                    float y_42642;
                    
                    if (isnan_res_42641) {
                        y_42642 = 0.0F;
                    } else {
                        y_42642 = 1.0F;
                    }
                    
                    float defunc_2_f_res_42643 = x_42640 * y_42642;
                    float defunc_1_op_res_42647 = res_reg_var2zz_42636 +
                          defunc_2_f_res_42643;
                    
                    mem_param_44481[i_42630] = defunc_1_op_res_42647;
                }
            }
            for (int64_t i_45751 = 0; i_45751 < (int64_t) 30; i_45751++) {
                mem_45450[i_45751] = mem_param_44481[i_45751];
            }
        } else {
            for (int64_t i_45752 = 0; i_45752 < (int64_t) 30; i_45752++) {
                mem_45450[i_45752] = mem_param_44481[i_45752];
            }
        }
        for (int64_t i_45753 = 0; i_45753 < (int64_t) 30; i_45753++) {
            mem_44509[i_45753] = mem_45450[i_45753];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45746[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_45746[i_2] = mem_44509[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_44481[i_3] = mem_param_tmp_45746[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_44510[i_4] = mem_param_44481[i_4];
    
    float mem_44524[30 * 1 * 1];
    int64_t ltid_zz_42656 = sext_i32_i64(ltid_pre_45738);
    int64_t ltid_y_42655 = sext_i32_i64(ltid_pre_45739);
    int64_t ltid_x_42653 = sext_i32_i64(ltid_pre_45740);
    int32_t ltid_flat_42654 = local_tid_45734;
    float mem_44518[30 * 1 * 1];
    
    for (int32_t i_44274 = 0; i_44274 < 30; i_44274++) {
        int64_t i_42665 = sext_i32_i64(i_44274);
        
        for (int64_t i_45755 = 0; i_45755 < (int64_t) 1; i_45755++) {
            mem_44518[i_42665 + i_45755] = loop_mem_44510[i_42665 + i_45755];
        }
    }
    for (int64_t i_45756 = 0; i_45756 < (int64_t) 30; i_45756++) {
        for (int64_t i_45757 = 0; i_45757 < (int64_t) 1; i_45757++) {
            for (int64_t i_45758 = 0; i_45758 < (int64_t) 1; i_45758++) {
                mem_44524[i_45756 + i_45757 + i_45758] = mem_44518[i_45756 +
                                                                   i_45757 +
                                                                   i_45758];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_45759 = squot64(sext_i32_i64(local_tid_45734), Ty_42529 *
                                       Tx_42530);
    int64_t reg_tile_i_45760 = squot64(sext_i32_i64(local_tid_45734) -
                                       squot64(sext_i32_i64(local_tid_45734),
                                               Ty_42529 * Tx_42530) *
                                       (Ty_42529 * Tx_42530), Tx_42530);
    int64_t reg_tile_i_45761 = sext_i32_i64(local_tid_45734) -
            squot64(sext_i32_i64(local_tid_45734), Ty_42529 * Tx_42530) *
            (Ty_42529 * Tx_42530) - squot64(sext_i32_i64(local_tid_45734) -
                                            squot64(sext_i32_i64(local_tid_45734),
                                                    Ty_42529 * Tx_42530) *
                                            (Ty_42529 * Tx_42530), Tx_42530) *
            Tx_42530;
    int64_t tile_dim_start_45762 = (int64_t) 30 * (gid_zz_42540 +
                                                   reg_tile_i_45759);
    int64_t tile_dim_start_45763 = Ty_42529 * gid_y_42539 + reg_tile_i_45760;
    int64_t tile_dim_start_45764 = Tx_42530 * gid_x_42538 + reg_tile_i_45761;
    
    for (int64_t nest_i_45765 = 0; nest_i_45765 < (int64_t) 30;
         nest_i_45765++) {
        for (int64_t nest_i_45766 = 0; nest_i_45766 < (int64_t) 1;
             nest_i_45766++) {
            for (int64_t nest_i_45767 = 0; nest_i_45767 < (int64_t) 1;
                 nest_i_45767++) {
                if ((slt64(tile_dim_start_45762 + nest_i_45765, m_27772) &&
                     slt64(tile_dim_start_45763 + nest_i_45766,
                           i32_res_27787)) && slt64(tile_dim_start_45764 +
                                                    nest_i_45767,
                                                    i32_res_27787)) {
                    ((__global float *) mem_44528)[(tile_dim_start_45762 +
                                                    nest_i_45765) *
                                                   (i32_res_27787 *
                                                    i32_res_27787) +
                                                   (tile_dim_start_45763 +
                                                    nest_i_45766) *
                                                   i32_res_27787 +
                                                   (tile_dim_start_45764 +
                                                    nest_i_45767)] =
                        mem_44524[nest_i_45765 + nest_i_45766 + nest_i_45767];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_42694(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44668_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44666_backing_aligned_1,
                                                    int64_t N_27771,
                                                    int64_t m_27772,
                                                    int64_t i32_res_27781,
                                                    int64_t i32_res_27787,
                                                    int64_t gridDim_x_42688,
                                                    int64_t full_tiles_42719,
                                                    int64_t kk_42926, __global
                                                    unsigned char *images_mem_44381,
                                                    __global
                                                    unsigned char *mem_44393,
                                                    __global
                                                    unsigned char *mem_44840)
{
    #define Ty_42675 (mainDetailedziTy_42672)
    #define Ry_42676 (mainDetailedziRy_42674)
    #define Tx_42677 (mainDetailedziTx_42671)
    #define Rx_42678 (mainDetailedziRx_42673)
    #define Tk_42679 (mainDetailedziTk_42670)
    #define tk_div_tx_42680 (sdiv_up64(mainDetailedziTk_42670, mainDetailedziTx_42671))
    #define tk_div_ty_42681 (sdiv_up64(mainDetailedziTk_42670, mainDetailedziTy_42672))
    #define TxRx_42682 (mainDetailedziTx_42671 * mainDetailedziRx_42673)
    #define TyRy_42683 (mainDetailedziTy_42672 * mainDetailedziRy_42674)
    #define a_loc_szz_42685 (mainDetailedziTk_42670 * (mainDetailedziTy_42672 * mainDetailedziRy_42674))
    #define b_loc_szz_42687 (mainDetailedziRx_42673 * (mainDetailedziTx_42671 * mainDetailedziTk_42670))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44668_backing_1 = (__local volatile
                                                           char *) mem_44668_backing_aligned_0;
    __local volatile char *restrict mem_44666_backing_0 = (__local volatile
                                                           char *) mem_44666_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45908;
    int32_t local_tid_45909;
    int64_t group_sizze_45912;
    int32_t wave_sizze_45911;
    int32_t group_tid_45910;
    
    global_tid_45908 = get_global_id(0);
    local_tid_45909 = get_local_id(0);
    group_sizze_45912 = get_local_size(0);
    wave_sizze_45911 = LOCKSTEP_WIDTH;
    group_tid_45910 = get_group_id(0);
    
    int32_t gid_flat_42694;
    
    gid_flat_42694 = group_tid_45910;
    
    int32_t ltid_pre_45913;
    
    ltid_pre_45913 = squot32(local_tid_45909, sext_i64_i32(Tx_42677));
    
    int32_t ltid_pre_45914;
    
    ltid_pre_45914 = local_tid_45909 - squot32(local_tid_45909,
                                               sext_i64_i32(Tx_42677)) *
        sext_i64_i32(Tx_42677);
    
    int64_t gid_y_42693;
    
    gid_y_42693 = squot64(sext_i32_i64(group_tid_45910), gridDim_x_42688);
    
    int64_t gid_x_42692;
    
    gid_x_42692 = sext_i32_i64(group_tid_45910) -
        squot64(sext_i32_i64(group_tid_45910), gridDim_x_42688) *
        gridDim_x_42688;
    
    int64_t iii_42695;
    
    iii_42695 = TyRy_42683 * gid_y_42693;
    
    int64_t jjj_42696 = TxRx_42682 * gid_x_42692;
    float mem_44664[Ry_42676 * Rx_42678];
    int64_t ltid_y_42699 = sext_i32_i64(ltid_pre_45913);
    int64_t ltid_x_42697 = sext_i32_i64(ltid_pre_45914);
    int32_t ltid_flat_42698 = local_tid_45909;
    float mem_44655[Ry_42676 * Rx_42678];
    
    for (int64_t i_42710 = 0; i_42710 < Ry_42676; i_42710++) {
        for (int64_t i_42713 = 0; i_42713 < Rx_42678; i_42713++) {
            mem_44655[i_42710 * Rx_42678 + i_42713] = 0.0F;
        }
    }
    for (int64_t i_45917 = 0; i_45917 < Ry_42676; i_45917++) {
        for (int64_t i_45918 = 0; i_45918 < Rx_42678; i_45918++) {
            mem_44664[i_45917 * Rx_42678 + i_45918] = mem_44655[i_45917 *
                                                                Rx_42678 +
                                                                i_45918];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44666;
    
    mem_44666 = (__local char *) mem_44666_backing_0;
    
    __local char *mem_44668;
    
    mem_44668 = (__local char *) mem_44668_backing_1;
    
    float mem_44739[Ry_42676];
    float mem_44743[Rx_42678];
    float loop_mem_44755[Ry_42676 * Rx_42678];
    float mem_param_44669[Ry_42676 * Rx_42678];
    
    for (int32_t i_2 = 0; i_2 < Ry_42676 * Rx_42678; i_2++)
        mem_param_44669[i_2] = mem_44664[i_2];
    for (int64_t i_42720 = 0; i_42720 < full_tiles_42719; i_42720++) {
        int64_t kk_42724 = Tk_42679 * i_42720;
        
        for (int64_t i_42725 = 0; i_42725 < Ry_42676; i_42725++) {
            int64_t binop_y_42748 = Ty_42675 * i_42725;
            
            for (int64_t i_42727 = 0; i_42727 < tk_div_tx_42680; i_42727++) {
                int64_t binop_y_42746 = Tx_42677 * i_42727;
                int64_t ltid_x_42729 = sext_i32_i64(ltid_pre_45913);
                int64_t ltid_y_42730 = sext_i32_i64(ltid_pre_45914);
                int32_t ltid_flat_42731 = local_tid_45909;
                int64_t k_42747 = ltid_y_42730 + binop_y_42746;
                int64_t i_42749 = ltid_x_42729 + binop_y_42748;
                int64_t gtid_42750 = iii_42695 + i_42749;
                int64_t A_col_idx_42751 = kk_42724 + k_42747;
                bool cond_42752 = slt64(gtid_42750, m_27772);
                float A_elem_42753;
                
                if (cond_42752) {
                    float A_elem_42755 = ((__global
                                           float *) images_mem_44381)[gtid_42750 *
                                                                      N_27771 +
                                                                      A_col_idx_42751];
                    
                    A_elem_42753 = A_elem_42755;
                } else {
                    A_elem_42753 = 0.0F;
                }
                
                bool cond_42757 = slt64(k_42747, Tk_42679);
                int64_t a_loc_ind_42758;
                
                if (cond_42757) {
                    int64_t binop_y_42759 = Tk_42679 * i_42749;
                    int64_t loc_fi_42760 = k_42747 + binop_y_42759;
                    
                    a_loc_ind_42758 = loc_fi_42760;
                } else {
                    a_loc_ind_42758 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_42758) &&
                    slt64(a_loc_ind_42758, a_loc_szz_42685)) {
                    ((__local float *) mem_44666)[a_loc_ind_42758] =
                        A_elem_42753;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42765 = 0; i_42765 < tk_div_ty_42681; i_42765++) {
            int64_t binop_y_42786 = Ty_42675 * i_42765;
            
            for (int64_t i_42767 = 0; i_42767 < Rx_42678; i_42767++) {
                int64_t binop_y_42788 = Tx_42677 * i_42767;
                int64_t ltid_x_42769 = sext_i32_i64(ltid_pre_45913);
                int64_t ltid_y_42770 = sext_i32_i64(ltid_pre_45914);
                int32_t ltid_flat_42771 = local_tid_45909;
                int64_t k_42787 = ltid_x_42769 + binop_y_42786;
                int64_t j_42789 = ltid_y_42770 + binop_y_42788;
                int64_t gtid_42790 = jjj_42696 + j_42789;
                int64_t B_row_idx_42791 = kk_42724 + k_42787;
                bool cond_42792 = slt64(gtid_42790, i32_res_27787);
                float B_elem_42793;
                
                if (cond_42792) {
                    float B_elem_42795 = ((__global
                                           float *) mem_44393)[B_row_idx_42791 *
                                                               i32_res_27787 +
                                                               gtid_42790];
                    
                    B_elem_42793 = B_elem_42795;
                } else {
                    B_elem_42793 = 0.0F;
                }
                
                bool cond_42797 = slt64(k_42787, Tk_42679);
                int64_t b_loc_ind_42798;
                
                if (cond_42797) {
                    int64_t binop_y_42799 = TxRx_42682 * k_42787;
                    int64_t loc_fi_42800 = j_42789 + binop_y_42799;
                    
                    b_loc_ind_42798 = loc_fi_42800;
                } else {
                    b_loc_ind_42798 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_42798) &&
                    slt64(b_loc_ind_42798, b_loc_szz_42687)) {
                    ((__local float *) mem_44668)[b_loc_ind_42798] =
                        B_elem_42793;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44754[Ry_42676 * Rx_42678];
        float mem_param_44726[Ry_42676 * Rx_42678];
        
        for (int32_t i_3 = 0; i_3 < Ry_42676 * Rx_42678; i_3++)
            mem_param_44726[i_3] = mem_param_44669[i_3];
        for (int64_t i_42805 = 0; i_42805 < Tk_42679; i_42805++) {
            int64_t binop_y_42844 = TxRx_42682 * i_42805;
            int64_t ltid_y_42809 = sext_i32_i64(ltid_pre_45913);
            int64_t ltid_x_42807 = sext_i32_i64(ltid_pre_45914);
            int32_t ltid_flat_42808 = local_tid_45909;
            float mem_44729[Ry_42676];
            float mem_44731[Rx_42678];
            int64_t binop_x_42835 = Ry_42676 * ltid_y_42809;
            
            for (int64_t i_42833 = 0; i_42833 < Ry_42676; i_42833++) {
                int64_t binop_x_42836 = i_42833 + binop_x_42835;
                int64_t binop_y_42837 = Tk_42679 * binop_x_42836;
                int64_t a_loc_ind_42838 = i_42805 + binop_y_42837;
                
                for (int64_t i_45930 = 0; i_45930 < (int64_t) 1; i_45930++) {
                    mem_44729[i_42833 + i_45930] = ((__local
                                                     float *) mem_44666)[a_loc_ind_42838 +
                                                                         i_45930];
                }
            }
            
            int64_t binop_y_42846 = Rx_42678 * ltid_x_42807;
            
            for (int64_t i_42842 = 0; i_42842 < Rx_42678; i_42842++) {
                int64_t binop_x_42845 = i_42842 + binop_y_42844;
                int64_t b_loc_ind_42847 = binop_x_42845 + binop_y_42846;
                
                for (int64_t i_45932 = 0; i_45932 < (int64_t) 1; i_45932++) {
                    mem_44731[i_42842 + i_45932] = ((__local
                                                     float *) mem_44668)[b_loc_ind_42847 +
                                                                         i_45932];
                }
            }
            for (int64_t i_45933 = 0; i_45933 < Ry_42676; i_45933++) {
                mem_44739[i_45933] = mem_44729[i_45933];
            }
            for (int64_t i_45934 = 0; i_45934 < Rx_42678; i_45934++) {
                mem_44743[i_45934] = mem_44731[i_45934];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44753[Ry_42676 * Rx_42678];
            int64_t ltid_y_42854 = sext_i32_i64(ltid_pre_45913);
            int64_t ltid_x_42852 = sext_i32_i64(ltid_pre_45914);
            int32_t ltid_flat_42853 = local_tid_45909;
            int64_t binop_y_42897 = Ry_42676 * ltid_y_42854;
            int64_t binop_y_42901 = Rx_42678 * ltid_x_42852;
            
            for (int64_t i_42891 = 0; i_42891 < Ry_42676; i_42891++) {
                int64_t binop_x_42896 = iii_42695 + i_42891;
                int64_t cmpop_x_42898 = binop_x_42896 + binop_y_42897;
                bool binop_x_42899 = slt64(cmpop_x_42898, m_27772);
                
                for (int64_t i_42894 = 0; i_42894 < Rx_42678; i_42894++) {
                    int64_t binop_x_42900 = jjj_42696 + i_42894;
                    int64_t cmpop_x_42902 = binop_x_42900 + binop_y_42901;
                    bool binop_y_42903 = slt64(cmpop_x_42902, i32_res_27787);
                    bool cond_42904 = binop_x_42899 && binop_y_42903;
                    
                    if (cond_42904) {
                        float a_42906 = mem_44739[i_42891];
                        float c_42908 = mem_param_44726[i_42891 * Rx_42678 +
                                                        i_42894];
                        bool isnan_res_42911;
                        
                        isnan_res_42911 = futrts_isnan32(a_42906);
                        
                        float defunc_1_f_res_42912;
                        
                        if (isnan_res_42911) {
                            defunc_1_f_res_42912 = 0.0F;
                        } else {
                            float b_42907 = mem_44743[i_42894];
                            float defunc_1_f_res_f_res_42913 = a_42906 *
                                  b_42907;
                            
                            defunc_1_f_res_42912 = defunc_1_f_res_f_res_42913;
                        }
                        
                        float defunc_1_op_res_42917 = c_42908 +
                              defunc_1_f_res_42912;
                        
                        mem_param_44726[i_42891 * Rx_42678 + i_42894] =
                            defunc_1_op_res_42917;
                    }
                }
            }
            for (int64_t i_45937 = 0; i_45937 < Ry_42676; i_45937++) {
                for (int64_t i_45938 = 0; i_45938 < Rx_42678; i_45938++) {
                    mem_44753[i_45937 * Rx_42678 + i_45938] =
                        mem_param_44726[i_45937 * Rx_42678 + i_45938];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45927[Ry_42676 * Rx_42678];
            
            for (int32_t i_4 = 0; i_4 < Ry_42676 * Rx_42678; i_4++)
                mem_param_tmp_45927[i_4] = mem_44753[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42676 * Rx_42678; i_5++)
                mem_param_44726[i_5] = mem_param_tmp_45927[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42676 * Rx_42678; i_6++)
            loop_mem_44754[i_6] = mem_param_44726[i_6];
        
        float mem_param_tmp_45919[Ry_42676 * Rx_42678];
        
        for (int32_t i_7 = 0; i_7 < Ry_42676 * Rx_42678; i_7++)
            mem_param_tmp_45919[i_7] = loop_mem_44754[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42676 * Rx_42678; i_8++)
            mem_param_44669[i_8] = mem_param_tmp_45919[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42676 * Rx_42678; i_9++)
        loop_mem_44755[i_9] = mem_param_44669[i_9];
    for (int64_t i_42927 = 0; i_42927 < Ry_42676; i_42927++) {
        int64_t binop_y_42952 = Ty_42675 * i_42927;
        
        for (int64_t i_42929 = 0; i_42929 < tk_div_tx_42680; i_42929++) {
            int64_t binop_y_42950 = Tx_42677 * i_42929;
            int64_t ltid_x_42931 = sext_i32_i64(ltid_pre_45913);
            int64_t ltid_y_42932 = sext_i32_i64(ltid_pre_45914);
            int32_t ltid_flat_42933 = local_tid_45909;
            int64_t k_42951 = ltid_y_42932 + binop_y_42950;
            int64_t i_42953 = ltid_x_42931 + binop_y_42952;
            int64_t gtid_42954 = iii_42695 + i_42953;
            int64_t A_col_idx_42955 = kk_42926 + k_42951;
            bool binop_x_42956 = slt64(gtid_42954, m_27772);
            bool binop_y_42957 = slt64(A_col_idx_42955, i32_res_27781);
            bool cond_42958 = binop_x_42956 && binop_y_42957;
            float A_elem_42959;
            
            if (cond_42958) {
                float A_elem_42961 = ((__global
                                       float *) images_mem_44381)[gtid_42954 *
                                                                  N_27771 +
                                                                  A_col_idx_42955];
                
                A_elem_42959 = A_elem_42961;
            } else {
                A_elem_42959 = 0.0F;
            }
            
            bool cond_42963 = slt64(k_42951, Tk_42679);
            int64_t a_loc_ind_42964;
            
            if (cond_42963) {
                int64_t binop_y_42965 = Tk_42679 * i_42953;
                int64_t loc_fi_42966 = k_42951 + binop_y_42965;
                
                a_loc_ind_42964 = loc_fi_42966;
            } else {
                a_loc_ind_42964 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_42964) && slt64(a_loc_ind_42964,
                                                             a_loc_szz_42685)) {
                ((__local float *) mem_44666)[a_loc_ind_42964] = A_elem_42959;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42971 = 0; i_42971 < tk_div_ty_42681; i_42971++) {
        int64_t binop_y_42994 = Ty_42675 * i_42971;
        
        for (int64_t i_42973 = 0; i_42973 < Rx_42678; i_42973++) {
            int64_t binop_y_42996 = Tx_42677 * i_42973;
            int64_t ltid_x_42975 = sext_i32_i64(ltid_pre_45913);
            int64_t ltid_y_42976 = sext_i32_i64(ltid_pre_45914);
            int32_t ltid_flat_42977 = local_tid_45909;
            int64_t k_42995 = ltid_x_42975 + binop_y_42994;
            int64_t j_42997 = ltid_y_42976 + binop_y_42996;
            int64_t gtid_42998 = jjj_42696 + j_42997;
            int64_t B_row_idx_42999 = kk_42926 + k_42995;
            bool binop_x_43000 = slt64(gtid_42998, i32_res_27787);
            bool binop_y_43001 = slt64(B_row_idx_42999, i32_res_27781);
            bool cond_43002 = binop_x_43000 && binop_y_43001;
            float B_elem_43003;
            
            if (cond_43002) {
                float B_elem_43005 = ((__global
                                       float *) mem_44393)[B_row_idx_42999 *
                                                           i32_res_27787 +
                                                           gtid_42998];
                
                B_elem_43003 = B_elem_43005;
            } else {
                B_elem_43003 = 0.0F;
            }
            
            bool cond_43007 = slt64(k_42995, Tk_42679);
            int64_t b_loc_ind_43008;
            
            if (cond_43007) {
                int64_t binop_y_43009 = TxRx_42682 * k_42995;
                int64_t loc_fi_43010 = j_42997 + binop_y_43009;
                
                b_loc_ind_43008 = loc_fi_43010;
            } else {
                b_loc_ind_43008 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_43008) && slt64(b_loc_ind_43008,
                                                             b_loc_szz_42687)) {
                ((__local float *) mem_44668)[b_loc_ind_43008] = B_elem_43003;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44821[Ry_42676];
    float mem_44825[Rx_42678];
    float mem_44835[Ry_42676 * Rx_42678];
    float loop_mem_44837[Ry_42676 * Rx_42678];
    float mem_param_44808[Ry_42676 * Rx_42678];
    
    for (int32_t i_10 = 0; i_10 < Ry_42676 * Rx_42678; i_10++)
        mem_param_44808[i_10] = loop_mem_44755[i_10];
    for (int64_t i_43015 = 0; i_43015 < Tk_42679; i_43015++) {
        int64_t cmpop_x_43017 = kk_42926 + i_43015;
        bool cond_43018 = slt64(cmpop_x_43017, i32_res_27781);
        float mem_45468[Ry_42676 * Rx_42678];
        
        if (cond_43018) {
            int64_t binop_y_43056 = TxRx_42682 * i_43015;
            int64_t bytes_44810 = (int64_t) 4 * Ry_42676;
            int64_t bytes_44812 = (int64_t) 4 * Rx_42678;
            int64_t ltid_y_43021 = sext_i32_i64(ltid_pre_45913);
            int64_t ltid_x_43019 = sext_i32_i64(ltid_pre_45914);
            int32_t ltid_flat_43020 = local_tid_45909;
            float mem_44811[Ry_42676];
            float mem_44813[Rx_42678];
            int64_t binop_x_43047 = Ry_42676 * ltid_y_43021;
            
            for (int64_t i_43045 = 0; i_43045 < Ry_42676; i_43045++) {
                int64_t binop_x_43048 = i_43045 + binop_x_43047;
                int64_t binop_y_43049 = Tk_42679 * binop_x_43048;
                int64_t a_loc_ind_43050 = i_43015 + binop_y_43049;
                
                for (int64_t i_45946 = 0; i_45946 < (int64_t) 1; i_45946++) {
                    mem_44811[i_43045 + i_45946] = ((__local
                                                     float *) mem_44666)[a_loc_ind_43050 +
                                                                         i_45946];
                }
            }
            
            int64_t binop_y_43058 = Rx_42678 * ltid_x_43019;
            
            for (int64_t i_43054 = 0; i_43054 < Rx_42678; i_43054++) {
                int64_t binop_x_43057 = i_43054 + binop_y_43056;
                int64_t b_loc_ind_43059 = binop_x_43057 + binop_y_43058;
                
                for (int64_t i_45948 = 0; i_45948 < (int64_t) 1; i_45948++) {
                    mem_44813[i_43054 + i_45948] = ((__local
                                                     float *) mem_44668)[b_loc_ind_43059 +
                                                                         i_45948];
                }
            }
            for (int64_t i_45949 = 0; i_45949 < Ry_42676; i_45949++) {
                mem_44821[i_45949] = mem_44811[i_45949];
            }
            for (int64_t i_45950 = 0; i_45950 < Rx_42678; i_45950++) {
                mem_44825[i_45950] = mem_44813[i_45950];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_43066 = sext_i32_i64(ltid_pre_45913);
            int64_t ltid_x_43064 = sext_i32_i64(ltid_pre_45914);
            int32_t ltid_flat_43065 = local_tid_45909;
            int64_t binop_y_43109 = Ry_42676 * ltid_y_43066;
            int64_t binop_y_43113 = Rx_42678 * ltid_x_43064;
            
            for (int64_t i_43103 = 0; i_43103 < Ry_42676; i_43103++) {
                int64_t binop_x_43108 = iii_42695 + i_43103;
                int64_t cmpop_x_43110 = binop_x_43108 + binop_y_43109;
                bool binop_x_43111 = slt64(cmpop_x_43110, m_27772);
                
                for (int64_t i_43106 = 0; i_43106 < Rx_42678; i_43106++) {
                    int64_t binop_x_43112 = jjj_42696 + i_43106;
                    int64_t cmpop_x_43114 = binop_x_43112 + binop_y_43113;
                    bool binop_y_43115 = slt64(cmpop_x_43114, i32_res_27787);
                    bool cond_43116 = binop_x_43111 && binop_y_43115;
                    
                    if (cond_43116) {
                        float a_43118 = mem_44821[i_43103];
                        float c_43120 = mem_param_44808[i_43103 * Rx_42678 +
                                                        i_43106];
                        bool isnan_res_43123;
                        
                        isnan_res_43123 = futrts_isnan32(a_43118);
                        
                        float defunc_1_f_res_43124;
                        
                        if (isnan_res_43123) {
                            defunc_1_f_res_43124 = 0.0F;
                        } else {
                            float b_43119 = mem_44825[i_43106];
                            float defunc_1_f_res_f_res_43125 = a_43118 *
                                  b_43119;
                            
                            defunc_1_f_res_43124 = defunc_1_f_res_f_res_43125;
                        }
                        
                        float defunc_1_op_res_43129 = c_43120 +
                              defunc_1_f_res_43124;
                        
                        mem_param_44808[i_43103 * Rx_42678 + i_43106] =
                            defunc_1_op_res_43129;
                    }
                }
            }
            for (int64_t i_45953 = 0; i_45953 < Ry_42676; i_45953++) {
                for (int64_t i_45954 = 0; i_45954 < Rx_42678; i_45954++) {
                    mem_44835[i_45953 * Rx_42678 + i_45954] =
                        mem_param_44808[i_45953 * Rx_42678 + i_45954];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45955 = 0; i_45955 < Ry_42676; i_45955++) {
                for (int64_t i_45956 = 0; i_45956 < Rx_42678; i_45956++) {
                    mem_45468[i_45955 * Rx_42678 + i_45956] =
                        mem_44835[i_45955 * Rx_42678 + i_45956];
                }
            }
        } else {
            for (int64_t i_45957 = 0; i_45957 < Ry_42676; i_45957++) {
                for (int64_t i_45958 = 0; i_45958 < Rx_42678; i_45958++) {
                    mem_45468[i_45957 * Rx_42678 + i_45958] =
                        mem_param_44808[i_45957 * Rx_42678 + i_45958];
                }
            }
        }
        
        float mem_param_tmp_45943[Ry_42676 * Rx_42678];
        
        for (int32_t i_11 = 0; i_11 < Ry_42676 * Rx_42678; i_11++)
            mem_param_tmp_45943[i_11] = mem_45468[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42676 * Rx_42678; i_12++)
            mem_param_44808[i_12] = mem_param_tmp_45943[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42676 * Rx_42678; i_13++)
        loop_mem_44837[i_13] = mem_param_44808[i_13];
    
    int64_t reg_tile_i_45959 = squot64(sext_i32_i64(local_tid_45909), Tx_42677);
    int64_t reg_tile_i_45960 = sext_i32_i64(local_tid_45909) -
            squot64(sext_i32_i64(local_tid_45909), Tx_42677) * Tx_42677;
    int64_t tile_dim_start_45961 = Ry_42676 * (Ty_42675 * gid_y_42693 +
                                               reg_tile_i_45959);
    int64_t tile_dim_start_45962 = Rx_42678 * (Tx_42677 * gid_x_42692 +
                                               reg_tile_i_45960);
    
    for (int64_t nest_i_45963 = 0; nest_i_45963 < Ry_42676; nest_i_45963++) {
        for (int64_t nest_i_45964 = 0; nest_i_45964 < Rx_42678;
             nest_i_45964++) {
            if (slt64(tile_dim_start_45961 + nest_i_45963, m_27772) &&
                slt64(tile_dim_start_45962 + nest_i_45964, i32_res_27787)) {
                ((__global float *) mem_44840)[(tile_dim_start_45961 +
                                                nest_i_45963) * i32_res_27787 +
                                               (tile_dim_start_45962 +
                                                nest_i_45964)] =
                    loop_mem_44837[nest_i_45963 * Rx_42678 + nest_i_45964];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42675
    #undef Ry_42676
    #undef Tx_42677
    #undef Rx_42678
    #undef Tk_42679
    #undef tk_div_tx_42680
    #undef tk_div_ty_42681
    #undef TxRx_42682
    #undef TyRy_42683
    #undef a_loc_szz_42685
    #undef b_loc_szz_42687
}
__kernel void mainDetailedzisegmap_intragroup_43143(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44898_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44889_backing_aligned_1,
                                                    int64_t m_27772,
                                                    int64_t i32_res_27787,
                                                    int64_t num_groups_y_43141,
                                                    int64_t num_whole_tiles_43159,
                                                    int64_t residual_input_43286,
                                                    unsigned char cond_43287,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44850,
                                                    __global
                                                    unsigned char *mem_44879,
                                                    __global
                                                    unsigned char *mem_44906)
{
    #define tile_sizze_43138 (mainDetailedzitile_sizze_43137)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44898_backing_5 = (__local volatile
                                                           char *) mem_44898_backing_aligned_0;
    __local volatile char *restrict mem_44889_backing_0 = (__local volatile
                                                           char *) mem_44889_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46040;
    int32_t local_tid_46041;
    int64_t group_sizze_46044;
    int32_t wave_sizze_46043;
    int32_t group_tid_46042;
    
    global_tid_46040 = get_global_id(0);
    local_tid_46041 = get_local_id(0);
    group_sizze_46044 = get_local_size(0);
    wave_sizze_46043 = LOCKSTEP_WIDTH;
    group_tid_46042 = get_group_id(0);
    
    int32_t gid_flat_43143;
    
    gid_flat_43143 = group_tid_46042;
    
    int32_t ltid_pre_46045;
    
    ltid_pre_46045 = squot32(local_tid_46041, sext_i64_i32(tile_sizze_43138));
    
    int32_t ltid_pre_46046;
    
    ltid_pre_46046 = local_tid_46041 - squot32(local_tid_46041,
                                               sext_i64_i32(tile_sizze_43138)) *
        sext_i64_i32(tile_sizze_43138);
    
    int64_t gid_x_43135;
    
    gid_x_43135 = squot64(sext_i32_i64(group_tid_46042), num_groups_y_43141);
    
    int64_t gid_y_43136;
    
    gid_y_43136 = sext_i32_i64(group_tid_46042) -
        squot64(sext_i32_i64(group_tid_46042), num_groups_y_43141) *
        num_groups_y_43141;
    
    float mem_44884[1];
    int64_t ltid_y_43162 = sext_i32_i64(ltid_pre_46045);
    int64_t ltid_x_43160 = sext_i32_i64(ltid_pre_46046);
    int32_t ltid_flat_43161 = local_tid_46041;
    
    if (slt64(ltid_y_43162, tile_sizze_43138) && slt64(ltid_x_43160,
                                                       tile_sizze_43138)) {
        mem_44884[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_43245 = gid_x_43135 * tile_sizze_43138;
    int64_t binop_x_43260 = gid_y_43136 * tile_sizze_43138;
    __local char *mem_44889;
    
    mem_44889 = (__local char *) mem_44889_backing_0;
    
    float accs_mem_44894[1];
    float mem_param_44885[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44885[i_1] = mem_44884[i_1];
    for (int64_t tile_id_43171 = 0; tile_id_43171 < num_whole_tiles_43159;
         tile_id_43171++) {
        int64_t binop_x_43243 = tile_sizze_43138 * tile_id_43171;
        int64_t ltid_y_43174 = sext_i32_i64(ltid_pre_46045);
        int64_t ltid_x_43172 = sext_i32_i64(ltid_pre_46046);
        int32_t ltid_flat_43173 = local_tid_46041;
        int64_t j_43244 = ltid_x_43172 + binop_x_43243;
        int64_t gtid_43246 = ltid_y_43174 + binop_x_43245;
        bool binop_x_43251 = slt64(j_43244, i32_res_27787);
        bool binop_y_43252 = slt64(gtid_43246, m_27772);
        bool cond_43253 = binop_x_43251 && binop_y_43252;
        float pre_43254;
        
        if (cond_43253) {
            float x_43255 = ((__global
                              float *) defunc_3_map_res_mem_44850)[gtid_43246 *
                                                                   i32_res_27787 +
                                                                   j_43244];
            
            pre_43254 = x_43255;
        } else {
            pre_43254 = 0.0F;
        }
        ((__local float *) mem_44889)[ltid_y_43174 * tile_sizze_43138 +
                                      ltid_x_43172] = pre_43254;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44893[1];
        int64_t ltid_y_43206 = sext_i32_i64(ltid_pre_46045);
        int64_t ltid_x_43204 = sext_i32_i64(ltid_pre_46046);
        int32_t ltid_flat_43205 = local_tid_46041;
        int64_t gtid_43259 = ltid_y_43206 + binop_x_43245;
        int64_t gtid_43261 = ltid_x_43204 + binop_x_43260;
        float acc_43264 = mem_param_44885[(int64_t) 0];
        bool binop_x_43268 = slt64(gtid_43259, m_27772);
        bool binop_y_43269 = slt64(gtid_43261, i32_res_27787);
        bool cond_43270 = binop_x_43268 && binop_y_43269;
        float acc_43271;
        
        if (cond_43270) {
            float x_43272;
            float redout_44315 = acc_43264;
            
            for (int64_t i_44316 = 0; i_44316 < tile_sizze_43138; i_44316++) {
                float x_43276 = ((__local float *) mem_44889)[ltid_y_43206 *
                                                              tile_sizze_43138 +
                                                              i_44316];
                int64_t slice_44367 = binop_x_43243 + i_44316;
                float x_43277 = ((__global float *) mem_44879)[slice_44367 *
                                                               (i32_res_27787 *
                                                                m_27772) +
                                                               gtid_43259 *
                                                               i32_res_27787 +
                                                               gtid_43261];
                float defunc_1_f_res_43278 = x_43276 * x_43277;
                float defunc_1_op_res_43275 = defunc_1_f_res_43278 +
                      redout_44315;
                float redout_tmp_46049 = defunc_1_op_res_43275;
                
                redout_44315 = redout_tmp_46049;
            }
            x_43272 = redout_44315;
            acc_43271 = x_43272;
        } else {
            acc_43271 = acc_43264;
        }
        mem_44893[(int64_t) 0] = acc_43271;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46047[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46047[i_2] = mem_44893[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44885[i_3] = mem_param_tmp_46047[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44894[i_4] = mem_param_44885[i_4];
    
    __local char *mem_44898;
    
    mem_44898 = (__local char *) mem_44898_backing_5;
    
    float mem_44902[1];
    float mem_45482[1];
    
    if (cond_43287) {
        mem_45482[(int64_t) 0] = accs_mem_44894[(int64_t) 0];
    } else {
        int64_t binop_x_43360 = tile_sizze_43138 * num_whole_tiles_43159;
        int64_t ltid_y_43290 = sext_i32_i64(ltid_pre_46045);
        int64_t ltid_x_43288 = sext_i32_i64(ltid_pre_46046);
        int32_t ltid_flat_43289 = local_tid_46041;
        int64_t j_43361 = ltid_x_43288 + binop_x_43360;
        int64_t gtid_43363 = binop_x_43245 + ltid_y_43290;
        bool binop_x_43368 = slt64(j_43361, i32_res_27787);
        bool binop_y_43369 = slt64(gtid_43363, m_27772);
        bool cond_43370 = binop_x_43368 && binop_y_43369;
        float pre_43371;
        
        if (cond_43370) {
            float x_43372 = ((__global
                              float *) defunc_3_map_res_mem_44850)[gtid_43363 *
                                                                   i32_res_27787 +
                                                                   j_43361];
            
            pre_43371 = x_43372;
        } else {
            pre_43371 = 0.0F;
        }
        ((__local float *) mem_44898)[ltid_y_43290 * tile_sizze_43138 +
                                      ltid_x_43288] = pre_43371;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_43323 = sext_i32_i64(ltid_pre_46045);
        int64_t ltid_x_43321 = sext_i32_i64(ltid_pre_46046);
        int32_t ltid_flat_43322 = local_tid_46041;
        int64_t gtid_43377 = binop_x_43245 + ltid_y_43323;
        int64_t gtid_43379 = binop_x_43260 + ltid_x_43321;
        float acc_43382 = accs_mem_44894[(int64_t) 0];
        bool binop_x_43386 = slt64(gtid_43377, m_27772);
        bool binop_y_43387 = slt64(gtid_43379, i32_res_27787);
        bool cond_43388 = binop_x_43386 && binop_y_43387;
        float acc_43389;
        
        if (cond_43388) {
            float x_43390;
            float redout_44317 = acc_43382;
            
            for (int64_t i_44318 = 0; i_44318 < residual_input_43286;
                 i_44318++) {
                float x_43394 = ((__local float *) mem_44898)[ltid_y_43323 *
                                                              tile_sizze_43138 +
                                                              i_44318];
                int64_t slice_44368 = binop_x_43360 + i_44318;
                float x_43395 = ((__global float *) mem_44879)[slice_44368 *
                                                               (i32_res_27787 *
                                                                m_27772) +
                                                               gtid_43377 *
                                                               i32_res_27787 +
                                                               gtid_43379];
                float defunc_1_f_res_43396 = x_43394 * x_43395;
                float defunc_1_op_res_43393 = defunc_1_f_res_43396 +
                      redout_44317;
                float redout_tmp_46050 = defunc_1_op_res_43393;
                
                redout_44317 = redout_tmp_46050;
            }
            x_43390 = redout_44317;
            acc_43389 = x_43390;
        } else {
            acc_43389 = acc_43382;
        }
        mem_44902[(int64_t) 0] = acc_43389;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45482[(int64_t) 0] = mem_44902[(int64_t) 0];
    }
    
    int64_t thread_out_index_46051 = gid_x_43135 * tile_sizze_43138 +
            sext_i32_i64(ltid_pre_46045);
    int64_t thread_out_index_46052 = gid_y_43136 * tile_sizze_43138 +
            sext_i32_i64(ltid_pre_46046);
    
    if (slt64(thread_out_index_46051, m_27772) && slt64(thread_out_index_46052,
                                                        i32_res_27787)) {
        ((__global float *) mem_44906)[thread_out_index_46051 * i32_res_27787 +
                                       thread_out_index_46052] =
            mem_45482[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_43138
}
__kernel void mainDetailedzisegmap_intragroup_43435(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44958_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44956_backing_aligned_1,
                                                    int64_t N_27771,
                                                    int64_t m_27772,
                                                    int64_t i32_res_27787,
                                                    int64_t gridDim_x_43429,
                                                    int64_t full_tiles_43460,
                                                    int64_t kk_43663, __global
                                                    unsigned char *defunc_4_map_res_mem_44916,
                                                    __global
                                                    unsigned char *mem_44940,
                                                    __global
                                                    unsigned char *mem_45130)
{
    #define Ty_43416 (mainDetailedziTy_43413)
    #define Ry_43417 (mainDetailedziRy_43415)
    #define Tx_43418 (mainDetailedziTx_43412)
    #define Rx_43419 (mainDetailedziRx_43414)
    #define Tk_43420 (mainDetailedziTk_43411)
    #define tk_div_tx_43421 (sdiv_up64(mainDetailedziTk_43411, mainDetailedziTx_43412))
    #define tk_div_ty_43422 (sdiv_up64(mainDetailedziTk_43411, mainDetailedziTy_43413))
    #define TxRx_43423 (mainDetailedziTx_43412 * mainDetailedziRx_43414)
    #define TyRy_43424 (mainDetailedziTy_43413 * mainDetailedziRy_43415)
    #define a_loc_szz_43426 (mainDetailedziTk_43411 * (mainDetailedziTy_43413 * mainDetailedziRy_43415))
    #define b_loc_szz_43428 (mainDetailedziRx_43414 * (mainDetailedziTx_43412 * mainDetailedziTk_43411))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44958_backing_1 = (__local volatile
                                                           char *) mem_44958_backing_aligned_0;
    __local volatile char *restrict mem_44956_backing_0 = (__local volatile
                                                           char *) mem_44956_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46128;
    int32_t local_tid_46129;
    int64_t group_sizze_46132;
    int32_t wave_sizze_46131;
    int32_t group_tid_46130;
    
    global_tid_46128 = get_global_id(0);
    local_tid_46129 = get_local_id(0);
    group_sizze_46132 = get_local_size(0);
    wave_sizze_46131 = LOCKSTEP_WIDTH;
    group_tid_46130 = get_group_id(0);
    
    int32_t gid_flat_43435;
    
    gid_flat_43435 = group_tid_46130;
    
    int32_t ltid_pre_46133;
    
    ltid_pre_46133 = squot32(local_tid_46129, sext_i64_i32(Tx_43418));
    
    int32_t ltid_pre_46134;
    
    ltid_pre_46134 = local_tid_46129 - squot32(local_tid_46129,
                                               sext_i64_i32(Tx_43418)) *
        sext_i64_i32(Tx_43418);
    
    int64_t gid_y_43434;
    
    gid_y_43434 = squot64(sext_i32_i64(group_tid_46130), gridDim_x_43429);
    
    int64_t gid_x_43433;
    
    gid_x_43433 = sext_i32_i64(group_tid_46130) -
        squot64(sext_i32_i64(group_tid_46130), gridDim_x_43429) *
        gridDim_x_43429;
    
    int64_t iii_43436;
    
    iii_43436 = TyRy_43424 * gid_y_43434;
    
    int64_t jjj_43437 = TxRx_43423 * gid_x_43433;
    float mem_44954[Ry_43417 * Rx_43419];
    int64_t ltid_y_43440 = sext_i32_i64(ltid_pre_46133);
    int64_t ltid_x_43438 = sext_i32_i64(ltid_pre_46134);
    int32_t ltid_flat_43439 = local_tid_46129;
    float mem_44945[Ry_43417 * Rx_43419];
    
    for (int64_t i_43451 = 0; i_43451 < Ry_43417; i_43451++) {
        for (int64_t i_43454 = 0; i_43454 < Rx_43419; i_43454++) {
            mem_44945[i_43451 * Rx_43419 + i_43454] = 0.0F;
        }
    }
    for (int64_t i_46137 = 0; i_46137 < Ry_43417; i_46137++) {
        for (int64_t i_46138 = 0; i_46138 < Rx_43419; i_46138++) {
            mem_44954[i_46137 * Rx_43419 + i_46138] = mem_44945[i_46137 *
                                                                Rx_43419 +
                                                                i_46138];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44956;
    
    mem_44956 = (__local char *) mem_44956_backing_0;
    
    __local char *mem_44958;
    
    mem_44958 = (__local char *) mem_44958_backing_1;
    
    float mem_45029[Ry_43417];
    float mem_45033[Rx_43419];
    float loop_mem_45045[Ry_43417 * Rx_43419];
    float mem_param_44959[Ry_43417 * Rx_43419];
    
    for (int32_t i_2 = 0; i_2 < Ry_43417 * Rx_43419; i_2++)
        mem_param_44959[i_2] = mem_44954[i_2];
    for (int64_t i_43461 = 0; i_43461 < full_tiles_43460; i_43461++) {
        int64_t kk_43465 = Tk_43420 * i_43461;
        
        for (int64_t i_43466 = 0; i_43466 < Ry_43417; i_43466++) {
            int64_t binop_y_43489 = Ty_43416 * i_43466;
            
            for (int64_t i_43468 = 0; i_43468 < tk_div_tx_43421; i_43468++) {
                int64_t binop_y_43487 = Tx_43418 * i_43468;
                int64_t ltid_x_43470 = sext_i32_i64(ltid_pre_46133);
                int64_t ltid_y_43471 = sext_i32_i64(ltid_pre_46134);
                int32_t ltid_flat_43472 = local_tid_46129;
                int64_t k_43488 = ltid_y_43471 + binop_y_43487;
                int64_t i_43490 = ltid_x_43470 + binop_y_43489;
                int64_t gtid_43491 = iii_43436 + i_43490;
                int64_t A_col_idx_43492 = kk_43465 + k_43488;
                bool cond_43493 = slt64(gtid_43491, m_27772);
                float A_elem_43494;
                
                if (cond_43493) {
                    float A_elem_43496 = ((__global
                                           float *) defunc_4_map_res_mem_44916)[gtid_43491 *
                                                                                i32_res_27787 +
                                                                                A_col_idx_43492];
                    
                    A_elem_43494 = A_elem_43496;
                } else {
                    A_elem_43494 = 0.0F;
                }
                
                bool cond_43498 = slt64(k_43488, Tk_43420);
                int64_t a_loc_ind_43499;
                
                if (cond_43498) {
                    int64_t binop_y_43500 = Tk_43420 * i_43490;
                    int64_t loc_fi_43501 = k_43488 + binop_y_43500;
                    
                    a_loc_ind_43499 = loc_fi_43501;
                } else {
                    a_loc_ind_43499 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_43499) &&
                    slt64(a_loc_ind_43499, a_loc_szz_43426)) {
                    ((__local float *) mem_44956)[a_loc_ind_43499] =
                        A_elem_43494;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_43506 = 0; i_43506 < tk_div_ty_43422; i_43506++) {
            int64_t binop_y_43527 = Ty_43416 * i_43506;
            
            for (int64_t i_43508 = 0; i_43508 < Rx_43419; i_43508++) {
                int64_t binop_y_43529 = Tx_43418 * i_43508;
                int64_t ltid_x_43510 = sext_i32_i64(ltid_pre_46133);
                int64_t ltid_y_43511 = sext_i32_i64(ltid_pre_46134);
                int32_t ltid_flat_43512 = local_tid_46129;
                int64_t k_43528 = ltid_x_43510 + binop_y_43527;
                int64_t j_43530 = ltid_y_43511 + binop_y_43529;
                int64_t gtid_43531 = jjj_43437 + j_43530;
                int64_t B_row_idx_43532 = kk_43465 + k_43528;
                bool cond_43533 = slt64(gtid_43531, N_27771);
                float B_elem_43534;
                
                if (cond_43533) {
                    float B_elem_43536 = ((__global
                                           float *) mem_44940)[B_row_idx_43532 *
                                                               N_27771 +
                                                               gtid_43531];
                    
                    B_elem_43534 = B_elem_43536;
                } else {
                    B_elem_43534 = 0.0F;
                }
                
                bool cond_43538 = slt64(k_43528, Tk_43420);
                int64_t b_loc_ind_43539;
                
                if (cond_43538) {
                    int64_t binop_y_43540 = TxRx_43423 * k_43528;
                    int64_t loc_fi_43541 = j_43530 + binop_y_43540;
                    
                    b_loc_ind_43539 = loc_fi_43541;
                } else {
                    b_loc_ind_43539 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_43539) &&
                    slt64(b_loc_ind_43539, b_loc_szz_43428)) {
                    ((__local float *) mem_44958)[b_loc_ind_43539] =
                        B_elem_43534;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_45044[Ry_43417 * Rx_43419];
        float mem_param_45016[Ry_43417 * Rx_43419];
        
        for (int32_t i_3 = 0; i_3 < Ry_43417 * Rx_43419; i_3++)
            mem_param_45016[i_3] = mem_param_44959[i_3];
        for (int64_t i_43546 = 0; i_43546 < Tk_43420; i_43546++) {
            int64_t binop_y_43585 = TxRx_43423 * i_43546;
            int64_t ltid_y_43550 = sext_i32_i64(ltid_pre_46133);
            int64_t ltid_x_43548 = sext_i32_i64(ltid_pre_46134);
            int32_t ltid_flat_43549 = local_tid_46129;
            float mem_45019[Ry_43417];
            float mem_45021[Rx_43419];
            int64_t binop_x_43576 = Ry_43417 * ltid_y_43550;
            
            for (int64_t i_43574 = 0; i_43574 < Ry_43417; i_43574++) {
                int64_t binop_x_43577 = i_43574 + binop_x_43576;
                int64_t binop_y_43578 = Tk_43420 * binop_x_43577;
                int64_t a_loc_ind_43579 = i_43546 + binop_y_43578;
                
                for (int64_t i_46150 = 0; i_46150 < (int64_t) 1; i_46150++) {
                    mem_45019[i_43574 + i_46150] = ((__local
                                                     float *) mem_44956)[a_loc_ind_43579 +
                                                                         i_46150];
                }
            }
            
            int64_t binop_y_43587 = Rx_43419 * ltid_x_43548;
            
            for (int64_t i_43583 = 0; i_43583 < Rx_43419; i_43583++) {
                int64_t binop_x_43586 = i_43583 + binop_y_43585;
                int64_t b_loc_ind_43588 = binop_x_43586 + binop_y_43587;
                
                for (int64_t i_46152 = 0; i_46152 < (int64_t) 1; i_46152++) {
                    mem_45021[i_43583 + i_46152] = ((__local
                                                     float *) mem_44958)[b_loc_ind_43588 +
                                                                         i_46152];
                }
            }
            for (int64_t i_46153 = 0; i_46153 < Ry_43417; i_46153++) {
                mem_45029[i_46153] = mem_45019[i_46153];
            }
            for (int64_t i_46154 = 0; i_46154 < Rx_43419; i_46154++) {
                mem_45033[i_46154] = mem_45021[i_46154];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_45043[Ry_43417 * Rx_43419];
            int64_t ltid_y_43595 = sext_i32_i64(ltid_pre_46133);
            int64_t ltid_x_43593 = sext_i32_i64(ltid_pre_46134);
            int32_t ltid_flat_43594 = local_tid_46129;
            int64_t binop_y_43636 = Ry_43417 * ltid_y_43595;
            int64_t binop_y_43640 = Rx_43419 * ltid_x_43593;
            
            for (int64_t i_43630 = 0; i_43630 < Ry_43417; i_43630++) {
                int64_t binop_x_43635 = iii_43436 + i_43630;
                int64_t cmpop_x_43637 = binop_x_43635 + binop_y_43636;
                bool binop_x_43638 = slt64(cmpop_x_43637, m_27772);
                
                for (int64_t i_43633 = 0; i_43633 < Rx_43419; i_43633++) {
                    int64_t binop_x_43639 = jjj_43437 + i_43633;
                    int64_t cmpop_x_43641 = binop_x_43639 + binop_y_43640;
                    bool binop_y_43642 = slt64(cmpop_x_43641, N_27771);
                    bool cond_43643 = binop_x_43638 && binop_y_43642;
                    
                    if (cond_43643) {
                        float a_43645 = mem_45029[i_43630];
                        float b_43646 = mem_45033[i_43633];
                        float c_43647 = mem_param_45016[i_43630 * Rx_43419 +
                                                        i_43633];
                        float defunc_1_f_res_43650 = a_43645 * b_43646;
                        float defunc_1_op_res_43654 = c_43647 +
                              defunc_1_f_res_43650;
                        
                        mem_param_45016[i_43630 * Rx_43419 + i_43633] =
                            defunc_1_op_res_43654;
                    }
                }
            }
            for (int64_t i_46157 = 0; i_46157 < Ry_43417; i_46157++) {
                for (int64_t i_46158 = 0; i_46158 < Rx_43419; i_46158++) {
                    mem_45043[i_46157 * Rx_43419 + i_46158] =
                        mem_param_45016[i_46157 * Rx_43419 + i_46158];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_46147[Ry_43417 * Rx_43419];
            
            for (int32_t i_4 = 0; i_4 < Ry_43417 * Rx_43419; i_4++)
                mem_param_tmp_46147[i_4] = mem_45043[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_43417 * Rx_43419; i_5++)
                mem_param_45016[i_5] = mem_param_tmp_46147[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_43417 * Rx_43419; i_6++)
            loop_mem_45044[i_6] = mem_param_45016[i_6];
        
        float mem_param_tmp_46139[Ry_43417 * Rx_43419];
        
        for (int32_t i_7 = 0; i_7 < Ry_43417 * Rx_43419; i_7++)
            mem_param_tmp_46139[i_7] = loop_mem_45044[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_43417 * Rx_43419; i_8++)
            mem_param_44959[i_8] = mem_param_tmp_46139[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_43417 * Rx_43419; i_9++)
        loop_mem_45045[i_9] = mem_param_44959[i_9];
    for (int64_t i_43664 = 0; i_43664 < Ry_43417; i_43664++) {
        int64_t binop_y_43689 = Ty_43416 * i_43664;
        
        for (int64_t i_43666 = 0; i_43666 < tk_div_tx_43421; i_43666++) {
            int64_t binop_y_43687 = Tx_43418 * i_43666;
            int64_t ltid_x_43668 = sext_i32_i64(ltid_pre_46133);
            int64_t ltid_y_43669 = sext_i32_i64(ltid_pre_46134);
            int32_t ltid_flat_43670 = local_tid_46129;
            int64_t k_43688 = ltid_y_43669 + binop_y_43687;
            int64_t i_43690 = ltid_x_43668 + binop_y_43689;
            int64_t gtid_43691 = iii_43436 + i_43690;
            int64_t A_col_idx_43692 = kk_43663 + k_43688;
            bool binop_x_43693 = slt64(gtid_43691, m_27772);
            bool binop_y_43694 = slt64(A_col_idx_43692, i32_res_27787);
            bool cond_43695 = binop_x_43693 && binop_y_43694;
            float A_elem_43696;
            
            if (cond_43695) {
                float A_elem_43698 = ((__global
                                       float *) defunc_4_map_res_mem_44916)[gtid_43691 *
                                                                            i32_res_27787 +
                                                                            A_col_idx_43692];
                
                A_elem_43696 = A_elem_43698;
            } else {
                A_elem_43696 = 0.0F;
            }
            
            bool cond_43700 = slt64(k_43688, Tk_43420);
            int64_t a_loc_ind_43701;
            
            if (cond_43700) {
                int64_t binop_y_43702 = Tk_43420 * i_43690;
                int64_t loc_fi_43703 = k_43688 + binop_y_43702;
                
                a_loc_ind_43701 = loc_fi_43703;
            } else {
                a_loc_ind_43701 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_43701) && slt64(a_loc_ind_43701,
                                                             a_loc_szz_43426)) {
                ((__local float *) mem_44956)[a_loc_ind_43701] = A_elem_43696;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_43708 = 0; i_43708 < tk_div_ty_43422; i_43708++) {
        int64_t binop_y_43731 = Ty_43416 * i_43708;
        
        for (int64_t i_43710 = 0; i_43710 < Rx_43419; i_43710++) {
            int64_t binop_y_43733 = Tx_43418 * i_43710;
            int64_t ltid_x_43712 = sext_i32_i64(ltid_pre_46133);
            int64_t ltid_y_43713 = sext_i32_i64(ltid_pre_46134);
            int32_t ltid_flat_43714 = local_tid_46129;
            int64_t k_43732 = ltid_x_43712 + binop_y_43731;
            int64_t j_43734 = ltid_y_43713 + binop_y_43733;
            int64_t gtid_43735 = jjj_43437 + j_43734;
            int64_t B_row_idx_43736 = kk_43663 + k_43732;
            bool binop_x_43737 = slt64(gtid_43735, N_27771);
            bool binop_y_43738 = slt64(B_row_idx_43736, i32_res_27787);
            bool cond_43739 = binop_x_43737 && binop_y_43738;
            float B_elem_43740;
            
            if (cond_43739) {
                float B_elem_43742 = ((__global
                                       float *) mem_44940)[B_row_idx_43736 *
                                                           N_27771 +
                                                           gtid_43735];
                
                B_elem_43740 = B_elem_43742;
            } else {
                B_elem_43740 = 0.0F;
            }
            
            bool cond_43744 = slt64(k_43732, Tk_43420);
            int64_t b_loc_ind_43745;
            
            if (cond_43744) {
                int64_t binop_y_43746 = TxRx_43423 * k_43732;
                int64_t loc_fi_43747 = j_43734 + binop_y_43746;
                
                b_loc_ind_43745 = loc_fi_43747;
            } else {
                b_loc_ind_43745 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_43745) && slt64(b_loc_ind_43745,
                                                             b_loc_szz_43428)) {
                ((__local float *) mem_44958)[b_loc_ind_43745] = B_elem_43740;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_45111[Ry_43417];
    float mem_45115[Rx_43419];
    float mem_45125[Ry_43417 * Rx_43419];
    float loop_mem_45127[Ry_43417 * Rx_43419];
    float mem_param_45098[Ry_43417 * Rx_43419];
    
    for (int32_t i_10 = 0; i_10 < Ry_43417 * Rx_43419; i_10++)
        mem_param_45098[i_10] = loop_mem_45045[i_10];
    for (int64_t i_43752 = 0; i_43752 < Tk_43420; i_43752++) {
        int64_t cmpop_x_43754 = kk_43663 + i_43752;
        bool cond_43755 = slt64(cmpop_x_43754, i32_res_27787);
        float mem_45498[Ry_43417 * Rx_43419];
        
        if (cond_43755) {
            int64_t binop_y_43793 = TxRx_43423 * i_43752;
            int64_t bytes_45100 = (int64_t) 4 * Ry_43417;
            int64_t bytes_45102 = (int64_t) 4 * Rx_43419;
            int64_t ltid_y_43758 = sext_i32_i64(ltid_pre_46133);
            int64_t ltid_x_43756 = sext_i32_i64(ltid_pre_46134);
            int32_t ltid_flat_43757 = local_tid_46129;
            float mem_45101[Ry_43417];
            float mem_45103[Rx_43419];
            int64_t binop_x_43784 = Ry_43417 * ltid_y_43758;
            
            for (int64_t i_43782 = 0; i_43782 < Ry_43417; i_43782++) {
                int64_t binop_x_43785 = i_43782 + binop_x_43784;
                int64_t binop_y_43786 = Tk_43420 * binop_x_43785;
                int64_t a_loc_ind_43787 = i_43752 + binop_y_43786;
                
                for (int64_t i_46166 = 0; i_46166 < (int64_t) 1; i_46166++) {
                    mem_45101[i_43782 + i_46166] = ((__local
                                                     float *) mem_44956)[a_loc_ind_43787 +
                                                                         i_46166];
                }
            }
            
            int64_t binop_y_43795 = Rx_43419 * ltid_x_43756;
            
            for (int64_t i_43791 = 0; i_43791 < Rx_43419; i_43791++) {
                int64_t binop_x_43794 = i_43791 + binop_y_43793;
                int64_t b_loc_ind_43796 = binop_x_43794 + binop_y_43795;
                
                for (int64_t i_46168 = 0; i_46168 < (int64_t) 1; i_46168++) {
                    mem_45103[i_43791 + i_46168] = ((__local
                                                     float *) mem_44958)[b_loc_ind_43796 +
                                                                         i_46168];
                }
            }
            for (int64_t i_46169 = 0; i_46169 < Ry_43417; i_46169++) {
                mem_45111[i_46169] = mem_45101[i_46169];
            }
            for (int64_t i_46170 = 0; i_46170 < Rx_43419; i_46170++) {
                mem_45115[i_46170] = mem_45103[i_46170];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_43803 = sext_i32_i64(ltid_pre_46133);
            int64_t ltid_x_43801 = sext_i32_i64(ltid_pre_46134);
            int32_t ltid_flat_43802 = local_tid_46129;
            int64_t binop_y_43844 = Ry_43417 * ltid_y_43803;
            int64_t binop_y_43848 = Rx_43419 * ltid_x_43801;
            
            for (int64_t i_43838 = 0; i_43838 < Ry_43417; i_43838++) {
                int64_t binop_x_43843 = iii_43436 + i_43838;
                int64_t cmpop_x_43845 = binop_x_43843 + binop_y_43844;
                bool binop_x_43846 = slt64(cmpop_x_43845, m_27772);
                
                for (int64_t i_43841 = 0; i_43841 < Rx_43419; i_43841++) {
                    int64_t binop_x_43847 = jjj_43437 + i_43841;
                    int64_t cmpop_x_43849 = binop_x_43847 + binop_y_43848;
                    bool binop_y_43850 = slt64(cmpop_x_43849, N_27771);
                    bool cond_43851 = binop_x_43846 && binop_y_43850;
                    
                    if (cond_43851) {
                        float a_43853 = mem_45111[i_43838];
                        float b_43854 = mem_45115[i_43841];
                        float c_43855 = mem_param_45098[i_43838 * Rx_43419 +
                                                        i_43841];
                        float defunc_1_f_res_43858 = a_43853 * b_43854;
                        float defunc_1_op_res_43862 = c_43855 +
                              defunc_1_f_res_43858;
                        
                        mem_param_45098[i_43838 * Rx_43419 + i_43841] =
                            defunc_1_op_res_43862;
                    }
                }
            }
            for (int64_t i_46173 = 0; i_46173 < Ry_43417; i_46173++) {
                for (int64_t i_46174 = 0; i_46174 < Rx_43419; i_46174++) {
                    mem_45125[i_46173 * Rx_43419 + i_46174] =
                        mem_param_45098[i_46173 * Rx_43419 + i_46174];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_46175 = 0; i_46175 < Ry_43417; i_46175++) {
                for (int64_t i_46176 = 0; i_46176 < Rx_43419; i_46176++) {
                    mem_45498[i_46175 * Rx_43419 + i_46176] =
                        mem_45125[i_46175 * Rx_43419 + i_46176];
                }
            }
        } else {
            for (int64_t i_46177 = 0; i_46177 < Ry_43417; i_46177++) {
                for (int64_t i_46178 = 0; i_46178 < Rx_43419; i_46178++) {
                    mem_45498[i_46177 * Rx_43419 + i_46178] =
                        mem_param_45098[i_46177 * Rx_43419 + i_46178];
                }
            }
        }
        
        float mem_param_tmp_46163[Ry_43417 * Rx_43419];
        
        for (int32_t i_11 = 0; i_11 < Ry_43417 * Rx_43419; i_11++)
            mem_param_tmp_46163[i_11] = mem_45498[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_43417 * Rx_43419; i_12++)
            mem_param_45098[i_12] = mem_param_tmp_46163[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_43417 * Rx_43419; i_13++)
        loop_mem_45127[i_13] = mem_param_45098[i_13];
    
    int64_t reg_tile_i_46179 = squot64(sext_i32_i64(local_tid_46129), Tx_43418);
    int64_t reg_tile_i_46180 = sext_i32_i64(local_tid_46129) -
            squot64(sext_i32_i64(local_tid_46129), Tx_43418) * Tx_43418;
    int64_t tile_dim_start_46181 = Ry_43417 * (Ty_43416 * gid_y_43434 +
                                               reg_tile_i_46179);
    int64_t tile_dim_start_46182 = Rx_43419 * (Tx_43418 * gid_x_43433 +
                                               reg_tile_i_46180);
    
    for (int64_t nest_i_46183 = 0; nest_i_46183 < Ry_43417; nest_i_46183++) {
        for (int64_t nest_i_46184 = 0; nest_i_46184 < Rx_43419;
             nest_i_46184++) {
            if (slt64(tile_dim_start_46181 + nest_i_46183, m_27772) &&
                slt64(tile_dim_start_46182 + nest_i_46184, N_27771)) {
                ((__global float *) mem_45130)[(tile_dim_start_46181 +
                                                nest_i_46183) * N_27771 +
                                               (tile_dim_start_46182 +
                                                nest_i_46184)] =
                    loop_mem_45127[nest_i_46183 * Rx_43419 + nest_i_46184];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_43416
    #undef Ry_43417
    #undef Tx_43418
    #undef Rx_43419
    #undef Tk_43420
    #undef tk_div_tx_43421
    #undef tk_div_ty_43422
    #undef TxRx_43423
    #undef TyRy_43424
    #undef a_loc_szz_43426
    #undef b_loc_szz_43428
}
__kernel void mainDetailedzisegmap_intragroup_43869(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_45203_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_45196_backing_aligned_1,
                                                    int64_t N_27771,
                                                    int64_t m_27772,
                                                    int32_t n_27775,
                                                    float hfrac_27777,
                                                    int64_t i32_res_27781,
                                                    int32_t k2p2_27783,
                                                    int64_t num_whole_tiles_43891,
                                                    int64_t residual_input_43992,
                                                    unsigned char cond_43993,
                                                    __global
                                                    unsigned char *mem_45182,
                                                    __global
                                                    unsigned char *mem_45185,
                                                    __global
                                                    unsigned char *mem_45216,
                                                    __global
                                                    unsigned char *mem_45218,
                                                    __global
                                                    unsigned char *mem_45220)
{
    #define segmap_group_sizze_32525 (mainDetailedzisegmap_group_sizze_32490)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45203_backing_5 = (__local volatile
                                                           char *) mem_45203_backing_aligned_0;
    __local volatile char *restrict mem_45196_backing_0 = (__local volatile
                                                           char *) mem_45196_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46352;
    int32_t local_tid_46353;
    int64_t group_sizze_46356;
    int32_t wave_sizze_46355;
    int32_t group_tid_46354;
    
    global_tid_46352 = get_global_id(0);
    local_tid_46353 = get_local_id(0);
    group_sizze_46356 = get_local_size(0);
    wave_sizze_46355 = LOCKSTEP_WIDTH;
    group_tid_46354 = get_group_id(0);
    
    int32_t gid_flat_43869;
    
    gid_flat_43869 = group_tid_46354;
    
    int32_t ltid_pre_46357;
    
    ltid_pre_46357 = local_tid_46353;
    
    int64_t gid_43868;
    
    gid_43868 = sext_i32_i64(group_tid_46354);
    
    int64_t binop_x_43876;
    
    binop_x_43876 = segmap_group_sizze_32525 * gid_43868;
    
    int32_t mem_45189[1];
    int64_t ltid_43870 = sext_i32_i64(ltid_pre_46357);
    int32_t ltid_flat_43871 = local_tid_46353;
    int64_t gtid_43877 = ltid_43870 + binop_x_43876;
    bool cond_43878 = slt64(gtid_43877, m_27772);
    int32_t pre_43879;
    
    if (cond_43878) {
        int32_t defunc_0_f_res_43881;
        int32_t redout_44325 = 0;
        
        for (int32_t i_44370 = 0; i_44370 < n_27775; i_44370++) {
            int64_t i_44326 = sext_i32_i64(i_44370);
            float x_43885 = ((__global float *) mem_45182)[i_44326 * m_27772 +
                                                           gtid_43877];
            bool isnan_res_43886;
            
            isnan_res_43886 = futrts_isnan32(x_43885);
            
            bool cond_43887 = !isnan_res_43886;
            int32_t defunc_0_f_res_43888 = btoi_bool_i32(cond_43887);
            int32_t defunc_1_op_res_43884 = add32(defunc_0_f_res_43888,
                                                  redout_44325);
            int32_t redout_tmp_46358 = defunc_1_op_res_43884;
            
            redout_44325 = redout_tmp_46358;
        }
        defunc_0_f_res_43881 = redout_44325;
        pre_43879 = defunc_0_f_res_43881;
    } else {
        pre_43879 = 0;
    }
    mem_45189[(int64_t) 0] = pre_43879;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_45192[1];
    int64_t ltid_43892 = sext_i32_i64(ltid_pre_46357);
    int32_t ltid_flat_43893 = local_tid_46353;
    
    mem_45192[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45196;
    
    mem_45196 = (__local char *) mem_45196_backing_0;
    
    float accs_mem_45200[1];
    float mem_param_45193[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_45193[i_1] = mem_45192[i_1];
    for (int64_t tile_id_43899 = 0; tile_id_43899 < num_whole_tiles_43891;
         tile_id_43899++) {
        int64_t binop_x_43948 = segmap_group_sizze_32525 * tile_id_43899;
        int64_t ltid_43900 = sext_i32_i64(ltid_pre_46357);
        int32_t ltid_flat_43901 = local_tid_46353;
        int64_t j_43949 = ltid_43900 + binop_x_43948;
        bool cond_43953 = slt64(j_43949, i32_res_27781);
        int32_t pre_43954;
        
        if (cond_43953) {
            int32_t index_primexp_44283 = sext_i64_i32(j_43949);
            
            pre_43954 = index_primexp_44283;
        } else {
            pre_43954 = 0;
        }
        ((__local int32_t *) mem_45196)[ltid_43900] = pre_43954;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_45199[1];
        int64_t ltid_43919 = sext_i32_i64(ltid_pre_46357);
        int32_t ltid_flat_43920 = local_tid_46353;
        int64_t gtid_43959 = binop_x_43876 + ltid_43919;
        float acc_43961 = mem_param_45193[(int64_t) 0];
        bool cond_43962 = slt64(gtid_43959, m_27772);
        float acc_43963;
        
        if (cond_43962) {
            int32_t defunc_0_f_res_43960 = mem_45189[(int64_t) 0];
            float x_43964;
            float redout_44327 = acc_43961;
            
            for (int64_t i_44328 = 0; i_44328 < segmap_group_sizze_32525;
                 i_44328++) {
                int32_t x_43968 = ((__local int32_t *) mem_45196)[i_44328];
                bool cond_43969 = slt32(x_43968, defunc_0_f_res_43960);
                float defunc_0_f_res_43970;
                
                if (cond_43969) {
                    int64_t i_43971 = sext_i32_i64(x_43968);
                    bool x_43972 = sle64((int64_t) 0, i_43971);
                    bool y_43973 = slt64(i_43971, N_27771);
                    bool bounds_check_43974 = x_43972 && y_43973;
                    bool index_certs_43975;
                    
                    if (!bounds_check_43974) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          46) == -1) {
                                global_failure_args[0] = i_43971;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_3;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_43976 = ((__global
                                                         float *) mem_45185)[i_43971 *
                                                                             m_27772 +
                                                                             gtid_43959];
                    
                    defunc_0_f_res_43970 = defunc_0_f_res_t_res_43976;
                } else {
                    defunc_0_f_res_43970 = 0.0F;
                }
                
                float defunc_0_f_res_43977 = defunc_0_f_res_43970 *
                      defunc_0_f_res_43970;
                float defunc_1_op_res_43967 = defunc_0_f_res_43977 +
                      redout_44327;
                float redout_tmp_46361 = defunc_1_op_res_43967;
                
                redout_44327 = redout_tmp_46361;
            }
            x_43964 = redout_44327;
            acc_43963 = x_43964;
        } else {
            acc_43963 = acc_43961;
        }
        mem_45199[(int64_t) 0] = acc_43963;
        
      error_3:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46359[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46359[i_2] = mem_45199[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_45193[i_3] = mem_param_tmp_46359[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_45200[i_4] = mem_param_45193[i_4];
    
    __local char *mem_45203;
    
    mem_45203 = (__local char *) mem_45203_backing_5;
    
    float mem_45206[1];
    float mem_45511[1];
    
    if (cond_43993) {
        mem_45511[(int64_t) 0] = accs_mem_45200[(int64_t) 0];
    } else {
        int64_t binop_x_44003 = segmap_group_sizze_32525 *
                num_whole_tiles_43891;
        int64_t ltid_43994 = sext_i32_i64(ltid_pre_46357);
        int32_t ltid_flat_43995 = local_tid_46353;
        int64_t j_44004 = ltid_43994 + binop_x_44003;
        bool cond_44008 = slt64(j_44004, i32_res_27781);
        int32_t pre_44009;
        
        if (cond_44008) {
            int32_t index_primexp_44284 = sext_i64_i32(j_44004);
            
            pre_44009 = index_primexp_44284;
        } else {
            pre_44009 = 0;
        }
        ((__local int32_t *) mem_45203)[ltid_43994] = pre_44009;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_44014 = sext_i32_i64(ltid_pre_46357);
        int32_t ltid_flat_44015 = local_tid_46353;
        int64_t gtid_44022 = binop_x_43876 + ltid_44014;
        float acc_44024 = accs_mem_45200[(int64_t) 0];
        bool cond_44025 = slt64(gtid_44022, m_27772);
        float acc_44026;
        
        if (cond_44025) {
            int32_t defunc_0_f_res_44023 = mem_45189[(int64_t) 0];
            float x_44027;
            float redout_44329 = acc_44024;
            
            for (int64_t i_44330 = 0; i_44330 < residual_input_43992;
                 i_44330++) {
                int32_t x_44031 = ((__local int32_t *) mem_45203)[i_44330];
                bool cond_44032 = slt32(x_44031, defunc_0_f_res_44023);
                float defunc_0_f_res_44033;
                
                if (cond_44032) {
                    int64_t i_44034 = sext_i32_i64(x_44031);
                    bool x_44035 = sle64((int64_t) 0, i_44034);
                    bool y_44036 = slt64(i_44034, N_27771);
                    bool bounds_check_44037 = x_44035 && y_44036;
                    bool index_certs_44038;
                    
                    if (!bounds_check_44037) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          47) == -1) {
                                global_failure_args[0] = i_44034;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_5;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44039 = ((__global
                                                         float *) mem_45185)[i_44034 *
                                                                             m_27772 +
                                                                             gtid_44022];
                    
                    defunc_0_f_res_44033 = defunc_0_f_res_t_res_44039;
                } else {
                    defunc_0_f_res_44033 = 0.0F;
                }
                
                float defunc_0_f_res_44040 = defunc_0_f_res_44033 *
                      defunc_0_f_res_44033;
                float defunc_1_op_res_44030 = defunc_0_f_res_44040 +
                      redout_44329;
                float redout_tmp_46362 = defunc_1_op_res_44030;
                
                redout_44329 = redout_tmp_46362;
            }
            x_44027 = redout_44329;
            acc_44026 = x_44027;
        } else {
            acc_44026 = acc_44024;
        }
        mem_45206[(int64_t) 0] = acc_44026;
        
      error_5:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45511[(int64_t) 0] = mem_45206[(int64_t) 0];
    }
    
    int32_t mem_45210[1];
    int32_t mem_45212[1];
    float mem_45214[1];
    int64_t ltid_44043 = sext_i32_i64(ltid_pre_46357);
    int32_t ltid_flat_44044 = local_tid_46353;
    int64_t gtid_44054 = binop_x_43876 + ltid_44043;
    bool cond_44056 = slt64(gtid_44054, m_27772);
    int32_t postlude_44057;
    int32_t postlude_44058;
    float postlude_44059;
    
    if (cond_44056) {
        float defunc_0_f_res_44055 = mem_45511[(int64_t) 0];
        int32_t defunc_0_f_res_44060 = mem_45189[(int64_t) 0];
        int32_t r32_arg_44061 = sub32(defunc_0_f_res_44060, k2p2_27783);
        float i32_res_44062 = sitofp_i32_f32(r32_arg_44061);
        float sqrt_arg_44063 = defunc_0_f_res_44055 / i32_res_44062;
        float sqrt_res_44064;
        
        sqrt_res_44064 = futrts_sqrt32(sqrt_arg_44063);
        
        float i32_res_44065 = sitofp_i32_f32(defunc_0_f_res_44060);
        float t32_arg_44066 = hfrac_27777 * i32_res_44065;
        int32_t f32_res_44067 = fptosi_f32_i32(t32_arg_44066);
        
        postlude_44057 = f32_res_44067;
        postlude_44058 = defunc_0_f_res_44060;
        postlude_44059 = sqrt_res_44064;
    } else {
        postlude_44057 = 0;
        postlude_44058 = 0;
        postlude_44059 = 0.0F;
    }
    mem_45210[(int64_t) 0] = postlude_44057;
    mem_45212[(int64_t) 0] = postlude_44058;
    mem_45214[(int64_t) 0] = postlude_44059;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_46353) + segmap_group_sizze_32525 *
              sext_i32_i64(group_tid_46354), m_27772)) {
        ((__global int32_t *) mem_45216)[sext_i32_i64(local_tid_46353) +
                                         segmap_group_sizze_32525 *
                                         sext_i32_i64(group_tid_46354)] =
            mem_45210[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46353) + segmap_group_sizze_32525 *
              sext_i32_i64(group_tid_46354), m_27772)) {
        ((__global int32_t *) mem_45218)[sext_i32_i64(local_tid_46353) +
                                         segmap_group_sizze_32525 *
                                         sext_i32_i64(group_tid_46354)] =
            mem_45212[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46353) + segmap_group_sizze_32525 *
              sext_i32_i64(group_tid_46354), m_27772)) {
        ((__global float *) mem_45220)[sext_i32_i64(local_tid_46353) +
                                       segmap_group_sizze_32525 *
                                       sext_i32_i64(group_tid_46354)] =
            mem_45214[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_32525
}
__kernel void mainDetailedzisegmap_intragroup_44075(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_45269_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_45262_backing_aligned_1,
                                                    int64_t N_27771,
                                                    int64_t m_27772,
                                                    int64_t i32_res_28174,
                                                    int64_t num_whole_tiles_44095,
                                                    int64_t residual_input_44206,
                                                    unsigned char cond_44207,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_45178,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_45244,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_45245,
                                                    __global
                                                    unsigned char *mem_45275)
{
    #define segmap_group_sizze_32782 (mainDetailedzisegmap_group_sizze_32759)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45269_backing_5 = (__local volatile
                                                           char *) mem_45269_backing_aligned_0;
    __local volatile char *restrict mem_45262_backing_0 = (__local volatile
                                                           char *) mem_45262_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46536;
    int32_t local_tid_46537;
    int64_t group_sizze_46540;
    int32_t wave_sizze_46539;
    int32_t group_tid_46538;
    
    global_tid_46536 = get_global_id(0);
    local_tid_46537 = get_local_id(0);
    group_sizze_46540 = get_local_size(0);
    wave_sizze_46539 = LOCKSTEP_WIDTH;
    group_tid_46538 = get_group_id(0);
    
    int32_t gid_flat_44075;
    
    gid_flat_44075 = group_tid_46538;
    
    int32_t ltid_pre_46541;
    
    ltid_pre_46541 = local_tid_46537;
    
    int64_t gid_44074;
    
    gid_44074 = sext_i32_i64(group_tid_46538);
    
    int64_t binop_x_44084;
    
    binop_x_44084 = segmap_group_sizze_32782 * gid_44074;
    
    int32_t mem_45253[1];
    int32_t mem_45255[1];
    int64_t ltid_44076 = sext_i32_i64(ltid_pre_46541);
    int32_t ltid_flat_44077 = local_tid_46537;
    int64_t gtid_44085 = ltid_44076 + binop_x_44084;
    bool cond_44086 = slt64(gtid_44085, m_27772);
    int32_t pre_44087;
    int32_t pre_44088;
    
    if (cond_44086) {
        int32_t x_44089 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_44085];
        int32_t x_44090 = ((__global
                            int32_t *) defunc_3_map_res_mem_45244)[gtid_44085];
        
        pre_44087 = x_44089;
        pre_44088 = x_44090;
    } else {
        pre_44087 = 0;
        pre_44088 = 0;
    }
    mem_45253[(int64_t) 0] = pre_44087;
    mem_45255[(int64_t) 0] = pre_44088;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_45258[1];
    int64_t ltid_44096 = sext_i32_i64(ltid_pre_46541);
    int32_t ltid_flat_44097 = local_tid_46537;
    
    mem_45258[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45262;
    
    mem_45262 = (__local char *) mem_45262_backing_0;
    
    float accs_mem_45266[1];
    float mem_param_45259[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_45259[i_1] = mem_45258[i_1];
    for (int64_t tile_id_44103 = 0; tile_id_44103 < num_whole_tiles_44095;
         tile_id_44103++) {
        int64_t binop_x_44156 = segmap_group_sizze_32782 * tile_id_44103;
        int64_t ltid_44104 = sext_i32_i64(ltid_pre_46541);
        int32_t ltid_flat_44105 = local_tid_46537;
        int64_t j_44157 = ltid_44104 + binop_x_44156;
        bool cond_44162 = slt64(j_44157, i32_res_28174);
        int32_t pre_44163;
        
        if (cond_44162) {
            int32_t index_primexp_44285 = sext_i64_i32(j_44157);
            int32_t tile_elem_44164 = index_primexp_44285;
            
            pre_44163 = tile_elem_44164;
        } else {
            pre_44163 = 0;
        }
        ((__local int32_t *) mem_45262)[ltid_44104] = pre_44163;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_45265[1];
        int64_t ltid_44124 = sext_i32_i64(ltid_pre_46541);
        int32_t ltid_flat_44125 = local_tid_46537;
        int64_t gtid_44168 = binop_x_44084 + ltid_44124;
        float acc_44171 = mem_param_45259[(int64_t) 0];
        bool cond_44172 = slt64(gtid_44168, m_27772);
        float acc_44173;
        
        if (cond_44172) {
            int32_t x_44169 = mem_45253[(int64_t) 0];
            int32_t x_44170 = mem_45255[(int64_t) 0];
            float x_44174;
            float redout_44331 = acc_44171;
            
            for (int64_t i_44332 = 0; i_44332 < segmap_group_sizze_32782;
                 i_44332++) {
                int32_t x_44178 = ((__local int32_t *) mem_45262)[i_44332];
                bool cond_44179 = slt32(x_44178, x_44170);
                float defunc_0_f_res_44180;
                
                if (cond_44179) {
                    int32_t x_44181 = add32(x_44169, x_44178);
                    int32_t x_44182 = sub32(x_44181, x_44170);
                    int32_t i_44183 = add32(1, x_44182);
                    int64_t i_44184 = sext_i32_i64(i_44183);
                    bool x_44185 = sle64((int64_t) 0, i_44184);
                    bool y_44186 = slt64(i_44184, N_27771);
                    bool bounds_check_44187 = x_44185 && y_44186;
                    bool index_certs_44188;
                    
                    if (!bounds_check_44187) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          51) == -1) {
                                global_failure_args[0] = i_44184;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_3;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44189 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_44168 *
                                                                                              N_27771 +
                                                                                              i_44184];
                    
                    defunc_0_f_res_44180 = defunc_0_f_res_t_res_44189;
                } else {
                    defunc_0_f_res_44180 = 0.0F;
                }
                
                float defunc_1_op_res_44177 = defunc_0_f_res_44180 +
                      redout_44331;
                float redout_tmp_46544 = defunc_1_op_res_44177;
                
                redout_44331 = redout_tmp_46544;
            }
            x_44174 = redout_44331;
            acc_44173 = x_44174;
        } else {
            acc_44173 = acc_44171;
        }
        mem_45265[(int64_t) 0] = acc_44173;
        
      error_3:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46542[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46542[i_2] = mem_45265[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_45259[i_3] = mem_param_tmp_46542[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_45266[i_4] = mem_param_45259[i_4];
    
    __local char *mem_45269;
    
    mem_45269 = (__local char *) mem_45269_backing_5;
    
    float mem_45272[1];
    float mem_45520[1];
    
    if (cond_44207) {
        mem_45520[(int64_t) 0] = accs_mem_45266[(int64_t) 0];
    } else {
        int64_t binop_x_44217 = segmap_group_sizze_32782 *
                num_whole_tiles_44095;
        int64_t ltid_44208 = sext_i32_i64(ltid_pre_46541);
        int32_t ltid_flat_44209 = local_tid_46537;
        int64_t j_44218 = ltid_44208 + binop_x_44217;
        bool cond_44223 = slt64(j_44218, i32_res_28174);
        int32_t pre_44224;
        
        if (cond_44223) {
            int32_t index_primexp_44286 = sext_i64_i32(j_44218);
            int32_t tile_elem_44225 = index_primexp_44286;
            
            pre_44224 = tile_elem_44225;
        } else {
            pre_44224 = 0;
        }
        ((__local int32_t *) mem_45269)[ltid_44208] = pre_44224;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_44229 = sext_i32_i64(ltid_pre_46541);
        int32_t ltid_flat_44230 = local_tid_46537;
        int64_t gtid_44237 = binop_x_44084 + ltid_44229;
        float acc_44240 = accs_mem_45266[(int64_t) 0];
        bool cond_44241 = slt64(gtid_44237, m_27772);
        float acc_44242;
        
        if (cond_44241) {
            int32_t x_44238 = mem_45253[(int64_t) 0];
            int32_t x_44239 = mem_45255[(int64_t) 0];
            float x_44243;
            float redout_44333 = acc_44240;
            
            for (int64_t i_44334 = 0; i_44334 < residual_input_44206;
                 i_44334++) {
                int32_t x_44247 = ((__local int32_t *) mem_45269)[i_44334];
                bool cond_44248 = slt32(x_44247, x_44239);
                float defunc_0_f_res_44249;
                
                if (cond_44248) {
                    int32_t x_44250 = add32(x_44238, x_44247);
                    int32_t x_44251 = sub32(x_44250, x_44239);
                    int32_t i_44252 = add32(1, x_44251);
                    int64_t i_44253 = sext_i32_i64(i_44252);
                    bool x_44254 = sle64((int64_t) 0, i_44253);
                    bool y_44255 = slt64(i_44253, N_27771);
                    bool bounds_check_44256 = x_44254 && y_44255;
                    bool index_certs_44257;
                    
                    if (!bounds_check_44256) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          52) == -1) {
                                global_failure_args[0] = i_44253;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_5;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44258 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_44237 *
                                                                                              N_27771 +
                                                                                              i_44253];
                    
                    defunc_0_f_res_44249 = defunc_0_f_res_t_res_44258;
                } else {
                    defunc_0_f_res_44249 = 0.0F;
                }
                
                float defunc_1_op_res_44246 = defunc_0_f_res_44249 +
                      redout_44333;
                float redout_tmp_46545 = defunc_1_op_res_44246;
                
                redout_44333 = redout_tmp_46545;
            }
            x_44243 = redout_44333;
            acc_44242 = x_44243;
        } else {
            acc_44242 = acc_44240;
        }
        mem_45272[(int64_t) 0] = acc_44242;
        
      error_5:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45520[(int64_t) 0] = mem_45272[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46537) + segmap_group_sizze_32782 *
              sext_i32_i64(group_tid_46538), m_27772)) {
        ((__global float *) mem_45275)[sext_i32_i64(local_tid_46537) +
                                       segmap_group_sizze_32782 *
                                       sext_i32_i64(group_tid_46538)] =
            mem_45520[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_32782
}
__kernel void mainDetailedzisegred_large_30429(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45805_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45803_backing_aligned_1,
                                               int64_t N_27771,
                                               int64_t i32_res_27781,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_30568,
                                               int64_t groups_per_segment_45789,
                                               int64_t elements_per_thread_45790,
                                               int64_t virt_num_groups_45791,
                                               int64_t threads_per_segment_45793,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *binop_p_mem_44390,
                                               __global
                                               unsigned char *mem_44531,
                                               __global
                                               unsigned char *mem_44536,
                                               __global
                                               unsigned char *group_res_arr_mem_45794,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45796)
{
    #define segred_group_sizze_30567 (mainDetailedzisegred_group_sizze_30423)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45805_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45805_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45803_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45803_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45798;
    int32_t local_tid_45799;
    int64_t group_sizze_45802;
    int32_t wave_sizze_45801;
    int32_t group_tid_45800;
    
    global_tid_45798 = get_global_id(0);
    local_tid_45799 = get_local_id(0);
    group_sizze_45802 = get_local_size(0);
    wave_sizze_45801 = LOCKSTEP_WIDTH;
    group_tid_45800 = get_group_id(0);
    
    int32_t phys_tid_30429;
    
    phys_tid_30429 = global_tid_45798;
    
    __local char *red_arr_mem_45803;
    
    red_arr_mem_45803 = (__local char *) red_arr_mem_45803_backing_0;
    
    __local char *sync_arr_mem_45805;
    
    sync_arr_mem_45805 = (__local char *) sync_arr_mem_45805_backing_1;
    
    int32_t phys_group_id_45807;
    
    phys_group_id_45807 = get_group_id(0);
    for (int32_t i_45808 = 0; i_45808 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45791) - phys_group_id_45807,
                   sext_i64_i32(num_groups_30568)); i_45808++) {
        int32_t virt_group_id_45809 = phys_group_id_45807 + i_45808 *
                sext_i64_i32(num_groups_30568);
        int32_t flat_segment_id_45810 = squot32(virt_group_id_45809,
                                                sext_i64_i32(groups_per_segment_45789));
        int64_t global_tid_45811 = srem64(sext_i32_i64(virt_group_id_45809) *
                                          segred_group_sizze_30567 +
                                          sext_i32_i64(local_tid_45799),
                                          segred_group_sizze_30567 *
                                          groups_per_segment_45789);
        int64_t gtid_30416 = squot64(sext_i32_i64(flat_segment_id_45810),
                                     i32_res_27787 * i32_res_27787);
        int64_t gtid_30417 = squot64(sext_i32_i64(flat_segment_id_45810) -
                                     squot64(sext_i32_i64(flat_segment_id_45810),
                                             i32_res_27787 * i32_res_27787) *
                                     (i32_res_27787 * i32_res_27787),
                                     i32_res_27787);
        int64_t gtid_30418 = sext_i32_i64(flat_segment_id_45810) -
                squot64(sext_i32_i64(flat_segment_id_45810), i32_res_27787 *
                        i32_res_27787) * (i32_res_27787 * i32_res_27787) -
                squot64(sext_i32_i64(flat_segment_id_45810) -
                        squot64(sext_i32_i64(flat_segment_id_45810),
                                i32_res_27787 * i32_res_27787) *
                        (i32_res_27787 * i32_res_27787), i32_res_27787) *
                i32_res_27787;
        int64_t gtid_30428;
        float x_acc_45812;
        int64_t chunk_sizze_45813;
        
        chunk_sizze_45813 = smin64(elements_per_thread_45790,
                                   sdiv_up64(i32_res_27781 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45811)),
                                             threads_per_segment_45793));
        
        float x_30571;
        float x_30572;
        
        // neutral-initialise the accumulators
        {
            x_acc_45812 = 0.0F;
        }
        for (int64_t i_45817 = 0; i_45817 < chunk_sizze_45813; i_45817++) {
            gtid_30428 = sext_i32_i64(sext_i64_i32(global_tid_45811)) +
                threads_per_segment_45793 * i_45817;
            // apply map function
            {
                float x_30577 = ((__global
                                  float *) images_mem_44381)[gtid_30416 *
                                                             N_27771 +
                                                             gtid_30428];
                float x_30578 = ((__global
                                  float *) binop_p_mem_44390)[gtid_30417 *
                                                              N_27771 +
                                                              gtid_30428];
                float x_30579 = ((__global float *) mem_44531)[gtid_30418 *
                                                               N_27771 +
                                                               gtid_30428];
                float x_30580 = x_30578 * x_30579;
                bool isnan_res_30581;
                
                isnan_res_30581 = futrts_isnan32(x_30577);
                
                float y_30582;
                
                if (isnan_res_30581) {
                    y_30582 = 0.0F;
                } else {
                    y_30582 = 1.0F;
                }
                
                float defunc_2_f_res_30583 = x_30580 * y_30582;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30571 = x_acc_45812;
                }
                // load new values
                {
                    x_30572 = defunc_2_f_res_30583;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30573 = x_30571 + x_30572;
                    
                    // store in accumulator
                    {
                        x_acc_45812 = defunc_1_op_res_30573;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30571 = x_acc_45812;
            ((__local
              float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799)] =
                x_30571;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45818;
        int32_t skip_waves_45819;
        
        skip_waves_45819 = 1;
        
        float x_45814;
        float x_45815;
        
        offset_45818 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45799,
                      sext_i64_i32(segred_group_sizze_30567))) {
                x_45814 = ((__local
                            float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799 +
                                                        offset_45818)];
            }
        }
        offset_45818 = 1;
        while (slt32(offset_45818, wave_sizze_45801)) {
            if (slt32(local_tid_45799 + offset_45818,
                      sext_i64_i32(segred_group_sizze_30567)) &&
                ((local_tid_45799 - squot32(local_tid_45799, wave_sizze_45801) *
                  wave_sizze_45801) & (2 * offset_45818 - 1)) == 0) {
                // read array element
                {
                    x_45815 = ((volatile __local
                                float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799 +
                                                            offset_45818)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45816 = x_45814 + x_45815;
                    
                    x_45814 = defunc_1_op_res_45816;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799)] =
                        x_45814;
                }
            }
            offset_45818 *= 2;
        }
        while (slt32(skip_waves_45819,
                     squot32(sext_i64_i32(segred_group_sizze_30567) +
                             wave_sizze_45801 - 1, wave_sizze_45801))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45818 = skip_waves_45819 * wave_sizze_45801;
            if (slt32(local_tid_45799 + offset_45818,
                      sext_i64_i32(segred_group_sizze_30567)) &&
                ((local_tid_45799 - squot32(local_tid_45799, wave_sizze_45801) *
                  wave_sizze_45801) == 0 && (squot32(local_tid_45799,
                                                     wave_sizze_45801) & (2 *
                                                                          skip_waves_45819 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45815 = ((__local
                                float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799 +
                                                            offset_45818)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45816 = x_45814 + x_45815;
                    
                    x_45814 = defunc_1_op_res_45816;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799)] =
                        x_45814;
                }
            }
            skip_waves_45819 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45799) == (int64_t) 0) {
                x_acc_45812 = x_45814;
            }
        }
        if (groups_per_segment_45789 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45799 == 0) {
                    ((__global float *) mem_44536)[gtid_30416 * (i32_res_27787 *
                                                                 i32_res_27787) +
                                                   gtid_30417 * i32_res_27787 +
                                                   gtid_30418] = x_acc_45812;
                }
            }
        } else {
            int32_t old_counter_45820;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45799 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45794)[sext_i32_i64(virt_group_id_45809) *
                                                        segred_group_sizze_30567] =
                        x_acc_45812;
                    mem_fence_global();
                    old_counter_45820 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45796)[sext_i32_i64(srem32(flat_segment_id_45810,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45805)[(int64_t) 0] =
                        old_counter_45820 == groups_per_segment_45789 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45821;
            
            is_last_group_45821 = ((__local
                                    bool *) sync_arr_mem_45805)[(int64_t) 0];
            if (is_last_group_45821) {
                if (local_tid_45799 == 0) {
                    old_counter_45820 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45796)[sext_i32_i64(srem32(flat_segment_id_45810,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45789));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45822 =
                            sdiv_up64(groups_per_segment_45789,
                                      segred_group_sizze_30567);
                    
                    x_30571 = 0.0F;
                    for (int64_t i_45823 = 0; i_45823 < read_per_thread_45822;
                         i_45823++) {
                        int64_t group_res_id_45824 =
                                sext_i32_i64(local_tid_45799) *
                                read_per_thread_45822 + i_45823;
                        int64_t index_of_group_res_45825 =
                                sext_i32_i64(flat_segment_id_45810) *
                                groups_per_segment_45789 + group_res_id_45824;
                        
                        if (slt64(group_res_id_45824,
                                  groups_per_segment_45789)) {
                            x_30572 = ((__global
                                        float *) group_res_arr_mem_45794)[index_of_group_res_45825 *
                                                                          segred_group_sizze_30567];
                            
                            float defunc_1_op_res_30573;
                            
                            defunc_1_op_res_30573 = x_30571 + x_30572;
                            x_30571 = defunc_1_op_res_30573;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799)] =
                    x_30571;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45826;
                    int32_t skip_waves_45827;
                    
                    skip_waves_45827 = 1;
                    
                    float x_45814;
                    float x_45815;
                    
                    offset_45826 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45799,
                                  sext_i64_i32(segred_group_sizze_30567))) {
                            x_45814 = ((__local
                                        float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799 +
                                                                    offset_45826)];
                        }
                    }
                    offset_45826 = 1;
                    while (slt32(offset_45826, wave_sizze_45801)) {
                        if (slt32(local_tid_45799 + offset_45826,
                                  sext_i64_i32(segred_group_sizze_30567)) &&
                            ((local_tid_45799 - squot32(local_tid_45799,
                                                        wave_sizze_45801) *
                              wave_sizze_45801) & (2 * offset_45826 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45815 = ((volatile __local
                                            float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799 +
                                                                        offset_45826)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45816 = x_45814 + x_45815;
                                
                                x_45814 = defunc_1_op_res_45816;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799)] =
                                    x_45814;
                            }
                        }
                        offset_45826 *= 2;
                    }
                    while (slt32(skip_waves_45827,
                                 squot32(sext_i64_i32(segred_group_sizze_30567) +
                                         wave_sizze_45801 - 1,
                                         wave_sizze_45801))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45826 = skip_waves_45827 * wave_sizze_45801;
                        if (slt32(local_tid_45799 + offset_45826,
                                  sext_i64_i32(segred_group_sizze_30567)) &&
                            ((local_tid_45799 - squot32(local_tid_45799,
                                                        wave_sizze_45801) *
                              wave_sizze_45801) == 0 &&
                             (squot32(local_tid_45799, wave_sizze_45801) & (2 *
                                                                            skip_waves_45827 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45815 = ((__local
                                            float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799 +
                                                                        offset_45826)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45816 = x_45814 + x_45815;
                                
                                x_45814 = defunc_1_op_res_45816;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45803)[sext_i32_i64(local_tid_45799)] =
                                    x_45814;
                            }
                        }
                        skip_waves_45827 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45799 == 0) {
                            ((__global float *) mem_44536)[gtid_30416 *
                                                           (i32_res_27787 *
                                                            i32_res_27787) +
                                                           gtid_30417 *
                                                           i32_res_27787 +
                                                           gtid_30418] =
                                x_45814;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30567
}
__kernel void mainDetailedzisegred_large_31780(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_46002_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46000_backing_aligned_1,
                                               int64_t N_27771,
                                               int64_t i32_res_27781,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_31833,
                                               int64_t groups_per_segment_45986,
                                               int64_t elements_per_thread_45987,
                                               int64_t virt_num_groups_45988,
                                               int64_t threads_per_segment_45990,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *binop_p_mem_44390,
                                               __global
                                               unsigned char *mem_44844,
                                               __global
                                               unsigned char *group_res_arr_mem_45991,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45993)
{
    #define segred_group_sizze_31832 (mainDetailedzisegred_group_sizze_31774)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46002_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46002_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46000_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46000_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45995;
    int32_t local_tid_45996;
    int64_t group_sizze_45999;
    int32_t wave_sizze_45998;
    int32_t group_tid_45997;
    
    global_tid_45995 = get_global_id(0);
    local_tid_45996 = get_local_id(0);
    group_sizze_45999 = get_local_size(0);
    wave_sizze_45998 = LOCKSTEP_WIDTH;
    group_tid_45997 = get_group_id(0);
    
    int32_t phys_tid_31780;
    
    phys_tid_31780 = global_tid_45995;
    
    __local char *red_arr_mem_46000;
    
    red_arr_mem_46000 = (__local char *) red_arr_mem_46000_backing_0;
    
    __local char *sync_arr_mem_46002;
    
    sync_arr_mem_46002 = (__local char *) sync_arr_mem_46002_backing_1;
    
    int32_t phys_group_id_46004;
    
    phys_group_id_46004 = get_group_id(0);
    for (int32_t i_46005 = 0; i_46005 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45988) - phys_group_id_46004,
                   sext_i64_i32(num_groups_31833)); i_46005++) {
        int32_t virt_group_id_46006 = phys_group_id_46004 + i_46005 *
                sext_i64_i32(num_groups_31833);
        int32_t flat_segment_id_46007 = squot32(virt_group_id_46006,
                                                sext_i64_i32(groups_per_segment_45986));
        int64_t global_tid_46008 = srem64(sext_i32_i64(virt_group_id_46006) *
                                          segred_group_sizze_31832 +
                                          sext_i32_i64(local_tid_45996),
                                          segred_group_sizze_31832 *
                                          groups_per_segment_45986);
        int64_t gtid_31769 = squot64(sext_i32_i64(flat_segment_id_46007),
                                     i32_res_27787);
        int64_t gtid_31770 = sext_i32_i64(flat_segment_id_46007) -
                squot64(sext_i32_i64(flat_segment_id_46007), i32_res_27787) *
                i32_res_27787;
        int64_t gtid_31779;
        float x_acc_46009;
        int64_t chunk_sizze_46010;
        
        chunk_sizze_46010 = smin64(elements_per_thread_45987,
                                   sdiv_up64(i32_res_27781 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46008)),
                                             threads_per_segment_45990));
        
        float x_31836;
        float x_31837;
        
        // neutral-initialise the accumulators
        {
            x_acc_46009 = 0.0F;
        }
        for (int64_t i_46014 = 0; i_46014 < chunk_sizze_46010; i_46014++) {
            gtid_31779 = sext_i32_i64(sext_i64_i32(global_tid_46008)) +
                threads_per_segment_45990 * i_46014;
            // apply map function
            {
                float x_31842 = ((__global
                                  float *) images_mem_44381)[gtid_31769 *
                                                             N_27771 +
                                                             gtid_31779];
                bool isnan_res_31843;
                
                isnan_res_31843 = futrts_isnan32(x_31842);
                
                float defunc_1_f_res_31844;
                
                if (isnan_res_31843) {
                    defunc_1_f_res_31844 = 0.0F;
                } else {
                    float x_31841 = ((__global
                                      float *) binop_p_mem_44390)[gtid_31770 *
                                                                  N_27771 +
                                                                  gtid_31779];
                    float defunc_1_f_res_f_res_31845 = x_31841 * x_31842;
                    
                    defunc_1_f_res_31844 = defunc_1_f_res_f_res_31845;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31836 = x_acc_46009;
                }
                // load new values
                {
                    x_31837 = defunc_1_f_res_31844;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31838 = x_31836 + x_31837;
                    
                    // store in accumulator
                    {
                        x_acc_46009 = defunc_1_op_res_31838;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31836 = x_acc_46009;
            ((__local
              float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996)] =
                x_31836;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46015;
        int32_t skip_waves_46016;
        
        skip_waves_46016 = 1;
        
        float x_46011;
        float x_46012;
        
        offset_46015 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45996,
                      sext_i64_i32(segred_group_sizze_31832))) {
                x_46011 = ((__local
                            float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996 +
                                                        offset_46015)];
            }
        }
        offset_46015 = 1;
        while (slt32(offset_46015, wave_sizze_45998)) {
            if (slt32(local_tid_45996 + offset_46015,
                      sext_i64_i32(segred_group_sizze_31832)) &&
                ((local_tid_45996 - squot32(local_tid_45996, wave_sizze_45998) *
                  wave_sizze_45998) & (2 * offset_46015 - 1)) == 0) {
                // read array element
                {
                    x_46012 = ((volatile __local
                                float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996 +
                                                            offset_46015)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46013 = x_46011 + x_46012;
                    
                    x_46011 = defunc_1_op_res_46013;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996)] =
                        x_46011;
                }
            }
            offset_46015 *= 2;
        }
        while (slt32(skip_waves_46016,
                     squot32(sext_i64_i32(segred_group_sizze_31832) +
                             wave_sizze_45998 - 1, wave_sizze_45998))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46015 = skip_waves_46016 * wave_sizze_45998;
            if (slt32(local_tid_45996 + offset_46015,
                      sext_i64_i32(segred_group_sizze_31832)) &&
                ((local_tid_45996 - squot32(local_tid_45996, wave_sizze_45998) *
                  wave_sizze_45998) == 0 && (squot32(local_tid_45996,
                                                     wave_sizze_45998) & (2 *
                                                                          skip_waves_46016 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46012 = ((__local
                                float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996 +
                                                            offset_46015)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46013 = x_46011 + x_46012;
                    
                    x_46011 = defunc_1_op_res_46013;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996)] =
                        x_46011;
                }
            }
            skip_waves_46016 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45996) == (int64_t) 0) {
                x_acc_46009 = x_46011;
            }
        }
        if (groups_per_segment_45986 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45996 == 0) {
                    ((__global float *) mem_44844)[gtid_31769 * i32_res_27787 +
                                                   gtid_31770] = x_acc_46009;
                }
            }
        } else {
            int32_t old_counter_46017;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45996 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45991)[sext_i32_i64(virt_group_id_46006) *
                                                        segred_group_sizze_31832] =
                        x_acc_46009;
                    mem_fence_global();
                    old_counter_46017 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45993)[sext_i32_i64(srem32(flat_segment_id_46007,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46002)[(int64_t) 0] =
                        old_counter_46017 == groups_per_segment_45986 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46018;
            
            is_last_group_46018 = ((__local
                                    bool *) sync_arr_mem_46002)[(int64_t) 0];
            if (is_last_group_46018) {
                if (local_tid_45996 == 0) {
                    old_counter_46017 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45993)[sext_i32_i64(srem32(flat_segment_id_46007,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45986));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46019 =
                            sdiv_up64(groups_per_segment_45986,
                                      segred_group_sizze_31832);
                    
                    x_31836 = 0.0F;
                    for (int64_t i_46020 = 0; i_46020 < read_per_thread_46019;
                         i_46020++) {
                        int64_t group_res_id_46021 =
                                sext_i32_i64(local_tid_45996) *
                                read_per_thread_46019 + i_46020;
                        int64_t index_of_group_res_46022 =
                                sext_i32_i64(flat_segment_id_46007) *
                                groups_per_segment_45986 + group_res_id_46021;
                        
                        if (slt64(group_res_id_46021,
                                  groups_per_segment_45986)) {
                            x_31837 = ((__global
                                        float *) group_res_arr_mem_45991)[index_of_group_res_46022 *
                                                                          segred_group_sizze_31832];
                            
                            float defunc_1_op_res_31838;
                            
                            defunc_1_op_res_31838 = x_31836 + x_31837;
                            x_31836 = defunc_1_op_res_31838;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996)] =
                    x_31836;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46023;
                    int32_t skip_waves_46024;
                    
                    skip_waves_46024 = 1;
                    
                    float x_46011;
                    float x_46012;
                    
                    offset_46023 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45996,
                                  sext_i64_i32(segred_group_sizze_31832))) {
                            x_46011 = ((__local
                                        float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996 +
                                                                    offset_46023)];
                        }
                    }
                    offset_46023 = 1;
                    while (slt32(offset_46023, wave_sizze_45998)) {
                        if (slt32(local_tid_45996 + offset_46023,
                                  sext_i64_i32(segred_group_sizze_31832)) &&
                            ((local_tid_45996 - squot32(local_tid_45996,
                                                        wave_sizze_45998) *
                              wave_sizze_45998) & (2 * offset_46023 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46012 = ((volatile __local
                                            float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996 +
                                                                        offset_46023)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46013 = x_46011 + x_46012;
                                
                                x_46011 = defunc_1_op_res_46013;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996)] =
                                    x_46011;
                            }
                        }
                        offset_46023 *= 2;
                    }
                    while (slt32(skip_waves_46024,
                                 squot32(sext_i64_i32(segred_group_sizze_31832) +
                                         wave_sizze_45998 - 1,
                                         wave_sizze_45998))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46023 = skip_waves_46024 * wave_sizze_45998;
                        if (slt32(local_tid_45996 + offset_46023,
                                  sext_i64_i32(segred_group_sizze_31832)) &&
                            ((local_tid_45996 - squot32(local_tid_45996,
                                                        wave_sizze_45998) *
                              wave_sizze_45998) == 0 &&
                             (squot32(local_tid_45996, wave_sizze_45998) & (2 *
                                                                            skip_waves_46024 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46012 = ((__local
                                            float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996 +
                                                                        offset_46023)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46013 = x_46011 + x_46012;
                                
                                x_46011 = defunc_1_op_res_46013;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46000)[sext_i32_i64(local_tid_45996)] =
                                    x_46011;
                            }
                        }
                        skip_waves_46024 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45996 == 0) {
                            ((__global float *) mem_44844)[gtid_31769 *
                                                           i32_res_27787 +
                                                           gtid_31770] =
                                x_46011;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31832
}
__kernel void mainDetailedzisegred_large_31917(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_46090_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46088_backing_aligned_1,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_31966,
                                               int64_t groups_per_segment_46074,
                                               int64_t elements_per_thread_46075,
                                               int64_t virt_num_groups_46076,
                                               int64_t threads_per_segment_46078,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44629,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44850,
                                               __global
                                               unsigned char *mem_44910,
                                               __global
                                               unsigned char *group_res_arr_mem_46079,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46081)
{
    #define segred_group_sizze_31965 (mainDetailedzisegred_group_sizze_31911)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46090_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46090_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46088_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46088_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46083;
    int32_t local_tid_46084;
    int64_t group_sizze_46087;
    int32_t wave_sizze_46086;
    int32_t group_tid_46085;
    
    global_tid_46083 = get_global_id(0);
    local_tid_46084 = get_local_id(0);
    group_sizze_46087 = get_local_size(0);
    wave_sizze_46086 = LOCKSTEP_WIDTH;
    group_tid_46085 = get_group_id(0);
    
    int32_t phys_tid_31917;
    
    phys_tid_31917 = global_tid_46083;
    
    __local char *red_arr_mem_46088;
    
    red_arr_mem_46088 = (__local char *) red_arr_mem_46088_backing_0;
    
    __local char *sync_arr_mem_46090;
    
    sync_arr_mem_46090 = (__local char *) sync_arr_mem_46090_backing_1;
    
    int32_t phys_group_id_46092;
    
    phys_group_id_46092 = get_group_id(0);
    for (int32_t i_46093 = 0; i_46093 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46076) - phys_group_id_46092,
                   sext_i64_i32(num_groups_31966)); i_46093++) {
        int32_t virt_group_id_46094 = phys_group_id_46092 + i_46093 *
                sext_i64_i32(num_groups_31966);
        int32_t flat_segment_id_46095 = squot32(virt_group_id_46094,
                                                sext_i64_i32(groups_per_segment_46074));
        int64_t global_tid_46096 = srem64(sext_i32_i64(virt_group_id_46094) *
                                          segred_group_sizze_31965 +
                                          sext_i32_i64(local_tid_46084),
                                          segred_group_sizze_31965 *
                                          groups_per_segment_46074);
        int64_t gtid_31906 = squot64(sext_i32_i64(flat_segment_id_46095),
                                     i32_res_27787);
        int64_t gtid_31907 = sext_i32_i64(flat_segment_id_46095) -
                squot64(sext_i32_i64(flat_segment_id_46095), i32_res_27787) *
                i32_res_27787;
        int64_t gtid_31916;
        float x_acc_46097;
        int64_t chunk_sizze_46098;
        
        chunk_sizze_46098 = smin64(elements_per_thread_46075,
                                   sdiv_up64(i32_res_27787 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46096)),
                                             threads_per_segment_46078));
        
        float x_31969;
        float x_31970;
        
        // neutral-initialise the accumulators
        {
            x_acc_46097 = 0.0F;
        }
        for (int64_t i_46102 = 0; i_46102 < chunk_sizze_46098; i_46102++) {
            gtid_31916 = sext_i32_i64(sext_i64_i32(global_tid_46096)) +
                threads_per_segment_46078 * i_46102;
            // apply map function
            {
                float x_31975 = ((__global
                                  float *) defunc_3_map_res_mem_44850)[gtid_31906 *
                                                                       i32_res_27787 +
                                                                       gtid_31916];
                float x_31976 = ((__global
                                  float *) defunc_3_map_res_mem_44629)[gtid_31906 *
                                                                       (i32_res_27787 *
                                                                        i32_res_27787) +
                                                                       gtid_31907 *
                                                                       i32_res_27787 +
                                                                       gtid_31916];
                float defunc_1_f_res_31977 = x_31975 * x_31976;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31969 = x_acc_46097;
                }
                // load new values
                {
                    x_31970 = defunc_1_f_res_31977;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31971 = x_31969 + x_31970;
                    
                    // store in accumulator
                    {
                        x_acc_46097 = defunc_1_op_res_31971;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31969 = x_acc_46097;
            ((__local
              float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084)] =
                x_31969;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46103;
        int32_t skip_waves_46104;
        
        skip_waves_46104 = 1;
        
        float x_46099;
        float x_46100;
        
        offset_46103 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46084,
                      sext_i64_i32(segred_group_sizze_31965))) {
                x_46099 = ((__local
                            float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084 +
                                                        offset_46103)];
            }
        }
        offset_46103 = 1;
        while (slt32(offset_46103, wave_sizze_46086)) {
            if (slt32(local_tid_46084 + offset_46103,
                      sext_i64_i32(segred_group_sizze_31965)) &&
                ((local_tid_46084 - squot32(local_tid_46084, wave_sizze_46086) *
                  wave_sizze_46086) & (2 * offset_46103 - 1)) == 0) {
                // read array element
                {
                    x_46100 = ((volatile __local
                                float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084 +
                                                            offset_46103)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46101 = x_46099 + x_46100;
                    
                    x_46099 = defunc_1_op_res_46101;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084)] =
                        x_46099;
                }
            }
            offset_46103 *= 2;
        }
        while (slt32(skip_waves_46104,
                     squot32(sext_i64_i32(segred_group_sizze_31965) +
                             wave_sizze_46086 - 1, wave_sizze_46086))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46103 = skip_waves_46104 * wave_sizze_46086;
            if (slt32(local_tid_46084 + offset_46103,
                      sext_i64_i32(segred_group_sizze_31965)) &&
                ((local_tid_46084 - squot32(local_tid_46084, wave_sizze_46086) *
                  wave_sizze_46086) == 0 && (squot32(local_tid_46084,
                                                     wave_sizze_46086) & (2 *
                                                                          skip_waves_46104 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46100 = ((__local
                                float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084 +
                                                            offset_46103)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46101 = x_46099 + x_46100;
                    
                    x_46099 = defunc_1_op_res_46101;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084)] =
                        x_46099;
                }
            }
            skip_waves_46104 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46084) == (int64_t) 0) {
                x_acc_46097 = x_46099;
            }
        }
        if (groups_per_segment_46074 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46084 == 0) {
                    ((__global float *) mem_44910)[gtid_31906 * i32_res_27787 +
                                                   gtid_31907] = x_acc_46097;
                }
            }
        } else {
            int32_t old_counter_46105;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46084 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46079)[sext_i32_i64(virt_group_id_46094) *
                                                        segred_group_sizze_31965] =
                        x_acc_46097;
                    mem_fence_global();
                    old_counter_46105 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46081)[sext_i32_i64(srem32(flat_segment_id_46095,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46090)[(int64_t) 0] =
                        old_counter_46105 == groups_per_segment_46074 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46106;
            
            is_last_group_46106 = ((__local
                                    bool *) sync_arr_mem_46090)[(int64_t) 0];
            if (is_last_group_46106) {
                if (local_tid_46084 == 0) {
                    old_counter_46105 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46081)[sext_i32_i64(srem32(flat_segment_id_46095,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46074));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46107 =
                            sdiv_up64(groups_per_segment_46074,
                                      segred_group_sizze_31965);
                    
                    x_31969 = 0.0F;
                    for (int64_t i_46108 = 0; i_46108 < read_per_thread_46107;
                         i_46108++) {
                        int64_t group_res_id_46109 =
                                sext_i32_i64(local_tid_46084) *
                                read_per_thread_46107 + i_46108;
                        int64_t index_of_group_res_46110 =
                                sext_i32_i64(flat_segment_id_46095) *
                                groups_per_segment_46074 + group_res_id_46109;
                        
                        if (slt64(group_res_id_46109,
                                  groups_per_segment_46074)) {
                            x_31970 = ((__global
                                        float *) group_res_arr_mem_46079)[index_of_group_res_46110 *
                                                                          segred_group_sizze_31965];
                            
                            float defunc_1_op_res_31971;
                            
                            defunc_1_op_res_31971 = x_31969 + x_31970;
                            x_31969 = defunc_1_op_res_31971;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084)] =
                    x_31969;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46111;
                    int32_t skip_waves_46112;
                    
                    skip_waves_46112 = 1;
                    
                    float x_46099;
                    float x_46100;
                    
                    offset_46111 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46084,
                                  sext_i64_i32(segred_group_sizze_31965))) {
                            x_46099 = ((__local
                                        float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084 +
                                                                    offset_46111)];
                        }
                    }
                    offset_46111 = 1;
                    while (slt32(offset_46111, wave_sizze_46086)) {
                        if (slt32(local_tid_46084 + offset_46111,
                                  sext_i64_i32(segred_group_sizze_31965)) &&
                            ((local_tid_46084 - squot32(local_tid_46084,
                                                        wave_sizze_46086) *
                              wave_sizze_46086) & (2 * offset_46111 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46100 = ((volatile __local
                                            float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084 +
                                                                        offset_46111)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46101 = x_46099 + x_46100;
                                
                                x_46099 = defunc_1_op_res_46101;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084)] =
                                    x_46099;
                            }
                        }
                        offset_46111 *= 2;
                    }
                    while (slt32(skip_waves_46112,
                                 squot32(sext_i64_i32(segred_group_sizze_31965) +
                                         wave_sizze_46086 - 1,
                                         wave_sizze_46086))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46111 = skip_waves_46112 * wave_sizze_46086;
                        if (slt32(local_tid_46084 + offset_46111,
                                  sext_i64_i32(segred_group_sizze_31965)) &&
                            ((local_tid_46084 - squot32(local_tid_46084,
                                                        wave_sizze_46086) *
                              wave_sizze_46086) == 0 &&
                             (squot32(local_tid_46084, wave_sizze_46086) & (2 *
                                                                            skip_waves_46112 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46100 = ((__local
                                            float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084 +
                                                                        offset_46111)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46101 = x_46099 + x_46100;
                                
                                x_46099 = defunc_1_op_res_46101;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46088)[sext_i32_i64(local_tid_46084)] =
                                    x_46099;
                            }
                        }
                        skip_waves_46112 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46084 == 0) {
                            ((__global float *) mem_44910)[gtid_31906 *
                                                           i32_res_27787 +
                                                           gtid_31907] =
                                x_46099;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31965
}
__kernel void mainDetailedzisegred_large_32047(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_46222_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46220_backing_aligned_1,
                                               int64_t N_27771,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_32094,
                                               int64_t groups_per_segment_46206,
                                               int64_t elements_per_thread_46207,
                                               int64_t virt_num_groups_46208,
                                               int64_t threads_per_segment_46210,
                                               __global
                                               unsigned char *mem_44397,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44916,
                                               __global
                                               unsigned char *mem_45134,
                                               __global
                                               unsigned char *group_res_arr_mem_46211,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46213)
{
    #define segred_group_sizze_32093 (mainDetailedzisegred_group_sizze_32041)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46222_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46222_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46220_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46220_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46215;
    int32_t local_tid_46216;
    int64_t group_sizze_46219;
    int32_t wave_sizze_46218;
    int32_t group_tid_46217;
    
    global_tid_46215 = get_global_id(0);
    local_tid_46216 = get_local_id(0);
    group_sizze_46219 = get_local_size(0);
    wave_sizze_46218 = LOCKSTEP_WIDTH;
    group_tid_46217 = get_group_id(0);
    
    int32_t phys_tid_32047;
    
    phys_tid_32047 = global_tid_46215;
    
    __local char *red_arr_mem_46220;
    
    red_arr_mem_46220 = (__local char *) red_arr_mem_46220_backing_0;
    
    __local char *sync_arr_mem_46222;
    
    sync_arr_mem_46222 = (__local char *) sync_arr_mem_46222_backing_1;
    
    int32_t phys_group_id_46224;
    
    phys_group_id_46224 = get_group_id(0);
    for (int32_t i_46225 = 0; i_46225 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46208) - phys_group_id_46224,
                   sext_i64_i32(num_groups_32094)); i_46225++) {
        int32_t virt_group_id_46226 = phys_group_id_46224 + i_46225 *
                sext_i64_i32(num_groups_32094);
        int32_t flat_segment_id_46227 = squot32(virt_group_id_46226,
                                                sext_i64_i32(groups_per_segment_46206));
        int64_t global_tid_46228 = srem64(sext_i32_i64(virt_group_id_46226) *
                                          segred_group_sizze_32093 +
                                          sext_i32_i64(local_tid_46216),
                                          segred_group_sizze_32093 *
                                          groups_per_segment_46206);
        int64_t gtid_32036 = squot64(sext_i32_i64(flat_segment_id_46227),
                                     N_27771);
        int64_t gtid_32037 = sext_i32_i64(flat_segment_id_46227) -
                squot64(sext_i32_i64(flat_segment_id_46227), N_27771) * N_27771;
        int64_t gtid_32046;
        float x_acc_46229;
        int64_t chunk_sizze_46230;
        
        chunk_sizze_46230 = smin64(elements_per_thread_46207,
                                   sdiv_up64(i32_res_27787 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46228)),
                                             threads_per_segment_46210));
        
        float x_32097;
        float x_32098;
        
        // neutral-initialise the accumulators
        {
            x_acc_46229 = 0.0F;
        }
        for (int64_t i_46234 = 0; i_46234 < chunk_sizze_46230; i_46234++) {
            gtid_32046 = sext_i32_i64(sext_i64_i32(global_tid_46228)) +
                threads_per_segment_46210 * i_46234;
            // apply map function
            {
                float x_32102 = ((__global
                                  float *) defunc_4_map_res_mem_44916)[gtid_32036 *
                                                                       i32_res_27787 +
                                                                       gtid_32046];
                float x_32103 = ((__global float *) mem_44397)[gtid_32037 *
                                                               i32_res_27787 +
                                                               gtid_32046];
                float defunc_1_f_res_32104 = x_32102 * x_32103;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32097 = x_acc_46229;
                }
                // load new values
                {
                    x_32098 = defunc_1_f_res_32104;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32099 = x_32097 + x_32098;
                    
                    // store in accumulator
                    {
                        x_acc_46229 = defunc_1_op_res_32099;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32097 = x_acc_46229;
            ((__local
              float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216)] =
                x_32097;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46235;
        int32_t skip_waves_46236;
        
        skip_waves_46236 = 1;
        
        float x_46231;
        float x_46232;
        
        offset_46235 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46216,
                      sext_i64_i32(segred_group_sizze_32093))) {
                x_46231 = ((__local
                            float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216 +
                                                        offset_46235)];
            }
        }
        offset_46235 = 1;
        while (slt32(offset_46235, wave_sizze_46218)) {
            if (slt32(local_tid_46216 + offset_46235,
                      sext_i64_i32(segred_group_sizze_32093)) &&
                ((local_tid_46216 - squot32(local_tid_46216, wave_sizze_46218) *
                  wave_sizze_46218) & (2 * offset_46235 - 1)) == 0) {
                // read array element
                {
                    x_46232 = ((volatile __local
                                float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216 +
                                                            offset_46235)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46233 = x_46231 + x_46232;
                    
                    x_46231 = defunc_1_op_res_46233;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216)] =
                        x_46231;
                }
            }
            offset_46235 *= 2;
        }
        while (slt32(skip_waves_46236,
                     squot32(sext_i64_i32(segred_group_sizze_32093) +
                             wave_sizze_46218 - 1, wave_sizze_46218))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46235 = skip_waves_46236 * wave_sizze_46218;
            if (slt32(local_tid_46216 + offset_46235,
                      sext_i64_i32(segred_group_sizze_32093)) &&
                ((local_tid_46216 - squot32(local_tid_46216, wave_sizze_46218) *
                  wave_sizze_46218) == 0 && (squot32(local_tid_46216,
                                                     wave_sizze_46218) & (2 *
                                                                          skip_waves_46236 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46232 = ((__local
                                float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216 +
                                                            offset_46235)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46233 = x_46231 + x_46232;
                    
                    x_46231 = defunc_1_op_res_46233;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216)] =
                        x_46231;
                }
            }
            skip_waves_46236 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46216) == (int64_t) 0) {
                x_acc_46229 = x_46231;
            }
        }
        if (groups_per_segment_46206 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46216 == 0) {
                    ((__global float *) mem_45134)[gtid_32036 * N_27771 +
                                                   gtid_32037] = x_acc_46229;
                }
            }
        } else {
            int32_t old_counter_46237;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46216 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46211)[sext_i32_i64(virt_group_id_46226) *
                                                        segred_group_sizze_32093] =
                        x_acc_46229;
                    mem_fence_global();
                    old_counter_46237 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46213)[sext_i32_i64(srem32(flat_segment_id_46227,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46222)[(int64_t) 0] =
                        old_counter_46237 == groups_per_segment_46206 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46238;
            
            is_last_group_46238 = ((__local
                                    bool *) sync_arr_mem_46222)[(int64_t) 0];
            if (is_last_group_46238) {
                if (local_tid_46216 == 0) {
                    old_counter_46237 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46213)[sext_i32_i64(srem32(flat_segment_id_46227,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46206));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46239 =
                            sdiv_up64(groups_per_segment_46206,
                                      segred_group_sizze_32093);
                    
                    x_32097 = 0.0F;
                    for (int64_t i_46240 = 0; i_46240 < read_per_thread_46239;
                         i_46240++) {
                        int64_t group_res_id_46241 =
                                sext_i32_i64(local_tid_46216) *
                                read_per_thread_46239 + i_46240;
                        int64_t index_of_group_res_46242 =
                                sext_i32_i64(flat_segment_id_46227) *
                                groups_per_segment_46206 + group_res_id_46241;
                        
                        if (slt64(group_res_id_46241,
                                  groups_per_segment_46206)) {
                            x_32098 = ((__global
                                        float *) group_res_arr_mem_46211)[index_of_group_res_46242 *
                                                                          segred_group_sizze_32093];
                            
                            float defunc_1_op_res_32099;
                            
                            defunc_1_op_res_32099 = x_32097 + x_32098;
                            x_32097 = defunc_1_op_res_32099;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216)] =
                    x_32097;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46243;
                    int32_t skip_waves_46244;
                    
                    skip_waves_46244 = 1;
                    
                    float x_46231;
                    float x_46232;
                    
                    offset_46243 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46216,
                                  sext_i64_i32(segred_group_sizze_32093))) {
                            x_46231 = ((__local
                                        float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216 +
                                                                    offset_46243)];
                        }
                    }
                    offset_46243 = 1;
                    while (slt32(offset_46243, wave_sizze_46218)) {
                        if (slt32(local_tid_46216 + offset_46243,
                                  sext_i64_i32(segred_group_sizze_32093)) &&
                            ((local_tid_46216 - squot32(local_tid_46216,
                                                        wave_sizze_46218) *
                              wave_sizze_46218) & (2 * offset_46243 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46232 = ((volatile __local
                                            float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216 +
                                                                        offset_46243)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46233 = x_46231 + x_46232;
                                
                                x_46231 = defunc_1_op_res_46233;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216)] =
                                    x_46231;
                            }
                        }
                        offset_46243 *= 2;
                    }
                    while (slt32(skip_waves_46244,
                                 squot32(sext_i64_i32(segred_group_sizze_32093) +
                                         wave_sizze_46218 - 1,
                                         wave_sizze_46218))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46243 = skip_waves_46244 * wave_sizze_46218;
                        if (slt32(local_tid_46216 + offset_46243,
                                  sext_i64_i32(segred_group_sizze_32093)) &&
                            ((local_tid_46216 - squot32(local_tid_46216,
                                                        wave_sizze_46218) *
                              wave_sizze_46218) == 0 &&
                             (squot32(local_tid_46216, wave_sizze_46218) & (2 *
                                                                            skip_waves_46244 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46232 = ((__local
                                            float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216 +
                                                                        offset_46243)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46233 = x_46231 + x_46232;
                                
                                x_46231 = defunc_1_op_res_46233;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46220)[sext_i32_i64(local_tid_46216)] =
                                    x_46231;
                            }
                        }
                        skip_waves_46244 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46216 == 0) {
                            ((__global float *) mem_45134)[gtid_32036 *
                                                           N_27771 +
                                                           gtid_32037] =
                                x_46231;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32093
}
__kernel void mainDetailedzisegred_large_32625(__global int *global_failure,
                                               int failure_is_an_option,
                                               __global
                                               int64_t *global_failure_args,
                                               __local volatile
                                               int64_t *sync_arr_mem_46474_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46472_backing_aligned_1,
                                               int64_t N_27771,
                                               int64_t i32_res_27781,
                                               int64_t num_groups_32676,
                                               int64_t groups_per_segment_46458,
                                               int64_t elements_per_thread_46459,
                                               int64_t virt_num_groups_46460,
                                               int64_t threads_per_segment_46462,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_45178,
                                               __global
                                               unsigned char *mem_45232,
                                               __global
                                               unsigned char *mem_45235,
                                               __global
                                               unsigned char *group_res_arr_mem_46463,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46465)
{
    #define segred_group_sizze_32675 (mainDetailedzisegred_group_sizze_32619)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46474_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46474_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46472_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46472_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46467;
    int32_t local_tid_46468;
    int64_t group_sizze_46471;
    int32_t wave_sizze_46470;
    int32_t group_tid_46469;
    
    global_tid_46467 = get_global_id(0);
    local_tid_46468 = get_local_id(0);
    group_sizze_46471 = get_local_size(0);
    wave_sizze_46470 = LOCKSTEP_WIDTH;
    group_tid_46469 = get_group_id(0);
    
    int32_t phys_tid_32625;
    
    phys_tid_32625 = global_tid_46467;
    
    __local char *red_arr_mem_46472;
    
    red_arr_mem_46472 = (__local char *) red_arr_mem_46472_backing_0;
    
    __local char *sync_arr_mem_46474;
    
    sync_arr_mem_46474 = (__local char *) sync_arr_mem_46474_backing_1;
    
    int32_t phys_group_id_46476;
    
    phys_group_id_46476 = get_group_id(0);
    for (int32_t i_46477 = 0; i_46477 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46460) - phys_group_id_46476,
                   sext_i64_i32(num_groups_32676)); i_46477++) {
        int32_t virt_group_id_46478 = phys_group_id_46476 + i_46477 *
                sext_i64_i32(num_groups_32676);
        int32_t flat_segment_id_46479 = squot32(virt_group_id_46478,
                                                sext_i64_i32(groups_per_segment_46458));
        int64_t global_tid_46480 = srem64(sext_i32_i64(virt_group_id_46478) *
                                          segred_group_sizze_32675 +
                                          sext_i32_i64(local_tid_46468),
                                          segred_group_sizze_32675 *
                                          groups_per_segment_46458);
        int64_t gtid_32616 = sext_i32_i64(flat_segment_id_46479);
        int64_t gtid_32624;
        float x_acc_46481;
        int64_t chunk_sizze_46482;
        
        chunk_sizze_46482 = smin64(elements_per_thread_46459,
                                   sdiv_up64(i32_res_27781 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46480)),
                                             threads_per_segment_46462));
        
        float x_32679;
        float x_32680;
        
        // neutral-initialise the accumulators
        {
            x_acc_46481 = 0.0F;
        }
        for (int64_t i_46486 = 0; i_46486 < chunk_sizze_46482; i_46486++) {
            gtid_32624 = sext_i32_i64(sext_i64_i32(global_tid_46480)) +
                threads_per_segment_46462 * i_46486;
            // apply map function
            {
                int32_t defunc_0_f_res_32683 = ((__global
                                                 int32_t *) mem_45232)[gtid_32616];
                int32_t index_primexp_42385 = sext_i64_i32(gtid_32624);
                bool cond_32685 = slt32(index_primexp_42385,
                                        defunc_0_f_res_32683);
                float defunc_0_f_res_32686;
                
                if (cond_32685) {
                    int64_t i_32687 = sext_i32_i64(index_primexp_42385);
                    bool x_32688 = sle64((int64_t) 0, i_32687);
                    bool y_32689 = slt64(i_32687, N_27771);
                    bool bounds_check_32690 = x_32688 && y_32689;
                    bool index_certs_32691;
                    
                    if (!bounds_check_32690) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          50) == -1) {
                                global_failure_args[0] = i_32687;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_32692 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_32616 *
                                                                                              N_27771 +
                                                                                              i_32687];
                    
                    defunc_0_f_res_32686 = defunc_0_f_res_t_res_32692;
                } else {
                    defunc_0_f_res_32686 = 0.0F;
                }
                
                float defunc_0_f_res_32693 = defunc_0_f_res_32686 *
                      defunc_0_f_res_32686;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32679 = x_acc_46481;
                }
                // load new values
                {
                    x_32680 = defunc_0_f_res_32693;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32681 = x_32679 + x_32680;
                    
                    // store in accumulator
                    {
                        x_acc_46481 = defunc_1_op_res_32681;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32679 = x_acc_46481;
            ((__local
              float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468)] =
                x_32679;
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46487;
        int32_t skip_waves_46488;
        
        skip_waves_46488 = 1;
        
        float x_46483;
        float x_46484;
        
        offset_46487 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46468,
                      sext_i64_i32(segred_group_sizze_32675))) {
                x_46483 = ((__local
                            float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468 +
                                                        offset_46487)];
            }
        }
        offset_46487 = 1;
        while (slt32(offset_46487, wave_sizze_46470)) {
            if (slt32(local_tid_46468 + offset_46487,
                      sext_i64_i32(segred_group_sizze_32675)) &&
                ((local_tid_46468 - squot32(local_tid_46468, wave_sizze_46470) *
                  wave_sizze_46470) & (2 * offset_46487 - 1)) == 0) {
                // read array element
                {
                    x_46484 = ((volatile __local
                                float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468 +
                                                            offset_46487)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46485 = x_46483 + x_46484;
                    
                    x_46483 = defunc_1_op_res_46485;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468)] =
                        x_46483;
                }
            }
            offset_46487 *= 2;
        }
        while (slt32(skip_waves_46488,
                     squot32(sext_i64_i32(segred_group_sizze_32675) +
                             wave_sizze_46470 - 1, wave_sizze_46470))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46487 = skip_waves_46488 * wave_sizze_46470;
            if (slt32(local_tid_46468 + offset_46487,
                      sext_i64_i32(segred_group_sizze_32675)) &&
                ((local_tid_46468 - squot32(local_tid_46468, wave_sizze_46470) *
                  wave_sizze_46470) == 0 && (squot32(local_tid_46468,
                                                     wave_sizze_46470) & (2 *
                                                                          skip_waves_46488 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46484 = ((__local
                                float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468 +
                                                            offset_46487)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46485 = x_46483 + x_46484;
                    
                    x_46483 = defunc_1_op_res_46485;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468)] =
                        x_46483;
                }
            }
            skip_waves_46488 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46468) == (int64_t) 0) {
                x_acc_46481 = x_46483;
            }
        }
        if (groups_per_segment_46458 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46468 == 0) {
                    ((__global float *) mem_45235)[gtid_32616] = x_acc_46481;
                }
            }
        } else {
            int32_t old_counter_46489;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46468 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46463)[sext_i32_i64(virt_group_id_46478) *
                                                        segred_group_sizze_32675] =
                        x_acc_46481;
                    mem_fence_global();
                    old_counter_46489 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46465)[sext_i32_i64(srem32(flat_segment_id_46479,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46474)[(int64_t) 0] =
                        old_counter_46489 == groups_per_segment_46458 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46490;
            
            is_last_group_46490 = ((__local
                                    bool *) sync_arr_mem_46474)[(int64_t) 0];
            if (is_last_group_46490) {
                if (local_tid_46468 == 0) {
                    old_counter_46489 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46465)[sext_i32_i64(srem32(flat_segment_id_46479,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46458));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46491 =
                            sdiv_up64(groups_per_segment_46458,
                                      segred_group_sizze_32675);
                    
                    x_32679 = 0.0F;
                    for (int64_t i_46492 = 0; i_46492 < read_per_thread_46491;
                         i_46492++) {
                        int64_t group_res_id_46493 =
                                sext_i32_i64(local_tid_46468) *
                                read_per_thread_46491 + i_46492;
                        int64_t index_of_group_res_46494 =
                                sext_i32_i64(flat_segment_id_46479) *
                                groups_per_segment_46458 + group_res_id_46493;
                        
                        if (slt64(group_res_id_46493,
                                  groups_per_segment_46458)) {
                            x_32680 = ((__global
                                        float *) group_res_arr_mem_46463)[index_of_group_res_46494 *
                                                                          segred_group_sizze_32675];
                            
                            float defunc_1_op_res_32681;
                            
                            defunc_1_op_res_32681 = x_32679 + x_32680;
                            x_32679 = defunc_1_op_res_32681;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468)] =
                    x_32679;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46495;
                    int32_t skip_waves_46496;
                    
                    skip_waves_46496 = 1;
                    
                    float x_46483;
                    float x_46484;
                    
                    offset_46495 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46468,
                                  sext_i64_i32(segred_group_sizze_32675))) {
                            x_46483 = ((__local
                                        float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468 +
                                                                    offset_46495)];
                        }
                    }
                    offset_46495 = 1;
                    while (slt32(offset_46495, wave_sizze_46470)) {
                        if (slt32(local_tid_46468 + offset_46495,
                                  sext_i64_i32(segred_group_sizze_32675)) &&
                            ((local_tid_46468 - squot32(local_tid_46468,
                                                        wave_sizze_46470) *
                              wave_sizze_46470) & (2 * offset_46495 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46484 = ((volatile __local
                                            float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468 +
                                                                        offset_46495)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46485 = x_46483 + x_46484;
                                
                                x_46483 = defunc_1_op_res_46485;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468)] =
                                    x_46483;
                            }
                        }
                        offset_46495 *= 2;
                    }
                    while (slt32(skip_waves_46496,
                                 squot32(sext_i64_i32(segred_group_sizze_32675) +
                                         wave_sizze_46470 - 1,
                                         wave_sizze_46470))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46495 = skip_waves_46496 * wave_sizze_46470;
                        if (slt32(local_tid_46468 + offset_46495,
                                  sext_i64_i32(segred_group_sizze_32675)) &&
                            ((local_tid_46468 - squot32(local_tid_46468,
                                                        wave_sizze_46470) *
                              wave_sizze_46470) == 0 &&
                             (squot32(local_tid_46468, wave_sizze_46470) & (2 *
                                                                            skip_waves_46496 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46484 = ((__local
                                            float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468 +
                                                                        offset_46495)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46485 = x_46483 + x_46484;
                                
                                x_46483 = defunc_1_op_res_46485;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46472)[sext_i32_i64(local_tid_46468)] =
                                    x_46483;
                            }
                        }
                        skip_waves_46496 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46468 == 0) {
                            ((__global float *) mem_45235)[gtid_32616] =
                                x_46483;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32675
}
__kernel void mainDetailedzisegred_large_32650(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_46414_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46412_backing_aligned_1,
                                               int64_t N_27771,
                                               int64_t i32_res_27781,
                                               int64_t num_groups_32662,
                                               int64_t groups_per_segment_46398,
                                               int64_t elements_per_thread_46399,
                                               int64_t virt_num_groups_46400,
                                               int64_t threads_per_segment_46402,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *mem_45232,
                                               __global
                                               unsigned char *group_res_arr_mem_46403,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46405)
{
    #define segred_group_sizze_32661 (mainDetailedzisegred_group_sizze_32644)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46414_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46414_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46412_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46412_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46407;
    int32_t local_tid_46408;
    int64_t group_sizze_46411;
    int32_t wave_sizze_46410;
    int32_t group_tid_46409;
    
    global_tid_46407 = get_global_id(0);
    local_tid_46408 = get_local_id(0);
    group_sizze_46411 = get_local_size(0);
    wave_sizze_46410 = LOCKSTEP_WIDTH;
    group_tid_46409 = get_group_id(0);
    
    int32_t phys_tid_32650;
    
    phys_tid_32650 = global_tid_46407;
    
    __local char *red_arr_mem_46412;
    
    red_arr_mem_46412 = (__local char *) red_arr_mem_46412_backing_0;
    
    __local char *sync_arr_mem_46414;
    
    sync_arr_mem_46414 = (__local char *) sync_arr_mem_46414_backing_1;
    
    int32_t phys_group_id_46416;
    
    phys_group_id_46416 = get_group_id(0);
    for (int32_t i_46417 = 0; i_46417 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46400) - phys_group_id_46416,
                   sext_i64_i32(num_groups_32662)); i_46417++) {
        int32_t virt_group_id_46418 = phys_group_id_46416 + i_46417 *
                sext_i64_i32(num_groups_32662);
        int32_t flat_segment_id_46419 = squot32(virt_group_id_46418,
                                                sext_i64_i32(groups_per_segment_46398));
        int64_t global_tid_46420 = srem64(sext_i32_i64(virt_group_id_46418) *
                                          segred_group_sizze_32661 +
                                          sext_i32_i64(local_tid_46408),
                                          segred_group_sizze_32661 *
                                          groups_per_segment_46398);
        int64_t gtid_32641 = sext_i32_i64(flat_segment_id_46419);
        int64_t gtid_32649;
        int32_t x_acc_46421;
        int64_t chunk_sizze_46422;
        
        chunk_sizze_46422 = smin64(elements_per_thread_46399,
                                   sdiv_up64(i32_res_27781 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46420)),
                                             threads_per_segment_46402));
        
        int32_t x_32665;
        int32_t x_32666;
        
        // neutral-initialise the accumulators
        {
            x_acc_46421 = 0;
        }
        for (int64_t i_46426 = 0; i_46426 < chunk_sizze_46422; i_46426++) {
            gtid_32649 = sext_i32_i64(sext_i64_i32(global_tid_46420)) +
                threads_per_segment_46402 * i_46426;
            // apply map function
            {
                float x_32669 = ((__global
                                  float *) images_mem_44381)[gtid_32641 *
                                                             N_27771 +
                                                             gtid_32649];
                bool isnan_res_32670;
                
                isnan_res_32670 = futrts_isnan32(x_32669);
                
                bool cond_32671 = !isnan_res_32670;
                int32_t defunc_0_f_res_32672 = btoi_bool_i32(cond_32671);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32665 = x_acc_46421;
                }
                // load new values
                {
                    x_32666 = defunc_0_f_res_32672;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_32667 = add32(x_32665, x_32666);
                    
                    // store in accumulator
                    {
                        x_acc_46421 = defunc_1_op_res_32667;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32665 = x_acc_46421;
            ((__local
              int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408)] =
                x_32665;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46427;
        int32_t skip_waves_46428;
        
        skip_waves_46428 = 1;
        
        int32_t x_46423;
        int32_t x_46424;
        
        offset_46427 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46408,
                      sext_i64_i32(segred_group_sizze_32661))) {
                x_46423 = ((__local
                            int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408 +
                                                          offset_46427)];
            }
        }
        offset_46427 = 1;
        while (slt32(offset_46427, wave_sizze_46410)) {
            if (slt32(local_tid_46408 + offset_46427,
                      sext_i64_i32(segred_group_sizze_32661)) &&
                ((local_tid_46408 - squot32(local_tid_46408, wave_sizze_46410) *
                  wave_sizze_46410) & (2 * offset_46427 - 1)) == 0) {
                // read array element
                {
                    x_46424 = ((volatile __local
                                int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408 +
                                                              offset_46427)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_46425 = add32(x_46423, x_46424);
                    
                    x_46423 = defunc_1_op_res_46425;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408)] =
                        x_46423;
                }
            }
            offset_46427 *= 2;
        }
        while (slt32(skip_waves_46428,
                     squot32(sext_i64_i32(segred_group_sizze_32661) +
                             wave_sizze_46410 - 1, wave_sizze_46410))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46427 = skip_waves_46428 * wave_sizze_46410;
            if (slt32(local_tid_46408 + offset_46427,
                      sext_i64_i32(segred_group_sizze_32661)) &&
                ((local_tid_46408 - squot32(local_tid_46408, wave_sizze_46410) *
                  wave_sizze_46410) == 0 && (squot32(local_tid_46408,
                                                     wave_sizze_46410) & (2 *
                                                                          skip_waves_46428 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46424 = ((__local
                                int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408 +
                                                              offset_46427)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_46425 = add32(x_46423, x_46424);
                    
                    x_46423 = defunc_1_op_res_46425;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408)] =
                        x_46423;
                }
            }
            skip_waves_46428 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46408) == (int64_t) 0) {
                x_acc_46421 = x_46423;
            }
        }
        if (groups_per_segment_46398 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46408 == 0) {
                    ((__global int32_t *) mem_45232)[gtid_32641] = x_acc_46421;
                }
            }
        } else {
            int32_t old_counter_46429;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46408 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_46403)[sext_i32_i64(virt_group_id_46418) *
                                                          segred_group_sizze_32661] =
                        x_acc_46421;
                    mem_fence_global();
                    old_counter_46429 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46405)[sext_i32_i64(srem32(flat_segment_id_46419,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46414)[(int64_t) 0] =
                        old_counter_46429 == groups_per_segment_46398 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46430;
            
            is_last_group_46430 = ((__local
                                    bool *) sync_arr_mem_46414)[(int64_t) 0];
            if (is_last_group_46430) {
                if (local_tid_46408 == 0) {
                    old_counter_46429 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46405)[sext_i32_i64(srem32(flat_segment_id_46419,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46398));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46431 =
                            sdiv_up64(groups_per_segment_46398,
                                      segred_group_sizze_32661);
                    
                    x_32665 = 0;
                    for (int64_t i_46432 = 0; i_46432 < read_per_thread_46431;
                         i_46432++) {
                        int64_t group_res_id_46433 =
                                sext_i32_i64(local_tid_46408) *
                                read_per_thread_46431 + i_46432;
                        int64_t index_of_group_res_46434 =
                                sext_i32_i64(flat_segment_id_46419) *
                                groups_per_segment_46398 + group_res_id_46433;
                        
                        if (slt64(group_res_id_46433,
                                  groups_per_segment_46398)) {
                            x_32666 = ((__global
                                        int32_t *) group_res_arr_mem_46403)[index_of_group_res_46434 *
                                                                            segred_group_sizze_32661];
                            
                            int32_t defunc_1_op_res_32667;
                            
                            defunc_1_op_res_32667 = add32(x_32665, x_32666);
                            x_32665 = defunc_1_op_res_32667;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408)] =
                    x_32665;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46435;
                    int32_t skip_waves_46436;
                    
                    skip_waves_46436 = 1;
                    
                    int32_t x_46423;
                    int32_t x_46424;
                    
                    offset_46435 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46408,
                                  sext_i64_i32(segred_group_sizze_32661))) {
                            x_46423 = ((__local
                                        int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408 +
                                                                      offset_46435)];
                        }
                    }
                    offset_46435 = 1;
                    while (slt32(offset_46435, wave_sizze_46410)) {
                        if (slt32(local_tid_46408 + offset_46435,
                                  sext_i64_i32(segred_group_sizze_32661)) &&
                            ((local_tid_46408 - squot32(local_tid_46408,
                                                        wave_sizze_46410) *
                              wave_sizze_46410) & (2 * offset_46435 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46424 = ((volatile __local
                                            int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408 +
                                                                          offset_46435)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_46425 = add32(x_46423,
                                                                      x_46424);
                                
                                x_46423 = defunc_1_op_res_46425;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408)] =
                                    x_46423;
                            }
                        }
                        offset_46435 *= 2;
                    }
                    while (slt32(skip_waves_46436,
                                 squot32(sext_i64_i32(segred_group_sizze_32661) +
                                         wave_sizze_46410 - 1,
                                         wave_sizze_46410))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46435 = skip_waves_46436 * wave_sizze_46410;
                        if (slt32(local_tid_46408 + offset_46435,
                                  sext_i64_i32(segred_group_sizze_32661)) &&
                            ((local_tid_46408 - squot32(local_tid_46408,
                                                        wave_sizze_46410) *
                              wave_sizze_46410) == 0 &&
                             (squot32(local_tid_46408, wave_sizze_46410) & (2 *
                                                                            skip_waves_46436 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46424 = ((__local
                                            int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408 +
                                                                          offset_46435)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_46425 = add32(x_46423,
                                                                      x_46424);
                                
                                x_46423 = defunc_1_op_res_46425;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_46412)[sext_i32_i64(local_tid_46408)] =
                                    x_46423;
                            }
                        }
                        skip_waves_46436 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46408 == 0) {
                            ((__global int32_t *) mem_45232)[gtid_32641] =
                                x_46423;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32661
}
__kernel void mainDetailedzisegred_large_32813(__global int *global_failure,
                                               int failure_is_an_option,
                                               __global
                                               int64_t *global_failure_args,
                                               __local volatile
                                               int64_t *sync_arr_mem_46583_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46581_backing_aligned_1,
                                               int64_t N_27771,
                                               int64_t i32_res_28174,
                                               int64_t num_groups_32835,
                                               int64_t groups_per_segment_46567,
                                               int64_t elements_per_thread_46568,
                                               int64_t virt_num_groups_46569,
                                               int64_t threads_per_segment_46571,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_45178,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45244,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45245,
                                               __global
                                               unsigned char *mem_45278,
                                               __global
                                               unsigned char *group_res_arr_mem_46572,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46574)
{
    #define segred_group_sizze_32834 (mainDetailedzisegred_group_sizze_32807)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46583_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46583_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46581_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46581_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46576;
    int32_t local_tid_46577;
    int64_t group_sizze_46580;
    int32_t wave_sizze_46579;
    int32_t group_tid_46578;
    
    global_tid_46576 = get_global_id(0);
    local_tid_46577 = get_local_id(0);
    group_sizze_46580 = get_local_size(0);
    wave_sizze_46579 = LOCKSTEP_WIDTH;
    group_tid_46578 = get_group_id(0);
    
    int32_t phys_tid_32813;
    
    phys_tid_32813 = global_tid_46576;
    
    __local char *red_arr_mem_46581;
    
    red_arr_mem_46581 = (__local char *) red_arr_mem_46581_backing_0;
    
    __local char *sync_arr_mem_46583;
    
    sync_arr_mem_46583 = (__local char *) sync_arr_mem_46583_backing_1;
    
    int32_t phys_group_id_46585;
    
    phys_group_id_46585 = get_group_id(0);
    for (int32_t i_46586 = 0; i_46586 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46569) - phys_group_id_46585,
                   sext_i64_i32(num_groups_32835)); i_46586++) {
        int32_t virt_group_id_46587 = phys_group_id_46585 + i_46586 *
                sext_i64_i32(num_groups_32835);
        int32_t flat_segment_id_46588 = squot32(virt_group_id_46587,
                                                sext_i64_i32(groups_per_segment_46567));
        int64_t global_tid_46589 = srem64(sext_i32_i64(virt_group_id_46587) *
                                          segred_group_sizze_32834 +
                                          sext_i32_i64(local_tid_46577),
                                          segred_group_sizze_32834 *
                                          groups_per_segment_46567);
        int64_t gtid_32804 = sext_i32_i64(flat_segment_id_46588);
        int64_t gtid_32812;
        float x_acc_46590;
        int64_t chunk_sizze_46591;
        
        chunk_sizze_46591 = smin64(elements_per_thread_46568,
                                   sdiv_up64(i32_res_28174 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46589)),
                                             threads_per_segment_46571));
        
        float x_32838;
        float x_32839;
        
        // neutral-initialise the accumulators
        {
            x_acc_46590 = 0.0F;
        }
        for (int64_t i_46595 = 0; i_46595 < chunk_sizze_46591; i_46595++) {
            gtid_32812 = sext_i32_i64(sext_i64_i32(global_tid_46589)) +
                threads_per_segment_46571 * i_46595;
            // apply map function
            {
                int32_t x_32843 = ((__global
                                    int32_t *) defunc_3_map_res_mem_45244)[gtid_32804];
                int32_t index_primexp_42390 = sext_i64_i32(gtid_32812);
                bool cond_32845 = slt32(index_primexp_42390, x_32843);
                float defunc_0_f_res_32846;
                
                if (cond_32845) {
                    int32_t x_32842 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_32804];
                    int32_t x_32847 = add32(x_32842, index_primexp_42390);
                    int32_t x_32848 = sub32(x_32847, x_32843);
                    int32_t i_32849 = add32(1, x_32848);
                    int64_t i_32850 = sext_i32_i64(i_32849);
                    bool x_32851 = sle64((int64_t) 0, i_32850);
                    bool y_32852 = slt64(i_32850, N_27771);
                    bool bounds_check_32853 = x_32851 && y_32852;
                    bool index_certs_32854;
                    
                    if (!bounds_check_32853) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          54) == -1) {
                                global_failure_args[0] = i_32850;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_32855 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_32804 *
                                                                                              N_27771 +
                                                                                              i_32850];
                    
                    defunc_0_f_res_32846 = defunc_0_f_res_t_res_32855;
                } else {
                    defunc_0_f_res_32846 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_32838 = x_acc_46590;
                }
                // load new values
                {
                    x_32839 = defunc_0_f_res_32846;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32840 = x_32838 + x_32839;
                    
                    // store in accumulator
                    {
                        x_acc_46590 = defunc_1_op_res_32840;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32838 = x_acc_46590;
            ((__local
              float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577)] =
                x_32838;
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46596;
        int32_t skip_waves_46597;
        
        skip_waves_46597 = 1;
        
        float x_46592;
        float x_46593;
        
        offset_46596 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46577,
                      sext_i64_i32(segred_group_sizze_32834))) {
                x_46592 = ((__local
                            float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577 +
                                                        offset_46596)];
            }
        }
        offset_46596 = 1;
        while (slt32(offset_46596, wave_sizze_46579)) {
            if (slt32(local_tid_46577 + offset_46596,
                      sext_i64_i32(segred_group_sizze_32834)) &&
                ((local_tid_46577 - squot32(local_tid_46577, wave_sizze_46579) *
                  wave_sizze_46579) & (2 * offset_46596 - 1)) == 0) {
                // read array element
                {
                    x_46593 = ((volatile __local
                                float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577 +
                                                            offset_46596)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46594 = x_46592 + x_46593;
                    
                    x_46592 = defunc_1_op_res_46594;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577)] =
                        x_46592;
                }
            }
            offset_46596 *= 2;
        }
        while (slt32(skip_waves_46597,
                     squot32(sext_i64_i32(segred_group_sizze_32834) +
                             wave_sizze_46579 - 1, wave_sizze_46579))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46596 = skip_waves_46597 * wave_sizze_46579;
            if (slt32(local_tid_46577 + offset_46596,
                      sext_i64_i32(segred_group_sizze_32834)) &&
                ((local_tid_46577 - squot32(local_tid_46577, wave_sizze_46579) *
                  wave_sizze_46579) == 0 && (squot32(local_tid_46577,
                                                     wave_sizze_46579) & (2 *
                                                                          skip_waves_46597 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46593 = ((__local
                                float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577 +
                                                            offset_46596)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46594 = x_46592 + x_46593;
                    
                    x_46592 = defunc_1_op_res_46594;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577)] =
                        x_46592;
                }
            }
            skip_waves_46597 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46577) == (int64_t) 0) {
                x_acc_46590 = x_46592;
            }
        }
        if (groups_per_segment_46567 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46577 == 0) {
                    ((__global float *) mem_45278)[gtid_32804] = x_acc_46590;
                }
            }
        } else {
            int32_t old_counter_46598;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46577 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46572)[sext_i32_i64(virt_group_id_46587) *
                                                        segred_group_sizze_32834] =
                        x_acc_46590;
                    mem_fence_global();
                    old_counter_46598 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46574)[sext_i32_i64(srem32(flat_segment_id_46588,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46583)[(int64_t) 0] =
                        old_counter_46598 == groups_per_segment_46567 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46599;
            
            is_last_group_46599 = ((__local
                                    bool *) sync_arr_mem_46583)[(int64_t) 0];
            if (is_last_group_46599) {
                if (local_tid_46577 == 0) {
                    old_counter_46598 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46574)[sext_i32_i64(srem32(flat_segment_id_46588,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46567));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46600 =
                            sdiv_up64(groups_per_segment_46567,
                                      segred_group_sizze_32834);
                    
                    x_32838 = 0.0F;
                    for (int64_t i_46601 = 0; i_46601 < read_per_thread_46600;
                         i_46601++) {
                        int64_t group_res_id_46602 =
                                sext_i32_i64(local_tid_46577) *
                                read_per_thread_46600 + i_46601;
                        int64_t index_of_group_res_46603 =
                                sext_i32_i64(flat_segment_id_46588) *
                                groups_per_segment_46567 + group_res_id_46602;
                        
                        if (slt64(group_res_id_46602,
                                  groups_per_segment_46567)) {
                            x_32839 = ((__global
                                        float *) group_res_arr_mem_46572)[index_of_group_res_46603 *
                                                                          segred_group_sizze_32834];
                            
                            float defunc_1_op_res_32840;
                            
                            defunc_1_op_res_32840 = x_32838 + x_32839;
                            x_32838 = defunc_1_op_res_32840;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577)] =
                    x_32838;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46604;
                    int32_t skip_waves_46605;
                    
                    skip_waves_46605 = 1;
                    
                    float x_46592;
                    float x_46593;
                    
                    offset_46604 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46577,
                                  sext_i64_i32(segred_group_sizze_32834))) {
                            x_46592 = ((__local
                                        float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577 +
                                                                    offset_46604)];
                        }
                    }
                    offset_46604 = 1;
                    while (slt32(offset_46604, wave_sizze_46579)) {
                        if (slt32(local_tid_46577 + offset_46604,
                                  sext_i64_i32(segred_group_sizze_32834)) &&
                            ((local_tid_46577 - squot32(local_tid_46577,
                                                        wave_sizze_46579) *
                              wave_sizze_46579) & (2 * offset_46604 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46593 = ((volatile __local
                                            float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577 +
                                                                        offset_46604)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46594 = x_46592 + x_46593;
                                
                                x_46592 = defunc_1_op_res_46594;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577)] =
                                    x_46592;
                            }
                        }
                        offset_46604 *= 2;
                    }
                    while (slt32(skip_waves_46605,
                                 squot32(sext_i64_i32(segred_group_sizze_32834) +
                                         wave_sizze_46579 - 1,
                                         wave_sizze_46579))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46604 = skip_waves_46605 * wave_sizze_46579;
                        if (slt32(local_tid_46577 + offset_46604,
                                  sext_i64_i32(segred_group_sizze_32834)) &&
                            ((local_tid_46577 - squot32(local_tid_46577,
                                                        wave_sizze_46579) *
                              wave_sizze_46579) == 0 &&
                             (squot32(local_tid_46577, wave_sizze_46579) & (2 *
                                                                            skip_waves_46605 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46593 = ((__local
                                            float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577 +
                                                                        offset_46604)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46594 = x_46592 + x_46593;
                                
                                x_46592 = defunc_1_op_res_46594;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46581)[sext_i32_i64(local_tid_46577)] =
                                    x_46592;
                            }
                        }
                        skip_waves_46605 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46577 == 0) {
                            ((__global float *) mem_45278)[gtid_32804] =
                                x_46592;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32834
}
__kernel void mainDetailedzisegred_large_33994(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_46810_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46808_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_46806_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_46804_backing_aligned_3,
                                               int64_t iota32_arg_28203,
                                               int64_t iota32_arg_28233,
                                               int64_t num_groups_34139,
                                               int64_t groups_per_segment_46786,
                                               int64_t elements_per_thread_46787,
                                               int64_t virt_num_groups_46788,
                                               __global
                                               unsigned char *mem_45282,
                                               __global
                                               unsigned char *mem_45399,
                                               __global
                                               unsigned char *mem_45403,
                                               __global
                                               unsigned char *mem_45406,
                                               __global
                                               unsigned char *mem_45409,
                                               __global
                                               unsigned char *mem_45411,
                                               __global
                                               unsigned char *mem_45413,
                                               __global
                                               unsigned char *mem_45416,
                                               __global
                                               unsigned char *group_res_arr_mem_46791,
                                               __global
                                               unsigned char *group_res_arr_mem_46793,
                                               __global
                                               unsigned char *group_res_arr_mem_46795,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46797)
{
    #define segred_group_sizze_34138 (mainDetailedzisegred_group_sizze_33988)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46810_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_46810_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46808_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46808_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46806_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46806_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_46804_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46804_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46799;
    int32_t local_tid_46800;
    int64_t group_sizze_46803;
    int32_t wave_sizze_46802;
    int32_t group_tid_46801;
    
    global_tid_46799 = get_global_id(0);
    local_tid_46800 = get_local_id(0);
    group_sizze_46803 = get_local_size(0);
    wave_sizze_46802 = LOCKSTEP_WIDTH;
    group_tid_46801 = get_group_id(0);
    
    int32_t phys_tid_33994;
    
    phys_tid_33994 = global_tid_46799;
    
    __local char *red_arr_mem_46804;
    
    red_arr_mem_46804 = (__local char *) red_arr_mem_46804_backing_0;
    
    __local char *red_arr_mem_46806;
    
    red_arr_mem_46806 = (__local char *) red_arr_mem_46806_backing_1;
    
    __local char *red_arr_mem_46808;
    
    red_arr_mem_46808 = (__local char *) red_arr_mem_46808_backing_2;
    
    __local char *sync_arr_mem_46810;
    
    sync_arr_mem_46810 = (__local char *) sync_arr_mem_46810_backing_3;
    
    int32_t phys_group_id_46812;
    
    phys_group_id_46812 = get_group_id(0);
    for (int32_t i_46813 = 0; i_46813 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46788) - phys_group_id_46812,
                   sext_i64_i32(num_groups_34139)); i_46813++) {
        int32_t virt_group_id_46814 = phys_group_id_46812 + i_46813 *
                sext_i64_i32(num_groups_34139);
        int32_t flat_segment_id_46815 = squot32(virt_group_id_46814,
                                                sext_i64_i32(groups_per_segment_46786));
        int64_t global_tid_46816 = srem64(sext_i32_i64(virt_group_id_46814) *
                                          segred_group_sizze_34138 +
                                          sext_i32_i64(local_tid_46800),
                                          segred_group_sizze_34138 *
                                          groups_per_segment_46786);
        int64_t gtid_33985 = sext_i32_i64(flat_segment_id_46815);
        int64_t gtid_33993;
        bool x_acc_46817;
        int32_t x_acc_46818;
        float x_acc_46819;
        int64_t chunk_sizze_46820;
        int64_t starting_point_46821;
        
        starting_point_46821 = sext_i32_i64(sext_i64_i32(global_tid_46816)) *
            elements_per_thread_46787;
        
        int64_t remaining_elements_46822;
        
        remaining_elements_46822 = iota32_arg_28203 - starting_point_46821;
        if (sle64(remaining_elements_46822, (int64_t) 0) ||
            sle64(iota32_arg_28203, starting_point_46821)) {
            chunk_sizze_46820 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_28203,
                      (sext_i32_i64(sext_i64_i32(global_tid_46816)) +
                       (int64_t) 1) * elements_per_thread_46787)) {
                chunk_sizze_46820 = iota32_arg_28203 -
                    sext_i32_i64(sext_i64_i32(global_tid_46816)) *
                    elements_per_thread_46787;
            } else {
                chunk_sizze_46820 = elements_per_thread_46787;
            }
        }
        
        bool x_34145;
        int32_t x_34146;
        float x_34147;
        bool x_34148;
        int32_t x_34149;
        float x_34150;
        
        // neutral-initialise the accumulators
        {
            x_acc_46817 = 0;
            x_acc_46818 = -1;
            x_acc_46819 = 0.0F;
        }
        for (int64_t i_46837 = 0; i_46837 < elements_per_thread_46787;
             i_46837++) {
            gtid_33993 = sext_i32_i64(local_tid_46800) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_46816),
                                      sext_i64_i32(segred_group_sizze_34138))) *
                 elements_per_thread_46787 + i_46837) *
                segred_group_sizze_34138;
            if (slt64(gtid_33993, iota32_arg_28203)) {
                // apply map function
                {
                    int32_t y_34159 = ((__global
                                        int32_t *) mem_45399)[gtid_33985];
                    float y_34160 = ((__global float *) mem_45406)[gtid_33985];
                    int64_t binop_x_42448 = iota32_arg_28203 * gtid_33985;
                    int64_t binop_x_42449 = gtid_33993 + binop_x_42448;
                    int64_t new_index_42450 = squot64(binop_x_42449,
                                                      iota32_arg_28233);
                    int64_t binop_y_42456 = iota32_arg_28233 * new_index_42450;
                    int64_t new_index_42457 = binop_x_42449 - binop_y_42456;
                    float x_34162 = ((__global
                                      float *) mem_45403)[new_index_42450 *
                                                          iota32_arg_28233 +
                                                          new_index_42457];
                    float x_34163 = ((__global float *) mem_45282)[gtid_33993];
                    int32_t index_primexp_42414 = sext_i64_i32(gtid_33993);
                    float defunc_0_f_res_34165 = x_34162 / y_34160;
                    bool cond_34166 = slt32(index_primexp_42414, y_34159);
                    bool isnan_res_34167;
                    
                    isnan_res_34167 = futrts_isnan32(defunc_0_f_res_34165);
                    
                    bool cond_t_res_34168 = !isnan_res_34167;
                    bool x_34169 = cond_34166 && cond_t_res_34168;
                    float abs_res_34170 = (float) fabs(defunc_0_f_res_34165);
                    bool defunc_2_f_res_t_res_34171 = x_34163 < abs_res_34170;
                    bool x_34172 = x_34169 && defunc_2_f_res_t_res_34171;
                    float defunc_1_f_res_34173;
                    
                    if (cond_34166) {
                        defunc_1_f_res_34173 = defunc_0_f_res_34165;
                    } else {
                        defunc_1_f_res_34173 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_45416)[gtid_33985 *
                                                       iota32_arg_28203 +
                                                       gtid_33993] =
                            defunc_0_f_res_34165;
                    }
                    // load accumulator
                    {
                        x_34145 = x_acc_46817;
                        x_34146 = x_acc_46818;
                        x_34147 = x_acc_46819;
                    }
                    // load new values
                    {
                        x_34148 = x_34172;
                        x_34149 = index_primexp_42414;
                        x_34150 = defunc_1_f_res_34173;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_34151;
                        int32_t defunc_1_op_res_34152;
                        
                        if (x_34145) {
                            defunc_1_op_res_34151 = x_34145;
                            defunc_1_op_res_34152 = x_34146;
                        } else {
                            bool x_34153 = x_34148 && x_34148;
                            bool x_34154 = !x_34148;
                            bool y_34155 = x_34145 && x_34154;
                            bool defunc_1_op_res_f_res_34156 = x_34153 ||
                                 y_34155;
                            int32_t defunc_1_op_res_f_res_34157;
                            
                            if (x_34148) {
                                defunc_1_op_res_f_res_34157 = x_34149;
                            } else {
                                defunc_1_op_res_f_res_34157 = x_34146;
                            }
                            defunc_1_op_res_34151 = defunc_1_op_res_f_res_34156;
                            defunc_1_op_res_34152 = defunc_1_op_res_f_res_34157;
                        }
                        
                        float defunc_1_op_res_34158 = x_34147 + x_34150;
                        
                        // store in accumulator
                        {
                            x_acc_46817 = defunc_1_op_res_34151;
                            x_acc_46818 = defunc_1_op_res_34152;
                            x_acc_46819 = defunc_1_op_res_34158;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_34145 = x_acc_46817;
                x_34146 = x_acc_46818;
                x_34147 = x_acc_46819;
                ((__local
                  bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800)] =
                    x_34145;
                ((__local
                  int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800)] =
                    x_34146;
                ((__local
                  float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800)] =
                    x_34147;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_46838;
            int32_t skip_waves_46839;
            
            skip_waves_46839 = 1;
            
            bool x_46823;
            int32_t x_46824;
            float x_46825;
            bool x_46826;
            int32_t x_46827;
            float x_46828;
            
            offset_46838 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46800,
                          sext_i64_i32(segred_group_sizze_34138))) {
                    x_46823 = ((__local
                                bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800 +
                                                           offset_46838)];
                    x_46824 = ((__local
                                int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800 +
                                                              offset_46838)];
                    x_46825 = ((__local
                                float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800 +
                                                            offset_46838)];
                }
            }
            offset_46838 = 1;
            while (slt32(offset_46838, wave_sizze_46802)) {
                if (slt32(local_tid_46800 + offset_46838,
                          sext_i64_i32(segred_group_sizze_34138)) &&
                    ((local_tid_46800 - squot32(local_tid_46800,
                                                wave_sizze_46802) *
                      wave_sizze_46802) & (2 * offset_46838 - 1)) == 0) {
                    // read array element
                    {
                        x_46826 = ((volatile __local
                                    bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800 +
                                                               offset_46838)];
                        x_46827 = ((volatile __local
                                    int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800 +
                                                                  offset_46838)];
                        x_46828 = ((volatile __local
                                    float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800 +
                                                                offset_46838)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46829;
                        int32_t defunc_1_op_res_46830;
                        
                        if (x_46823) {
                            defunc_1_op_res_46829 = x_46823;
                            defunc_1_op_res_46830 = x_46824;
                        } else {
                            bool x_46831 = x_46826 && x_46826;
                            bool x_46832 = !x_46826;
                            bool y_46833 = x_46823 && x_46832;
                            bool defunc_1_op_res_f_res_46834 = x_46831 ||
                                 y_46833;
                            int32_t defunc_1_op_res_f_res_46835;
                            
                            if (x_46826) {
                                defunc_1_op_res_f_res_46835 = x_46827;
                            } else {
                                defunc_1_op_res_f_res_46835 = x_46824;
                            }
                            defunc_1_op_res_46829 = defunc_1_op_res_f_res_46834;
                            defunc_1_op_res_46830 = defunc_1_op_res_f_res_46835;
                        }
                        
                        float defunc_1_op_res_46836 = x_46825 + x_46828;
                        
                        x_46823 = defunc_1_op_res_46829;
                        x_46824 = defunc_1_op_res_46830;
                        x_46825 = defunc_1_op_res_46836;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800)] =
                            x_46823;
                        ((volatile __local
                          int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800)] =
                            x_46824;
                        ((volatile __local
                          float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800)] =
                            x_46825;
                    }
                }
                offset_46838 *= 2;
            }
            while (slt32(skip_waves_46839,
                         squot32(sext_i64_i32(segred_group_sizze_34138) +
                                 wave_sizze_46802 - 1, wave_sizze_46802))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46838 = skip_waves_46839 * wave_sizze_46802;
                if (slt32(local_tid_46800 + offset_46838,
                          sext_i64_i32(segred_group_sizze_34138)) &&
                    ((local_tid_46800 - squot32(local_tid_46800,
                                                wave_sizze_46802) *
                      wave_sizze_46802) == 0 && (squot32(local_tid_46800,
                                                         wave_sizze_46802) &
                                                 (2 * skip_waves_46839 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46826 = ((__local
                                    bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800 +
                                                               offset_46838)];
                        x_46827 = ((__local
                                    int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800 +
                                                                  offset_46838)];
                        x_46828 = ((__local
                                    float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800 +
                                                                offset_46838)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46829;
                        int32_t defunc_1_op_res_46830;
                        
                        if (x_46823) {
                            defunc_1_op_res_46829 = x_46823;
                            defunc_1_op_res_46830 = x_46824;
                        } else {
                            bool x_46831 = x_46826 && x_46826;
                            bool x_46832 = !x_46826;
                            bool y_46833 = x_46823 && x_46832;
                            bool defunc_1_op_res_f_res_46834 = x_46831 ||
                                 y_46833;
                            int32_t defunc_1_op_res_f_res_46835;
                            
                            if (x_46826) {
                                defunc_1_op_res_f_res_46835 = x_46827;
                            } else {
                                defunc_1_op_res_f_res_46835 = x_46824;
                            }
                            defunc_1_op_res_46829 = defunc_1_op_res_f_res_46834;
                            defunc_1_op_res_46830 = defunc_1_op_res_f_res_46835;
                        }
                        
                        float defunc_1_op_res_46836 = x_46825 + x_46828;
                        
                        x_46823 = defunc_1_op_res_46829;
                        x_46824 = defunc_1_op_res_46830;
                        x_46825 = defunc_1_op_res_46836;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800)] =
                            x_46823;
                        ((__local
                          int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800)] =
                            x_46824;
                        ((__local
                          float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800)] =
                            x_46825;
                    }
                }
                skip_waves_46839 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_46800) == (int64_t) 0) {
                    x_acc_46817 = x_46823;
                    x_acc_46818 = x_46824;
                    x_acc_46819 = x_46825;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_46800) == (int64_t) 0)) {
                    x_acc_46817 = 0;
                    x_acc_46818 = -1;
                    x_acc_46819 = 0.0F;
                }
            }
        }
        x_34145 = x_acc_46817;
        x_34146 = x_acc_46818;
        x_34147 = x_acc_46819;
        if (groups_per_segment_46786 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46800 == 0) {
                    ((__global bool *) mem_45409)[gtid_33985] = x_acc_46817;
                    ((__global int32_t *) mem_45411)[gtid_33985] = x_acc_46818;
                    ((__global float *) mem_45413)[gtid_33985] = x_acc_46819;
                }
            }
        } else {
            int32_t old_counter_46840;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46800 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_46791)[sext_i32_i64(virt_group_id_46814) *
                                                       segred_group_sizze_34138] =
                        x_acc_46817;
                    ((__global
                      int32_t *) group_res_arr_mem_46793)[sext_i32_i64(virt_group_id_46814) *
                                                          segred_group_sizze_34138] =
                        x_acc_46818;
                    ((__global
                      float *) group_res_arr_mem_46795)[sext_i32_i64(virt_group_id_46814) *
                                                        segred_group_sizze_34138] =
                        x_acc_46819;
                    mem_fence_global();
                    old_counter_46840 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46797)[sext_i32_i64(srem32(flat_segment_id_46815,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46810)[(int64_t) 0] =
                        old_counter_46840 == groups_per_segment_46786 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46841;
            
            is_last_group_46841 = ((__local
                                    bool *) sync_arr_mem_46810)[(int64_t) 0];
            if (is_last_group_46841) {
                if (local_tid_46800 == 0) {
                    old_counter_46840 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46797)[sext_i32_i64(srem32(flat_segment_id_46815,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46786));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46842 =
                            sdiv_up64(groups_per_segment_46786,
                                      segred_group_sizze_34138);
                    
                    x_34145 = 0;
                    x_34146 = -1;
                    x_34147 = 0.0F;
                    for (int64_t i_46843 = 0; i_46843 < read_per_thread_46842;
                         i_46843++) {
                        int64_t group_res_id_46844 =
                                sext_i32_i64(local_tid_46800) *
                                read_per_thread_46842 + i_46843;
                        int64_t index_of_group_res_46845 =
                                sext_i32_i64(flat_segment_id_46815) *
                                groups_per_segment_46786 + group_res_id_46844;
                        
                        if (slt64(group_res_id_46844,
                                  groups_per_segment_46786)) {
                            x_34148 = ((__global
                                        bool *) group_res_arr_mem_46791)[index_of_group_res_46845 *
                                                                         segred_group_sizze_34138];
                            x_34149 = ((__global
                                        int32_t *) group_res_arr_mem_46793)[index_of_group_res_46845 *
                                                                            segred_group_sizze_34138];
                            x_34150 = ((__global
                                        float *) group_res_arr_mem_46795)[index_of_group_res_46845 *
                                                                          segred_group_sizze_34138];
                            
                            bool defunc_1_op_res_34151;
                            int32_t defunc_1_op_res_34152;
                            
                            if (x_34145) {
                                defunc_1_op_res_34151 = x_34145;
                                defunc_1_op_res_34152 = x_34146;
                            } else {
                                bool x_34153 = x_34148 && x_34148;
                                bool x_34154 = !x_34148;
                                bool y_34155 = x_34145 && x_34154;
                                bool defunc_1_op_res_f_res_34156 = x_34153 ||
                                     y_34155;
                                int32_t defunc_1_op_res_f_res_34157;
                                
                                if (x_34148) {
                                    defunc_1_op_res_f_res_34157 = x_34149;
                                } else {
                                    defunc_1_op_res_f_res_34157 = x_34146;
                                }
                                defunc_1_op_res_34151 =
                                    defunc_1_op_res_f_res_34156;
                                defunc_1_op_res_34152 =
                                    defunc_1_op_res_f_res_34157;
                            }
                            
                            float defunc_1_op_res_34158 = x_34147 + x_34150;
                            
                            x_34145 = defunc_1_op_res_34151;
                            x_34146 = defunc_1_op_res_34152;
                            x_34147 = defunc_1_op_res_34158;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800)] =
                    x_34145;
                ((__local
                  int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800)] =
                    x_34146;
                ((__local
                  float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800)] =
                    x_34147;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46846;
                    int32_t skip_waves_46847;
                    
                    skip_waves_46847 = 1;
                    
                    bool x_46823;
                    int32_t x_46824;
                    float x_46825;
                    bool x_46826;
                    int32_t x_46827;
                    float x_46828;
                    
                    offset_46846 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46800,
                                  sext_i64_i32(segred_group_sizze_34138))) {
                            x_46823 = ((__local
                                        bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800 +
                                                                   offset_46846)];
                            x_46824 = ((__local
                                        int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800 +
                                                                      offset_46846)];
                            x_46825 = ((__local
                                        float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800 +
                                                                    offset_46846)];
                        }
                    }
                    offset_46846 = 1;
                    while (slt32(offset_46846, wave_sizze_46802)) {
                        if (slt32(local_tid_46800 + offset_46846,
                                  sext_i64_i32(segred_group_sizze_34138)) &&
                            ((local_tid_46800 - squot32(local_tid_46800,
                                                        wave_sizze_46802) *
                              wave_sizze_46802) & (2 * offset_46846 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46826 = ((volatile __local
                                            bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800 +
                                                                       offset_46846)];
                                x_46827 = ((volatile __local
                                            int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800 +
                                                                          offset_46846)];
                                x_46828 = ((volatile __local
                                            float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800 +
                                                                        offset_46846)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46829;
                                int32_t defunc_1_op_res_46830;
                                
                                if (x_46823) {
                                    defunc_1_op_res_46829 = x_46823;
                                    defunc_1_op_res_46830 = x_46824;
                                } else {
                                    bool x_46831 = x_46826 && x_46826;
                                    bool x_46832 = !x_46826;
                                    bool y_46833 = x_46823 && x_46832;
                                    bool defunc_1_op_res_f_res_46834 =
                                         x_46831 || y_46833;
                                    int32_t defunc_1_op_res_f_res_46835;
                                    
                                    if (x_46826) {
                                        defunc_1_op_res_f_res_46835 = x_46827;
                                    } else {
                                        defunc_1_op_res_f_res_46835 = x_46824;
                                    }
                                    defunc_1_op_res_46829 =
                                        defunc_1_op_res_f_res_46834;
                                    defunc_1_op_res_46830 =
                                        defunc_1_op_res_f_res_46835;
                                }
                                
                                float defunc_1_op_res_46836 = x_46825 + x_46828;
                                
                                x_46823 = defunc_1_op_res_46829;
                                x_46824 = defunc_1_op_res_46830;
                                x_46825 = defunc_1_op_res_46836;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800)] =
                                    x_46823;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800)] =
                                    x_46824;
                                ((volatile __local
                                  float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800)] =
                                    x_46825;
                            }
                        }
                        offset_46846 *= 2;
                    }
                    while (slt32(skip_waves_46847,
                                 squot32(sext_i64_i32(segred_group_sizze_34138) +
                                         wave_sizze_46802 - 1,
                                         wave_sizze_46802))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46846 = skip_waves_46847 * wave_sizze_46802;
                        if (slt32(local_tid_46800 + offset_46846,
                                  sext_i64_i32(segred_group_sizze_34138)) &&
                            ((local_tid_46800 - squot32(local_tid_46800,
                                                        wave_sizze_46802) *
                              wave_sizze_46802) == 0 &&
                             (squot32(local_tid_46800, wave_sizze_46802) & (2 *
                                                                            skip_waves_46847 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46826 = ((__local
                                            bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800 +
                                                                       offset_46846)];
                                x_46827 = ((__local
                                            int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800 +
                                                                          offset_46846)];
                                x_46828 = ((__local
                                            float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800 +
                                                                        offset_46846)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46829;
                                int32_t defunc_1_op_res_46830;
                                
                                if (x_46823) {
                                    defunc_1_op_res_46829 = x_46823;
                                    defunc_1_op_res_46830 = x_46824;
                                } else {
                                    bool x_46831 = x_46826 && x_46826;
                                    bool x_46832 = !x_46826;
                                    bool y_46833 = x_46823 && x_46832;
                                    bool defunc_1_op_res_f_res_46834 =
                                         x_46831 || y_46833;
                                    int32_t defunc_1_op_res_f_res_46835;
                                    
                                    if (x_46826) {
                                        defunc_1_op_res_f_res_46835 = x_46827;
                                    } else {
                                        defunc_1_op_res_f_res_46835 = x_46824;
                                    }
                                    defunc_1_op_res_46829 =
                                        defunc_1_op_res_f_res_46834;
                                    defunc_1_op_res_46830 =
                                        defunc_1_op_res_f_res_46835;
                                }
                                
                                float defunc_1_op_res_46836 = x_46825 + x_46828;
                                
                                x_46823 = defunc_1_op_res_46829;
                                x_46824 = defunc_1_op_res_46830;
                                x_46825 = defunc_1_op_res_46836;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_46804)[sext_i32_i64(local_tid_46800)] =
                                    x_46823;
                                ((__local
                                  int32_t *) red_arr_mem_46806)[sext_i32_i64(local_tid_46800)] =
                                    x_46824;
                                ((__local
                                  float *) red_arr_mem_46808)[sext_i32_i64(local_tid_46800)] =
                                    x_46825;
                            }
                        }
                        skip_waves_46847 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46800 == 0) {
                            ((__global bool *) mem_45409)[gtid_33985] = x_46823;
                            ((__global int32_t *) mem_45411)[gtid_33985] =
                                x_46824;
                            ((__global float *) mem_45413)[gtid_33985] =
                                x_46825;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34138
}
__kernel void mainDetailedzisegred_nonseg_32723(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_46517_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_46515_backing_aligned_1,
                                                int64_t m_27772,
                                                int64_t num_groups_32718,
                                                int64_t num_threads_46509,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_45244,
                                                __global
                                                unsigned char *mem_45249,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_46505,
                                                __global
                                                unsigned char *group_res_arr_mem_46507)
{
    #define segred_group_sizze_32716 (mainDetailedzisegred_group_sizze_32715)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46517_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46517_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_46515_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_46515_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46510;
    int32_t local_tid_46511;
    int64_t group_sizze_46514;
    int32_t wave_sizze_46513;
    int32_t group_tid_46512;
    
    global_tid_46510 = get_global_id(0);
    local_tid_46511 = get_local_id(0);
    group_sizze_46514 = get_local_size(0);
    wave_sizze_46513 = LOCKSTEP_WIDTH;
    group_tid_46512 = get_group_id(0);
    
    int32_t phys_tid_32723;
    
    phys_tid_32723 = global_tid_46510;
    
    __local char *sync_arr_mem_46515;
    
    sync_arr_mem_46515 = (__local char *) sync_arr_mem_46515_backing_0;
    
    __local char *red_arr_mem_46517;
    
    red_arr_mem_46517 = (__local char *) red_arr_mem_46517_backing_1;
    
    int64_t dummy_32721;
    
    dummy_32721 = (int64_t) 0;
    
    int64_t gtid_32722;
    
    gtid_32722 = (int64_t) 0;
    
    int32_t x_acc_46519;
    int64_t chunk_sizze_46520;
    
    chunk_sizze_46520 = smin64(sdiv_up64(m_27772,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_32716 *
                                         num_groups_32718))),
                               sdiv_up64(m_27772 - sext_i32_i64(phys_tid_32723),
                                         num_threads_46509));
    
    int32_t x_28170;
    int32_t x_28171;
    
    // neutral-initialise the accumulators
    {
        x_acc_46519 = 0;
    }
    for (int64_t i_46524 = 0; i_46524 < chunk_sizze_46520; i_46524++) {
        gtid_32722 = sext_i32_i64(phys_tid_32723) + num_threads_46509 * i_46524;
        // apply map function
        {
            int32_t x_28173 = ((__global
                                int32_t *) defunc_3_map_res_mem_45244)[gtid_32722];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28170 = x_acc_46519;
            }
            // load new values
            {
                x_28171 = x_28173;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28172 = smax32(x_28170, x_28171);
                
                // store in accumulator
                {
                    x_acc_46519 = defunc_1_op_res_28172;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28170 = x_acc_46519;
        ((__local int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511)] =
            x_28170;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46525;
    int32_t skip_waves_46526;
    
    skip_waves_46526 = 1;
    
    int32_t x_46521;
    int32_t x_46522;
    
    offset_46525 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46511, sext_i64_i32(segred_group_sizze_32716))) {
            x_46521 = ((__local
                        int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511 +
                                                      offset_46525)];
        }
    }
    offset_46525 = 1;
    while (slt32(offset_46525, wave_sizze_46513)) {
        if (slt32(local_tid_46511 + offset_46525,
                  sext_i64_i32(segred_group_sizze_32716)) && ((local_tid_46511 -
                                                               squot32(local_tid_46511,
                                                                       wave_sizze_46513) *
                                                               wave_sizze_46513) &
                                                              (2 *
                                                               offset_46525 -
                                                               1)) == 0) {
            // read array element
            {
                x_46522 = ((volatile __local
                            int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511 +
                                                          offset_46525)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_46523 = smax32(x_46521, x_46522);
                
                x_46521 = defunc_1_op_res_46523;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511)] =
                    x_46521;
            }
        }
        offset_46525 *= 2;
    }
    while (slt32(skip_waves_46526,
                 squot32(sext_i64_i32(segred_group_sizze_32716) +
                         wave_sizze_46513 - 1, wave_sizze_46513))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46525 = skip_waves_46526 * wave_sizze_46513;
        if (slt32(local_tid_46511 + offset_46525,
                  sext_i64_i32(segred_group_sizze_32716)) && ((local_tid_46511 -
                                                               squot32(local_tid_46511,
                                                                       wave_sizze_46513) *
                                                               wave_sizze_46513) ==
                                                              0 &&
                                                              (squot32(local_tid_46511,
                                                                       wave_sizze_46513) &
                                                               (2 *
                                                                skip_waves_46526 -
                                                                1)) == 0)) {
            // read array element
            {
                x_46522 = ((__local
                            int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511 +
                                                          offset_46525)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_46523 = smax32(x_46521, x_46522);
                
                x_46521 = defunc_1_op_res_46523;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511)] =
                    x_46521;
            }
        }
        skip_waves_46526 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_46511) == (int64_t) 0) {
            x_acc_46519 = x_46521;
        }
    }
    
    int32_t old_counter_46527;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_46511 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_46507)[sext_i32_i64(group_tid_46512) *
                                                  segred_group_sizze_32716] =
                x_acc_46519;
            mem_fence_global();
            old_counter_46527 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_46505)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_46515)[(int64_t) 0] =
                old_counter_46527 == num_groups_32718 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_46528;
    
    is_last_group_46528 = ((__local bool *) sync_arr_mem_46515)[(int64_t) 0];
    if (is_last_group_46528) {
        if (local_tid_46511 == 0) {
            old_counter_46527 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_46505)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_32718));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_46529 = sdiv_up64(num_groups_32718,
                                                      segred_group_sizze_32716);
            
            x_28170 = 0;
            for (int64_t i_46530 = 0; i_46530 < read_per_thread_46529;
                 i_46530++) {
                int64_t group_res_id_46531 = sext_i32_i64(local_tid_46511) *
                        read_per_thread_46529 + i_46530;
                int64_t index_of_group_res_46532 = group_res_id_46531;
                
                if (slt64(group_res_id_46531, num_groups_32718)) {
                    x_28171 = ((__global
                                int32_t *) group_res_arr_mem_46507)[index_of_group_res_46532 *
                                                                    segred_group_sizze_32716];
                    
                    int32_t defunc_1_op_res_28172;
                    
                    defunc_1_op_res_28172 = smax32(x_28170, x_28171);
                    x_28170 = defunc_1_op_res_28172;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511)] =
            x_28170;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_46533;
            int32_t skip_waves_46534;
            
            skip_waves_46534 = 1;
            
            int32_t x_46521;
            int32_t x_46522;
            
            offset_46533 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46511,
                          sext_i64_i32(segred_group_sizze_32716))) {
                    x_46521 = ((__local
                                int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511 +
                                                              offset_46533)];
                }
            }
            offset_46533 = 1;
            while (slt32(offset_46533, wave_sizze_46513)) {
                if (slt32(local_tid_46511 + offset_46533,
                          sext_i64_i32(segred_group_sizze_32716)) &&
                    ((local_tid_46511 - squot32(local_tid_46511,
                                                wave_sizze_46513) *
                      wave_sizze_46513) & (2 * offset_46533 - 1)) == 0) {
                    // read array element
                    {
                        x_46522 = ((volatile __local
                                    int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511 +
                                                                  offset_46533)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_46523 = smax32(x_46521,
                                                               x_46522);
                        
                        x_46521 = defunc_1_op_res_46523;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511)] =
                            x_46521;
                    }
                }
                offset_46533 *= 2;
            }
            while (slt32(skip_waves_46534,
                         squot32(sext_i64_i32(segred_group_sizze_32716) +
                                 wave_sizze_46513 - 1, wave_sizze_46513))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46533 = skip_waves_46534 * wave_sizze_46513;
                if (slt32(local_tid_46511 + offset_46533,
                          sext_i64_i32(segred_group_sizze_32716)) &&
                    ((local_tid_46511 - squot32(local_tid_46511,
                                                wave_sizze_46513) *
                      wave_sizze_46513) == 0 && (squot32(local_tid_46511,
                                                         wave_sizze_46513) &
                                                 (2 * skip_waves_46534 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46522 = ((__local
                                    int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511 +
                                                                  offset_46533)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_46523 = smax32(x_46521,
                                                               x_46522);
                        
                        x_46521 = defunc_1_op_res_46523;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_46517)[sext_i32_i64(local_tid_46511)] =
                            x_46521;
                    }
                }
                skip_waves_46534 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_46511 == 0) {
                    ((__global int32_t *) mem_45249)[(int64_t) 0] = x_46521;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32716
}
__kernel void mainDetailedzisegred_small_30429(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45775_backing_aligned_0,
                                               int64_t N_27771, int64_t m_27772,
                                               int64_t i32_res_27781,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_30568,
                                               int64_t segment_sizze_nonzzero_45768,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *binop_p_mem_44390,
                                               __global
                                               unsigned char *mem_44531,
                                               __global
                                               unsigned char *mem_44536)
{
    #define segred_group_sizze_30567 (mainDetailedzisegred_group_sizze_30423)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45775_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45775_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45770;
    int32_t local_tid_45771;
    int64_t group_sizze_45774;
    int32_t wave_sizze_45773;
    int32_t group_tid_45772;
    
    global_tid_45770 = get_global_id(0);
    local_tid_45771 = get_local_id(0);
    group_sizze_45774 = get_local_size(0);
    wave_sizze_45773 = LOCKSTEP_WIDTH;
    group_tid_45772 = get_group_id(0);
    
    int32_t phys_tid_30429;
    
    phys_tid_30429 = global_tid_45770;
    
    __local char *red_arr_mem_45775;
    
    red_arr_mem_45775 = (__local char *) red_arr_mem_45775_backing_0;
    
    int32_t phys_group_id_45777;
    
    phys_group_id_45777 = get_group_id(0);
    for (int32_t i_45778 = 0; i_45778 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772 * i32_res_27787 *
                                          i32_res_27787,
                                          squot64(segred_group_sizze_30567,
                                                  segment_sizze_nonzzero_45768))) -
                   phys_group_id_45777, sext_i64_i32(num_groups_30568));
         i_45778++) {
        int32_t virt_group_id_45779 = phys_group_id_45777 + i_45778 *
                sext_i64_i32(num_groups_30568);
        int64_t gtid_30416 = squot64(squot64(sext_i32_i64(local_tid_45771),
                                             segment_sizze_nonzzero_45768) +
                                     sext_i32_i64(virt_group_id_45779) *
                                     squot64(segred_group_sizze_30567,
                                             segment_sizze_nonzzero_45768),
                                     i32_res_27787 * i32_res_27787);
        int64_t gtid_30417 = squot64(squot64(sext_i32_i64(local_tid_45771),
                                             segment_sizze_nonzzero_45768) +
                                     sext_i32_i64(virt_group_id_45779) *
                                     squot64(segred_group_sizze_30567,
                                             segment_sizze_nonzzero_45768) -
                                     squot64(squot64(sext_i32_i64(local_tid_45771),
                                                     segment_sizze_nonzzero_45768) +
                                             sext_i32_i64(virt_group_id_45779) *
                                             squot64(segred_group_sizze_30567,
                                                     segment_sizze_nonzzero_45768),
                                             i32_res_27787 * i32_res_27787) *
                                     (i32_res_27787 * i32_res_27787),
                                     i32_res_27787);
        int64_t gtid_30418 = squot64(sext_i32_i64(local_tid_45771),
                                     segment_sizze_nonzzero_45768) +
                sext_i32_i64(virt_group_id_45779) *
                squot64(segred_group_sizze_30567,
                        segment_sizze_nonzzero_45768) -
                squot64(squot64(sext_i32_i64(local_tid_45771),
                                segment_sizze_nonzzero_45768) +
                        sext_i32_i64(virt_group_id_45779) *
                        squot64(segred_group_sizze_30567,
                                segment_sizze_nonzzero_45768), i32_res_27787 *
                        i32_res_27787) * (i32_res_27787 * i32_res_27787) -
                squot64(squot64(sext_i32_i64(local_tid_45771),
                                segment_sizze_nonzzero_45768) +
                        sext_i32_i64(virt_group_id_45779) *
                        squot64(segred_group_sizze_30567,
                                segment_sizze_nonzzero_45768) -
                        squot64(squot64(sext_i32_i64(local_tid_45771),
                                        segment_sizze_nonzzero_45768) +
                                sext_i32_i64(virt_group_id_45779) *
                                squot64(segred_group_sizze_30567,
                                        segment_sizze_nonzzero_45768),
                                i32_res_27787 * i32_res_27787) *
                        (i32_res_27787 * i32_res_27787), i32_res_27787) *
                i32_res_27787;
        int64_t gtid_30428 = srem64(sext_i32_i64(local_tid_45771),
                                    i32_res_27781);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27781) && (((slt64(gtid_30416,
                                                              m_27772) &&
                                                        slt64(gtid_30417,
                                                              i32_res_27787)) &&
                                                       slt64(gtid_30418,
                                                             i32_res_27787)) &&
                                                      slt64(sext_i32_i64(local_tid_45771),
                                                            i32_res_27781 *
                                                            squot64(segred_group_sizze_30567,
                                                                    segment_sizze_nonzzero_45768)))) {
                float x_30577 = ((__global
                                  float *) images_mem_44381)[gtid_30416 *
                                                             N_27771 +
                                                             gtid_30428];
                float x_30578 = ((__global
                                  float *) binop_p_mem_44390)[gtid_30417 *
                                                              N_27771 +
                                                              gtid_30428];
                float x_30579 = ((__global float *) mem_44531)[gtid_30418 *
                                                               N_27771 +
                                                               gtid_30428];
                float x_30580 = x_30578 * x_30579;
                bool isnan_res_30581;
                
                isnan_res_30581 = futrts_isnan32(x_30577);
                
                float y_30582;
                
                if (isnan_res_30581) {
                    y_30582 = 0.0F;
                } else {
                    y_30582 = 1.0F;
                }
                
                float defunc_2_f_res_30583 = x_30580 * y_30582;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)] =
                        defunc_2_f_res_30583;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27781)) {
            // perform segmented scan to imitate reduction
            {
                float x_30571;
                float x_30572;
                float x_45780;
                float x_45781;
                bool ltid_in_bounds_45783;
                
                ltid_in_bounds_45783 = slt64(sext_i32_i64(local_tid_45771),
                                             i32_res_27781 *
                                             squot64(segred_group_sizze_30567,
                                                     segment_sizze_nonzzero_45768));
                
                int32_t skip_threads_45784;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45783) {
                        x_30572 = ((volatile __local
                                    float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)];
                        if ((local_tid_45771 - squot32(local_tid_45771, 32) *
                             32) == 0) {
                            x_30571 = x_30572;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45784 = 1;
                    while (slt32(skip_threads_45784, 32)) {
                        if (sle32(skip_threads_45784, local_tid_45771 -
                                  squot32(local_tid_45771, 32) * 32) &&
                            ltid_in_bounds_45783) {
                            // read operands
                            {
                                x_30571 = ((volatile __local
                                            float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771) -
                                                                        sext_i32_i64(skip_threads_45784)];
                            }
                            // perform operation
                            {
                                bool inactive_45785 =
                                     slt64(srem64(sext_i32_i64(local_tid_45771),
                                                  i32_res_27781),
                                           sext_i32_i64(local_tid_45771) -
                                           sext_i32_i64(local_tid_45771 -
                                           skip_threads_45784));
                                
                                if (inactive_45785) {
                                    x_30571 = x_30572;
                                }
                                if (!inactive_45785) {
                                    float defunc_1_op_res_30573 = x_30571 +
                                          x_30572;
                                    
                                    x_30571 = defunc_1_op_res_30573;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45773, skip_threads_45784)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45784, local_tid_45771 -
                                  squot32(local_tid_45771, 32) * 32) &&
                            ltid_in_bounds_45783) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)] =
                                    x_30571;
                                x_30572 = x_30571;
                            }
                        }
                        if (sle32(wave_sizze_45773, skip_threads_45784)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45784 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45771 - squot32(local_tid_45771, 32) * 32) ==
                        31 && ltid_in_bounds_45783) {
                        ((volatile __local
                          float *) red_arr_mem_45775)[sext_i32_i64(squot32(local_tid_45771,
                                                                           32))] =
                            x_30571;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45786;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45771, 32) == 0 &&
                            ltid_in_bounds_45783) {
                            x_45781 = ((volatile __local
                                        float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)];
                            if ((local_tid_45771 - squot32(local_tid_45771,
                                                           32) * 32) == 0) {
                                x_45780 = x_45781;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45786 = 1;
                        while (slt32(skip_threads_45786, 32)) {
                            if (sle32(skip_threads_45786, local_tid_45771 -
                                      squot32(local_tid_45771, 32) * 32) &&
                                (squot32(local_tid_45771, 32) == 0 &&
                                 ltid_in_bounds_45783)) {
                                // read operands
                                {
                                    x_45780 = ((volatile __local
                                                float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771) -
                                                                            sext_i32_i64(skip_threads_45786)];
                                }
                                // perform operation
                                {
                                    bool inactive_45787 =
                                         slt64(srem64(sext_i32_i64(local_tid_45771 *
                                                      32 + 32 - 1),
                                                      i32_res_27781),
                                               sext_i32_i64(local_tid_45771 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45771 -
                                                             skip_threads_45786) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45787) {
                                        x_45780 = x_45781;
                                    }
                                    if (!inactive_45787) {
                                        float defunc_1_op_res_45782 = x_45780 +
                                              x_45781;
                                        
                                        x_45780 = defunc_1_op_res_45782;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45773, skip_threads_45786)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45786, local_tid_45771 -
                                      squot32(local_tid_45771, 32) * 32) &&
                                (squot32(local_tid_45771, 32) == 0 &&
                                 ltid_in_bounds_45783)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)] =
                                        x_45780;
                                    x_45781 = x_45780;
                                }
                            }
                            if (sle32(wave_sizze_45773, skip_threads_45786)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45786 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45771, 32) == 0 ||
                          !ltid_in_bounds_45783)) {
                        // read operands
                        {
                            x_30572 = x_30571;
                            x_30571 = ((__local
                                        float *) red_arr_mem_45775)[sext_i32_i64(squot32(local_tid_45771,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45788 =
                                 slt64(srem64(sext_i32_i64(local_tid_45771),
                                              i32_res_27781),
                                       sext_i32_i64(local_tid_45771) -
                                       sext_i32_i64(squot32(local_tid_45771,
                                                            32) * 32 - 1));
                            
                            if (inactive_45788) {
                                x_30571 = x_30572;
                            }
                            if (!inactive_45788) {
                                float defunc_1_op_res_30573 = x_30571 + x_30572;
                                
                                x_30571 = defunc_1_op_res_30573;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)] =
                                x_30571;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45771, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45775)[sext_i32_i64(local_tid_45771)] =
                            x_30572;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45779) *
                      squot64(segred_group_sizze_30567,
                              segment_sizze_nonzzero_45768) +
                      sext_i32_i64(local_tid_45771), m_27772 * i32_res_27787 *
                      i32_res_27787) && slt64(sext_i32_i64(local_tid_45771),
                                              squot64(segred_group_sizze_30567,
                                                      segment_sizze_nonzzero_45768))) {
                ((__global
                  float *) mem_44536)[squot64(sext_i32_i64(virt_group_id_45779) *
                                              squot64(segred_group_sizze_30567,
                                                      segment_sizze_nonzzero_45768) +
                                              sext_i32_i64(local_tid_45771),
                                              i32_res_27787 * i32_res_27787) *
                                      (i32_res_27787 * i32_res_27787) +
                                      squot64(sext_i32_i64(virt_group_id_45779) *
                                              squot64(segred_group_sizze_30567,
                                                      segment_sizze_nonzzero_45768) +
                                              sext_i32_i64(local_tid_45771) -
                                              squot64(sext_i32_i64(virt_group_id_45779) *
                                                      squot64(segred_group_sizze_30567,
                                                              segment_sizze_nonzzero_45768) +
                                                      sext_i32_i64(local_tid_45771),
                                                      i32_res_27787 *
                                                      i32_res_27787) *
                                              (i32_res_27787 * i32_res_27787),
                                              i32_res_27787) * i32_res_27787 +
                                      (sext_i32_i64(virt_group_id_45779) *
                                       squot64(segred_group_sizze_30567,
                                               segment_sizze_nonzzero_45768) +
                                       sext_i32_i64(local_tid_45771) -
                                       squot64(sext_i32_i64(virt_group_id_45779) *
                                               squot64(segred_group_sizze_30567,
                                                       segment_sizze_nonzzero_45768) +
                                               sext_i32_i64(local_tid_45771),
                                               i32_res_27787 * i32_res_27787) *
                                       (i32_res_27787 * i32_res_27787) -
                                       squot64(sext_i32_i64(virt_group_id_45779) *
                                               squot64(segred_group_sizze_30567,
                                                       segment_sizze_nonzzero_45768) +
                                               sext_i32_i64(local_tid_45771) -
                                               squot64(sext_i32_i64(virt_group_id_45779) *
                                                       squot64(segred_group_sizze_30567,
                                                               segment_sizze_nonzzero_45768) +
                                                       sext_i32_i64(local_tid_45771),
                                                       i32_res_27787 *
                                                       i32_res_27787) *
                                               (i32_res_27787 * i32_res_27787),
                                               i32_res_27787) *
                                       i32_res_27787)] = ((__local
                                                           float *) red_arr_mem_45775)[(sext_i32_i64(local_tid_45771) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_45768 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30567
}
__kernel void mainDetailedzisegred_small_31780(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45972_backing_aligned_0,
                                               int64_t N_27771, int64_t m_27772,
                                               int64_t i32_res_27781,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_31833,
                                               int64_t segment_sizze_nonzzero_45965,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *binop_p_mem_44390,
                                               __global
                                               unsigned char *mem_44844)
{
    #define segred_group_sizze_31832 (mainDetailedzisegred_group_sizze_31774)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45972_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45972_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45967;
    int32_t local_tid_45968;
    int64_t group_sizze_45971;
    int32_t wave_sizze_45970;
    int32_t group_tid_45969;
    
    global_tid_45967 = get_global_id(0);
    local_tid_45968 = get_local_id(0);
    group_sizze_45971 = get_local_size(0);
    wave_sizze_45970 = LOCKSTEP_WIDTH;
    group_tid_45969 = get_group_id(0);
    
    int32_t phys_tid_31780;
    
    phys_tid_31780 = global_tid_45967;
    
    __local char *red_arr_mem_45972;
    
    red_arr_mem_45972 = (__local char *) red_arr_mem_45972_backing_0;
    
    int32_t phys_group_id_45974;
    
    phys_group_id_45974 = get_group_id(0);
    for (int32_t i_45975 = 0; i_45975 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772 * i32_res_27787,
                                          squot64(segred_group_sizze_31832,
                                                  segment_sizze_nonzzero_45965))) -
                   phys_group_id_45974, sext_i64_i32(num_groups_31833));
         i_45975++) {
        int32_t virt_group_id_45976 = phys_group_id_45974 + i_45975 *
                sext_i64_i32(num_groups_31833);
        int64_t gtid_31769 = squot64(squot64(sext_i32_i64(local_tid_45968),
                                             segment_sizze_nonzzero_45965) +
                                     sext_i32_i64(virt_group_id_45976) *
                                     squot64(segred_group_sizze_31832,
                                             segment_sizze_nonzzero_45965),
                                     i32_res_27787);
        int64_t gtid_31770 = squot64(sext_i32_i64(local_tid_45968),
                                     segment_sizze_nonzzero_45965) +
                sext_i32_i64(virt_group_id_45976) *
                squot64(segred_group_sizze_31832,
                        segment_sizze_nonzzero_45965) -
                squot64(squot64(sext_i32_i64(local_tid_45968),
                                segment_sizze_nonzzero_45965) +
                        sext_i32_i64(virt_group_id_45976) *
                        squot64(segred_group_sizze_31832,
                                segment_sizze_nonzzero_45965), i32_res_27787) *
                i32_res_27787;
        int64_t gtid_31779 = srem64(sext_i32_i64(local_tid_45968),
                                    i32_res_27781);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27781) && ((slt64(gtid_31769,
                                                             m_27772) &&
                                                       slt64(gtid_31770,
                                                             i32_res_27787)) &&
                                                      slt64(sext_i32_i64(local_tid_45968),
                                                            i32_res_27781 *
                                                            squot64(segred_group_sizze_31832,
                                                                    segment_sizze_nonzzero_45965)))) {
                float x_31842 = ((__global
                                  float *) images_mem_44381)[gtid_31769 *
                                                             N_27771 +
                                                             gtid_31779];
                bool isnan_res_31843;
                
                isnan_res_31843 = futrts_isnan32(x_31842);
                
                float defunc_1_f_res_31844;
                
                if (isnan_res_31843) {
                    defunc_1_f_res_31844 = 0.0F;
                } else {
                    float x_31841 = ((__global
                                      float *) binop_p_mem_44390)[gtid_31770 *
                                                                  N_27771 +
                                                                  gtid_31779];
                    float defunc_1_f_res_f_res_31845 = x_31841 * x_31842;
                    
                    defunc_1_f_res_31844 = defunc_1_f_res_f_res_31845;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)] =
                        defunc_1_f_res_31844;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27781)) {
            // perform segmented scan to imitate reduction
            {
                float x_31836;
                float x_31837;
                float x_45977;
                float x_45978;
                bool ltid_in_bounds_45980;
                
                ltid_in_bounds_45980 = slt64(sext_i32_i64(local_tid_45968),
                                             i32_res_27781 *
                                             squot64(segred_group_sizze_31832,
                                                     segment_sizze_nonzzero_45965));
                
                int32_t skip_threads_45981;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45980) {
                        x_31837 = ((volatile __local
                                    float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)];
                        if ((local_tid_45968 - squot32(local_tid_45968, 32) *
                             32) == 0) {
                            x_31836 = x_31837;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45981 = 1;
                    while (slt32(skip_threads_45981, 32)) {
                        if (sle32(skip_threads_45981, local_tid_45968 -
                                  squot32(local_tid_45968, 32) * 32) &&
                            ltid_in_bounds_45980) {
                            // read operands
                            {
                                x_31836 = ((volatile __local
                                            float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968) -
                                                                        sext_i32_i64(skip_threads_45981)];
                            }
                            // perform operation
                            {
                                bool inactive_45982 =
                                     slt64(srem64(sext_i32_i64(local_tid_45968),
                                                  i32_res_27781),
                                           sext_i32_i64(local_tid_45968) -
                                           sext_i32_i64(local_tid_45968 -
                                           skip_threads_45981));
                                
                                if (inactive_45982) {
                                    x_31836 = x_31837;
                                }
                                if (!inactive_45982) {
                                    float defunc_1_op_res_31838 = x_31836 +
                                          x_31837;
                                    
                                    x_31836 = defunc_1_op_res_31838;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45970, skip_threads_45981)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45981, local_tid_45968 -
                                  squot32(local_tid_45968, 32) * 32) &&
                            ltid_in_bounds_45980) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)] =
                                    x_31836;
                                x_31837 = x_31836;
                            }
                        }
                        if (sle32(wave_sizze_45970, skip_threads_45981)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45981 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45968 - squot32(local_tid_45968, 32) * 32) ==
                        31 && ltid_in_bounds_45980) {
                        ((volatile __local
                          float *) red_arr_mem_45972)[sext_i32_i64(squot32(local_tid_45968,
                                                                           32))] =
                            x_31836;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45983;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45968, 32) == 0 &&
                            ltid_in_bounds_45980) {
                            x_45978 = ((volatile __local
                                        float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)];
                            if ((local_tid_45968 - squot32(local_tid_45968,
                                                           32) * 32) == 0) {
                                x_45977 = x_45978;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45983 = 1;
                        while (slt32(skip_threads_45983, 32)) {
                            if (sle32(skip_threads_45983, local_tid_45968 -
                                      squot32(local_tid_45968, 32) * 32) &&
                                (squot32(local_tid_45968, 32) == 0 &&
                                 ltid_in_bounds_45980)) {
                                // read operands
                                {
                                    x_45977 = ((volatile __local
                                                float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968) -
                                                                            sext_i32_i64(skip_threads_45983)];
                                }
                                // perform operation
                                {
                                    bool inactive_45984 =
                                         slt64(srem64(sext_i32_i64(local_tid_45968 *
                                                      32 + 32 - 1),
                                                      i32_res_27781),
                                               sext_i32_i64(local_tid_45968 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45968 -
                                                             skip_threads_45983) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45984) {
                                        x_45977 = x_45978;
                                    }
                                    if (!inactive_45984) {
                                        float defunc_1_op_res_45979 = x_45977 +
                                              x_45978;
                                        
                                        x_45977 = defunc_1_op_res_45979;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45970, skip_threads_45983)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45983, local_tid_45968 -
                                      squot32(local_tid_45968, 32) * 32) &&
                                (squot32(local_tid_45968, 32) == 0 &&
                                 ltid_in_bounds_45980)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)] =
                                        x_45977;
                                    x_45978 = x_45977;
                                }
                            }
                            if (sle32(wave_sizze_45970, skip_threads_45983)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45983 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45968, 32) == 0 ||
                          !ltid_in_bounds_45980)) {
                        // read operands
                        {
                            x_31837 = x_31836;
                            x_31836 = ((__local
                                        float *) red_arr_mem_45972)[sext_i32_i64(squot32(local_tid_45968,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45985 =
                                 slt64(srem64(sext_i32_i64(local_tid_45968),
                                              i32_res_27781),
                                       sext_i32_i64(local_tid_45968) -
                                       sext_i32_i64(squot32(local_tid_45968,
                                                            32) * 32 - 1));
                            
                            if (inactive_45985) {
                                x_31836 = x_31837;
                            }
                            if (!inactive_45985) {
                                float defunc_1_op_res_31838 = x_31836 + x_31837;
                                
                                x_31836 = defunc_1_op_res_31838;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)] =
                                x_31836;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45968, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45972)[sext_i32_i64(local_tid_45968)] =
                            x_31837;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45976) *
                      squot64(segred_group_sizze_31832,
                              segment_sizze_nonzzero_45965) +
                      sext_i32_i64(local_tid_45968), m_27772 * i32_res_27787) &&
                slt64(sext_i32_i64(local_tid_45968),
                      squot64(segred_group_sizze_31832,
                              segment_sizze_nonzzero_45965))) {
                ((__global
                  float *) mem_44844)[squot64(sext_i32_i64(virt_group_id_45976) *
                                              squot64(segred_group_sizze_31832,
                                                      segment_sizze_nonzzero_45965) +
                                              sext_i32_i64(local_tid_45968),
                                              i32_res_27787) * i32_res_27787 +
                                      (sext_i32_i64(virt_group_id_45976) *
                                       squot64(segred_group_sizze_31832,
                                               segment_sizze_nonzzero_45965) +
                                       sext_i32_i64(local_tid_45968) -
                                       squot64(sext_i32_i64(virt_group_id_45976) *
                                               squot64(segred_group_sizze_31832,
                                                       segment_sizze_nonzzero_45965) +
                                               sext_i32_i64(local_tid_45968),
                                               i32_res_27787) *
                                       i32_res_27787)] = ((__local
                                                           float *) red_arr_mem_45972)[(sext_i32_i64(local_tid_45968) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_45965 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31832
}
__kernel void mainDetailedzisegred_small_31917(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_46060_backing_aligned_0,
                                               int64_t m_27772,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_31966,
                                               int64_t segment_sizze_nonzzero_46053,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44629,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44850,
                                               __global
                                               unsigned char *mem_44910)
{
    #define segred_group_sizze_31965 (mainDetailedzisegred_group_sizze_31911)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46060_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46060_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46055;
    int32_t local_tid_46056;
    int64_t group_sizze_46059;
    int32_t wave_sizze_46058;
    int32_t group_tid_46057;
    
    global_tid_46055 = get_global_id(0);
    local_tid_46056 = get_local_id(0);
    group_sizze_46059 = get_local_size(0);
    wave_sizze_46058 = LOCKSTEP_WIDTH;
    group_tid_46057 = get_group_id(0);
    
    int32_t phys_tid_31917;
    
    phys_tid_31917 = global_tid_46055;
    
    __local char *red_arr_mem_46060;
    
    red_arr_mem_46060 = (__local char *) red_arr_mem_46060_backing_0;
    
    int32_t phys_group_id_46062;
    
    phys_group_id_46062 = get_group_id(0);
    for (int32_t i_46063 = 0; i_46063 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772 * i32_res_27787,
                                          squot64(segred_group_sizze_31965,
                                                  segment_sizze_nonzzero_46053))) -
                   phys_group_id_46062, sext_i64_i32(num_groups_31966));
         i_46063++) {
        int32_t virt_group_id_46064 = phys_group_id_46062 + i_46063 *
                sext_i64_i32(num_groups_31966);
        int64_t gtid_31906 = squot64(squot64(sext_i32_i64(local_tid_46056),
                                             segment_sizze_nonzzero_46053) +
                                     sext_i32_i64(virt_group_id_46064) *
                                     squot64(segred_group_sizze_31965,
                                             segment_sizze_nonzzero_46053),
                                     i32_res_27787);
        int64_t gtid_31907 = squot64(sext_i32_i64(local_tid_46056),
                                     segment_sizze_nonzzero_46053) +
                sext_i32_i64(virt_group_id_46064) *
                squot64(segred_group_sizze_31965,
                        segment_sizze_nonzzero_46053) -
                squot64(squot64(sext_i32_i64(local_tid_46056),
                                segment_sizze_nonzzero_46053) +
                        sext_i32_i64(virt_group_id_46064) *
                        squot64(segred_group_sizze_31965,
                                segment_sizze_nonzzero_46053), i32_res_27787) *
                i32_res_27787;
        int64_t gtid_31916 = srem64(sext_i32_i64(local_tid_46056),
                                    i32_res_27787);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27787) && ((slt64(gtid_31906,
                                                             m_27772) &&
                                                       slt64(gtid_31907,
                                                             i32_res_27787)) &&
                                                      slt64(sext_i32_i64(local_tid_46056),
                                                            i32_res_27787 *
                                                            squot64(segred_group_sizze_31965,
                                                                    segment_sizze_nonzzero_46053)))) {
                float x_31975 = ((__global
                                  float *) defunc_3_map_res_mem_44850)[gtid_31906 *
                                                                       i32_res_27787 +
                                                                       gtid_31916];
                float x_31976 = ((__global
                                  float *) defunc_3_map_res_mem_44629)[gtid_31906 *
                                                                       (i32_res_27787 *
                                                                        i32_res_27787) +
                                                                       gtid_31907 *
                                                                       i32_res_27787 +
                                                                       gtid_31916];
                float defunc_1_f_res_31977 = x_31975 * x_31976;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)] =
                        defunc_1_f_res_31977;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27787)) {
            // perform segmented scan to imitate reduction
            {
                float x_31969;
                float x_31970;
                float x_46065;
                float x_46066;
                bool ltid_in_bounds_46068;
                
                ltid_in_bounds_46068 = slt64(sext_i32_i64(local_tid_46056),
                                             i32_res_27787 *
                                             squot64(segred_group_sizze_31965,
                                                     segment_sizze_nonzzero_46053));
                
                int32_t skip_threads_46069;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46068) {
                        x_31970 = ((volatile __local
                                    float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)];
                        if ((local_tid_46056 - squot32(local_tid_46056, 32) *
                             32) == 0) {
                            x_31969 = x_31970;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46069 = 1;
                    while (slt32(skip_threads_46069, 32)) {
                        if (sle32(skip_threads_46069, local_tid_46056 -
                                  squot32(local_tid_46056, 32) * 32) &&
                            ltid_in_bounds_46068) {
                            // read operands
                            {
                                x_31969 = ((volatile __local
                                            float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056) -
                                                                        sext_i32_i64(skip_threads_46069)];
                            }
                            // perform operation
                            {
                                bool inactive_46070 =
                                     slt64(srem64(sext_i32_i64(local_tid_46056),
                                                  i32_res_27787),
                                           sext_i32_i64(local_tid_46056) -
                                           sext_i32_i64(local_tid_46056 -
                                           skip_threads_46069));
                                
                                if (inactive_46070) {
                                    x_31969 = x_31970;
                                }
                                if (!inactive_46070) {
                                    float defunc_1_op_res_31971 = x_31969 +
                                          x_31970;
                                    
                                    x_31969 = defunc_1_op_res_31971;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46058, skip_threads_46069)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46069, local_tid_46056 -
                                  squot32(local_tid_46056, 32) * 32) &&
                            ltid_in_bounds_46068) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)] =
                                    x_31969;
                                x_31970 = x_31969;
                            }
                        }
                        if (sle32(wave_sizze_46058, skip_threads_46069)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46069 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46056 - squot32(local_tid_46056, 32) * 32) ==
                        31 && ltid_in_bounds_46068) {
                        ((volatile __local
                          float *) red_arr_mem_46060)[sext_i32_i64(squot32(local_tid_46056,
                                                                           32))] =
                            x_31969;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46071;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46056, 32) == 0 &&
                            ltid_in_bounds_46068) {
                            x_46066 = ((volatile __local
                                        float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)];
                            if ((local_tid_46056 - squot32(local_tid_46056,
                                                           32) * 32) == 0) {
                                x_46065 = x_46066;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46071 = 1;
                        while (slt32(skip_threads_46071, 32)) {
                            if (sle32(skip_threads_46071, local_tid_46056 -
                                      squot32(local_tid_46056, 32) * 32) &&
                                (squot32(local_tid_46056, 32) == 0 &&
                                 ltid_in_bounds_46068)) {
                                // read operands
                                {
                                    x_46065 = ((volatile __local
                                                float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056) -
                                                                            sext_i32_i64(skip_threads_46071)];
                                }
                                // perform operation
                                {
                                    bool inactive_46072 =
                                         slt64(srem64(sext_i32_i64(local_tid_46056 *
                                                      32 + 32 - 1),
                                                      i32_res_27787),
                                               sext_i32_i64(local_tid_46056 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46056 -
                                                             skip_threads_46071) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46072) {
                                        x_46065 = x_46066;
                                    }
                                    if (!inactive_46072) {
                                        float defunc_1_op_res_46067 = x_46065 +
                                              x_46066;
                                        
                                        x_46065 = defunc_1_op_res_46067;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46058, skip_threads_46071)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46071, local_tid_46056 -
                                      squot32(local_tid_46056, 32) * 32) &&
                                (squot32(local_tid_46056, 32) == 0 &&
                                 ltid_in_bounds_46068)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)] =
                                        x_46065;
                                    x_46066 = x_46065;
                                }
                            }
                            if (sle32(wave_sizze_46058, skip_threads_46071)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46071 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46056, 32) == 0 ||
                          !ltid_in_bounds_46068)) {
                        // read operands
                        {
                            x_31970 = x_31969;
                            x_31969 = ((__local
                                        float *) red_arr_mem_46060)[sext_i32_i64(squot32(local_tid_46056,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46073 =
                                 slt64(srem64(sext_i32_i64(local_tid_46056),
                                              i32_res_27787),
                                       sext_i32_i64(local_tid_46056) -
                                       sext_i32_i64(squot32(local_tid_46056,
                                                            32) * 32 - 1));
                            
                            if (inactive_46073) {
                                x_31969 = x_31970;
                            }
                            if (!inactive_46073) {
                                float defunc_1_op_res_31971 = x_31969 + x_31970;
                                
                                x_31969 = defunc_1_op_res_31971;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)] =
                                x_31969;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46056, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46060)[sext_i32_i64(local_tid_46056)] =
                            x_31970;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46064) *
                      squot64(segred_group_sizze_31965,
                              segment_sizze_nonzzero_46053) +
                      sext_i32_i64(local_tid_46056), m_27772 * i32_res_27787) &&
                slt64(sext_i32_i64(local_tid_46056),
                      squot64(segred_group_sizze_31965,
                              segment_sizze_nonzzero_46053))) {
                ((__global
                  float *) mem_44910)[squot64(sext_i32_i64(virt_group_id_46064) *
                                              squot64(segred_group_sizze_31965,
                                                      segment_sizze_nonzzero_46053) +
                                              sext_i32_i64(local_tid_46056),
                                              i32_res_27787) * i32_res_27787 +
                                      (sext_i32_i64(virt_group_id_46064) *
                                       squot64(segred_group_sizze_31965,
                                               segment_sizze_nonzzero_46053) +
                                       sext_i32_i64(local_tid_46056) -
                                       squot64(sext_i32_i64(virt_group_id_46064) *
                                               squot64(segred_group_sizze_31965,
                                                       segment_sizze_nonzzero_46053) +
                                               sext_i32_i64(local_tid_46056),
                                               i32_res_27787) *
                                       i32_res_27787)] = ((__local
                                                           float *) red_arr_mem_46060)[(sext_i32_i64(local_tid_46056) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_46053 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31965
}
__kernel void mainDetailedzisegred_small_32047(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_46192_backing_aligned_0,
                                               int64_t N_27771, int64_t m_27772,
                                               int64_t i32_res_27787,
                                               int64_t num_groups_32094,
                                               int64_t segment_sizze_nonzzero_46185,
                                               __global
                                               unsigned char *mem_44397,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44916,
                                               __global
                                               unsigned char *mem_45134)
{
    #define segred_group_sizze_32093 (mainDetailedzisegred_group_sizze_32041)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46192_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46192_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46187;
    int32_t local_tid_46188;
    int64_t group_sizze_46191;
    int32_t wave_sizze_46190;
    int32_t group_tid_46189;
    
    global_tid_46187 = get_global_id(0);
    local_tid_46188 = get_local_id(0);
    group_sizze_46191 = get_local_size(0);
    wave_sizze_46190 = LOCKSTEP_WIDTH;
    group_tid_46189 = get_group_id(0);
    
    int32_t phys_tid_32047;
    
    phys_tid_32047 = global_tid_46187;
    
    __local char *red_arr_mem_46192;
    
    red_arr_mem_46192 = (__local char *) red_arr_mem_46192_backing_0;
    
    int32_t phys_group_id_46194;
    
    phys_group_id_46194 = get_group_id(0);
    for (int32_t i_46195 = 0; i_46195 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772 * N_27771,
                                          squot64(segred_group_sizze_32093,
                                                  segment_sizze_nonzzero_46185))) -
                   phys_group_id_46194, sext_i64_i32(num_groups_32094));
         i_46195++) {
        int32_t virt_group_id_46196 = phys_group_id_46194 + i_46195 *
                sext_i64_i32(num_groups_32094);
        int64_t gtid_32036 = squot64(squot64(sext_i32_i64(local_tid_46188),
                                             segment_sizze_nonzzero_46185) +
                                     sext_i32_i64(virt_group_id_46196) *
                                     squot64(segred_group_sizze_32093,
                                             segment_sizze_nonzzero_46185),
                                     N_27771);
        int64_t gtid_32037 = squot64(sext_i32_i64(local_tid_46188),
                                     segment_sizze_nonzzero_46185) +
                sext_i32_i64(virt_group_id_46196) *
                squot64(segred_group_sizze_32093,
                        segment_sizze_nonzzero_46185) -
                squot64(squot64(sext_i32_i64(local_tid_46188),
                                segment_sizze_nonzzero_46185) +
                        sext_i32_i64(virt_group_id_46196) *
                        squot64(segred_group_sizze_32093,
                                segment_sizze_nonzzero_46185), N_27771) *
                N_27771;
        int64_t gtid_32046 = srem64(sext_i32_i64(local_tid_46188),
                                    i32_res_27787);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27787) && ((slt64(gtid_32036,
                                                             m_27772) &&
                                                       slt64(gtid_32037,
                                                             N_27771)) &&
                                                      slt64(sext_i32_i64(local_tid_46188),
                                                            i32_res_27787 *
                                                            squot64(segred_group_sizze_32093,
                                                                    segment_sizze_nonzzero_46185)))) {
                float x_32102 = ((__global
                                  float *) defunc_4_map_res_mem_44916)[gtid_32036 *
                                                                       i32_res_27787 +
                                                                       gtid_32046];
                float x_32103 = ((__global float *) mem_44397)[gtid_32037 *
                                                               i32_res_27787 +
                                                               gtid_32046];
                float defunc_1_f_res_32104 = x_32102 * x_32103;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)] =
                        defunc_1_f_res_32104;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27787)) {
            // perform segmented scan to imitate reduction
            {
                float x_32097;
                float x_32098;
                float x_46197;
                float x_46198;
                bool ltid_in_bounds_46200;
                
                ltid_in_bounds_46200 = slt64(sext_i32_i64(local_tid_46188),
                                             i32_res_27787 *
                                             squot64(segred_group_sizze_32093,
                                                     segment_sizze_nonzzero_46185));
                
                int32_t skip_threads_46201;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46200) {
                        x_32098 = ((volatile __local
                                    float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)];
                        if ((local_tid_46188 - squot32(local_tid_46188, 32) *
                             32) == 0) {
                            x_32097 = x_32098;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46201 = 1;
                    while (slt32(skip_threads_46201, 32)) {
                        if (sle32(skip_threads_46201, local_tid_46188 -
                                  squot32(local_tid_46188, 32) * 32) &&
                            ltid_in_bounds_46200) {
                            // read operands
                            {
                                x_32097 = ((volatile __local
                                            float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188) -
                                                                        sext_i32_i64(skip_threads_46201)];
                            }
                            // perform operation
                            {
                                bool inactive_46202 =
                                     slt64(srem64(sext_i32_i64(local_tid_46188),
                                                  i32_res_27787),
                                           sext_i32_i64(local_tid_46188) -
                                           sext_i32_i64(local_tid_46188 -
                                           skip_threads_46201));
                                
                                if (inactive_46202) {
                                    x_32097 = x_32098;
                                }
                                if (!inactive_46202) {
                                    float defunc_1_op_res_32099 = x_32097 +
                                          x_32098;
                                    
                                    x_32097 = defunc_1_op_res_32099;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46190, skip_threads_46201)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46201, local_tid_46188 -
                                  squot32(local_tid_46188, 32) * 32) &&
                            ltid_in_bounds_46200) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)] =
                                    x_32097;
                                x_32098 = x_32097;
                            }
                        }
                        if (sle32(wave_sizze_46190, skip_threads_46201)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46201 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46188 - squot32(local_tid_46188, 32) * 32) ==
                        31 && ltid_in_bounds_46200) {
                        ((volatile __local
                          float *) red_arr_mem_46192)[sext_i32_i64(squot32(local_tid_46188,
                                                                           32))] =
                            x_32097;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46203;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46188, 32) == 0 &&
                            ltid_in_bounds_46200) {
                            x_46198 = ((volatile __local
                                        float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)];
                            if ((local_tid_46188 - squot32(local_tid_46188,
                                                           32) * 32) == 0) {
                                x_46197 = x_46198;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46203 = 1;
                        while (slt32(skip_threads_46203, 32)) {
                            if (sle32(skip_threads_46203, local_tid_46188 -
                                      squot32(local_tid_46188, 32) * 32) &&
                                (squot32(local_tid_46188, 32) == 0 &&
                                 ltid_in_bounds_46200)) {
                                // read operands
                                {
                                    x_46197 = ((volatile __local
                                                float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188) -
                                                                            sext_i32_i64(skip_threads_46203)];
                                }
                                // perform operation
                                {
                                    bool inactive_46204 =
                                         slt64(srem64(sext_i32_i64(local_tid_46188 *
                                                      32 + 32 - 1),
                                                      i32_res_27787),
                                               sext_i32_i64(local_tid_46188 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46188 -
                                                             skip_threads_46203) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46204) {
                                        x_46197 = x_46198;
                                    }
                                    if (!inactive_46204) {
                                        float defunc_1_op_res_46199 = x_46197 +
                                              x_46198;
                                        
                                        x_46197 = defunc_1_op_res_46199;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46190, skip_threads_46203)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46203, local_tid_46188 -
                                      squot32(local_tid_46188, 32) * 32) &&
                                (squot32(local_tid_46188, 32) == 0 &&
                                 ltid_in_bounds_46200)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)] =
                                        x_46197;
                                    x_46198 = x_46197;
                                }
                            }
                            if (sle32(wave_sizze_46190, skip_threads_46203)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46203 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46188, 32) == 0 ||
                          !ltid_in_bounds_46200)) {
                        // read operands
                        {
                            x_32098 = x_32097;
                            x_32097 = ((__local
                                        float *) red_arr_mem_46192)[sext_i32_i64(squot32(local_tid_46188,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46205 =
                                 slt64(srem64(sext_i32_i64(local_tid_46188),
                                              i32_res_27787),
                                       sext_i32_i64(local_tid_46188) -
                                       sext_i32_i64(squot32(local_tid_46188,
                                                            32) * 32 - 1));
                            
                            if (inactive_46205) {
                                x_32097 = x_32098;
                            }
                            if (!inactive_46205) {
                                float defunc_1_op_res_32099 = x_32097 + x_32098;
                                
                                x_32097 = defunc_1_op_res_32099;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)] =
                                x_32097;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46188, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46192)[sext_i32_i64(local_tid_46188)] =
                            x_32098;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46196) *
                      squot64(segred_group_sizze_32093,
                              segment_sizze_nonzzero_46185) +
                      sext_i32_i64(local_tid_46188), m_27772 * N_27771) &&
                slt64(sext_i32_i64(local_tid_46188),
                      squot64(segred_group_sizze_32093,
                              segment_sizze_nonzzero_46185))) {
                ((__global
                  float *) mem_45134)[squot64(sext_i32_i64(virt_group_id_46196) *
                                              squot64(segred_group_sizze_32093,
                                                      segment_sizze_nonzzero_46185) +
                                              sext_i32_i64(local_tid_46188),
                                              N_27771) * N_27771 +
                                      (sext_i32_i64(virt_group_id_46196) *
                                       squot64(segred_group_sizze_32093,
                                               segment_sizze_nonzzero_46185) +
                                       sext_i32_i64(local_tid_46188) -
                                       squot64(sext_i32_i64(virt_group_id_46196) *
                                               squot64(segred_group_sizze_32093,
                                                       segment_sizze_nonzzero_46185) +
                                               sext_i32_i64(local_tid_46188),
                                               N_27771) * N_27771)] = ((__local
                                                                        float *) red_arr_mem_46192)[(sext_i32_i64(local_tid_46188) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_46185 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32093
}
__kernel void mainDetailedzisegred_small_32625(__global int *global_failure,
                                               int failure_is_an_option,
                                               __global
                                               int64_t *global_failure_args,
                                               __local volatile
                                               int64_t *red_arr_mem_46444_backing_aligned_0,
                                               int64_t N_27771, int64_t m_27772,
                                               int64_t i32_res_27781,
                                               int64_t num_groups_32676,
                                               int64_t segment_sizze_nonzzero_46437,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_45178,
                                               __global
                                               unsigned char *mem_45232,
                                               __global
                                               unsigned char *mem_45235)
{
    #define segred_group_sizze_32675 (mainDetailedzisegred_group_sizze_32619)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46444_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46444_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46439;
    int32_t local_tid_46440;
    int64_t group_sizze_46443;
    int32_t wave_sizze_46442;
    int32_t group_tid_46441;
    
    global_tid_46439 = get_global_id(0);
    local_tid_46440 = get_local_id(0);
    group_sizze_46443 = get_local_size(0);
    wave_sizze_46442 = LOCKSTEP_WIDTH;
    group_tid_46441 = get_group_id(0);
    
    int32_t phys_tid_32625;
    
    phys_tid_32625 = global_tid_46439;
    
    __local char *red_arr_mem_46444;
    
    red_arr_mem_46444 = (__local char *) red_arr_mem_46444_backing_0;
    
    int32_t phys_group_id_46446;
    
    phys_group_id_46446 = get_group_id(0);
    for (int32_t i_46447 = 0; i_46447 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772,
                                          squot64(segred_group_sizze_32675,
                                                  segment_sizze_nonzzero_46437))) -
                   phys_group_id_46446, sext_i64_i32(num_groups_32676));
         i_46447++) {
        int32_t virt_group_id_46448 = phys_group_id_46446 + i_46447 *
                sext_i64_i32(num_groups_32676);
        int64_t gtid_32616 = squot64(sext_i32_i64(local_tid_46440),
                                     segment_sizze_nonzzero_46437) +
                sext_i32_i64(virt_group_id_46448) *
                squot64(segred_group_sizze_32675, segment_sizze_nonzzero_46437);
        int64_t gtid_32624 = srem64(sext_i32_i64(local_tid_46440),
                                    i32_res_27781);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27781) && (slt64(gtid_32616,
                                                            m_27772) &&
                                                      slt64(sext_i32_i64(local_tid_46440),
                                                            i32_res_27781 *
                                                            squot64(segred_group_sizze_32675,
                                                                    segment_sizze_nonzzero_46437)))) {
                int32_t defunc_0_f_res_32683 = ((__global
                                                 int32_t *) mem_45232)[gtid_32616];
                int32_t index_primexp_42385 = sext_i64_i32(gtid_32624);
                bool cond_32685 = slt32(index_primexp_42385,
                                        defunc_0_f_res_32683);
                float defunc_0_f_res_32686;
                
                if (cond_32685) {
                    int64_t i_32687 = sext_i32_i64(index_primexp_42385);
                    bool x_32688 = sle64((int64_t) 0, i_32687);
                    bool y_32689 = slt64(i_32687, N_27771);
                    bool bounds_check_32690 = x_32688 && y_32689;
                    bool index_certs_32691;
                    
                    if (!bounds_check_32690) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          49) == -1) {
                                global_failure_args[0] = i_32687;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_32692 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_32616 *
                                                                                              N_27771 +
                                                                                              i_32687];
                    
                    defunc_0_f_res_32686 = defunc_0_f_res_t_res_32692;
                } else {
                    defunc_0_f_res_32686 = 0.0F;
                }
                
                float defunc_0_f_res_32693 = defunc_0_f_res_32686 *
                      defunc_0_f_res_32686;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)] =
                        defunc_0_f_res_32693;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)] =
                    0.0F;
            }
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27781)) {
            // perform segmented scan to imitate reduction
            {
                float x_32679;
                float x_32680;
                float x_46449;
                float x_46450;
                bool ltid_in_bounds_46452;
                
                ltid_in_bounds_46452 = slt64(sext_i32_i64(local_tid_46440),
                                             i32_res_27781 *
                                             squot64(segred_group_sizze_32675,
                                                     segment_sizze_nonzzero_46437));
                
                int32_t skip_threads_46453;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46452) {
                        x_32680 = ((volatile __local
                                    float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)];
                        if ((local_tid_46440 - squot32(local_tid_46440, 32) *
                             32) == 0) {
                            x_32679 = x_32680;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46453 = 1;
                    while (slt32(skip_threads_46453, 32)) {
                        if (sle32(skip_threads_46453, local_tid_46440 -
                                  squot32(local_tid_46440, 32) * 32) &&
                            ltid_in_bounds_46452) {
                            // read operands
                            {
                                x_32679 = ((volatile __local
                                            float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440) -
                                                                        sext_i32_i64(skip_threads_46453)];
                            }
                            // perform operation
                            {
                                bool inactive_46454 =
                                     slt64(srem64(sext_i32_i64(local_tid_46440),
                                                  i32_res_27781),
                                           sext_i32_i64(local_tid_46440) -
                                           sext_i32_i64(local_tid_46440 -
                                           skip_threads_46453));
                                
                                if (inactive_46454) {
                                    x_32679 = x_32680;
                                }
                                if (!inactive_46454) {
                                    float defunc_1_op_res_32681 = x_32679 +
                                          x_32680;
                                    
                                    x_32679 = defunc_1_op_res_32681;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46442, skip_threads_46453)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46453, local_tid_46440 -
                                  squot32(local_tid_46440, 32) * 32) &&
                            ltid_in_bounds_46452) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)] =
                                    x_32679;
                                x_32680 = x_32679;
                            }
                        }
                        if (sle32(wave_sizze_46442, skip_threads_46453)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46453 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46440 - squot32(local_tid_46440, 32) * 32) ==
                        31 && ltid_in_bounds_46452) {
                        ((volatile __local
                          float *) red_arr_mem_46444)[sext_i32_i64(squot32(local_tid_46440,
                                                                           32))] =
                            x_32679;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46455;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46440, 32) == 0 &&
                            ltid_in_bounds_46452) {
                            x_46450 = ((volatile __local
                                        float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)];
                            if ((local_tid_46440 - squot32(local_tid_46440,
                                                           32) * 32) == 0) {
                                x_46449 = x_46450;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46455 = 1;
                        while (slt32(skip_threads_46455, 32)) {
                            if (sle32(skip_threads_46455, local_tid_46440 -
                                      squot32(local_tid_46440, 32) * 32) &&
                                (squot32(local_tid_46440, 32) == 0 &&
                                 ltid_in_bounds_46452)) {
                                // read operands
                                {
                                    x_46449 = ((volatile __local
                                                float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440) -
                                                                            sext_i32_i64(skip_threads_46455)];
                                }
                                // perform operation
                                {
                                    bool inactive_46456 =
                                         slt64(srem64(sext_i32_i64(local_tid_46440 *
                                                      32 + 32 - 1),
                                                      i32_res_27781),
                                               sext_i32_i64(local_tid_46440 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46440 -
                                                             skip_threads_46455) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46456) {
                                        x_46449 = x_46450;
                                    }
                                    if (!inactive_46456) {
                                        float defunc_1_op_res_46451 = x_46449 +
                                              x_46450;
                                        
                                        x_46449 = defunc_1_op_res_46451;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46442, skip_threads_46455)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46455, local_tid_46440 -
                                      squot32(local_tid_46440, 32) * 32) &&
                                (squot32(local_tid_46440, 32) == 0 &&
                                 ltid_in_bounds_46452)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)] =
                                        x_46449;
                                    x_46450 = x_46449;
                                }
                            }
                            if (sle32(wave_sizze_46442, skip_threads_46455)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46455 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46440, 32) == 0 ||
                          !ltid_in_bounds_46452)) {
                        // read operands
                        {
                            x_32680 = x_32679;
                            x_32679 = ((__local
                                        float *) red_arr_mem_46444)[sext_i32_i64(squot32(local_tid_46440,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46457 =
                                 slt64(srem64(sext_i32_i64(local_tid_46440),
                                              i32_res_27781),
                                       sext_i32_i64(local_tid_46440) -
                                       sext_i32_i64(squot32(local_tid_46440,
                                                            32) * 32 - 1));
                            
                            if (inactive_46457) {
                                x_32679 = x_32680;
                            }
                            if (!inactive_46457) {
                                float defunc_1_op_res_32681 = x_32679 + x_32680;
                                
                                x_32679 = defunc_1_op_res_32681;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)] =
                                x_32679;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46440, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46444)[sext_i32_i64(local_tid_46440)] =
                            x_32680;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46448) *
                      squot64(segred_group_sizze_32675,
                              segment_sizze_nonzzero_46437) +
                      sext_i32_i64(local_tid_46440), m_27772) &&
                slt64(sext_i32_i64(local_tid_46440),
                      squot64(segred_group_sizze_32675,
                              segment_sizze_nonzzero_46437))) {
                ((__global
                  float *) mem_45235)[sext_i32_i64(virt_group_id_46448) *
                                      squot64(segred_group_sizze_32675,
                                              segment_sizze_nonzzero_46437) +
                                      sext_i32_i64(local_tid_46440)] = ((__local
                                                                         float *) red_arr_mem_46444)[(sext_i32_i64(local_tid_46440) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46437 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32675
}
__kernel void mainDetailedzisegred_small_32650(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_46384_backing_aligned_0,
                                               int64_t N_27771, int64_t m_27772,
                                               int64_t i32_res_27781,
                                               int64_t num_groups_32662,
                                               int64_t segment_sizze_nonzzero_46377,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *mem_45232)
{
    #define segred_group_sizze_32661 (mainDetailedzisegred_group_sizze_32644)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46384_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46384_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46379;
    int32_t local_tid_46380;
    int64_t group_sizze_46383;
    int32_t wave_sizze_46382;
    int32_t group_tid_46381;
    
    global_tid_46379 = get_global_id(0);
    local_tid_46380 = get_local_id(0);
    group_sizze_46383 = get_local_size(0);
    wave_sizze_46382 = LOCKSTEP_WIDTH;
    group_tid_46381 = get_group_id(0);
    
    int32_t phys_tid_32650;
    
    phys_tid_32650 = global_tid_46379;
    
    __local char *red_arr_mem_46384;
    
    red_arr_mem_46384 = (__local char *) red_arr_mem_46384_backing_0;
    
    int32_t phys_group_id_46386;
    
    phys_group_id_46386 = get_group_id(0);
    for (int32_t i_46387 = 0; i_46387 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772,
                                          squot64(segred_group_sizze_32661,
                                                  segment_sizze_nonzzero_46377))) -
                   phys_group_id_46386, sext_i64_i32(num_groups_32662));
         i_46387++) {
        int32_t virt_group_id_46388 = phys_group_id_46386 + i_46387 *
                sext_i64_i32(num_groups_32662);
        int64_t gtid_32641 = squot64(sext_i32_i64(local_tid_46380),
                                     segment_sizze_nonzzero_46377) +
                sext_i32_i64(virt_group_id_46388) *
                squot64(segred_group_sizze_32661, segment_sizze_nonzzero_46377);
        int64_t gtid_32649 = srem64(sext_i32_i64(local_tid_46380),
                                    i32_res_27781);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27781) && (slt64(gtid_32641,
                                                            m_27772) &&
                                                      slt64(sext_i32_i64(local_tid_46380),
                                                            i32_res_27781 *
                                                            squot64(segred_group_sizze_32661,
                                                                    segment_sizze_nonzzero_46377)))) {
                float x_32669 = ((__global
                                  float *) images_mem_44381)[gtid_32641 *
                                                             N_27771 +
                                                             gtid_32649];
                bool isnan_res_32670;
                
                isnan_res_32670 = futrts_isnan32(x_32669);
                
                bool cond_32671 = !isnan_res_32670;
                int32_t defunc_0_f_res_32672 = btoi_bool_i32(cond_32671);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)] =
                        defunc_0_f_res_32672;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27781)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_32665;
                int32_t x_32666;
                int32_t x_46389;
                int32_t x_46390;
                bool ltid_in_bounds_46392;
                
                ltid_in_bounds_46392 = slt64(sext_i32_i64(local_tid_46380),
                                             i32_res_27781 *
                                             squot64(segred_group_sizze_32661,
                                                     segment_sizze_nonzzero_46377));
                
                int32_t skip_threads_46393;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46392) {
                        x_32666 = ((volatile __local
                                    int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)];
                        if ((local_tid_46380 - squot32(local_tid_46380, 32) *
                             32) == 0) {
                            x_32665 = x_32666;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46393 = 1;
                    while (slt32(skip_threads_46393, 32)) {
                        if (sle32(skip_threads_46393, local_tid_46380 -
                                  squot32(local_tid_46380, 32) * 32) &&
                            ltid_in_bounds_46392) {
                            // read operands
                            {
                                x_32665 = ((volatile __local
                                            int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380) -
                                                                          sext_i32_i64(skip_threads_46393)];
                            }
                            // perform operation
                            {
                                bool inactive_46394 =
                                     slt64(srem64(sext_i32_i64(local_tid_46380),
                                                  i32_res_27781),
                                           sext_i32_i64(local_tid_46380) -
                                           sext_i32_i64(local_tid_46380 -
                                           skip_threads_46393));
                                
                                if (inactive_46394) {
                                    x_32665 = x_32666;
                                }
                                if (!inactive_46394) {
                                    int32_t defunc_1_op_res_32667 =
                                            add32(x_32665, x_32666);
                                    
                                    x_32665 = defunc_1_op_res_32667;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46382, skip_threads_46393)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46393, local_tid_46380 -
                                  squot32(local_tid_46380, 32) * 32) &&
                            ltid_in_bounds_46392) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)] =
                                    x_32665;
                                x_32666 = x_32665;
                            }
                        }
                        if (sle32(wave_sizze_46382, skip_threads_46393)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46393 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46380 - squot32(local_tid_46380, 32) * 32) ==
                        31 && ltid_in_bounds_46392) {
                        ((volatile __local
                          int32_t *) red_arr_mem_46384)[sext_i32_i64(squot32(local_tid_46380,
                                                                             32))] =
                            x_32665;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46395;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46380, 32) == 0 &&
                            ltid_in_bounds_46392) {
                            x_46390 = ((volatile __local
                                        int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)];
                            if ((local_tid_46380 - squot32(local_tid_46380,
                                                           32) * 32) == 0) {
                                x_46389 = x_46390;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46395 = 1;
                        while (slt32(skip_threads_46395, 32)) {
                            if (sle32(skip_threads_46395, local_tid_46380 -
                                      squot32(local_tid_46380, 32) * 32) &&
                                (squot32(local_tid_46380, 32) == 0 &&
                                 ltid_in_bounds_46392)) {
                                // read operands
                                {
                                    x_46389 = ((volatile __local
                                                int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380) -
                                                                              sext_i32_i64(skip_threads_46395)];
                                }
                                // perform operation
                                {
                                    bool inactive_46396 =
                                         slt64(srem64(sext_i32_i64(local_tid_46380 *
                                                      32 + 32 - 1),
                                                      i32_res_27781),
                                               sext_i32_i64(local_tid_46380 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46380 -
                                                             skip_threads_46395) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46396) {
                                        x_46389 = x_46390;
                                    }
                                    if (!inactive_46396) {
                                        int32_t defunc_1_op_res_46391 =
                                                add32(x_46389, x_46390);
                                        
                                        x_46389 = defunc_1_op_res_46391;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46382, skip_threads_46395)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46395, local_tid_46380 -
                                      squot32(local_tid_46380, 32) * 32) &&
                                (squot32(local_tid_46380, 32) == 0 &&
                                 ltid_in_bounds_46392)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)] =
                                        x_46389;
                                    x_46390 = x_46389;
                                }
                            }
                            if (sle32(wave_sizze_46382, skip_threads_46395)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46395 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46380, 32) == 0 ||
                          !ltid_in_bounds_46392)) {
                        // read operands
                        {
                            x_32666 = x_32665;
                            x_32665 = ((__local
                                        int32_t *) red_arr_mem_46384)[sext_i32_i64(squot32(local_tid_46380,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46397 =
                                 slt64(srem64(sext_i32_i64(local_tid_46380),
                                              i32_res_27781),
                                       sext_i32_i64(local_tid_46380) -
                                       sext_i32_i64(squot32(local_tid_46380,
                                                            32) * 32 - 1));
                            
                            if (inactive_46397) {
                                x_32665 = x_32666;
                            }
                            if (!inactive_46397) {
                                int32_t defunc_1_op_res_32667 = add32(x_32665,
                                                                      x_32666);
                                
                                x_32665 = defunc_1_op_res_32667;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)] =
                                x_32665;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46380, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_46384)[sext_i32_i64(local_tid_46380)] =
                            x_32666;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46388) *
                      squot64(segred_group_sizze_32661,
                              segment_sizze_nonzzero_46377) +
                      sext_i32_i64(local_tid_46380), m_27772) &&
                slt64(sext_i32_i64(local_tid_46380),
                      squot64(segred_group_sizze_32661,
                              segment_sizze_nonzzero_46377))) {
                ((__global
                  int32_t *) mem_45232)[sext_i32_i64(virt_group_id_46388) *
                                        squot64(segred_group_sizze_32661,
                                                segment_sizze_nonzzero_46377) +
                                        sext_i32_i64(local_tid_46380)] =
                    ((__local
                      int32_t *) red_arr_mem_46384)[(sext_i32_i64(local_tid_46380) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_46377 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32661
}
__kernel void mainDetailedzisegred_small_32813(__global int *global_failure,
                                               int failure_is_an_option,
                                               __global
                                               int64_t *global_failure_args,
                                               __local volatile
                                               int64_t *red_arr_mem_46553_backing_aligned_0,
                                               int64_t N_27771, int64_t m_27772,
                                               int64_t i32_res_28174,
                                               int64_t num_groups_32835,
                                               int64_t segment_sizze_nonzzero_46546,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_45178,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45244,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45245,
                                               __global
                                               unsigned char *mem_45278)
{
    #define segred_group_sizze_32834 (mainDetailedzisegred_group_sizze_32807)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46553_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46553_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46548;
    int32_t local_tid_46549;
    int64_t group_sizze_46552;
    int32_t wave_sizze_46551;
    int32_t group_tid_46550;
    
    global_tid_46548 = get_global_id(0);
    local_tid_46549 = get_local_id(0);
    group_sizze_46552 = get_local_size(0);
    wave_sizze_46551 = LOCKSTEP_WIDTH;
    group_tid_46550 = get_group_id(0);
    
    int32_t phys_tid_32813;
    
    phys_tid_32813 = global_tid_46548;
    
    __local char *red_arr_mem_46553;
    
    red_arr_mem_46553 = (__local char *) red_arr_mem_46553_backing_0;
    
    int32_t phys_group_id_46555;
    
    phys_group_id_46555 = get_group_id(0);
    for (int32_t i_46556 = 0; i_46556 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772,
                                          squot64(segred_group_sizze_32834,
                                                  segment_sizze_nonzzero_46546))) -
                   phys_group_id_46555, sext_i64_i32(num_groups_32835));
         i_46556++) {
        int32_t virt_group_id_46557 = phys_group_id_46555 + i_46556 *
                sext_i64_i32(num_groups_32835);
        int64_t gtid_32804 = squot64(sext_i32_i64(local_tid_46549),
                                     segment_sizze_nonzzero_46546) +
                sext_i32_i64(virt_group_id_46557) *
                squot64(segred_group_sizze_32834, segment_sizze_nonzzero_46546);
        int64_t gtid_32812 = srem64(sext_i32_i64(local_tid_46549),
                                    i32_res_28174);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28174) && (slt64(gtid_32804,
                                                            m_27772) &&
                                                      slt64(sext_i32_i64(local_tid_46549),
                                                            i32_res_28174 *
                                                            squot64(segred_group_sizze_32834,
                                                                    segment_sizze_nonzzero_46546)))) {
                int32_t x_32843 = ((__global
                                    int32_t *) defunc_3_map_res_mem_45244)[gtid_32804];
                int32_t index_primexp_42390 = sext_i64_i32(gtid_32812);
                bool cond_32845 = slt32(index_primexp_42390, x_32843);
                float defunc_0_f_res_32846;
                
                if (cond_32845) {
                    int32_t x_32842 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_32804];
                    int32_t x_32847 = add32(x_32842, index_primexp_42390);
                    int32_t x_32848 = sub32(x_32847, x_32843);
                    int32_t i_32849 = add32(1, x_32848);
                    int64_t i_32850 = sext_i32_i64(i_32849);
                    bool x_32851 = sle64((int64_t) 0, i_32850);
                    bool y_32852 = slt64(i_32850, N_27771);
                    bool bounds_check_32853 = x_32851 && y_32852;
                    bool index_certs_32854;
                    
                    if (!bounds_check_32853) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          53) == -1) {
                                global_failure_args[0] = i_32850;
                                global_failure_args[1] = N_27771;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_32855 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_32804 *
                                                                                              N_27771 +
                                                                                              i_32850];
                    
                    defunc_0_f_res_32846 = defunc_0_f_res_t_res_32855;
                } else {
                    defunc_0_f_res_32846 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)] =
                        defunc_0_f_res_32846;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)] =
                    0.0F;
            }
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28174)) {
            // perform segmented scan to imitate reduction
            {
                float x_32838;
                float x_32839;
                float x_46558;
                float x_46559;
                bool ltid_in_bounds_46561;
                
                ltid_in_bounds_46561 = slt64(sext_i32_i64(local_tid_46549),
                                             i32_res_28174 *
                                             squot64(segred_group_sizze_32834,
                                                     segment_sizze_nonzzero_46546));
                
                int32_t skip_threads_46562;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46561) {
                        x_32839 = ((volatile __local
                                    float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)];
                        if ((local_tid_46549 - squot32(local_tid_46549, 32) *
                             32) == 0) {
                            x_32838 = x_32839;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46562 = 1;
                    while (slt32(skip_threads_46562, 32)) {
                        if (sle32(skip_threads_46562, local_tid_46549 -
                                  squot32(local_tid_46549, 32) * 32) &&
                            ltid_in_bounds_46561) {
                            // read operands
                            {
                                x_32838 = ((volatile __local
                                            float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549) -
                                                                        sext_i32_i64(skip_threads_46562)];
                            }
                            // perform operation
                            {
                                bool inactive_46563 =
                                     slt64(srem64(sext_i32_i64(local_tid_46549),
                                                  i32_res_28174),
                                           sext_i32_i64(local_tid_46549) -
                                           sext_i32_i64(local_tid_46549 -
                                           skip_threads_46562));
                                
                                if (inactive_46563) {
                                    x_32838 = x_32839;
                                }
                                if (!inactive_46563) {
                                    float defunc_1_op_res_32840 = x_32838 +
                                          x_32839;
                                    
                                    x_32838 = defunc_1_op_res_32840;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46551, skip_threads_46562)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46562, local_tid_46549 -
                                  squot32(local_tid_46549, 32) * 32) &&
                            ltid_in_bounds_46561) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)] =
                                    x_32838;
                                x_32839 = x_32838;
                            }
                        }
                        if (sle32(wave_sizze_46551, skip_threads_46562)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46562 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46549 - squot32(local_tid_46549, 32) * 32) ==
                        31 && ltid_in_bounds_46561) {
                        ((volatile __local
                          float *) red_arr_mem_46553)[sext_i32_i64(squot32(local_tid_46549,
                                                                           32))] =
                            x_32838;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46564;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46549, 32) == 0 &&
                            ltid_in_bounds_46561) {
                            x_46559 = ((volatile __local
                                        float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)];
                            if ((local_tid_46549 - squot32(local_tid_46549,
                                                           32) * 32) == 0) {
                                x_46558 = x_46559;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46564 = 1;
                        while (slt32(skip_threads_46564, 32)) {
                            if (sle32(skip_threads_46564, local_tid_46549 -
                                      squot32(local_tid_46549, 32) * 32) &&
                                (squot32(local_tid_46549, 32) == 0 &&
                                 ltid_in_bounds_46561)) {
                                // read operands
                                {
                                    x_46558 = ((volatile __local
                                                float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549) -
                                                                            sext_i32_i64(skip_threads_46564)];
                                }
                                // perform operation
                                {
                                    bool inactive_46565 =
                                         slt64(srem64(sext_i32_i64(local_tid_46549 *
                                                      32 + 32 - 1),
                                                      i32_res_28174),
                                               sext_i32_i64(local_tid_46549 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46549 -
                                                             skip_threads_46564) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46565) {
                                        x_46558 = x_46559;
                                    }
                                    if (!inactive_46565) {
                                        float defunc_1_op_res_46560 = x_46558 +
                                              x_46559;
                                        
                                        x_46558 = defunc_1_op_res_46560;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46551, skip_threads_46564)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46564, local_tid_46549 -
                                      squot32(local_tid_46549, 32) * 32) &&
                                (squot32(local_tid_46549, 32) == 0 &&
                                 ltid_in_bounds_46561)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)] =
                                        x_46558;
                                    x_46559 = x_46558;
                                }
                            }
                            if (sle32(wave_sizze_46551, skip_threads_46564)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46564 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46549, 32) == 0 ||
                          !ltid_in_bounds_46561)) {
                        // read operands
                        {
                            x_32839 = x_32838;
                            x_32838 = ((__local
                                        float *) red_arr_mem_46553)[sext_i32_i64(squot32(local_tid_46549,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46566 =
                                 slt64(srem64(sext_i32_i64(local_tid_46549),
                                              i32_res_28174),
                                       sext_i32_i64(local_tid_46549) -
                                       sext_i32_i64(squot32(local_tid_46549,
                                                            32) * 32 - 1));
                            
                            if (inactive_46566) {
                                x_32838 = x_32839;
                            }
                            if (!inactive_46566) {
                                float defunc_1_op_res_32840 = x_32838 + x_32839;
                                
                                x_32838 = defunc_1_op_res_32840;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)] =
                                x_32838;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46549, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46553)[sext_i32_i64(local_tid_46549)] =
                            x_32839;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46557) *
                      squot64(segred_group_sizze_32834,
                              segment_sizze_nonzzero_46546) +
                      sext_i32_i64(local_tid_46549), m_27772) &&
                slt64(sext_i32_i64(local_tid_46549),
                      squot64(segred_group_sizze_32834,
                              segment_sizze_nonzzero_46546))) {
                ((__global
                  float *) mem_45278)[sext_i32_i64(virt_group_id_46557) *
                                      squot64(segred_group_sizze_32834,
                                              segment_sizze_nonzzero_46546) +
                                      sext_i32_i64(local_tid_46549)] = ((__local
                                                                         float *) red_arr_mem_46553)[(sext_i32_i64(local_tid_46549) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46546 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32834
}
__kernel void mainDetailedzisegred_small_33994(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_46761_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46759_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_46757_backing_aligned_2,
                                               int64_t m_27772,
                                               int64_t iota32_arg_28203,
                                               int64_t iota32_arg_28233,
                                               int64_t num_groups_34139,
                                               int64_t segment_sizze_nonzzero_46750,
                                               __global
                                               unsigned char *mem_45282,
                                               __global
                                               unsigned char *mem_45399,
                                               __global
                                               unsigned char *mem_45403,
                                               __global
                                               unsigned char *mem_45406,
                                               __global
                                               unsigned char *mem_45409,
                                               __global
                                               unsigned char *mem_45411,
                                               __global
                                               unsigned char *mem_45413,
                                               __global
                                               unsigned char *mem_45416)
{
    #define segred_group_sizze_34138 (mainDetailedzisegred_group_sizze_33988)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46761_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46761_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46759_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46759_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46757_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46757_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46752;
    int32_t local_tid_46753;
    int64_t group_sizze_46756;
    int32_t wave_sizze_46755;
    int32_t group_tid_46754;
    
    global_tid_46752 = get_global_id(0);
    local_tid_46753 = get_local_id(0);
    group_sizze_46756 = get_local_size(0);
    wave_sizze_46755 = LOCKSTEP_WIDTH;
    group_tid_46754 = get_group_id(0);
    
    int32_t phys_tid_33994;
    
    phys_tid_33994 = global_tid_46752;
    
    __local char *red_arr_mem_46757;
    
    red_arr_mem_46757 = (__local char *) red_arr_mem_46757_backing_0;
    
    __local char *red_arr_mem_46759;
    
    red_arr_mem_46759 = (__local char *) red_arr_mem_46759_backing_1;
    
    __local char *red_arr_mem_46761;
    
    red_arr_mem_46761 = (__local char *) red_arr_mem_46761_backing_2;
    
    int32_t phys_group_id_46763;
    
    phys_group_id_46763 = get_group_id(0);
    for (int32_t i_46764 = 0; i_46764 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27772,
                                          squot64(segred_group_sizze_34138,
                                                  segment_sizze_nonzzero_46750))) -
                   phys_group_id_46763, sext_i64_i32(num_groups_34139));
         i_46764++) {
        int32_t virt_group_id_46765 = phys_group_id_46763 + i_46764 *
                sext_i64_i32(num_groups_34139);
        int64_t gtid_33985 = squot64(sext_i32_i64(local_tid_46753),
                                     segment_sizze_nonzzero_46750) +
                sext_i32_i64(virt_group_id_46765) *
                squot64(segred_group_sizze_34138, segment_sizze_nonzzero_46750);
        int64_t gtid_33993 = srem64(sext_i32_i64(local_tid_46753),
                                    iota32_arg_28203);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_28203) && (slt64(gtid_33985,
                                                               m_27772) &&
                                                         slt64(sext_i32_i64(local_tid_46753),
                                                               iota32_arg_28203 *
                                                               squot64(segred_group_sizze_34138,
                                                                       segment_sizze_nonzzero_46750)))) {
                int32_t y_34159 = ((__global int32_t *) mem_45399)[gtid_33985];
                float y_34160 = ((__global float *) mem_45406)[gtid_33985];
                int64_t binop_x_42448 = iota32_arg_28203 * gtid_33985;
                int64_t binop_x_42449 = gtid_33993 + binop_x_42448;
                int64_t new_index_42450 = squot64(binop_x_42449,
                                                  iota32_arg_28233);
                int64_t binop_y_42456 = iota32_arg_28233 * new_index_42450;
                int64_t new_index_42457 = binop_x_42449 - binop_y_42456;
                float x_34162 = ((__global float *) mem_45403)[new_index_42450 *
                                                               iota32_arg_28233 +
                                                               new_index_42457];
                float x_34163 = ((__global float *) mem_45282)[gtid_33993];
                int32_t index_primexp_42414 = sext_i64_i32(gtid_33993);
                float defunc_0_f_res_34165 = x_34162 / y_34160;
                bool cond_34166 = slt32(index_primexp_42414, y_34159);
                bool isnan_res_34167;
                
                isnan_res_34167 = futrts_isnan32(defunc_0_f_res_34165);
                
                bool cond_t_res_34168 = !isnan_res_34167;
                bool x_34169 = cond_34166 && cond_t_res_34168;
                float abs_res_34170 = (float) fabs(defunc_0_f_res_34165);
                bool defunc_2_f_res_t_res_34171 = x_34163 < abs_res_34170;
                bool x_34172 = x_34169 && defunc_2_f_res_t_res_34171;
                float defunc_1_f_res_34173;
                
                if (cond_34166) {
                    defunc_1_f_res_34173 = defunc_0_f_res_34165;
                } else {
                    defunc_1_f_res_34173 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_45416)[gtid_33985 *
                                                   iota32_arg_28203 +
                                                   gtid_33993] =
                        defunc_0_f_res_34165;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)] =
                        x_34172;
                    ((__local
                      int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)] =
                        index_primexp_42414;
                    ((__local
                      float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)] =
                        defunc_1_f_res_34173;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)] = 0;
                ((__local
                  int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)] =
                    -1;
                ((__local
                  float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_28203)) {
            // perform segmented scan to imitate reduction
            {
                bool x_34145;
                int32_t x_34146;
                float x_34147;
                bool x_34148;
                int32_t x_34149;
                float x_34150;
                bool x_46766;
                int32_t x_46767;
                float x_46768;
                bool x_46769;
                int32_t x_46770;
                float x_46771;
                bool ltid_in_bounds_46780;
                
                ltid_in_bounds_46780 = slt64(sext_i32_i64(local_tid_46753),
                                             iota32_arg_28203 *
                                             squot64(segred_group_sizze_34138,
                                                     segment_sizze_nonzzero_46750));
                
                int32_t skip_threads_46781;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46780) {
                        x_34148 = ((volatile __local
                                    bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)];
                        x_34149 = ((volatile __local
                                    int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)];
                        x_34150 = ((volatile __local
                                    float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)];
                        if ((local_tid_46753 - squot32(local_tid_46753, 32) *
                             32) == 0) {
                            x_34145 = x_34148;
                            x_34146 = x_34149;
                            x_34147 = x_34150;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46781 = 1;
                    while (slt32(skip_threads_46781, 32)) {
                        if (sle32(skip_threads_46781, local_tid_46753 -
                                  squot32(local_tid_46753, 32) * 32) &&
                            ltid_in_bounds_46780) {
                            // read operands
                            {
                                x_34145 = ((volatile __local
                                            bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753) -
                                                                       sext_i32_i64(skip_threads_46781)];
                                x_34146 = ((volatile __local
                                            int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753) -
                                                                          sext_i32_i64(skip_threads_46781)];
                                x_34147 = ((volatile __local
                                            float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753) -
                                                                        sext_i32_i64(skip_threads_46781)];
                            }
                            // perform operation
                            {
                                bool inactive_46782 =
                                     slt64(srem64(sext_i32_i64(local_tid_46753),
                                                  iota32_arg_28203),
                                           sext_i32_i64(local_tid_46753) -
                                           sext_i32_i64(local_tid_46753 -
                                           skip_threads_46781));
                                
                                if (inactive_46782) {
                                    x_34145 = x_34148;
                                    x_34146 = x_34149;
                                    x_34147 = x_34150;
                                }
                                if (!inactive_46782) {
                                    bool defunc_1_op_res_34151;
                                    int32_t defunc_1_op_res_34152;
                                    
                                    if (x_34145) {
                                        defunc_1_op_res_34151 = x_34145;
                                        defunc_1_op_res_34152 = x_34146;
                                    } else {
                                        bool x_34153 = x_34148 && x_34148;
                                        bool x_34154 = !x_34148;
                                        bool y_34155 = x_34145 && x_34154;
                                        bool defunc_1_op_res_f_res_34156 =
                                             x_34153 || y_34155;
                                        int32_t defunc_1_op_res_f_res_34157;
                                        
                                        if (x_34148) {
                                            defunc_1_op_res_f_res_34157 =
                                                x_34149;
                                        } else {
                                            defunc_1_op_res_f_res_34157 =
                                                x_34146;
                                        }
                                        defunc_1_op_res_34151 =
                                            defunc_1_op_res_f_res_34156;
                                        defunc_1_op_res_34152 =
                                            defunc_1_op_res_f_res_34157;
                                    }
                                    
                                    float defunc_1_op_res_34158 = x_34147 +
                                          x_34150;
                                    
                                    x_34145 = defunc_1_op_res_34151;
                                    x_34146 = defunc_1_op_res_34152;
                                    x_34147 = defunc_1_op_res_34158;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46755, skip_threads_46781)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46781, local_tid_46753 -
                                  squot32(local_tid_46753, 32) * 32) &&
                            ltid_in_bounds_46780) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)] =
                                    x_34145;
                                x_34148 = x_34145;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)] =
                                    x_34146;
                                x_34149 = x_34146;
                                ((volatile __local
                                  float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)] =
                                    x_34147;
                                x_34150 = x_34147;
                            }
                        }
                        if (sle32(wave_sizze_46755, skip_threads_46781)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46781 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46753 - squot32(local_tid_46753, 32) * 32) ==
                        31 && ltid_in_bounds_46780) {
                        ((volatile __local
                          bool *) red_arr_mem_46757)[sext_i32_i64(squot32(local_tid_46753,
                                                                          32))] =
                            x_34145;
                        ((volatile __local
                          int32_t *) red_arr_mem_46759)[sext_i32_i64(squot32(local_tid_46753,
                                                                             32))] =
                            x_34146;
                        ((volatile __local
                          float *) red_arr_mem_46761)[sext_i32_i64(squot32(local_tid_46753,
                                                                           32))] =
                            x_34147;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46783;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46753, 32) == 0 &&
                            ltid_in_bounds_46780) {
                            x_46769 = ((volatile __local
                                        bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)];
                            x_46770 = ((volatile __local
                                        int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)];
                            x_46771 = ((volatile __local
                                        float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)];
                            if ((local_tid_46753 - squot32(local_tid_46753,
                                                           32) * 32) == 0) {
                                x_46766 = x_46769;
                                x_46767 = x_46770;
                                x_46768 = x_46771;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46783 = 1;
                        while (slt32(skip_threads_46783, 32)) {
                            if (sle32(skip_threads_46783, local_tid_46753 -
                                      squot32(local_tid_46753, 32) * 32) &&
                                (squot32(local_tid_46753, 32) == 0 &&
                                 ltid_in_bounds_46780)) {
                                // read operands
                                {
                                    x_46766 = ((volatile __local
                                                bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753) -
                                                                           sext_i32_i64(skip_threads_46783)];
                                    x_46767 = ((volatile __local
                                                int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753) -
                                                                              sext_i32_i64(skip_threads_46783)];
                                    x_46768 = ((volatile __local
                                                float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753) -
                                                                            sext_i32_i64(skip_threads_46783)];
                                }
                                // perform operation
                                {
                                    bool inactive_46784 =
                                         slt64(srem64(sext_i32_i64(local_tid_46753 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28203),
                                               sext_i32_i64(local_tid_46753 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46753 -
                                                             skip_threads_46783) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46784) {
                                        x_46766 = x_46769;
                                        x_46767 = x_46770;
                                        x_46768 = x_46771;
                                    }
                                    if (!inactive_46784) {
                                        bool defunc_1_op_res_46772;
                                        int32_t defunc_1_op_res_46773;
                                        
                                        if (x_46766) {
                                            defunc_1_op_res_46772 = x_46766;
                                            defunc_1_op_res_46773 = x_46767;
                                        } else {
                                            bool x_46774 = x_46769 && x_46769;
                                            bool x_46775 = !x_46769;
                                            bool y_46776 = x_46766 && x_46775;
                                            bool defunc_1_op_res_f_res_46777 =
                                                 x_46774 || y_46776;
                                            int32_t defunc_1_op_res_f_res_46778;
                                            
                                            if (x_46769) {
                                                defunc_1_op_res_f_res_46778 =
                                                    x_46770;
                                            } else {
                                                defunc_1_op_res_f_res_46778 =
                                                    x_46767;
                                            }
                                            defunc_1_op_res_46772 =
                                                defunc_1_op_res_f_res_46777;
                                            defunc_1_op_res_46773 =
                                                defunc_1_op_res_f_res_46778;
                                        }
                                        
                                        float defunc_1_op_res_46779 = x_46768 +
                                              x_46771;
                                        
                                        x_46766 = defunc_1_op_res_46772;
                                        x_46767 = defunc_1_op_res_46773;
                                        x_46768 = defunc_1_op_res_46779;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46755, skip_threads_46783)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46783, local_tid_46753 -
                                      squot32(local_tid_46753, 32) * 32) &&
                                (squot32(local_tid_46753, 32) == 0 &&
                                 ltid_in_bounds_46780)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)] =
                                        x_46766;
                                    x_46769 = x_46766;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)] =
                                        x_46767;
                                    x_46770 = x_46767;
                                    ((volatile __local
                                      float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)] =
                                        x_46768;
                                    x_46771 = x_46768;
                                }
                            }
                            if (sle32(wave_sizze_46755, skip_threads_46783)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46783 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46753, 32) == 0 ||
                          !ltid_in_bounds_46780)) {
                        // read operands
                        {
                            x_34148 = x_34145;
                            x_34149 = x_34146;
                            x_34150 = x_34147;
                            x_34145 = ((__local
                                        bool *) red_arr_mem_46757)[sext_i32_i64(squot32(local_tid_46753,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_34146 = ((__local
                                        int32_t *) red_arr_mem_46759)[sext_i32_i64(squot32(local_tid_46753,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_34147 = ((__local
                                        float *) red_arr_mem_46761)[sext_i32_i64(squot32(local_tid_46753,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46785 =
                                 slt64(srem64(sext_i32_i64(local_tid_46753),
                                              iota32_arg_28203),
                                       sext_i32_i64(local_tid_46753) -
                                       sext_i32_i64(squot32(local_tid_46753,
                                                            32) * 32 - 1));
                            
                            if (inactive_46785) {
                                x_34145 = x_34148;
                                x_34146 = x_34149;
                                x_34147 = x_34150;
                            }
                            if (!inactive_46785) {
                                bool defunc_1_op_res_34151;
                                int32_t defunc_1_op_res_34152;
                                
                                if (x_34145) {
                                    defunc_1_op_res_34151 = x_34145;
                                    defunc_1_op_res_34152 = x_34146;
                                } else {
                                    bool x_34153 = x_34148 && x_34148;
                                    bool x_34154 = !x_34148;
                                    bool y_34155 = x_34145 && x_34154;
                                    bool defunc_1_op_res_f_res_34156 =
                                         x_34153 || y_34155;
                                    int32_t defunc_1_op_res_f_res_34157;
                                    
                                    if (x_34148) {
                                        defunc_1_op_res_f_res_34157 = x_34149;
                                    } else {
                                        defunc_1_op_res_f_res_34157 = x_34146;
                                    }
                                    defunc_1_op_res_34151 =
                                        defunc_1_op_res_f_res_34156;
                                    defunc_1_op_res_34152 =
                                        defunc_1_op_res_f_res_34157;
                                }
                                
                                float defunc_1_op_res_34158 = x_34147 + x_34150;
                                
                                x_34145 = defunc_1_op_res_34151;
                                x_34146 = defunc_1_op_res_34152;
                                x_34147 = defunc_1_op_res_34158;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)] =
                                x_34145;
                            ((__local
                              int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)] =
                                x_34146;
                            ((__local
                              float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)] =
                                x_34147;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46753, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_46757)[sext_i32_i64(local_tid_46753)] =
                            x_34148;
                        ((__local
                          int32_t *) red_arr_mem_46759)[sext_i32_i64(local_tid_46753)] =
                            x_34149;
                        ((__local
                          float *) red_arr_mem_46761)[sext_i32_i64(local_tid_46753)] =
                            x_34150;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46765) *
                      squot64(segred_group_sizze_34138,
                              segment_sizze_nonzzero_46750) +
                      sext_i32_i64(local_tid_46753), m_27772) &&
                slt64(sext_i32_i64(local_tid_46753),
                      squot64(segred_group_sizze_34138,
                              segment_sizze_nonzzero_46750))) {
                ((__global
                  bool *) mem_45409)[sext_i32_i64(virt_group_id_46765) *
                                     squot64(segred_group_sizze_34138,
                                             segment_sizze_nonzzero_46750) +
                                     sext_i32_i64(local_tid_46753)] = ((__local
                                                                        bool *) red_arr_mem_46757)[(sext_i32_i64(local_tid_46753) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_46750 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_45411)[sext_i32_i64(virt_group_id_46765) *
                                        squot64(segred_group_sizze_34138,
                                                segment_sizze_nonzzero_46750) +
                                        sext_i32_i64(local_tid_46753)] =
                    ((__local
                      int32_t *) red_arr_mem_46759)[(sext_i32_i64(local_tid_46753) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_46750 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_45413)[sext_i32_i64(virt_group_id_46765) *
                                      squot64(segred_group_sizze_34138,
                                              segment_sizze_nonzzero_46750) +
                                      sext_i32_i64(local_tid_46753)] = ((__local
                                                                         float *) red_arr_mem_46761)[(sext_i32_i64(local_tid_46753) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46750 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34138
}
__kernel void mainMagnitudezicopy_45850(int64_t m_28478, int64_t nm_28626,
                                        int64_t ctx_param_ext_44580,
                                        int64_t ctx_param_ext_44581,
                                        int64_t ctx_param_ext_44583, __global
                                        unsigned char *mem_param_44585, __global
                                        unsigned char *mem_44590)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_45850;
    int32_t copy_ltid_45851;
    int32_t copy_gid_45852;
    
    copy_gtid_45850 = get_global_id(0);
    copy_ltid_45851 = get_local_id(0);
    copy_gid_45852 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_45850), m_28478 * nm_28626)) {
        ((__global float *) mem_44590)[(sext_i32_i64(copy_gtid_45850) -
                                        squot64(sext_i32_i64(copy_gtid_45850),
                                                nm_28626) * nm_28626) *
                                       m_28478 +
                                       squot64(sext_i32_i64(copy_gtid_45850),
                                               nm_28626)] = ((__global
                                                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_45850),
                                                                                                 nm_28626) *
                                                                                         ctx_param_ext_44581 +
                                                                                         (sext_i32_i64(copy_gtid_45850) -
                                                                                          squot64(sext_i32_i64(copy_gtid_45850),
                                                                                                  nm_28626) *
                                                                                          nm_28626) *
                                                                                         ctx_param_ext_44583)];
    }
    
  error_0:
    return;
}
__kernel void mainMagnitudeziscan_stage1_36724(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_46262_backing_aligned_0,
                                               int64_t N_28477, int64_t m_28478,
                                               int32_t num_threads_46256,
                                               __global
                                               unsigned char *images_mem_44381,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45140,
                                               __global
                                               unsigned char *mem_45163,
                                               __global
                                               unsigned char *mem_45166)
{
    #define segscan_group_sizze_36741 (mainMagnitudezisegscan_group_sizze_36718)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46262_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46262_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46257;
    int32_t local_tid_46258;
    int64_t group_sizze_46261;
    int32_t wave_sizze_46260;
    int32_t group_tid_46259;
    
    global_tid_46257 = get_global_id(0);
    local_tid_46258 = get_local_id(0);
    group_sizze_46261 = get_local_size(0);
    wave_sizze_46260 = LOCKSTEP_WIDTH;
    group_tid_46259 = get_group_id(0);
    
    int32_t phys_tid_36724;
    
    phys_tid_36724 = global_tid_46257;
    
    __local char *scan_arr_mem_46262;
    
    scan_arr_mem_46262 = (__local char *) scan_arr_mem_46262_backing_0;
    
    int64_t x_36746;
    int64_t x_36747;
    
    x_36746 = (int64_t) 0;
    for (int64_t j_46264 = 0; j_46264 < sdiv_up64(m_28478 * N_28477,
                                                  sext_i32_i64(num_threads_46256));
         j_46264++) {
        int64_t chunk_offset_46265 = segscan_group_sizze_36741 * j_46264 +
                sext_i32_i64(group_tid_46259) * (segscan_group_sizze_36741 *
                                                 sdiv_up64(m_28478 * N_28477,
                                                           sext_i32_i64(num_threads_46256)));
        int64_t flat_idx_46266 = chunk_offset_46265 +
                sext_i32_i64(local_tid_46258);
        int64_t gtid_36715 = squot64(flat_idx_46266, N_28477);
        int64_t gtid_36723 = flat_idx_46266 - squot64(flat_idx_46266, N_28477) *
                N_28477;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36715, m_28478) && slt64(gtid_36723, N_28477)) {
                float x_36751 = ((__global
                                  float *) images_mem_44381)[gtid_36715 *
                                                             N_28477 +
                                                             gtid_36723];
                bool isnan_res_36753;
                
                isnan_res_36753 = futrts_isnan32(x_36751);
                
                bool cond_36754 = !isnan_res_36753;
                float defunc_1_f_res_36755;
                
                if (cond_36754) {
                    float x_36752 = ((__global
                                      float *) defunc_3_map_res_mem_45140)[gtid_36715 *
                                                                           N_28477 +
                                                                           gtid_36723];
                    float defunc_1_f_res_t_res_36756 = x_36751 - x_36752;
                    
                    defunc_1_f_res_36755 = defunc_1_f_res_t_res_36756;
                } else {
                    defunc_1_f_res_36755 = NAN;
                }
                
                bool isnan_res_36757;
                
                isnan_res_36757 = futrts_isnan32(defunc_1_f_res_36755);
                
                bool defunc_0_p_res_36758 = !isnan_res_36757;
                int64_t defunc_0_f_res_36759 =
                        btoi_bool_i64(defunc_0_p_res_36758);
                
                // write to-scan values to parameters
                {
                    x_36747 = defunc_0_f_res_36759;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_45166)[gtid_36715 * N_28477 +
                                                   gtid_36723] =
                        defunc_1_f_res_36755;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36715, m_28478) && slt64(gtid_36723,
                                                          N_28477))) {
                    x_36747 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_36748 = add64(x_36746, x_36747);
                
                ((__local
                  int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)] =
                    defunc_1_op_res_36748;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_46267;
            int64_t x_46268;
            int64_t x_46270;
            int64_t x_46271;
            bool ltid_in_bounds_46273;
            
            ltid_in_bounds_46273 = slt64(sext_i32_i64(local_tid_46258),
                                         segscan_group_sizze_36741);
            
            int32_t skip_threads_46274;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46273) {
                    x_46268 = ((volatile __local
                                int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)];
                    if ((local_tid_46258 - squot32(local_tid_46258, 32) * 32) ==
                        0) {
                        x_46267 = x_46268;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46274 = 1;
                while (slt32(skip_threads_46274, 32)) {
                    if (sle32(skip_threads_46274, local_tid_46258 -
                              squot32(local_tid_46258, 32) * 32) &&
                        ltid_in_bounds_46273) {
                        // read operands
                        {
                            x_46267 = ((volatile __local
                                        int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258) -
                                                                       sext_i32_i64(skip_threads_46274)];
                        }
                        // perform operation
                        {
                            bool inactive_46275 =
                                 slt64(srem64(sext_i32_i64(local_tid_46258) +
                                              chunk_offset_46265, N_28477),
                                       sext_i32_i64(local_tid_46258) +
                                       chunk_offset_46265 -
                                       (sext_i32_i64(local_tid_46258 -
                                        skip_threads_46274) +
                                        chunk_offset_46265));
                            
                            if (inactive_46275) {
                                x_46267 = x_46268;
                            }
                            if (!inactive_46275) {
                                int64_t defunc_1_op_res_46269 = add64(x_46267,
                                                                      x_46268);
                                
                                x_46267 = defunc_1_op_res_46269;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46260, skip_threads_46274)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46274, local_tid_46258 -
                              squot32(local_tid_46258, 32) * 32) &&
                        ltid_in_bounds_46273) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)] =
                                x_46267;
                            x_46268 = x_46267;
                        }
                    }
                    if (sle32(wave_sizze_46260, skip_threads_46274)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46274 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46258 - squot32(local_tid_46258, 32) * 32) ==
                    31 && ltid_in_bounds_46273) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46262)[sext_i32_i64(squot32(local_tid_46258,
                                                                          32))] =
                        x_46267;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46276;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46258, 32) == 0 &&
                        ltid_in_bounds_46273) {
                        x_46271 = ((volatile __local
                                    int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)];
                        if ((local_tid_46258 - squot32(local_tid_46258, 32) *
                             32) == 0) {
                            x_46270 = x_46271;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46276 = 1;
                    while (slt32(skip_threads_46276, 32)) {
                        if (sle32(skip_threads_46276, local_tid_46258 -
                                  squot32(local_tid_46258, 32) * 32) &&
                            (squot32(local_tid_46258, 32) == 0 &&
                             ltid_in_bounds_46273)) {
                            // read operands
                            {
                                x_46270 = ((volatile __local
                                            int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258) -
                                                                           sext_i32_i64(skip_threads_46276)];
                            }
                            // perform operation
                            {
                                bool inactive_46277 =
                                     slt64(srem64(sext_i32_i64(local_tid_46258 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46265, N_28477),
                                           sext_i32_i64(local_tid_46258 * 32 +
                                           32 - 1) + chunk_offset_46265 -
                                           (sext_i32_i64((local_tid_46258 -
                                                          skip_threads_46276) *
                                            32 + 32 - 1) + chunk_offset_46265));
                                
                                if (inactive_46277) {
                                    x_46270 = x_46271;
                                }
                                if (!inactive_46277) {
                                    int64_t defunc_1_op_res_46272 =
                                            add64(x_46270, x_46271);
                                    
                                    x_46270 = defunc_1_op_res_46272;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46260, skip_threads_46276)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46276, local_tid_46258 -
                                  squot32(local_tid_46258, 32) * 32) &&
                            (squot32(local_tid_46258, 32) == 0 &&
                             ltid_in_bounds_46273)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)] =
                                    x_46270;
                                x_46271 = x_46270;
                            }
                        }
                        if (sle32(wave_sizze_46260, skip_threads_46276)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46276 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46258, 32) == 0 ||
                      !ltid_in_bounds_46273)) {
                    // read operands
                    {
                        x_46268 = x_46267;
                        x_46267 = ((__local
                                    int64_t *) scan_arr_mem_46262)[sext_i32_i64(squot32(local_tid_46258,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_46278 =
                             slt64(srem64(sext_i32_i64(local_tid_46258) +
                                          chunk_offset_46265, N_28477),
                                   sext_i32_i64(local_tid_46258) +
                                   chunk_offset_46265 -
                                   (sext_i32_i64(squot32(local_tid_46258, 32) *
                                    32 - 1) + chunk_offset_46265));
                        
                        if (inactive_46278) {
                            x_46267 = x_46268;
                        }
                        if (!inactive_46278) {
                            int64_t defunc_1_op_res_46269 = add64(x_46267,
                                                                  x_46268);
                            
                            x_46267 = defunc_1_op_res_46269;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)] =
                            x_46267;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46258, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)] =
                        x_46268;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36715, m_28478) && slt64(gtid_36723, N_28477)) {
                    ((__global int64_t *) mem_45163)[gtid_36715 * N_28477 +
                                                     gtid_36723] = ((__local
                                                                     int64_t *) scan_arr_mem_46262)[sext_i32_i64(local_tid_46258)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46279 = slt64(srem64(chunk_offset_46265 +
                                                          segscan_group_sizze_36741,
                                                          N_28477),
                                                   chunk_offset_46265 +
                                                   segscan_group_sizze_36741 -
                                                   (chunk_offset_46265 +
                                                    segscan_group_sizze_36741 -
                                                    (int64_t) 1));
                bool should_load_carry_46280 = local_tid_46258 == 0 &&
                     !crosses_segment_46279;
                
                if (should_load_carry_46280) {
                    x_36746 = ((__local
                                int64_t *) scan_arr_mem_46262)[segscan_group_sizze_36741 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_46280) {
                    x_36746 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36741
}
__kernel void mainMagnitudeziscan_stage1_38354(__global int *global_failure,
                                               int failure_is_an_option,
                                               __global
                                               int64_t *global_failure_args,
                                               __local volatile
                                               int64_t *scan_arr_mem_46665_backing_aligned_0,
                                               int64_t N_28477, int64_t m_28478,
                                               int64_t iota32_arg_28909,
                                               int32_t num_threads_46659,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_45178,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45244,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_45245,
                                               __global
                                               unsigned char *defunc_0_f_res_mem_45279,
                                               __global
                                               unsigned char *mem_45339,
                                               __global
                                               unsigned char *mem_45343)
{
    #define segscan_group_sizze_38440 (mainMagnitudezisegscan_group_sizze_38348)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46665_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46665_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46660;
    int32_t local_tid_46661;
    int64_t group_sizze_46664;
    int32_t wave_sizze_46663;
    int32_t group_tid_46662;
    
    global_tid_46660 = get_global_id(0);
    local_tid_46661 = get_local_id(0);
    group_sizze_46664 = get_local_size(0);
    wave_sizze_46663 = LOCKSTEP_WIDTH;
    group_tid_46662 = get_group_id(0);
    
    int32_t phys_tid_38354;
    
    phys_tid_38354 = global_tid_46660;
    
    __local char *scan_arr_mem_46665;
    
    scan_arr_mem_46665 = (__local char *) scan_arr_mem_46665_backing_0;
    
    float x_38444;
    float x_38445;
    
    x_38444 = 0.0F;
    for (int64_t j_46667 = 0; j_46667 < sdiv_up64(m_28478 * iota32_arg_28909,
                                                  sext_i32_i64(num_threads_46659));
         j_46667++) {
        int64_t chunk_offset_46668 = segscan_group_sizze_38440 * j_46667 +
                sext_i32_i64(group_tid_46662) * (segscan_group_sizze_38440 *
                                                 sdiv_up64(m_28478 *
                                                           iota32_arg_28909,
                                                           sext_i32_i64(num_threads_46659)));
        int64_t flat_idx_46669 = chunk_offset_46668 +
                sext_i32_i64(local_tid_46661);
        int64_t gtid_38345 = squot64(flat_idx_46669, iota32_arg_28909);
        int64_t gtid_38353 = flat_idx_46669 - squot64(flat_idx_46669,
                                                      iota32_arg_28909) *
                iota32_arg_28909;
        
        // threads in bounds read input
        {
            if (slt64(gtid_38345, m_28478) && slt64(gtid_38353,
                                                    iota32_arg_28909)) {
                int32_t y_38451 = ((__global int32_t *) mem_45339)[gtid_38345];
                int32_t index_primexp_42406 = sext_i64_i32(gtid_38353);
                bool cond_38454 = sle32(y_38451, index_primexp_42406);
                float defunc_0_f_res_38455;
                
                if (cond_38454) {
                    defunc_0_f_res_38455 = 0.0F;
                } else {
                    int32_t x_38447 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_38345];
                    int32_t x_38448 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45244)[gtid_38345];
                    float x_38449 = ((__global
                                      float *) defunc_0_f_res_mem_45279)[gtid_38345];
                    bool cond_38456 = index_primexp_42406 == 0;
                    float defunc_0_f_res_f_res_38457;
                    
                    if (cond_38456) {
                        defunc_0_f_res_f_res_38457 = x_38449;
                    } else {
                        int32_t i_38458 = add32(x_38447, index_primexp_42406);
                        int64_t i_38459 = sext_i32_i64(i_38458);
                        bool x_38460 = sle64((int64_t) 0, i_38459);
                        bool y_38461 = slt64(i_38459, N_28477);
                        bool bounds_check_38462 = x_38460 && y_38461;
                        bool index_certs_38463;
                        
                        if (!bounds_check_38462) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 118) == -1) {
                                    global_failure_args[0] = i_38459;
                                    global_failure_args[1] = N_28477;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float x_38464 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_38345 *
                                                                               N_28477 +
                                                                               i_38459];
                        int32_t x_38465 = sub32(x_38447, x_38448);
                        int32_t i_38466 = add32(x_38465, index_primexp_42406);
                        int64_t i_38467 = sext_i32_i64(i_38466);
                        bool x_38468 = sle64((int64_t) 0, i_38467);
                        bool y_38469 = slt64(i_38467, N_28477);
                        bool bounds_check_38470 = x_38468 && y_38469;
                        bool index_certs_38471;
                        
                        if (!bounds_check_38470) {
                            {
                                if (atomic_cmpxchg_i32_global(global_failure,
                                                              -1, 119) == -1) {
                                    global_failure_args[0] = i_38467;
                                    global_failure_args[1] = N_28477;
                                    ;
                                }
                                local_failure = true;
                                goto error_0;
                            }
                        }
                        
                        float y_38472 = ((__global
                                          float *) defunc_4_map_res_mem_45178)[gtid_38345 *
                                                                               N_28477 +
                                                                               i_38467];
                        float defunc_0_f_res_f_res_f_res_38473 = x_38464 -
                              y_38472;
                        
                        defunc_0_f_res_f_res_38457 =
                            defunc_0_f_res_f_res_f_res_38473;
                    }
                    defunc_0_f_res_38455 = defunc_0_f_res_f_res_38457;
                }
                // write to-scan values to parameters
                {
                    x_38445 = defunc_0_f_res_38455;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_38345, m_28478) && slt64(gtid_38353,
                                                          iota32_arg_28909))) {
                    x_38445 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_38446 = x_38444 + x_38445;
                
                ((__local
                  float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)] =
                    defunc_1_op_res_38446;
            }
            
          error_0:
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_failure)
                return;
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_46670;
            float x_46671;
            float x_46673;
            float x_46674;
            bool ltid_in_bounds_46676;
            
            ltid_in_bounds_46676 = slt64(sext_i32_i64(local_tid_46661),
                                         segscan_group_sizze_38440);
            
            int32_t skip_threads_46677;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46676) {
                    x_46671 = ((volatile __local
                                float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)];
                    if ((local_tid_46661 - squot32(local_tid_46661, 32) * 32) ==
                        0) {
                        x_46670 = x_46671;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46677 = 1;
                while (slt32(skip_threads_46677, 32)) {
                    if (sle32(skip_threads_46677, local_tid_46661 -
                              squot32(local_tid_46661, 32) * 32) &&
                        ltid_in_bounds_46676) {
                        // read operands
                        {
                            x_46670 = ((volatile __local
                                        float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661) -
                                                                     sext_i32_i64(skip_threads_46677)];
                        }
                        // perform operation
                        {
                            bool inactive_46678 =
                                 slt64(srem64(sext_i32_i64(local_tid_46661) +
                                              chunk_offset_46668,
                                              iota32_arg_28909),
                                       sext_i32_i64(local_tid_46661) +
                                       chunk_offset_46668 -
                                       (sext_i32_i64(local_tid_46661 -
                                        skip_threads_46677) +
                                        chunk_offset_46668));
                            
                            if (inactive_46678) {
                                x_46670 = x_46671;
                            }
                            if (!inactive_46678) {
                                float defunc_1_op_res_46672 = x_46670 + x_46671;
                                
                                x_46670 = defunc_1_op_res_46672;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46663, skip_threads_46677)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46677, local_tid_46661 -
                              squot32(local_tid_46661, 32) * 32) &&
                        ltid_in_bounds_46676) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)] =
                                x_46670;
                            x_46671 = x_46670;
                        }
                    }
                    if (sle32(wave_sizze_46663, skip_threads_46677)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46677 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46661 - squot32(local_tid_46661, 32) * 32) ==
                    31 && ltid_in_bounds_46676) {
                    ((volatile __local
                      float *) scan_arr_mem_46665)[sext_i32_i64(squot32(local_tid_46661,
                                                                        32))] =
                        x_46670;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46679;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46661, 32) == 0 &&
                        ltid_in_bounds_46676) {
                        x_46674 = ((volatile __local
                                    float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)];
                        if ((local_tid_46661 - squot32(local_tid_46661, 32) *
                             32) == 0) {
                            x_46673 = x_46674;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46679 = 1;
                    while (slt32(skip_threads_46679, 32)) {
                        if (sle32(skip_threads_46679, local_tid_46661 -
                                  squot32(local_tid_46661, 32) * 32) &&
                            (squot32(local_tid_46661, 32) == 0 &&
                             ltid_in_bounds_46676)) {
                            // read operands
                            {
                                x_46673 = ((volatile __local
                                            float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661) -
                                                                         sext_i32_i64(skip_threads_46679)];
                            }
                            // perform operation
                            {
                                bool inactive_46680 =
                                     slt64(srem64(sext_i32_i64(local_tid_46661 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46668,
                                                  iota32_arg_28909),
                                           sext_i32_i64(local_tid_46661 * 32 +
                                           32 - 1) + chunk_offset_46668 -
                                           (sext_i32_i64((local_tid_46661 -
                                                          skip_threads_46679) *
                                            32 + 32 - 1) + chunk_offset_46668));
                                
                                if (inactive_46680) {
                                    x_46673 = x_46674;
                                }
                                if (!inactive_46680) {
                                    float defunc_1_op_res_46675 = x_46673 +
                                          x_46674;
                                    
                                    x_46673 = defunc_1_op_res_46675;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46663, skip_threads_46679)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46679, local_tid_46661 -
                                  squot32(local_tid_46661, 32) * 32) &&
                            (squot32(local_tid_46661, 32) == 0 &&
                             ltid_in_bounds_46676)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)] =
                                    x_46673;
                                x_46674 = x_46673;
                            }
                        }
                        if (sle32(wave_sizze_46663, skip_threads_46679)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46679 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46661, 32) == 0 ||
                      !ltid_in_bounds_46676)) {
                    // read operands
                    {
                        x_46671 = x_46670;
                        x_46670 = ((__local
                                    float *) scan_arr_mem_46665)[sext_i32_i64(squot32(local_tid_46661,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_46681 =
                             slt64(srem64(sext_i32_i64(local_tid_46661) +
                                          chunk_offset_46668, iota32_arg_28909),
                                   sext_i32_i64(local_tid_46661) +
                                   chunk_offset_46668 -
                                   (sext_i32_i64(squot32(local_tid_46661, 32) *
                                    32 - 1) + chunk_offset_46668));
                        
                        if (inactive_46681) {
                            x_46670 = x_46671;
                        }
                        if (!inactive_46681) {
                            float defunc_1_op_res_46672 = x_46670 + x_46671;
                            
                            x_46670 = defunc_1_op_res_46672;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)] =
                            x_46670;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46661, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)] =
                        x_46671;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_38345, m_28478) && slt64(gtid_38353,
                                                        iota32_arg_28909)) {
                    ((__global float *) mem_45343)[gtid_38345 *
                                                   iota32_arg_28909 +
                                                   gtid_38353] = ((__local
                                                                   float *) scan_arr_mem_46665)[sext_i32_i64(local_tid_46661)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46682 = slt64(srem64(chunk_offset_46668 +
                                                          segscan_group_sizze_38440,
                                                          iota32_arg_28909),
                                                   chunk_offset_46668 +
                                                   segscan_group_sizze_38440 -
                                                   (chunk_offset_46668 +
                                                    segscan_group_sizze_38440 -
                                                    (int64_t) 1));
                bool should_load_carry_46683 = local_tid_46661 == 0 &&
                     !crosses_segment_46682;
                
                if (should_load_carry_46683) {
                    x_38444 = ((__local
                                float *) scan_arr_mem_46665)[segscan_group_sizze_38440 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_46683) {
                    x_38444 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_38440
}
__kernel void mainMagnitudeziscan_stage2_36724(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_46286_backing_aligned_0,
                                               int64_t N_28477, int64_t m_28478,
                                               int64_t stage1_num_groups_46255,
                                               int32_t num_threads_46256,
                                               __global
                                               unsigned char *mem_45163)
{
    #define segscan_group_sizze_36741 (mainMagnitudezisegscan_group_sizze_36718)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46286_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46286_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46281;
    int32_t local_tid_46282;
    int64_t group_sizze_46285;
    int32_t wave_sizze_46284;
    int32_t group_tid_46283;
    
    global_tid_46281 = get_global_id(0);
    local_tid_46282 = get_local_id(0);
    group_sizze_46285 = get_local_size(0);
    wave_sizze_46284 = LOCKSTEP_WIDTH;
    group_tid_46283 = get_group_id(0);
    
    int32_t phys_tid_36724;
    
    phys_tid_36724 = global_tid_46281;
    
    __local char *scan_arr_mem_46286;
    
    scan_arr_mem_46286 = (__local char *) scan_arr_mem_46286_backing_0;
    
    int64_t flat_idx_46288;
    
    flat_idx_46288 = (sext_i32_i64(local_tid_46282) + (int64_t) 1) *
        (segscan_group_sizze_36741 * sdiv_up64(m_28478 * N_28477,
                                               sext_i32_i64(num_threads_46256))) -
        (int64_t) 1;
    
    int64_t gtid_36715;
    
    gtid_36715 = squot64(flat_idx_46288, N_28477);
    
    int64_t gtid_36723;
    
    gtid_36723 = flat_idx_46288 - squot64(flat_idx_46288, N_28477) * N_28477;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36715, m_28478) && slt64(gtid_36723, N_28477)) {
            ((__local
              int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)] =
                ((__global int64_t *) mem_45163)[gtid_36715 * N_28477 +
                                                 gtid_36723];
        } else {
            ((__local
              int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_36746;
    int64_t x_36747;
    int64_t x_46289;
    int64_t x_46290;
    bool ltid_in_bounds_46292;
    
    ltid_in_bounds_46292 = slt64(sext_i32_i64(local_tid_46282),
                                 stage1_num_groups_46255);
    
    int32_t skip_threads_46293;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46292) {
            x_36747 = ((volatile __local
                        int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)];
            if ((local_tid_46282 - squot32(local_tid_46282, 32) * 32) == 0) {
                x_36746 = x_36747;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46293 = 1;
        while (slt32(skip_threads_46293, 32)) {
            if (sle32(skip_threads_46293, local_tid_46282 -
                      squot32(local_tid_46282, 32) * 32) &&
                ltid_in_bounds_46292) {
                // read operands
                {
                    x_36746 = ((volatile __local
                                int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282) -
                                                               sext_i32_i64(skip_threads_46293)];
                }
                // perform operation
                {
                    bool inactive_46294 =
                         slt64(srem64((sext_i32_i64(local_tid_46282) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_36741 *
                                       sdiv_up64(m_28478 * N_28477,
                                                 sext_i32_i64(num_threads_46256))) -
                                      (int64_t) 1, N_28477),
                               (sext_i32_i64(local_tid_46282) + (int64_t) 1) *
                               (segscan_group_sizze_36741 * sdiv_up64(m_28478 *
                                                                      N_28477,
                                                                      sext_i32_i64(num_threads_46256))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_46282 -
                                               skip_threads_46293) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_36741 *
                                               sdiv_up64(m_28478 * N_28477,
                                                         sext_i32_i64(num_threads_46256))) -
                                              (int64_t) 1));
                    
                    if (inactive_46294) {
                        x_36746 = x_36747;
                    }
                    if (!inactive_46294) {
                        int64_t defunc_1_op_res_36748 = add64(x_36746, x_36747);
                        
                        x_36746 = defunc_1_op_res_36748;
                    }
                }
            }
            if (sle32(wave_sizze_46284, skip_threads_46293)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46293, local_tid_46282 -
                      squot32(local_tid_46282, 32) * 32) &&
                ltid_in_bounds_46292) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)] =
                        x_36746;
                    x_36747 = x_36746;
                }
            }
            if (sle32(wave_sizze_46284, skip_threads_46293)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46293 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46282 - squot32(local_tid_46282, 32) * 32) == 31 &&
            ltid_in_bounds_46292) {
            ((volatile __local
              int64_t *) scan_arr_mem_46286)[sext_i32_i64(squot32(local_tid_46282,
                                                                  32))] =
                x_36746;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46295;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46282, 32) == 0 && ltid_in_bounds_46292) {
                x_46290 = ((volatile __local
                            int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)];
                if ((local_tid_46282 - squot32(local_tid_46282, 32) * 32) ==
                    0) {
                    x_46289 = x_46290;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46295 = 1;
            while (slt32(skip_threads_46295, 32)) {
                if (sle32(skip_threads_46295, local_tid_46282 -
                          squot32(local_tid_46282, 32) * 32) &&
                    (squot32(local_tid_46282, 32) == 0 &&
                     ltid_in_bounds_46292)) {
                    // read operands
                    {
                        x_46289 = ((volatile __local
                                    int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282) -
                                                                   sext_i32_i64(skip_threads_46295)];
                    }
                    // perform operation
                    {
                        bool inactive_46296 =
                             slt64(srem64((sext_i32_i64(local_tid_46282 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_36741 *
                                           sdiv_up64(m_28478 * N_28477,
                                                     sext_i32_i64(num_threads_46256))) -
                                          (int64_t) 1, N_28477),
                                   (sext_i32_i64(local_tid_46282 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_36741 *
                                    sdiv_up64(m_28478 * N_28477,
                                              sext_i32_i64(num_threads_46256))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_46282 -
                                                   skip_threads_46295) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_36741 *
                                     sdiv_up64(m_28478 * N_28477,
                                               sext_i32_i64(num_threads_46256))) -
                                    (int64_t) 1));
                        
                        if (inactive_46296) {
                            x_46289 = x_46290;
                        }
                        if (!inactive_46296) {
                            int64_t defunc_1_op_res_46291 = add64(x_46289,
                                                                  x_46290);
                            
                            x_46289 = defunc_1_op_res_46291;
                        }
                    }
                }
                if (sle32(wave_sizze_46284, skip_threads_46295)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46295, local_tid_46282 -
                          squot32(local_tid_46282, 32) * 32) &&
                    (squot32(local_tid_46282, 32) == 0 &&
                     ltid_in_bounds_46292)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)] =
                            x_46289;
                        x_46290 = x_46289;
                    }
                }
                if (sle32(wave_sizze_46284, skip_threads_46295)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46295 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46282, 32) == 0 || !ltid_in_bounds_46292)) {
            // read operands
            {
                x_36747 = x_36746;
                x_36746 = ((__local
                            int64_t *) scan_arr_mem_46286)[sext_i32_i64(squot32(local_tid_46282,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46297 =
                     slt64(srem64((sext_i32_i64(local_tid_46282) +
                                   (int64_t) 1) * (segscan_group_sizze_36741 *
                                                   sdiv_up64(m_28478 * N_28477,
                                                             sext_i32_i64(num_threads_46256))) -
                                  (int64_t) 1, N_28477),
                           (sext_i32_i64(local_tid_46282) + (int64_t) 1) *
                           (segscan_group_sizze_36741 * sdiv_up64(m_28478 *
                                                                  N_28477,
                                                                  sext_i32_i64(num_threads_46256))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_46282,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_36741 *
                                           sdiv_up64(m_28478 * N_28477,
                                                     sext_i32_i64(num_threads_46256))) -
                                          (int64_t) 1));
                
                if (inactive_46297) {
                    x_36746 = x_36747;
                }
                if (!inactive_46297) {
                    int64_t defunc_1_op_res_36748 = add64(x_36746, x_36747);
                    
                    x_36746 = defunc_1_op_res_36748;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)] =
                    x_36746;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46282, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)] =
                x_36747;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36715, m_28478) && slt64(gtid_36723, N_28477)) {
            ((__global int64_t *) mem_45163)[gtid_36715 * N_28477 +
                                             gtid_36723] = ((__local
                                                             int64_t *) scan_arr_mem_46286)[sext_i32_i64(local_tid_46282)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36741
}
__kernel void mainMagnitudeziscan_stage2_38354(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_46689_backing_aligned_0,
                                               int64_t m_28478,
                                               int64_t iota32_arg_28909,
                                               int64_t stage1_num_groups_46658,
                                               int32_t num_threads_46659,
                                               __global
                                               unsigned char *mem_45343)
{
    #define segscan_group_sizze_38440 (mainMagnitudezisegscan_group_sizze_38348)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46689_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46689_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46684;
    int32_t local_tid_46685;
    int64_t group_sizze_46688;
    int32_t wave_sizze_46687;
    int32_t group_tid_46686;
    
    global_tid_46684 = get_global_id(0);
    local_tid_46685 = get_local_id(0);
    group_sizze_46688 = get_local_size(0);
    wave_sizze_46687 = LOCKSTEP_WIDTH;
    group_tid_46686 = get_group_id(0);
    
    int32_t phys_tid_38354;
    
    phys_tid_38354 = global_tid_46684;
    
    __local char *scan_arr_mem_46689;
    
    scan_arr_mem_46689 = (__local char *) scan_arr_mem_46689_backing_0;
    
    int64_t flat_idx_46691;
    
    flat_idx_46691 = (sext_i32_i64(local_tid_46685) + (int64_t) 1) *
        (segscan_group_sizze_38440 * sdiv_up64(m_28478 * iota32_arg_28909,
                                               sext_i32_i64(num_threads_46659))) -
        (int64_t) 1;
    
    int64_t gtid_38345;
    
    gtid_38345 = squot64(flat_idx_46691, iota32_arg_28909);
    
    int64_t gtid_38353;
    
    gtid_38353 = flat_idx_46691 - squot64(flat_idx_46691, iota32_arg_28909) *
        iota32_arg_28909;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_38345, m_28478) && slt64(gtid_38353, iota32_arg_28909)) {
            ((__local
              float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)] =
                ((__global float *) mem_45343)[gtid_38345 * iota32_arg_28909 +
                                               gtid_38353];
        } else {
            ((__local
              float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_38444;
    float x_38445;
    float x_46692;
    float x_46693;
    bool ltid_in_bounds_46695;
    
    ltid_in_bounds_46695 = slt64(sext_i32_i64(local_tid_46685),
                                 stage1_num_groups_46658);
    
    int32_t skip_threads_46696;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46695) {
            x_38445 = ((volatile __local
                        float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)];
            if ((local_tid_46685 - squot32(local_tid_46685, 32) * 32) == 0) {
                x_38444 = x_38445;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46696 = 1;
        while (slt32(skip_threads_46696, 32)) {
            if (sle32(skip_threads_46696, local_tid_46685 -
                      squot32(local_tid_46685, 32) * 32) &&
                ltid_in_bounds_46695) {
                // read operands
                {
                    x_38444 = ((volatile __local
                                float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685) -
                                                             sext_i32_i64(skip_threads_46696)];
                }
                // perform operation
                {
                    bool inactive_46697 =
                         slt64(srem64((sext_i32_i64(local_tid_46685) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_38440 *
                                       sdiv_up64(m_28478 * iota32_arg_28909,
                                                 sext_i32_i64(num_threads_46659))) -
                                      (int64_t) 1, iota32_arg_28909),
                               (sext_i32_i64(local_tid_46685) + (int64_t) 1) *
                               (segscan_group_sizze_38440 * sdiv_up64(m_28478 *
                                                                      iota32_arg_28909,
                                                                      sext_i32_i64(num_threads_46659))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_46685 -
                                               skip_threads_46696) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_38440 *
                                               sdiv_up64(m_28478 *
                                                         iota32_arg_28909,
                                                         sext_i32_i64(num_threads_46659))) -
                                              (int64_t) 1));
                    
                    if (inactive_46697) {
                        x_38444 = x_38445;
                    }
                    if (!inactive_46697) {
                        float defunc_1_op_res_38446 = x_38444 + x_38445;
                        
                        x_38444 = defunc_1_op_res_38446;
                    }
                }
            }
            if (sle32(wave_sizze_46687, skip_threads_46696)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46696, local_tid_46685 -
                      squot32(local_tid_46685, 32) * 32) &&
                ltid_in_bounds_46695) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)] =
                        x_38444;
                    x_38445 = x_38444;
                }
            }
            if (sle32(wave_sizze_46687, skip_threads_46696)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46696 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46685 - squot32(local_tid_46685, 32) * 32) == 31 &&
            ltid_in_bounds_46695) {
            ((volatile __local
              float *) scan_arr_mem_46689)[sext_i32_i64(squot32(local_tid_46685,
                                                                32))] = x_38444;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46698;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46685, 32) == 0 && ltid_in_bounds_46695) {
                x_46693 = ((volatile __local
                            float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)];
                if ((local_tid_46685 - squot32(local_tid_46685, 32) * 32) ==
                    0) {
                    x_46692 = x_46693;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46698 = 1;
            while (slt32(skip_threads_46698, 32)) {
                if (sle32(skip_threads_46698, local_tid_46685 -
                          squot32(local_tid_46685, 32) * 32) &&
                    (squot32(local_tid_46685, 32) == 0 &&
                     ltid_in_bounds_46695)) {
                    // read operands
                    {
                        x_46692 = ((volatile __local
                                    float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685) -
                                                                 sext_i32_i64(skip_threads_46698)];
                    }
                    // perform operation
                    {
                        bool inactive_46699 =
                             slt64(srem64((sext_i32_i64(local_tid_46685 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_38440 *
                                           sdiv_up64(m_28478 * iota32_arg_28909,
                                                     sext_i32_i64(num_threads_46659))) -
                                          (int64_t) 1, iota32_arg_28909),
                                   (sext_i32_i64(local_tid_46685 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_38440 *
                                    sdiv_up64(m_28478 * iota32_arg_28909,
                                              sext_i32_i64(num_threads_46659))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_46685 -
                                                   skip_threads_46698) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_38440 *
                                     sdiv_up64(m_28478 * iota32_arg_28909,
                                               sext_i32_i64(num_threads_46659))) -
                                    (int64_t) 1));
                        
                        if (inactive_46699) {
                            x_46692 = x_46693;
                        }
                        if (!inactive_46699) {
                            float defunc_1_op_res_46694 = x_46692 + x_46693;
                            
                            x_46692 = defunc_1_op_res_46694;
                        }
                    }
                }
                if (sle32(wave_sizze_46687, skip_threads_46698)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46698, local_tid_46685 -
                          squot32(local_tid_46685, 32) * 32) &&
                    (squot32(local_tid_46685, 32) == 0 &&
                     ltid_in_bounds_46695)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)] =
                            x_46692;
                        x_46693 = x_46692;
                    }
                }
                if (sle32(wave_sizze_46687, skip_threads_46698)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46698 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46685, 32) == 0 || !ltid_in_bounds_46695)) {
            // read operands
            {
                x_38445 = x_38444;
                x_38444 = ((__local
                            float *) scan_arr_mem_46689)[sext_i32_i64(squot32(local_tid_46685,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46700 =
                     slt64(srem64((sext_i32_i64(local_tid_46685) +
                                   (int64_t) 1) * (segscan_group_sizze_38440 *
                                                   sdiv_up64(m_28478 *
                                                             iota32_arg_28909,
                                                             sext_i32_i64(num_threads_46659))) -
                                  (int64_t) 1, iota32_arg_28909),
                           (sext_i32_i64(local_tid_46685) + (int64_t) 1) *
                           (segscan_group_sizze_38440 * sdiv_up64(m_28478 *
                                                                  iota32_arg_28909,
                                                                  sext_i32_i64(num_threads_46659))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_46685,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_38440 *
                                           sdiv_up64(m_28478 * iota32_arg_28909,
                                                     sext_i32_i64(num_threads_46659))) -
                                          (int64_t) 1));
                
                if (inactive_46700) {
                    x_38444 = x_38445;
                }
                if (!inactive_46700) {
                    float defunc_1_op_res_38446 = x_38444 + x_38445;
                    
                    x_38444 = defunc_1_op_res_38446;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)] =
                    x_38444;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46685, 32) == 0) {
            ((__local
              float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)] =
                x_38445;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_38345, m_28478) && slt64(gtid_38353, iota32_arg_28909)) {
            ((__global float *) mem_45343)[gtid_38345 * iota32_arg_28909 +
                                           gtid_38353] = ((__local
                                                           float *) scan_arr_mem_46689)[sext_i32_i64(local_tid_46685)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_38440
}
__kernel void mainMagnitudeziscan_stage3_36724(__global int *global_failure,
                                               int64_t N_28477, int64_t m_28478,
                                               int64_t num_groups_36742,
                                               int32_t num_threads_46256,
                                               int32_t required_groups_46298,
                                               __global
                                               unsigned char *mem_45163)
{
    #define segscan_group_sizze_36741 (mainMagnitudezisegscan_group_sizze_36718)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46299;
    int32_t local_tid_46300;
    int64_t group_sizze_46303;
    int32_t wave_sizze_46302;
    int32_t group_tid_46301;
    
    global_tid_46299 = get_global_id(0);
    local_tid_46300 = get_local_id(0);
    group_sizze_46303 = get_local_size(0);
    wave_sizze_46302 = LOCKSTEP_WIDTH;
    group_tid_46301 = get_group_id(0);
    
    int32_t phys_tid_36724;
    
    phys_tid_36724 = global_tid_46299;
    
    int32_t phys_group_id_46304;
    
    phys_group_id_46304 = get_group_id(0);
    for (int32_t i_46305 = 0; i_46305 < sdiv_up32(required_groups_46298 -
                                                  phys_group_id_46304,
                                                  sext_i64_i32(num_groups_36742));
         i_46305++) {
        int32_t virt_group_id_46306 = phys_group_id_46304 + i_46305 *
                sext_i64_i32(num_groups_36742);
        int64_t flat_idx_46307 = sext_i32_i64(virt_group_id_46306) *
                segscan_group_sizze_36741 + sext_i32_i64(local_tid_46300);
        int64_t gtid_36715 = squot64(flat_idx_46307, N_28477);
        int64_t gtid_36723 = flat_idx_46307 - squot64(flat_idx_46307, N_28477) *
                N_28477;
        int64_t orig_group_46308 = squot64(flat_idx_46307,
                                           segscan_group_sizze_36741 *
                                           sdiv_up64(m_28478 * N_28477,
                                                     sext_i32_i64(num_threads_46256)));
        int64_t carry_in_flat_idx_46309 = orig_group_46308 *
                (segscan_group_sizze_36741 * sdiv_up64(m_28478 * N_28477,
                                                       sext_i32_i64(num_threads_46256))) -
                (int64_t) 1;
        
        if (slt64(gtid_36715, m_28478) && slt64(gtid_36723, N_28477)) {
            if (!(orig_group_46308 == (int64_t) 0 || (flat_idx_46307 ==
                                                      (orig_group_46308 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_36741 *
                                                       sdiv_up64(m_28478 *
                                                                 N_28477,
                                                                 sext_i32_i64(num_threads_46256))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_46307,
                                                                   N_28477),
                                                            flat_idx_46307 -
                                                            carry_in_flat_idx_46309)))) {
                int64_t x_36746;
                int64_t x_36747;
                
                x_36746 = ((__global
                            int64_t *) mem_45163)[squot64(carry_in_flat_idx_46309,
                                                          N_28477) * N_28477 +
                                                  (carry_in_flat_idx_46309 -
                                                   squot64(carry_in_flat_idx_46309,
                                                           N_28477) * N_28477)];
                x_36747 = ((__global int64_t *) mem_45163)[gtid_36715 *
                                                           N_28477 +
                                                           gtid_36723];
                
                int64_t defunc_1_op_res_36748;
                
                defunc_1_op_res_36748 = add64(x_36746, x_36747);
                x_36746 = defunc_1_op_res_36748;
                ((__global int64_t *) mem_45163)[gtid_36715 * N_28477 +
                                                 gtid_36723] = x_36746;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36741
}
__kernel void mainMagnitudeziscan_stage3_38354(__global int *global_failure,
                                               int64_t m_28478,
                                               int64_t iota32_arg_28909,
                                               int64_t num_groups_38441,
                                               int32_t num_threads_46659,
                                               int32_t required_groups_46701,
                                               __global
                                               unsigned char *mem_45343)
{
    #define segscan_group_sizze_38440 (mainMagnitudezisegscan_group_sizze_38348)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46702;
    int32_t local_tid_46703;
    int64_t group_sizze_46706;
    int32_t wave_sizze_46705;
    int32_t group_tid_46704;
    
    global_tid_46702 = get_global_id(0);
    local_tid_46703 = get_local_id(0);
    group_sizze_46706 = get_local_size(0);
    wave_sizze_46705 = LOCKSTEP_WIDTH;
    group_tid_46704 = get_group_id(0);
    
    int32_t phys_tid_38354;
    
    phys_tid_38354 = global_tid_46702;
    
    int32_t phys_group_id_46707;
    
    phys_group_id_46707 = get_group_id(0);
    for (int32_t i_46708 = 0; i_46708 < sdiv_up32(required_groups_46701 -
                                                  phys_group_id_46707,
                                                  sext_i64_i32(num_groups_38441));
         i_46708++) {
        int32_t virt_group_id_46709 = phys_group_id_46707 + i_46708 *
                sext_i64_i32(num_groups_38441);
        int64_t flat_idx_46710 = sext_i32_i64(virt_group_id_46709) *
                segscan_group_sizze_38440 + sext_i32_i64(local_tid_46703);
        int64_t gtid_38345 = squot64(flat_idx_46710, iota32_arg_28909);
        int64_t gtid_38353 = flat_idx_46710 - squot64(flat_idx_46710,
                                                      iota32_arg_28909) *
                iota32_arg_28909;
        int64_t orig_group_46711 = squot64(flat_idx_46710,
                                           segscan_group_sizze_38440 *
                                           sdiv_up64(m_28478 * iota32_arg_28909,
                                                     sext_i32_i64(num_threads_46659)));
        int64_t carry_in_flat_idx_46712 = orig_group_46711 *
                (segscan_group_sizze_38440 * sdiv_up64(m_28478 *
                                                       iota32_arg_28909,
                                                       sext_i32_i64(num_threads_46659))) -
                (int64_t) 1;
        
        if (slt64(gtid_38345, m_28478) && slt64(gtid_38353, iota32_arg_28909)) {
            if (!(orig_group_46711 == (int64_t) 0 || (flat_idx_46710 ==
                                                      (orig_group_46711 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_38440 *
                                                       sdiv_up64(m_28478 *
                                                                 iota32_arg_28909,
                                                                 sext_i32_i64(num_threads_46659))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_46710,
                                                                   iota32_arg_28909),
                                                            flat_idx_46710 -
                                                            carry_in_flat_idx_46712)))) {
                float x_38444;
                float x_38445;
                
                x_38444 = ((__global
                            float *) mem_45343)[squot64(carry_in_flat_idx_46712,
                                                        iota32_arg_28909) *
                                                iota32_arg_28909 +
                                                (carry_in_flat_idx_46712 -
                                                 squot64(carry_in_flat_idx_46712,
                                                         iota32_arg_28909) *
                                                 iota32_arg_28909)];
                x_38445 = ((__global float *) mem_45343)[gtid_38345 *
                                                         iota32_arg_28909 +
                                                         gtid_38353];
                
                float defunc_1_op_res_38446;
                
                defunc_1_op_res_38446 = x_38444 + x_38445;
                x_38444 = defunc_1_op_res_38446;
                ((__global float *) mem_45343)[gtid_38345 * iota32_arg_28909 +
                                               gtid_38353] = x_38444;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_38440
}
__kernel void mainMagnitudezisegmap_34343(__global int *global_failure,
                                          int64_t N_28477, float freq_28482,
                                          int64_t i32_res_28493, __global
                                          unsigned char *mappingindices_mem_44380,
                                          __global unsigned char *mem_44385)
{
    #define segmap_group_sizze_34416 (mainMagnitudezisegmap_group_sizze_34346)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45680;
    int32_t local_tid_45681;
    int64_t group_sizze_45684;
    int32_t wave_sizze_45683;
    int32_t group_tid_45682;
    
    global_tid_45680 = get_global_id(0);
    local_tid_45681 = get_local_id(0);
    group_sizze_45684 = get_local_size(0);
    wave_sizze_45683 = LOCKSTEP_WIDTH;
    group_tid_45682 = get_group_id(0);
    
    int32_t phys_tid_34343;
    
    phys_tid_34343 = global_tid_45680;
    
    int64_t gtid_34341;
    
    gtid_34341 = squot64(sext_i32_i64(group_tid_45682) *
                         segmap_group_sizze_34416 +
                         sext_i32_i64(local_tid_45681), N_28477);
    
    int64_t gtid_34342;
    
    gtid_34342 = sext_i32_i64(group_tid_45682) * segmap_group_sizze_34416 +
        sext_i32_i64(local_tid_45681) - squot64(sext_i32_i64(group_tid_45682) *
                                                segmap_group_sizze_34416 +
                                                sext_i32_i64(local_tid_45681),
                                                N_28477) * N_28477;
    if (slt64(gtid_34341, i32_res_28493) && slt64(gtid_34342, N_28477)) {
        int32_t index_primexp_42340 = sext_i64_i32(gtid_34341);
        bool index_primexp_42337 = index_primexp_42340 == 0;
        float defunc_0_f_res_34422;
        
        if (index_primexp_42337) {
            defunc_0_f_res_34422 = 1.0F;
        } else {
            int32_t x_34421 = ((__global
                                int32_t *) mappingindices_mem_44380)[gtid_34342];
            bool cond_34423 = index_primexp_42340 == 1;
            float defunc_0_f_res_f_res_34424;
            
            if (cond_34423) {
                float i32_res_34425 = sitofp_i32_f32(x_34421);
                
                defunc_0_f_res_f_res_34424 = i32_res_34425;
            } else {
                int32_t r32_arg_34426 = sdiv32(index_primexp_42340, 2);
                float i32_res_34427 = sitofp_i32_f32(r32_arg_34426);
                float i32_res_34428 = sitofp_i32_f32(x_34421);
                float x_34429 = 6.2831855F * i32_res_34427;
                float x_34430 = i32_res_34428 * x_34429;
                float angle_34431 = x_34430 / freq_28482;
                int32_t x_34432 = smod32(index_primexp_42340, 2);
                bool cond_34433 = x_34432 == 0;
                float defunc_0_f_res_f_res_f_res_34434;
                
                if (cond_34433) {
                    float sin_res_34435;
                    
                    sin_res_34435 = futrts_sin32(angle_34431);
                    defunc_0_f_res_f_res_f_res_34434 = sin_res_34435;
                } else {
                    float cos_res_34436;
                    
                    cos_res_34436 = futrts_cos32(angle_34431);
                    defunc_0_f_res_f_res_f_res_34434 = cos_res_34436;
                }
                defunc_0_f_res_f_res_34424 = defunc_0_f_res_f_res_f_res_34434;
            }
            defunc_0_f_res_34422 = defunc_0_f_res_f_res_34424;
        }
        ((__global float *) mem_44385)[gtid_34341 * N_28477 + gtid_34342] =
            defunc_0_f_res_34422;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34416
}
__kernel void mainMagnitudezisegmap_34521(__global int *global_failure,
                                          int64_t N_28477, float freq_28482,
                                          int64_t i32_res_28493, __global
                                          unsigned char *mappingindices_mem_44380,
                                          __global unsigned char *mem_44389)
{
    #define segmap_group_sizze_34590 (mainMagnitudezisegmap_group_sizze_34524)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45685;
    int32_t local_tid_45686;
    int64_t group_sizze_45689;
    int32_t wave_sizze_45688;
    int32_t group_tid_45687;
    
    global_tid_45685 = get_global_id(0);
    local_tid_45686 = get_local_id(0);
    group_sizze_45689 = get_local_size(0);
    wave_sizze_45688 = LOCKSTEP_WIDTH;
    group_tid_45687 = get_group_id(0);
    
    int32_t phys_tid_34521;
    
    phys_tid_34521 = global_tid_45685;
    
    int64_t gtid_34519;
    
    gtid_34519 = squot64(sext_i32_i64(group_tid_45687) *
                         segmap_group_sizze_34590 +
                         sext_i32_i64(local_tid_45686), N_28477);
    
    int64_t gtid_34520;
    
    gtid_34520 = sext_i32_i64(group_tid_45687) * segmap_group_sizze_34590 +
        sext_i32_i64(local_tid_45686) - squot64(sext_i32_i64(group_tid_45687) *
                                                segmap_group_sizze_34590 +
                                                sext_i32_i64(local_tid_45686),
                                                N_28477) * N_28477;
    if (slt64(gtid_34519, i32_res_28493) && slt64(gtid_34520, N_28477)) {
        int32_t index_primexp_42349 = sext_i64_i32(gtid_34519);
        bool index_primexp_42346 = index_primexp_42349 == 0;
        float defunc_0_f_res_34596;
        
        if (index_primexp_42346) {
            defunc_0_f_res_34596 = 1.0F;
        } else {
            int32_t x_34595 = ((__global
                                int32_t *) mappingindices_mem_44380)[gtid_34520];
            int32_t i_34597 = add32(1, index_primexp_42349);
            int32_t r32_arg_34598 = sdiv32(i_34597, 2);
            float i32_res_34599 = sitofp_i32_f32(r32_arg_34598);
            float i32_res_34600 = sitofp_i32_f32(x_34595);
            float x_34601 = 6.2831855F * i32_res_34599;
            float x_34602 = i32_res_34600 * x_34601;
            float angle_34603 = x_34602 / freq_28482;
            int32_t x_34604 = smod32(i_34597, 2);
            bool cond_34605 = x_34604 == 0;
            float defunc_0_f_res_f_res_34606;
            
            if (cond_34605) {
                float sin_res_34607;
                
                sin_res_34607 = futrts_sin32(angle_34603);
                defunc_0_f_res_f_res_34606 = sin_res_34607;
            } else {
                float cos_res_34608;
                
                cos_res_34608 = futrts_cos32(angle_34603);
                defunc_0_f_res_f_res_34606 = cos_res_34608;
            }
            defunc_0_f_res_34596 = defunc_0_f_res_f_res_34606;
        }
        ((__global float *) mem_44389)[gtid_34519 * N_28477 + gtid_34520] =
            defunc_0_f_res_34596;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34590
}
__kernel void mainMagnitudezisegmap_34649(__global int *global_failure,
                                          int64_t N_28477,
                                          int64_t i32_res_28493,
                                          float i32_res_28558, __global
                                          unsigned char *mem_44393, __global
                                          unsigned char *mem_44397)
{
    #define segmap_group_sizze_34673 (mainMagnitudezisegmap_group_sizze_34652)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45690;
    int32_t local_tid_45691;
    int64_t group_sizze_45694;
    int32_t wave_sizze_45693;
    int32_t group_tid_45692;
    
    global_tid_45690 = get_global_id(0);
    local_tid_45691 = get_local_id(0);
    group_sizze_45694 = get_local_size(0);
    wave_sizze_45693 = LOCKSTEP_WIDTH;
    group_tid_45692 = get_group_id(0);
    
    int32_t phys_tid_34649;
    
    phys_tid_34649 = global_tid_45690;
    
    int64_t gtid_34647;
    
    gtid_34647 = squot64(sext_i32_i64(group_tid_45692) *
                         segmap_group_sizze_34673 +
                         sext_i32_i64(local_tid_45691), i32_res_28493);
    
    int64_t gtid_34648;
    
    gtid_34648 = sext_i32_i64(group_tid_45692) * segmap_group_sizze_34673 +
        sext_i32_i64(local_tid_45691) - squot64(sext_i32_i64(group_tid_45692) *
                                                segmap_group_sizze_34673 +
                                                sext_i32_i64(local_tid_45691),
                                                i32_res_28493) * i32_res_28493;
    if (slt64(gtid_34647, N_28477) && slt64(gtid_34648, i32_res_28493)) {
        float x_34676 = ((__global float *) mem_44393)[gtid_34647 *
                                                       i32_res_28493 +
                                                       gtid_34648];
        float defunc_0_f_res_34677 = i32_res_28558 + x_34676;
        
        ((__global float *) mem_44397)[gtid_34647 * i32_res_28493 +
                                       gtid_34648] = defunc_0_f_res_34677;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34673
}
__kernel void mainMagnitudezisegmap_34682(__global int *global_failure,
                                          int64_t N_28477, int64_t m_28478,
                                          int32_t n_28481, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_34707, __global
                                          unsigned char *binop_p_mem_44390,
                                          __global unsigned char *mem_44397,
                                          __global unsigned char *mem_44400,
                                          __global unsigned char *mem_44404,
                                          __global unsigned char *mem_44446)
{
    #define segmap_group_sizze_34706 (mainMagnitudezisegmap_group_sizze_34684)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45698;
    int32_t local_tid_45699;
    int64_t group_sizze_45702;
    int32_t wave_sizze_45701;
    int32_t group_tid_45700;
    
    global_tid_45698 = get_global_id(0);
    local_tid_45699 = get_local_id(0);
    group_sizze_45702 = get_local_size(0);
    wave_sizze_45701 = LOCKSTEP_WIDTH;
    group_tid_45700 = get_group_id(0);
    
    int32_t phys_tid_34682;
    
    phys_tid_34682 = global_tid_45698;
    
    int32_t phys_group_id_45703;
    
    phys_group_id_45703 = get_group_id(0);
    for (int32_t i_45704 = 0; i_45704 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478, segmap_group_sizze_34706)) -
                   phys_group_id_45703, sext_i64_i32(num_groups_34707));
         i_45704++) {
        int32_t virt_group_id_45705 = phys_group_id_45703 + i_45704 *
                sext_i64_i32(num_groups_34707);
        int64_t gtid_34681 = sext_i32_i64(virt_group_id_45705) *
                segmap_group_sizze_34706 + sext_i32_i64(local_tid_45699);
        
        if (slt64(gtid_34681, m_28478)) {
            for (int32_t i_44360 = 0; i_44360 < k2p2zq_28491; i_44360++) {
                int64_t i_44289 = sext_i32_i64(i_44360);
                
                for (int32_t i_44359 = 0; i_44359 < k2p2zq_28491; i_44359++) {
                    int64_t i_44293 = sext_i32_i64(i_44359);
                    float defunc_2_reduce_res_34715;
                    float redout_44295 = 0.0F;
                    
                    for (int32_t i_44358 = 0; i_44358 < n_28481; i_44358++) {
                        int64_t i_44296 = sext_i32_i64(i_44358);
                        float x_34719 = ((__global float *) mem_44400)[i_44296 *
                                                                       m_28478 +
                                                                       gtid_34681];
                        float x_34720 = ((__global
                                          float *) binop_p_mem_44390)[i_44289 *
                                                                      N_28477 +
                                                                      i_44296];
                        float x_34721 = ((__global float *) mem_44397)[i_44296 *
                                                                       i32_res_28493 +
                                                                       i_44293];
                        float x_34722 = x_34720 * x_34721;
                        bool isnan_res_34723;
                        
                        isnan_res_34723 = futrts_isnan32(x_34719);
                        
                        float y_34724;
                        
                        if (isnan_res_34723) {
                            y_34724 = 0.0F;
                        } else {
                            y_34724 = 1.0F;
                        }
                        
                        float defunc_2_f_res_34725 = x_34722 * y_34724;
                        float defunc_1_op_res_34718 = defunc_2_f_res_34725 +
                              redout_44295;
                        float redout_tmp_45708 = defunc_1_op_res_34718;
                        
                        redout_44295 = redout_tmp_45708;
                    }
                    defunc_2_reduce_res_34715 = redout_44295;
                    ((__global float *) mem_44404)[phys_tid_34682 + (i_44289 *
                                                                     (num_groups_34707 *
                                                                      segmap_group_sizze_34706 *
                                                                      i32_res_28493) +
                                                                     i_44293 *
                                                                     (num_groups_34707 *
                                                                      segmap_group_sizze_34706))] =
                        defunc_2_reduce_res_34715;
                }
            }
            for (int64_t i_45709 = 0; i_45709 < i32_res_28493; i_45709++) {
                for (int64_t i_45710 = 0; i_45710 < i32_res_28493; i_45710++) {
                    ((__global float *) mem_44446)[i_45709 * (m_28478 *
                                                              i32_res_28493) +
                                                   i_45710 * m_28478 +
                                                   gtid_34681] = ((__global
                                                                   float *) mem_44404)[phys_tid_34682 +
                                                                                       (i_45709 *
                                                                                        (num_groups_34707 *
                                                                                         segmap_group_sizze_34706 *
                                                                                         i32_res_28493) +
                                                                                        i_45710 *
                                                                                        (num_groups_34707 *
                                                                                         segmap_group_sizze_34706))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34706
}
__kernel void mainMagnitudezisegmap_34728(__global int *global_failure,
                                          int64_t N_28477, int64_t m_28478,
                                          int32_t n_28481, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_34884, __global
                                          unsigned char *images_mem_44381,
                                          __global unsigned char *mem_44393,
                                          __global unsigned char *mem_44397,
                                          __global unsigned char *mem_44449,
                                          __global unsigned char *mem_44465)
{
    #define segmap_group_sizze_34883 (mainMagnitudezisegmap_group_sizze_34731)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45711;
    int32_t local_tid_45712;
    int64_t group_sizze_45715;
    int32_t wave_sizze_45714;
    int32_t group_tid_45713;
    
    global_tid_45711 = get_global_id(0);
    local_tid_45712 = get_local_id(0);
    group_sizze_45715 = get_local_size(0);
    wave_sizze_45714 = LOCKSTEP_WIDTH;
    group_tid_45713 = get_group_id(0);
    
    int32_t phys_tid_34728;
    
    phys_tid_34728 = global_tid_45711;
    
    int32_t phys_group_id_45716;
    
    phys_group_id_45716 = get_group_id(0);
    for (int32_t i_45717 = 0; i_45717 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478 * i32_res_28493,
                                          segmap_group_sizze_34883)) -
                   phys_group_id_45716, sext_i64_i32(num_groups_34884));
         i_45717++) {
        int32_t virt_group_id_45718 = phys_group_id_45716 + i_45717 *
                sext_i64_i32(num_groups_34884);
        int64_t gtid_34726 = squot64(sext_i32_i64(virt_group_id_45718) *
                                     segmap_group_sizze_34883 +
                                     sext_i32_i64(local_tid_45712),
                                     i32_res_28493);
        int64_t gtid_34727 = sext_i32_i64(virt_group_id_45718) *
                segmap_group_sizze_34883 + sext_i32_i64(local_tid_45712) -
                squot64(sext_i32_i64(virt_group_id_45718) *
                        segmap_group_sizze_34883 +
                        sext_i32_i64(local_tid_45712), i32_res_28493) *
                i32_res_28493;
        
        if (slt64(gtid_34726, m_28478) && slt64(gtid_34727, i32_res_28493)) {
            for (int32_t i_44362 = 0; i_44362 < k2p2zq_28491; i_44362++) {
                int64_t i_44299 = sext_i32_i64(i_44362);
                float defunc_2_reduce_res_34895;
                float redout_44301 = 0.0F;
                
                for (int32_t i_44361 = 0; i_44361 < n_28481; i_44361++) {
                    int64_t i_44302 = sext_i32_i64(i_44361);
                    float x_34899 = ((__global
                                      float *) images_mem_44381)[gtid_34726 *
                                                                 N_28477 +
                                                                 i_44302];
                    float x_34900 = ((__global float *) mem_44393)[i_44302 *
                                                                   i32_res_28493 +
                                                                   gtid_34727];
                    float x_34901 = ((__global float *) mem_44397)[i_44302 *
                                                                   i32_res_28493 +
                                                                   i_44299];
                    float x_34902 = x_34900 * x_34901;
                    bool isnan_res_34903;
                    
                    isnan_res_34903 = futrts_isnan32(x_34899);
                    
                    float y_34904;
                    
                    if (isnan_res_34903) {
                        y_34904 = 0.0F;
                    } else {
                        y_34904 = 1.0F;
                    }
                    
                    float defunc_2_f_res_34905 = x_34902 * y_34904;
                    float defunc_1_op_res_34898 = defunc_2_f_res_34905 +
                          redout_44301;
                    float redout_tmp_45720 = defunc_1_op_res_34898;
                    
                    redout_44301 = redout_tmp_45720;
                }
                defunc_2_reduce_res_34895 = redout_44301;
                ((__global float *) mem_44449)[phys_tid_34728 + i_44299 *
                                               (num_groups_34884 *
                                                segmap_group_sizze_34883)] =
                    defunc_2_reduce_res_34895;
            }
            for (int64_t i_45721 = 0; i_45721 < i32_res_28493; i_45721++) {
                ((__global float *) mem_44465)[i_45721 * (i32_res_28493 *
                                                          m_28478) +
                                               gtid_34726 * i32_res_28493 +
                                               gtid_34727] = ((__global
                                                               float *) mem_44449)[phys_tid_34728 +
                                                                                   i_45721 *
                                                                                   (num_groups_34884 *
                                                                                    segmap_group_sizze_34883)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34883
}
__kernel void mainMagnitudezisegmap_35320(__global int *global_failure,
                                          int64_t m_28478,
                                          int64_t i32_res_28493,
                                          int64_t nm_28626,
                                          int64_t i32_res_28641,
                                          int64_t x_28642, int64_t j_m_i_28645,
                                          int64_t gauss_jordan_res_r_ixfn_44617,
                                          int64_t gauss_jordan_res_r_ixfn_44618,
                                          int64_t gauss_jordan_res_r_ixfn_44620,
                                          __global
                                          unsigned char *gauss_jordan_res_r_mem_44622,
                                          __global unsigned char *mem_44627)
{
    #define segmap_group_sizze_36067 (mainMagnitudezisegmap_group_sizze_35324)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45878;
    int32_t local_tid_45879;
    int64_t group_sizze_45882;
    int32_t wave_sizze_45881;
    int32_t group_tid_45880;
    
    global_tid_45878 = get_global_id(0);
    local_tid_45879 = get_local_id(0);
    group_sizze_45882 = get_local_size(0);
    wave_sizze_45881 = LOCKSTEP_WIDTH;
    group_tid_45880 = get_group_id(0);
    
    int32_t phys_tid_35320;
    
    phys_tid_35320 = global_tid_45878;
    
    int64_t gtid_35317;
    
    gtid_35317 = squot64(sext_i32_i64(group_tid_45880) *
                         segmap_group_sizze_36067 +
                         sext_i32_i64(local_tid_45879), i32_res_28493 *
                         j_m_i_28645);
    
    int64_t gtid_slice_35315;
    
    gtid_slice_35315 = squot64(sext_i32_i64(group_tid_45880) *
                               segmap_group_sizze_36067 +
                               sext_i32_i64(local_tid_45879) -
                               squot64(sext_i32_i64(group_tid_45880) *
                                       segmap_group_sizze_36067 +
                                       sext_i32_i64(local_tid_45879),
                                       i32_res_28493 * j_m_i_28645) *
                               (i32_res_28493 * j_m_i_28645), j_m_i_28645);
    
    int64_t gtid_slice_35316;
    
    gtid_slice_35316 = sext_i32_i64(group_tid_45880) *
        segmap_group_sizze_36067 + sext_i32_i64(local_tid_45879) -
        squot64(sext_i32_i64(group_tid_45880) * segmap_group_sizze_36067 +
                sext_i32_i64(local_tid_45879), i32_res_28493 * j_m_i_28645) *
        (i32_res_28493 * j_m_i_28645) - squot64(sext_i32_i64(group_tid_45880) *
                                                segmap_group_sizze_36067 +
                                                sext_i32_i64(local_tid_45879) -
                                                squot64(sext_i32_i64(group_tid_45880) *
                                                        segmap_group_sizze_36067 +
                                                        sext_i32_i64(local_tid_45879),
                                                        i32_res_28493 *
                                                        j_m_i_28645) *
                                                (i32_res_28493 * j_m_i_28645),
                                                j_m_i_28645) * j_m_i_28645;
    if ((slt64(gtid_35317, m_28478) && slt64(gtid_slice_35315,
                                             i32_res_28493)) &&
        slt64(gtid_slice_35316, j_m_i_28645)) {
        int64_t slice_36071 = i32_res_28493 + gtid_slice_35316;
        int64_t binop_x_42412 = x_28642 * gtid_35317;
        int64_t binop_y_42413 = i32_res_28641 * gtid_slice_35315;
        int64_t binop_x_42414 = binop_x_42412 + binop_y_42413;
        int64_t binop_x_42415 = slice_36071 + binop_x_42414;
        int64_t new_index_42416 = squot64(binop_x_42415, nm_28626);
        int64_t binop_y_42428 = nm_28626 * new_index_42416;
        int64_t new_index_42429 = binop_x_42415 - binop_y_42428;
        float v_36072 = ((__global
                          float *) gauss_jordan_res_r_mem_44622)[gauss_jordan_res_r_ixfn_44617 +
                                                                 (new_index_42416 *
                                                                  gauss_jordan_res_r_ixfn_44618 +
                                                                  new_index_42429 *
                                                                  gauss_jordan_res_r_ixfn_44620)];
        
        ((__global float *) mem_44627)[gtid_35317 * (j_m_i_28645 *
                                                     i32_res_28493) +
                                       gtid_slice_35315 * j_m_i_28645 +
                                       gtid_slice_35316] = v_36072;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36067
}
__kernel void mainMagnitudezisegmap_35550(__global int *global_failure,
                                          int64_t m_28478, int64_t nm_28626,
                                          int64_t ctx_param_ext_44580,
                                          int64_t ctx_param_ext_44581,
                                          int64_t ctx_param_ext_44583, __global
                                          unsigned char *mem_param_44585,
                                          __global unsigned char *mem_44605)
{
    #define segmap_group_sizze_36055 (mainMagnitudezisegmap_group_sizze_35553)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45872;
    int32_t local_tid_45873;
    int64_t group_sizze_45876;
    int32_t wave_sizze_45875;
    int32_t group_tid_45874;
    
    global_tid_45872 = get_global_id(0);
    local_tid_45873 = get_local_id(0);
    group_sizze_45876 = get_local_size(0);
    wave_sizze_45875 = LOCKSTEP_WIDTH;
    group_tid_45874 = get_group_id(0);
    
    int32_t phys_tid_35550;
    
    phys_tid_35550 = global_tid_45872;
    
    int64_t gtid_35548;
    
    gtid_35548 = squot64(sext_i32_i64(group_tid_45874) *
                         segmap_group_sizze_36055 +
                         sext_i32_i64(local_tid_45873), nm_28626);
    
    int64_t gtid_35549;
    
    gtid_35549 = sext_i32_i64(group_tid_45874) * segmap_group_sizze_36055 +
        sext_i32_i64(local_tid_45873) - squot64(sext_i32_i64(group_tid_45874) *
                                                segmap_group_sizze_36055 +
                                                sext_i32_i64(local_tid_45873),
                                                nm_28626) * nm_28626;
    if (slt64(gtid_35548, m_28478) && slt64(gtid_35549, nm_28626)) {
        float write_value_36061 = ((__global float *) mem_44605)[gtid_35548 *
                                                                 nm_28626 +
                                                                 gtid_35549];
        
        if ((sle64((int64_t) 0, gtid_35548) && slt64(gtid_35548, m_28478)) &&
            (sle64((int64_t) 0, gtid_35549) && slt64(gtid_35549, nm_28626))) {
            ((__global float *) mem_param_44585)[ctx_param_ext_44580 +
                                                 (gtid_35548 *
                                                  ctx_param_ext_44581 +
                                                  gtid_35549 *
                                                  ctx_param_ext_44583)] =
                write_value_36061;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36055
}
__kernel void mainMagnitudezisegmap_35620(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28478, int32_t k2p2zq_28491,
                                          int32_t m_28624, int64_t nm_28626,
                                          int32_t i_35922,
                                          int64_t i32_res_35924,
                                          int64_t ctx_param_ext_44580,
                                          int64_t ctx_param_ext_44581,
                                          int64_t ctx_param_ext_44583, __global
                                          unsigned char *mem_param_44585,
                                          __global unsigned char *mem_44601,
                                          __global unsigned char *mem_44605)
{
    #define segmap_group_sizze_36005 (mainMagnitudezisegmap_group_sizze_35623)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45867;
    int32_t local_tid_45868;
    int64_t group_sizze_45871;
    int32_t wave_sizze_45870;
    int32_t group_tid_45869;
    
    global_tid_45867 = get_global_id(0);
    local_tid_45868 = get_local_id(0);
    group_sizze_45871 = get_local_size(0);
    wave_sizze_45870 = LOCKSTEP_WIDTH;
    group_tid_45869 = get_group_id(0);
    
    int32_t phys_tid_35620;
    
    phys_tid_35620 = global_tid_45867;
    
    int64_t gtid_35618;
    
    gtid_35618 = squot64(sext_i32_i64(group_tid_45869) *
                         segmap_group_sizze_36005 +
                         sext_i32_i64(local_tid_45868), nm_28626);
    
    int64_t gtid_35619;
    
    gtid_35619 = sext_i32_i64(group_tid_45869) * segmap_group_sizze_36005 +
        sext_i32_i64(local_tid_45868) - squot64(sext_i32_i64(group_tid_45869) *
                                                segmap_group_sizze_36005 +
                                                sext_i32_i64(local_tid_45868),
                                                nm_28626) * nm_28626;
    if (slt64(gtid_35618, m_28478) && slt64(gtid_35619, nm_28626)) {
        bool cond_36010 = ((__global bool *) mem_44601)[gtid_35618];
        int32_t defunc_0_f_res_36012 = sext_i64_i32(gtid_35619);
        int32_t defunc_0_f_res_36013 = sdiv32(defunc_0_f_res_36012, m_28624);
        int32_t defunc_0_f_res_36014 = smod32(defunc_0_f_res_36012, m_28624);
        float defunc_0_f_res_36015;
        
        if (cond_36010) {
            int32_t x_36016 = mul32(m_28624, defunc_0_f_res_36013);
            int32_t i32_arg_36017 = add32(defunc_0_f_res_36014, x_36016);
            int64_t i32_res_36018 = sext_i32_i64(i32_arg_36017);
            bool x_36019 = sle64((int64_t) 0, i32_res_36018);
            bool y_36020 = slt64(i32_res_36018, nm_28626);
            bool bounds_check_36021 = x_36019 && y_36020;
            bool index_certs_36022;
            
            if (!bounds_check_36021) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 90) ==
                        -1) {
                        global_failure_args[0] = i32_res_36018;
                        global_failure_args[1] = nm_28626;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36023 = ((__global
                                                 float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                           (gtid_35618 *
                                                                            ctx_param_ext_44581 +
                                                                            i32_res_36018 *
                                                                            ctx_param_ext_44583)];
            
            defunc_0_f_res_36015 = defunc_0_f_res_t_res_36023;
        } else {
            float v1_36009 = ((__global
                               float *) mem_param_44585)[ctx_param_ext_44580 +
                                                         (gtid_35618 *
                                                          ctx_param_ext_44581 +
                                                          i32_res_35924 *
                                                          ctx_param_ext_44583)];
            int64_t i32_res_36024 = sext_i32_i64(defunc_0_f_res_36014);
            bool x_36025 = sle64((int64_t) 0, i32_res_36024);
            bool y_36026 = slt64(i32_res_36024, nm_28626);
            bool bounds_check_36027 = x_36025 && y_36026;
            bool index_certs_36028;
            
            if (!bounds_check_36027) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 91) ==
                        -1) {
                        global_failure_args[0] = i32_res_36024;
                        global_failure_args[1] = nm_28626;
                        ;
                    }
                    return;
                }
            }
            
            float x_36029 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_35618 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_36024 *
                                                         ctx_param_ext_44583)];
            float x_36030 = x_36029 / v1_36009;
            int32_t y_36031 = sub32(k2p2zq_28491, 1);
            bool cond_36032 = slt32(defunc_0_f_res_36013, y_36031);
            float defunc_0_f_res_f_res_36033;
            
            if (cond_36032) {
                int32_t x_36034 = add32(1, defunc_0_f_res_36013);
                int32_t x_36035 = mul32(m_28624, x_36034);
                int32_t i32_arg_36036 = add32(defunc_0_f_res_36014, x_36035);
                int64_t i32_res_36037 = sext_i32_i64(i32_arg_36036);
                bool x_36038 = sle64((int64_t) 0, i32_res_36037);
                bool y_36039 = slt64(i32_res_36037, nm_28626);
                bool bounds_check_36040 = x_36038 && y_36039;
                bool index_certs_36041;
                
                if (!bounds_check_36040) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 92) ==
                            -1) {
                            global_failure_args[0] = i32_res_36037;
                            global_failure_args[1] = nm_28626;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36042 = ((__global
                                  float *) mem_param_44585)[ctx_param_ext_44580 +
                                                            (gtid_35618 *
                                                             ctx_param_ext_44581 +
                                                             i32_res_36037 *
                                                             ctx_param_ext_44583)];
                int32_t i32_arg_36043 = add32(i_35922, x_36035);
                int64_t i32_res_36044 = sext_i32_i64(i32_arg_36043);
                bool x_36045 = sle64((int64_t) 0, i32_res_36044);
                bool y_36046 = slt64(i32_res_36044, nm_28626);
                bool bounds_check_36047 = x_36045 && y_36046;
                bool index_certs_36048;
                
                if (!bounds_check_36047) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 93) ==
                            -1) {
                            global_failure_args[0] = i32_res_36044;
                            global_failure_args[1] = nm_28626;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36049 = ((__global
                                  float *) mem_param_44585)[ctx_param_ext_44580 +
                                                            (gtid_35618 *
                                                             ctx_param_ext_44581 +
                                                             i32_res_36044 *
                                                             ctx_param_ext_44583)];
                float y_36050 = x_36030 * x_36049;
                float defunc_0_f_res_f_res_t_res_36051 = x_36042 - y_36050;
                
                defunc_0_f_res_f_res_36033 = defunc_0_f_res_f_res_t_res_36051;
            } else {
                defunc_0_f_res_f_res_36033 = x_36030;
            }
            defunc_0_f_res_36015 = defunc_0_f_res_f_res_36033;
        }
        ((__global float *) mem_44605)[gtid_35618 * nm_28626 + gtid_35619] =
            defunc_0_f_res_36015;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36005
}
__kernel void mainMagnitudezisegmap_35720(__global int *global_failure,
                                          int64_t m_28478,
                                          int64_t i32_res_35924,
                                          int64_t ctx_param_ext_44580,
                                          int64_t ctx_param_ext_44581,
                                          int64_t ctx_param_ext_44583, __global
                                          unsigned char *mem_param_44585,
                                          __global unsigned char *mem_44601)
{
    #define segmap_group_sizze_35989 (mainMagnitudezisegmap_group_sizze_35722)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45862;
    int32_t local_tid_45863;
    int64_t group_sizze_45866;
    int32_t wave_sizze_45865;
    int32_t group_tid_45864;
    
    global_tid_45862 = get_global_id(0);
    local_tid_45863 = get_local_id(0);
    group_sizze_45866 = get_local_size(0);
    wave_sizze_45865 = LOCKSTEP_WIDTH;
    group_tid_45864 = get_group_id(0);
    
    int32_t phys_tid_35720;
    
    phys_tid_35720 = global_tid_45862;
    
    int64_t gtid_35719;
    
    gtid_35719 = sext_i32_i64(group_tid_45864) * segmap_group_sizze_35989 +
        sext_i32_i64(local_tid_45863);
    if (slt64(gtid_35719, m_28478)) {
        float v1_35994 = ((__global
                           float *) mem_param_44585)[ctx_param_ext_44580 +
                                                     (gtid_35719 *
                                                      ctx_param_ext_44581 +
                                                      i32_res_35924 *
                                                      ctx_param_ext_44583)];
        bool cond_35995 = v1_35994 == 0.0F;
        
        ((__global bool *) mem_44601)[gtid_35719] = cond_35995;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35989
}
__kernel void mainMagnitudezisegmap_35837(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28478, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int32_t m_28624, int64_t nm_28626,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_44549,
                                          __global unsigned char *mem_44577)
{
    #define segmap_group_sizze_35897 (mainMagnitudezisegmap_group_sizze_35840)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45829;
    int32_t local_tid_45830;
    int64_t group_sizze_45833;
    int32_t wave_sizze_45832;
    int32_t group_tid_45831;
    
    global_tid_45829 = get_global_id(0);
    local_tid_45830 = get_local_id(0);
    group_sizze_45833 = get_local_size(0);
    wave_sizze_45832 = LOCKSTEP_WIDTH;
    group_tid_45831 = get_group_id(0);
    
    int32_t phys_tid_35837;
    
    phys_tid_35837 = global_tid_45829;
    
    int64_t gtid_35835;
    
    gtid_35835 = squot64(sext_i32_i64(group_tid_45831) *
                         segmap_group_sizze_35897 +
                         sext_i32_i64(local_tid_45830), nm_28626);
    
    int64_t gtid_35836;
    
    gtid_35836 = sext_i32_i64(group_tid_45831) * segmap_group_sizze_35897 +
        sext_i32_i64(local_tid_45830) - squot64(sext_i32_i64(group_tid_45831) *
                                                segmap_group_sizze_35897 +
                                                sext_i32_i64(local_tid_45830),
                                                nm_28626) * nm_28626;
    if (slt64(gtid_35835, m_28478) && slt64(gtid_35836, nm_28626)) {
        int32_t index_primexp_42361 = sext_i64_i32(gtid_35836);
        int32_t defunc_0_f_res_35902 = sdiv32(index_primexp_42361, m_28624);
        int32_t defunc_0_f_res_35903 = smod32(index_primexp_42361, m_28624);
        bool cond_35904 = slt32(defunc_0_f_res_35903, k2p2zq_28491);
        float defunc_0_f_res_35905;
        
        if (cond_35904) {
            int64_t i_35906 = sext_i32_i64(defunc_0_f_res_35902);
            bool x_35907 = sle64((int64_t) 0, i_35906);
            bool y_35908 = slt64(i_35906, i32_res_28493);
            bool bounds_check_35909 = x_35907 && y_35908;
            int64_t j_35910 = sext_i32_i64(defunc_0_f_res_35903);
            bool x_35911 = sle64((int64_t) 0, j_35910);
            bool y_35912 = slt64(j_35910, i32_res_28493);
            bool bounds_check_35913 = x_35911 && y_35912;
            bool index_ok_35914 = bounds_check_35909 && bounds_check_35913;
            bool index_certs_35915;
            
            if (!index_ok_35914) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 85) ==
                        -1) {
                        global_failure_args[0] = i_35906;
                        global_failure_args[1] = j_35910;
                        global_failure_args[2] = i32_res_28493;
                        global_failure_args[3] = i32_res_28493;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_35916 = ((__global
                                                 float *) defunc_3_map_res_mem_44549)[gtid_35835 *
                                                                                      (i32_res_28493 *
                                                                                       i32_res_28493) +
                                                                                      i_35906 *
                                                                                      i32_res_28493 +
                                                                                      j_35910];
            
            defunc_0_f_res_35905 = defunc_0_f_res_t_res_35916;
        } else {
            int32_t y_35917 = add32(k2p2zq_28491, defunc_0_f_res_35902);
            bool cond_35918 = defunc_0_f_res_35903 == y_35917;
            float defunc_0_f_res_f_res_35919;
            
            if (cond_35918) {
                defunc_0_f_res_f_res_35919 = 1.0F;
            } else {
                defunc_0_f_res_f_res_35919 = 0.0F;
            }
            defunc_0_f_res_35905 = defunc_0_f_res_f_res_35919;
        }
        ((__global float *) mem_44577)[gtid_35835 * nm_28626 + gtid_35836] =
            defunc_0_f_res_35905;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35897
}
__kernel void mainMagnitudezisegmap_36078(__global int *global_failure,
                                          int64_t N_28477, int64_t m_28478,
                                          int32_t n_28481, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_36099, __global
                                          unsigned char *binop_p_mem_44390,
                                          __global unsigned char *mem_44632,
                                          __global unsigned char *mem_44635,
                                          __global unsigned char *mem_44650)
{
    #define segmap_group_sizze_36098 (mainMagnitudezisegmap_group_sizze_36080)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45886;
    int32_t local_tid_45887;
    int64_t group_sizze_45890;
    int32_t wave_sizze_45889;
    int32_t group_tid_45888;
    
    global_tid_45886 = get_global_id(0);
    local_tid_45887 = get_local_id(0);
    group_sizze_45890 = get_local_size(0);
    wave_sizze_45889 = LOCKSTEP_WIDTH;
    group_tid_45888 = get_group_id(0);
    
    int32_t phys_tid_36078;
    
    phys_tid_36078 = global_tid_45886;
    
    int32_t phys_group_id_45891;
    
    phys_group_id_45891 = get_group_id(0);
    for (int32_t i_45892 = 0; i_45892 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478, segmap_group_sizze_36098)) -
                   phys_group_id_45891, sext_i64_i32(num_groups_36099));
         i_45892++) {
        int32_t virt_group_id_45893 = phys_group_id_45891 + i_45892 *
                sext_i64_i32(num_groups_36099);
        int64_t gtid_36077 = sext_i32_i64(virt_group_id_45893) *
                segmap_group_sizze_36098 + sext_i32_i64(local_tid_45887);
        
        if (slt64(gtid_36077, m_28478)) {
            for (int32_t i_44364 = 0; i_44364 < k2p2zq_28491; i_44364++) {
                int64_t i_44305 = sext_i32_i64(i_44364);
                float defunc_2_reduce_res_36105;
                float redout_44307 = 0.0F;
                
                for (int32_t i_44363 = 0; i_44363 < n_28481; i_44363++) {
                    int64_t i_44308 = sext_i32_i64(i_44363);
                    float x_36110 = ((__global float *) mem_44632)[i_44308 *
                                                                   m_28478 +
                                                                   gtid_36077];
                    bool isnan_res_36111;
                    
                    isnan_res_36111 = futrts_isnan32(x_36110);
                    
                    float defunc_1_f_res_36112;
                    
                    if (isnan_res_36111) {
                        defunc_1_f_res_36112 = 0.0F;
                    } else {
                        float x_36109 = ((__global
                                          float *) binop_p_mem_44390)[i_44305 *
                                                                      N_28477 +
                                                                      i_44308];
                        float defunc_1_f_res_f_res_36113 = x_36109 * x_36110;
                        
                        defunc_1_f_res_36112 = defunc_1_f_res_f_res_36113;
                    }
                    
                    float defunc_1_op_res_36108 = defunc_1_f_res_36112 +
                          redout_44307;
                    float redout_tmp_45895 = defunc_1_op_res_36108;
                    
                    redout_44307 = redout_tmp_45895;
                }
                defunc_2_reduce_res_36105 = redout_44307;
                ((__global float *) mem_44635)[phys_tid_36078 + i_44305 *
                                               (num_groups_36099 *
                                                segmap_group_sizze_36098)] =
                    defunc_2_reduce_res_36105;
            }
            for (int64_t i_45896 = 0; i_45896 < i32_res_28493; i_45896++) {
                ((__global float *) mem_44650)[i_45896 * m_28478 + gtid_36077] =
                    ((__global float *) mem_44635)[phys_tid_36078 + i_45896 *
                                                   (num_groups_36099 *
                                                    segmap_group_sizze_36098)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36098
}
__kernel void mainMagnitudezisegmap_36219(__global int *global_failure,
                                          int64_t m_28478, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_36239, __global
                                          unsigned char *mem_44854, __global
                                          unsigned char *mem_44857, __global
                                          unsigned char *mem_44860, __global
                                          unsigned char *mem_44875)
{
    #define segmap_group_sizze_36238 (mainMagnitudezisegmap_group_sizze_36221)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46018;
    int32_t local_tid_46019;
    int64_t group_sizze_46022;
    int32_t wave_sizze_46021;
    int32_t group_tid_46020;
    
    global_tid_46018 = get_global_id(0);
    local_tid_46019 = get_local_id(0);
    group_sizze_46022 = get_local_size(0);
    wave_sizze_46021 = LOCKSTEP_WIDTH;
    group_tid_46020 = get_group_id(0);
    
    int32_t phys_tid_36219;
    
    phys_tid_36219 = global_tid_46018;
    
    int32_t phys_group_id_46023;
    
    phys_group_id_46023 = get_group_id(0);
    for (int32_t i_46024 = 0; i_46024 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478, segmap_group_sizze_36238)) -
                   phys_group_id_46023, sext_i64_i32(num_groups_36239));
         i_46024++) {
        int32_t virt_group_id_46025 = phys_group_id_46023 + i_46024 *
                sext_i64_i32(num_groups_36239);
        int64_t gtid_36218 = sext_i32_i64(virt_group_id_46025) *
                segmap_group_sizze_36238 + sext_i32_i64(local_tid_46019);
        
        if (slt64(gtid_36218, m_28478)) {
            for (int32_t i_44366 = 0; i_44366 < k2p2zq_28491; i_44366++) {
                int64_t i_44311 = sext_i32_i64(i_44366);
                float defunc_0_f_res_36246;
                float redout_44313 = 0.0F;
                
                for (int32_t i_44365 = 0; i_44365 < k2p2zq_28491; i_44365++) {
                    int64_t i_44314 = sext_i32_i64(i_44365);
                    float x_36250 = ((__global float *) mem_44857)[i_44314 *
                                                                   m_28478 +
                                                                   gtid_36218];
                    float x_36251 = ((__global float *) mem_44854)[i_44311 *
                                                                   (m_28478 *
                                                                    i32_res_28493) +
                                                                   i_44314 *
                                                                   m_28478 +
                                                                   gtid_36218];
                    float defunc_1_f_res_36252 = x_36250 * x_36251;
                    float defunc_1_op_res_36249 = defunc_1_f_res_36252 +
                          redout_44313;
                    float redout_tmp_46027 = defunc_1_op_res_36249;
                    
                    redout_44313 = redout_tmp_46027;
                }
                defunc_0_f_res_36246 = redout_44313;
                ((__global float *) mem_44860)[phys_tid_36219 + i_44311 *
                                               (num_groups_36239 *
                                                segmap_group_sizze_36238)] =
                    defunc_0_f_res_36246;
            }
            for (int64_t i_46028 = 0; i_46028 < i32_res_28493; i_46028++) {
                ((__global float *) mem_44875)[i_46028 * m_28478 + gtid_36218] =
                    ((__global float *) mem_44860)[phys_tid_36219 + i_46028 *
                                                   (num_groups_36239 *
                                                    segmap_group_sizze_36238)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36238
}
__kernel void mainMagnitudezisegmap_36351(__global int *global_failure,
                                          int64_t N_28477, int64_t m_28478,
                                          int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_36370, __global
                                          unsigned char *mem_44397, __global
                                          unsigned char *mem_44919, __global
                                          unsigned char *mem_44922, __global
                                          unsigned char *mem_44937)
{
    #define segmap_group_sizze_36369 (mainMagnitudezisegmap_group_sizze_36353)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46106;
    int32_t local_tid_46107;
    int64_t group_sizze_46110;
    int32_t wave_sizze_46109;
    int32_t group_tid_46108;
    
    global_tid_46106 = get_global_id(0);
    local_tid_46107 = get_local_id(0);
    group_sizze_46110 = get_local_size(0);
    wave_sizze_46109 = LOCKSTEP_WIDTH;
    group_tid_46108 = get_group_id(0);
    
    int32_t phys_tid_36351;
    
    phys_tid_36351 = global_tid_46106;
    
    int32_t phys_group_id_46111;
    
    phys_group_id_46111 = get_group_id(0);
    for (int32_t i_46112 = 0; i_46112 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478, segmap_group_sizze_36369)) -
                   phys_group_id_46111, sext_i64_i32(num_groups_36370));
         i_46112++) {
        int32_t virt_group_id_46113 = phys_group_id_46111 + i_46112 *
                sext_i64_i32(num_groups_36370);
        int64_t gtid_36350 = sext_i32_i64(virt_group_id_46113) *
                segmap_group_sizze_36369 + sext_i32_i64(local_tid_46107);
        
        if (slt64(gtid_36350, m_28478)) {
            for (int64_t i_44321 = 0; i_44321 < N_28477; i_44321++) {
                float defunc_0_f_res_36376;
                float redout_44323 = 0.0F;
                
                for (int32_t i_44369 = 0; i_44369 < k2p2zq_28491; i_44369++) {
                    int64_t i_44324 = sext_i32_i64(i_44369);
                    float x_36380 = ((__global float *) mem_44919)[i_44324 *
                                                                   m_28478 +
                                                                   gtid_36350];
                    float x_36381 = ((__global float *) mem_44397)[i_44321 *
                                                                   i32_res_28493 +
                                                                   i_44324];
                    float defunc_1_f_res_36382 = x_36380 * x_36381;
                    float defunc_1_op_res_36379 = defunc_1_f_res_36382 +
                          redout_44323;
                    float redout_tmp_46115 = defunc_1_op_res_36379;
                    
                    redout_44323 = redout_tmp_46115;
                }
                defunc_0_f_res_36376 = redout_44323;
                ((__global float *) mem_44922)[phys_tid_36351 + i_44321 *
                                               (num_groups_36370 *
                                                segmap_group_sizze_36369)] =
                    defunc_0_f_res_36376;
            }
            for (int64_t i_46116 = 0; i_46116 < N_28477; i_46116++) {
                ((__global float *) mem_44937)[i_46116 * m_28478 + gtid_36350] =
                    ((__global float *) mem_44922)[phys_tid_36351 + i_46116 *
                                                   (num_groups_36370 *
                                                    segmap_group_sizze_36369)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36369
}
__kernel void mainMagnitudezisegmap_36631(__global int *global_failure,
                                          int64_t N_28477, int64_t m_28478,
                                          __global unsigned char *mem_45163,
                                          __global unsigned char *mem_45166,
                                          __global unsigned char *mem_45172,
                                          __global unsigned char *mem_45175)
{
    #define segmap_group_sizze_36797 (mainMagnitudezisegmap_group_sizze_36634)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46333;
    int32_t local_tid_46334;
    int64_t group_sizze_46337;
    int32_t wave_sizze_46336;
    int32_t group_tid_46335;
    
    global_tid_46333 = get_global_id(0);
    local_tid_46334 = get_local_id(0);
    group_sizze_46337 = get_local_size(0);
    wave_sizze_46336 = LOCKSTEP_WIDTH;
    group_tid_46335 = get_group_id(0);
    
    int32_t phys_tid_36631;
    
    phys_tid_36631 = global_tid_46333;
    
    int64_t gtid_36629;
    
    gtid_36629 = squot64(sext_i32_i64(group_tid_46335) *
                         segmap_group_sizze_36797 +
                         sext_i32_i64(local_tid_46334), N_28477);
    
    int64_t gtid_36630;
    
    gtid_36630 = sext_i32_i64(group_tid_46335) * segmap_group_sizze_36797 +
        sext_i32_i64(local_tid_46334) - squot64(sext_i32_i64(group_tid_46335) *
                                                segmap_group_sizze_36797 +
                                                sext_i32_i64(local_tid_46334),
                                                N_28477) * N_28477;
    if (slt64(gtid_36629, m_28478) && slt64(gtid_36630, N_28477)) {
        float x_36805 = ((__global float *) mem_45166)[gtid_36629 * N_28477 +
                                                       gtid_36630];
        int32_t index_primexp_42377 = sext_i64_i32(gtid_36630);
        bool isnan_res_36808;
        
        isnan_res_36808 = futrts_isnan32(x_36805);
        
        bool defunc_0_p_res_36809 = !isnan_res_36808;
        int64_t defunc_1_f_res_36810;
        
        if (defunc_0_p_res_36809) {
            int64_t x_36806 = ((__global int64_t *) mem_45163)[gtid_36629 *
                                                               N_28477 +
                                                               gtid_36630];
            int64_t defunc_1_f_res_t_res_36811 = sub64(x_36806, (int64_t) 1);
            
            defunc_1_f_res_36810 = defunc_1_f_res_t_res_36811;
        } else {
            defunc_1_f_res_36810 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_36629) && slt64(gtid_36629, m_28478)) &&
            (sle64((int64_t) 0, defunc_1_f_res_36810) &&
             slt64(defunc_1_f_res_36810, N_28477))) {
            ((__global int32_t *) mem_45175)[gtid_36629 * N_28477 +
                                             defunc_1_f_res_36810] =
                index_primexp_42377;
        }
        if ((sle64((int64_t) 0, gtid_36629) && slt64(gtid_36629, m_28478)) &&
            (sle64((int64_t) 0, defunc_1_f_res_36810) &&
             slt64(defunc_1_f_res_36810, N_28477))) {
            ((__global float *) mem_45172)[gtid_36629 * N_28477 +
                                           defunc_1_f_res_36810] = x_36805;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36797
}
__kernel void mainMagnitudezisegmap_36707(__global int *global_failure,
                                          int64_t N_28477, int64_t m_28478,
                                          int64_t i_28781, __global
                                          unsigned char *mem_45163, __global
                                          unsigned char *mem_45169)
{
    #define segmap_group_sizze_36761 (mainMagnitudezisegmap_group_sizze_36709)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46310;
    int32_t local_tid_46311;
    int64_t group_sizze_46314;
    int32_t wave_sizze_46313;
    int32_t group_tid_46312;
    
    global_tid_46310 = get_global_id(0);
    local_tid_46311 = get_local_id(0);
    group_sizze_46314 = get_local_size(0);
    wave_sizze_46313 = LOCKSTEP_WIDTH;
    group_tid_46312 = get_group_id(0);
    
    int32_t phys_tid_36707;
    
    phys_tid_36707 = global_tid_46310;
    
    int64_t gtid_36706;
    
    gtid_36706 = sext_i32_i64(group_tid_46312) * segmap_group_sizze_36761 +
        sext_i32_i64(local_tid_46311);
    if (slt64(gtid_36706, m_28478)) {
        int64_t last_res_36765 = ((__global int64_t *) mem_45163)[gtid_36706 *
                                                                  N_28477 +
                                                                  i_28781];
        int32_t defunc_0_f_res_36766 = sext_i64_i32(last_res_36765);
        
        ((__global int32_t *) mem_45169)[gtid_36706] = defunc_0_f_res_36766;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36761
}
__kernel void mainMagnitudezisegmap_36970(__global int *global_failure,
                                          int64_t m_28478, float hfrac_28483,
                                          int32_t k2p2_28489, __global
                                          unsigned char *mem_45232, __global
                                          unsigned char *mem_45235, __global
                                          unsigned char *mem_45238, __global
                                          unsigned char *mem_45240)
{
    #define segmap_group_sizze_37063 (mainMagnitudezisegmap_group_sizze_36972)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46486;
    int32_t local_tid_46487;
    int64_t group_sizze_46490;
    int32_t wave_sizze_46489;
    int32_t group_tid_46488;
    
    global_tid_46486 = get_global_id(0);
    local_tid_46487 = get_local_id(0);
    group_sizze_46490 = get_local_size(0);
    wave_sizze_46489 = LOCKSTEP_WIDTH;
    group_tid_46488 = get_group_id(0);
    
    int32_t phys_tid_36970;
    
    phys_tid_36970 = global_tid_46486;
    
    int64_t gtid_36969;
    
    gtid_36969 = sext_i32_i64(group_tid_46488) * segmap_group_sizze_37063 +
        sext_i32_i64(local_tid_46487);
    if (slt64(gtid_36969, m_28478)) {
        int32_t defunc_0_f_res_37067 = ((__global
                                         int32_t *) mem_45232)[gtid_36969];
        float defunc_0_f_res_37068 = ((__global float *) mem_45235)[gtid_36969];
        int32_t r32_arg_37069 = sub32(defunc_0_f_res_37067, k2p2_28489);
        float i32_res_37070 = sitofp_i32_f32(r32_arg_37069);
        float sqrt_arg_37071 = defunc_0_f_res_37068 / i32_res_37070;
        float sqrt_res_37072;
        
        sqrt_res_37072 = futrts_sqrt32(sqrt_arg_37071);
        
        float i32_res_37073 = sitofp_i32_f32(defunc_0_f_res_37067);
        float t32_arg_37074 = hfrac_28483 * i32_res_37073;
        int32_t f32_res_37075 = fptosi_f32_i32(t32_arg_37074);
        
        ((__global int32_t *) mem_45238)[gtid_36969] = f32_res_37075;
        ((__global float *) mem_45240)[gtid_36969] = sqrt_res_37072;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37063
}
__kernel void mainMagnitudezisegmap_37271(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28477, int32_t n_28481,
                                          float lam_28484,
                                          int64_t iota32_arg_28909,
                                          float i32_res_28921, __global
                                          unsigned char *mappingindices_mem_44380,
                                          __global unsigned char *mem_45282,
                                          __global unsigned char *mem_45284)
{
    #define segmap_group_sizze_37293 (mainMagnitudezisegmap_group_sizze_37273)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46596;
    int32_t local_tid_46597;
    int64_t group_sizze_46600;
    int32_t wave_sizze_46599;
    int32_t group_tid_46598;
    
    global_tid_46596 = get_global_id(0);
    local_tid_46597 = get_local_id(0);
    group_sizze_46600 = get_local_size(0);
    wave_sizze_46599 = LOCKSTEP_WIDTH;
    group_tid_46598 = get_group_id(0);
    
    int32_t phys_tid_37271;
    
    phys_tid_37271 = global_tid_46596;
    
    int64_t gtid_37270;
    
    gtid_37270 = sext_i32_i64(group_tid_46598) * segmap_group_sizze_37293 +
        sext_i32_i64(local_tid_46597);
    if (slt64(gtid_37270, iota32_arg_28909)) {
        int32_t defunc_0_f_res_37298 = sext_i64_i32(gtid_37270);
        int32_t i_37299 = add32(n_28481, defunc_0_f_res_37298);
        int64_t i_37300 = sext_i32_i64(i_37299);
        bool x_37301 = sle64((int64_t) 0, i_37300);
        bool y_37302 = slt64(i_37300, N_28477);
        bool bounds_check_37303 = x_37301 && y_37302;
        bool index_certs_37304;
        
        if (!bounds_check_37303) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 103) == -1) {
                    global_failure_args[0] = i_37300;
                    global_failure_args[1] = N_28477;
                    ;
                }
                return;
            }
        }
        
        int32_t time_37305 = ((__global
                               int32_t *) mappingindices_mem_44380)[i_37300];
        float i32_res_37306 = sitofp_i32_f32(time_37305);
        float logplus_arg_37307 = i32_res_37306 / i32_res_28921;
        bool cond_37308 = 2.7182817F < logplus_arg_37307;
        float logplus_res_37309;
        
        if (cond_37308) {
            float log_res_37310;
            
            log_res_37310 = futrts_log32(logplus_arg_37307);
            logplus_res_37309 = log_res_37310;
        } else {
            logplus_res_37309 = 1.0F;
        }
        
        float sqrt_res_37311;
        
        sqrt_res_37311 = futrts_sqrt32(logplus_res_37309);
        
        float defunc_0_f_res_37312 = lam_28484 * sqrt_res_37311;
        
        ((__global int32_t *) mem_45282)[gtid_37270] = defunc_0_f_res_37298;
        ((__global float *) mem_45284)[gtid_37270] = defunc_0_f_res_37312;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37293
}
__kernel void mainMagnitudezisegmap_37528(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28478,
                                          int64_t iota32_arg_28909,
                                          int64_t distance_28943,
                                          int64_t segmap_usable_groups_37761,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_45177,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_45245,
                                          __global unsigned char *mem_45287,
                                          __global unsigned char *mem_45294,
                                          __global unsigned char *mem_45305,
                                          __global unsigned char *mem_45325)
{
    #define segmap_group_sizze_37760 (mainMagnitudezisegmap_group_sizze_37530)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46611;
    int32_t local_tid_46612;
    int64_t group_sizze_46615;
    int32_t wave_sizze_46614;
    int32_t group_tid_46613;
    
    global_tid_46611 = get_global_id(0);
    local_tid_46612 = get_local_id(0);
    group_sizze_46615 = get_local_size(0);
    wave_sizze_46614 = LOCKSTEP_WIDTH;
    group_tid_46613 = get_group_id(0);
    
    int32_t phys_tid_37528;
    
    phys_tid_37528 = global_tid_46611;
    
    int64_t gtid_37527;
    
    gtid_37527 = sext_i32_i64(group_tid_46613) * segmap_group_sizze_37760 +
        sext_i32_i64(local_tid_46612);
    if (slt64(gtid_37527, m_28478)) {
        int32_t x_37763 = ((__global
                            int32_t *) defunc_4_map_res_mem_45177)[gtid_37527];
        int32_t x_37764 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_37527];
        int32_t y_37765 = ((__global int32_t *) mem_45287)[gtid_37527];
        
        for (int64_t i_46616 = 0; i_46616 < iota32_arg_28909; i_46616++) {
            ((__global float *) mem_45305)[phys_tid_37528 + i_46616 *
                                           (segmap_usable_groups_37761 *
                                            segmap_group_sizze_37760)] =
                ((__global float *) mem_45294)[gtid_37527 + i_46616 * m_28478];
        }
        for (int64_t i_37768 = 0; i_37768 < distance_28943; i_37768++) {
            int64_t index_primexp_37770 = add64((int64_t) 1, i_37768);
            bool cond_37771 = slt64((int64_t) 0, index_primexp_37770);
            bool loop_cond_37772;
            
            if (cond_37771) {
                bool x_37773 = sle64((int64_t) 0, index_primexp_37770);
                bool y_37774 = slt64(index_primexp_37770, iota32_arg_28909);
                bool bounds_check_37775 = x_37773 && y_37774;
                bool index_certs_37776;
                
                if (!bounds_check_37775) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      106) == -1) {
                            global_failure_args[0] = index_primexp_37770;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_37777 = ((__global
                                                       float *) mem_45305)[phys_tid_37528 +
                                                                           index_primexp_37770 *
                                                                           (segmap_usable_groups_37761 *
                                                                            segmap_group_sizze_37760)];
                bool y_37778 = slt64(i_37768, iota32_arg_28909);
                bool index_certs_37779;
                
                if (!y_37778) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      107) == -1) {
                            global_failure_args[0] = i_37768;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_37780 = ((__global
                                                       float *) mem_45305)[phys_tid_37528 +
                                                                           i_37768 *
                                                                           (segmap_usable_groups_37761 *
                                                                            segmap_group_sizze_37760)];
                bool defunc_1_zlze_res_37781 = defunc_1_lifted_gt_arg_37780 <=
                     defunc_2_lifted_gt_arg_37777;
                bool defunc_2_lifted_gt_res_37782 = !defunc_1_zlze_res_37781;
                
                loop_cond_37772 = defunc_2_lifted_gt_res_37782;
            } else {
                loop_cond_37772 = 0;
            }
            
            bool xszq_37783;
            int64_t xszq_37784;
            bool loop_while_37786;
            int64_t j_37787;
            
            loop_while_37786 = loop_cond_37772;
            j_37787 = index_primexp_37770;
            while (loop_while_37786) {
                int64_t loopres_37789 = sub64(j_37787, (int64_t) 1);
                bool x_37790 = sle64((int64_t) 0, j_37787);
                bool y_37791 = slt64(j_37787, iota32_arg_28909);
                bool bounds_check_37792 = x_37790 && y_37791;
                bool index_certs_37793;
                
                if (!bounds_check_37792) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      108) == -1) {
                            global_failure_args[0] = j_37787;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_37794 = ((__global
                                         float *) mem_45305)[phys_tid_37528 +
                                                             j_37787 *
                                                             (segmap_usable_groups_37761 *
                                                              segmap_group_sizze_37760)];
                bool x_37795 = sle64((int64_t) 0, loopres_37789);
                bool y_37796 = slt64(loopres_37789, iota32_arg_28909);
                bool bounds_check_37797 = x_37795 && y_37796;
                bool index_certs_37798;
                
                if (!bounds_check_37797) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      109) == -1) {
                            global_failure_args[0] = loopres_37789;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_37799 = ((__global
                                         float *) mem_45305)[phys_tid_37528 +
                                                             loopres_37789 *
                                                             (segmap_usable_groups_37761 *
                                                              segmap_group_sizze_37760)];
                
                ((__global float *) mem_45305)[phys_tid_37528 + j_37787 *
                                               (segmap_usable_groups_37761 *
                                                segmap_group_sizze_37760)] =
                    copy_arg_37799;
                ((__global float *) mem_45305)[phys_tid_37528 + loopres_37789 *
                                               (segmap_usable_groups_37761 *
                                                segmap_group_sizze_37760)] =
                    copy_arg_37794;
                
                bool cond_37802 = slt64((int64_t) 0, loopres_37789);
                bool loop_cond_37803;
                
                if (cond_37802) {
                    bool index_certs_37804;
                    
                    if (!bounds_check_37797) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          110) == -1) {
                                global_failure_args[0] = loopres_37789;
                                global_failure_args[1] = iota32_arg_28909;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_37805 = ((__global
                                                           float *) mem_45305)[phys_tid_37528 +
                                                                               loopres_37789 *
                                                                               (segmap_usable_groups_37761 *
                                                                                segmap_group_sizze_37760)];
                    int64_t i_37806 = sub64(loopres_37789, (int64_t) 1);
                    bool x_37807 = sle64((int64_t) 0, i_37806);
                    bool y_37808 = slt64(i_37806, iota32_arg_28909);
                    bool bounds_check_37809 = x_37807 && y_37808;
                    bool index_certs_37810;
                    
                    if (!bounds_check_37809) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          111) == -1) {
                                global_failure_args[0] = i_37806;
                                global_failure_args[1] = iota32_arg_28909;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_37811 = ((__global
                                                           float *) mem_45305)[phys_tid_37528 +
                                                                               i_37806 *
                                                                               (segmap_usable_groups_37761 *
                                                                                segmap_group_sizze_37760)];
                    bool defunc_1_zlze_res_37812 =
                         defunc_1_lifted_gt_arg_37811 <=
                         defunc_2_lifted_gt_arg_37805;
                    bool defunc_2_lifted_gt_res_37813 =
                         !defunc_1_zlze_res_37812;
                    
                    loop_cond_37803 = defunc_2_lifted_gt_res_37813;
                } else {
                    loop_cond_37803 = 0;
                }
                
                bool loop_while_tmp_46618 = loop_cond_37803;
                int64_t j_tmp_46619 = loopres_37789;
                
                loop_while_37786 = loop_while_tmp_46618;
                j_37787 = j_tmp_46619;
            }
            xszq_37783 = loop_while_37786;
            xszq_37784 = j_37787;
        }
        
        int32_t i_37814 = sdiv32(y_37765, 2);
        int32_t j_37815 = sub32(i_37814, 1);
        bool cond_37816 = x_37763 == x_37764;
        float defunc_0_f_res_37817;
        
        if (cond_37816) {
            defunc_0_f_res_37817 = 0.0F;
        } else {
            int32_t x_37818 = smod32(y_37765, 2);
            bool cond_37819 = x_37818 == 0;
            float defunc_0_f_res_f_res_37820;
            
            if (cond_37819) {
                int64_t j_37821 = sext_i32_i64(j_37815);
                bool x_37822 = sle64((int64_t) 0, j_37821);
                bool y_37823 = slt64(j_37821, iota32_arg_28909);
                bool bounds_check_37824 = x_37822 && y_37823;
                bool index_certs_37825;
                
                if (!bounds_check_37824) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      112) == -1) {
                            global_failure_args[0] = j_37821;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float x_37826 = ((__global float *) mem_45305)[phys_tid_37528 +
                                                               j_37821 *
                                                               (segmap_usable_groups_37761 *
                                                                segmap_group_sizze_37760)];
                int64_t i_37827 = sext_i32_i64(i_37814);
                bool x_37828 = sle64((int64_t) 0, i_37827);
                bool y_37829 = slt64(i_37827, iota32_arg_28909);
                bool bounds_check_37830 = x_37828 && y_37829;
                bool index_certs_37831;
                
                if (!bounds_check_37830) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      113) == -1) {
                            global_failure_args[0] = i_37827;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float y_37832 = ((__global float *) mem_45305)[phys_tid_37528 +
                                                               i_37827 *
                                                               (segmap_usable_groups_37761 *
                                                                segmap_group_sizze_37760)];
                float x_37833 = x_37826 + y_37832;
                float defunc_0_f_res_f_res_t_res_37834 = x_37833 / 2.0F;
                
                defunc_0_f_res_f_res_37820 = defunc_0_f_res_f_res_t_res_37834;
            } else {
                int64_t i_37835 = sext_i32_i64(i_37814);
                bool x_37836 = sle64((int64_t) 0, i_37835);
                bool y_37837 = slt64(i_37835, iota32_arg_28909);
                bool bounds_check_37838 = x_37836 && y_37837;
                bool index_certs_37839;
                
                if (!bounds_check_37838) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      114) == -1) {
                            global_failure_args[0] = i_37835;
                            global_failure_args[1] = iota32_arg_28909;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_37840 = ((__global
                                                           float *) mem_45305)[phys_tid_37528 +
                                                                               i_37835 *
                                                                               (segmap_usable_groups_37761 *
                                                                                segmap_group_sizze_37760)];
                
                defunc_0_f_res_f_res_37820 = defunc_0_f_res_f_res_f_res_37840;
            }
            defunc_0_f_res_37817 = defunc_0_f_res_f_res_37820;
        }
        ((__global float *) mem_45325)[gtid_37527] = defunc_0_f_res_37817;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37760
}
__kernel void mainMagnitudezisegmap_37649(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28477, int64_t m_28478,
                                          int64_t iota32_arg_28909, __global
                                          unsigned char *defunc_4_map_res_mem_45178,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_45245,
                                          __global unsigned char *mem_45287,
                                          __global unsigned char *mem_45291)
{
    #define segmap_group_sizze_37731 (mainMagnitudezisegmap_group_sizze_37652)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46606;
    int32_t local_tid_46607;
    int64_t group_sizze_46610;
    int32_t wave_sizze_46609;
    int32_t group_tid_46608;
    
    global_tid_46606 = get_global_id(0);
    local_tid_46607 = get_local_id(0);
    group_sizze_46610 = get_local_size(0);
    wave_sizze_46609 = LOCKSTEP_WIDTH;
    group_tid_46608 = get_group_id(0);
    
    int32_t phys_tid_37649;
    
    phys_tid_37649 = global_tid_46606;
    
    int64_t gtid_37647;
    
    gtid_37647 = squot64(sext_i32_i64(group_tid_46608) *
                         segmap_group_sizze_37731 +
                         sext_i32_i64(local_tid_46607), iota32_arg_28909);
    
    int64_t gtid_37648;
    
    gtid_37648 = sext_i32_i64(group_tid_46608) * segmap_group_sizze_37731 +
        sext_i32_i64(local_tid_46607) - squot64(sext_i32_i64(group_tid_46608) *
                                                segmap_group_sizze_37731 +
                                                sext_i32_i64(local_tid_46607),
                                                iota32_arg_28909) *
        iota32_arg_28909;
    if (slt64(gtid_37647, m_28478) && slt64(gtid_37648, iota32_arg_28909)) {
        int32_t x_37734 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_37647];
        int32_t y_37736 = ((__global int32_t *) mem_45287)[gtid_37647];
        int32_t index_primexp_42395 = sext_i64_i32(gtid_37648);
        bool cond_37738 = slt32(index_primexp_42395, y_37736);
        bool cond_37739;
        
        if (cond_37738) {
            int32_t i_37740 = add32(x_37734, index_primexp_42395);
            int64_t i_37741 = sext_i32_i64(i_37740);
            bool x_37742 = sle64((int64_t) 0, i_37741);
            bool y_37743 = slt64(i_37741, N_28477);
            bool bounds_check_37744 = x_37742 && y_37743;
            bool index_certs_37745;
            
            if (!bounds_check_37744) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 104) ==
                        -1) {
                        global_failure_args[0] = i_37741;
                        global_failure_args[1] = N_28477;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_37746 = ((__global
                                      float *) defunc_4_map_res_mem_45178)[gtid_37647 *
                                                                           N_28477 +
                                                                           i_37741];
            bool isnan_res_37747;
            
            isnan_res_37747 = futrts_isnan32(isnan_arg_37746);
            
            bool cond_t_res_37748 = !isnan_res_37747;
            
            cond_37739 = cond_t_res_37748;
        } else {
            cond_37739 = 0;
        }
        
        float defunc_0_f_res_37749;
        
        if (cond_37739) {
            int32_t i_37750 = add32(x_37734, index_primexp_42395);
            int64_t i_37751 = sext_i32_i64(i_37750);
            bool x_37752 = sle64((int64_t) 0, i_37751);
            bool y_37753 = slt64(i_37751, N_28477);
            bool bounds_check_37754 = x_37752 && y_37753;
            bool index_certs_37755;
            
            if (!bounds_check_37754) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 105) ==
                        -1) {
                        global_failure_args[0] = i_37751;
                        global_failure_args[1] = N_28477;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_37756 = ((__global
                                                 float *) defunc_4_map_res_mem_45178)[gtid_37647 *
                                                                                      N_28477 +
                                                                                      i_37751];
            
            defunc_0_f_res_37749 = defunc_0_f_res_t_res_37756;
        } else {
            defunc_0_f_res_37749 = INFINITY;
        }
        ((__global float *) mem_45291)[gtid_37647 * iota32_arg_28909 +
                                       gtid_37648] = defunc_0_f_res_37749;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37731
}
__kernel void mainMagnitudezisegmap_37707(__global int *global_failure,
                                          int64_t m_28478, __global
                                          unsigned char *defunc_4_map_res_mem_45177,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_45245,
                                          __global unsigned char *mem_45287)
{
    #define segmap_group_sizze_37716 (mainMagnitudezisegmap_group_sizze_37709)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46601;
    int32_t local_tid_46602;
    int64_t group_sizze_46605;
    int32_t wave_sizze_46604;
    int32_t group_tid_46603;
    
    global_tid_46601 = get_global_id(0);
    local_tid_46602 = get_local_id(0);
    group_sizze_46605 = get_local_size(0);
    wave_sizze_46604 = LOCKSTEP_WIDTH;
    group_tid_46603 = get_group_id(0);
    
    int32_t phys_tid_37707;
    
    phys_tid_37707 = global_tid_46601;
    
    int64_t gtid_37706;
    
    gtid_37706 = sext_i32_i64(group_tid_46603) * segmap_group_sizze_37716 +
        sext_i32_i64(local_tid_46602);
    if (slt64(gtid_37706, m_28478)) {
        int32_t x_37719 = ((__global
                            int32_t *) defunc_4_map_res_mem_45177)[gtid_37706];
        int32_t x_37720 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_37706];
        int32_t y_37721 = sub32(x_37719, x_37720);
        
        ((__global int32_t *) mem_45287)[gtid_37706] = y_37721;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37716
}
__kernel void mainMagnitudezisegmap_38241(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28477, int64_t m_28478,
                                          int32_t n_28481, __global
                                          unsigned char *defunc_4_map_res_mem_45179,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_45245,
                                          __global unsigned char *mem_45339,
                                          __global unsigned char *mem_45346,
                                          __global unsigned char *mem_45348,
                                          __global unsigned char *mem_45350,
                                          __global unsigned char *mem_45353,
                                          __global unsigned char *mem_45355)
{
    #define segmap_group_sizze_38525 (mainMagnitudezisegmap_group_sizze_38243)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46811;
    int32_t local_tid_46812;
    int64_t group_sizze_46815;
    int32_t wave_sizze_46814;
    int32_t group_tid_46813;
    
    global_tid_46811 = get_global_id(0);
    local_tid_46812 = get_local_id(0);
    group_sizze_46815 = get_local_size(0);
    wave_sizze_46814 = LOCKSTEP_WIDTH;
    group_tid_46813 = get_group_id(0);
    
    int32_t phys_tid_38241;
    
    phys_tid_38241 = global_tid_46811;
    
    int64_t gtid_38240;
    
    gtid_38240 = sext_i32_i64(group_tid_46813) * segmap_group_sizze_38525 +
        sext_i32_i64(local_tid_46812);
    if (slt64(gtid_38240, m_28478)) {
        int32_t x_38529 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_38240];
        int32_t y_38531 = ((__global int32_t *) mem_45339)[gtid_38240];
        bool acc0_38533 = ((__global bool *) mem_45346)[gtid_38240];
        bool x_38538 = acc0_38533 && acc0_38533;
        int32_t defunc_1_op_res_f_res_38542;
        
        if (acc0_38533) {
            int32_t acc0_38534 = ((__global int32_t *) mem_45348)[gtid_38240];
            
            defunc_1_op_res_f_res_38542 = acc0_38534;
        } else {
            defunc_1_op_res_f_res_38542 = -1;
        }
        
        bool cond_38548 = y_38531 == 0;
        float defunc_0_f_res_38549;
        
        if (cond_38548) {
            defunc_0_f_res_38549 = 0.0F;
        } else {
            float acc0_38535 = ((__global float *) mem_45350)[gtid_38240];
            float i32_res_38550 = sitofp_i32_f32(y_38531);
            float defunc_0_f_res_f_res_38551 = acc0_38535 / i32_res_38550;
            
            defunc_0_f_res_38549 = defunc_0_f_res_f_res_38551;
        }
        
        bool cond_38552 = !x_38538;
        int32_t fst_breakzq_38553;
        
        if (cond_38552) {
            fst_breakzq_38553 = -1;
        } else {
            bool cond_38554 = slt32(defunc_1_op_res_f_res_38542, y_38531);
            int32_t adjustValInds_res_38555;
            
            if (cond_38554) {
                int32_t i_38556 = add32(x_38529, defunc_1_op_res_f_res_38542);
                int64_t i_38557 = sext_i32_i64(i_38556);
                bool x_38558 = sle64((int64_t) 0, i_38557);
                bool y_38559 = slt64(i_38557, N_28477);
                bool bounds_check_38560 = x_38558 && y_38559;
                bool index_certs_38561;
                
                if (!bounds_check_38560) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                      120) == -1) {
                            global_failure_args[0] = i_38557;
                            global_failure_args[1] = N_28477;
                            ;
                        }
                        return;
                    }
                }
                
                int32_t x_38562 = ((__global
                                    int32_t *) defunc_4_map_res_mem_45179)[gtid_38240 *
                                                                           N_28477 +
                                                                           i_38557];
                int32_t adjustValInds_res_t_res_38563 = sub32(x_38562, n_28481);
                
                adjustValInds_res_38555 = adjustValInds_res_t_res_38563;
            } else {
                adjustValInds_res_38555 = -1;
            }
            fst_breakzq_38553 = adjustValInds_res_38555;
        }
        
        bool cond_38564 = sle32(x_38529, 5);
        bool cond_f_res_38565 = sle32(y_38531, 5);
        bool x_38566 = !cond_38564;
        bool y_38567 = cond_f_res_38565 && x_38566;
        bool cond_38568 = cond_38564 || y_38567;
        int32_t fst_breakzq_38569;
        
        if (cond_38568) {
            fst_breakzq_38569 = -2;
        } else {
            fst_breakzq_38569 = fst_breakzq_38553;
        }
        ((__global int32_t *) mem_45353)[gtid_38240] = fst_breakzq_38569;
        ((__global float *) mem_45355)[gtid_38240] = defunc_0_f_res_38549;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38525
}
__kernel void mainMagnitudezisegmap_38395(__global int *global_failure,
                                          int64_t m_28478,
                                          int64_t num_groups_38418, __global
                                          unsigned char *defunc_4_map_res_mem_45177,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_45245,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_45246,
                                          __global unsigned char *mem_45337,
                                          __global unsigned char *mem_45339)
{
    #define segmap_group_sizze_38417 (mainMagnitudezisegmap_group_sizze_38397)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46649;
    int32_t local_tid_46650;
    int64_t group_sizze_46653;
    int32_t wave_sizze_46652;
    int32_t group_tid_46651;
    
    global_tid_46649 = get_global_id(0);
    local_tid_46650 = get_local_id(0);
    group_sizze_46653 = get_local_size(0);
    wave_sizze_46652 = LOCKSTEP_WIDTH;
    group_tid_46651 = get_group_id(0);
    
    int32_t phys_tid_38395;
    
    phys_tid_38395 = global_tid_46649;
    
    int32_t phys_group_id_46654;
    
    phys_group_id_46654 = get_group_id(0);
    for (int32_t i_46655 = 0; i_46655 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478, segmap_group_sizze_38417)) -
                   phys_group_id_46654, sext_i64_i32(num_groups_38418));
         i_46655++) {
        int32_t virt_group_id_46656 = phys_group_id_46654 + i_46655 *
                sext_i64_i32(num_groups_38418);
        int64_t gtid_38394 = sext_i32_i64(virt_group_id_46656) *
                segmap_group_sizze_38417 + sext_i32_i64(local_tid_46650);
        
        if (slt64(gtid_38394, m_28478)) {
            int32_t x_38424 = ((__global
                                int32_t *) defunc_4_map_res_mem_45177)[gtid_38394];
            int32_t x_38425 = ((__global
                                int32_t *) defunc_3_map_res_mem_45245)[gtid_38394];
            float x_38426 = ((__global
                              float *) defunc_3_map_res_mem_45246)[gtid_38394];
            int32_t y_38427 = sub32(x_38424, x_38425);
            float i32_res_38428 = sitofp_i32_f32(x_38425);
            float sqrt_res_38429;
            
            sqrt_res_38429 = futrts_sqrt32(i32_res_38428);
            
            float y_38430 = x_38426 * sqrt_res_38429;
            
            ((__global float *) mem_45337)[gtid_38394] = y_38430;
            ((__global int32_t *) mem_45339)[gtid_38394] = y_38427;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38417
}
__kernel void mainMagnitudezisegmap_intragroup_35056(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *mem_44563_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44553_backing_aligned_1,
                                                     int32_t k2p2zq_28491,
                                                     int64_t i32_res_28493,
                                                     int32_t m_28624,
                                                     int64_t nm_28626,
                                                     int64_t i32_res_28641,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44549,
                                                     __global
                                                     unsigned char *mem_44573)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44563_backing_1 = (__local volatile
                                                           char *) mem_44563_backing_aligned_0;
    __local volatile char *restrict mem_44553_backing_0 = (__local volatile
                                                           char *) mem_44553_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45821;
    int32_t local_tid_45822;
    int64_t group_sizze_45825;
    int32_t wave_sizze_45824;
    int32_t group_tid_45823;
    
    global_tid_45821 = get_global_id(0);
    local_tid_45822 = get_local_id(0);
    group_sizze_45825 = get_local_size(0);
    wave_sizze_45824 = LOCKSTEP_WIDTH;
    group_tid_45823 = get_group_id(0);
    
    int32_t phys_tid_35056;
    
    phys_tid_35056 = group_tid_45823;
    
    int32_t ltid_pre_45826;
    
    ltid_pre_45826 = local_tid_45822;
    
    int64_t gtid_34987;
    
    gtid_34987 = sext_i32_i64(group_tid_45823);
    
    __local char *mem_44553;
    
    mem_44553 = (__local char *) mem_44553_backing_0;
    
    int64_t gtid_34990 = sext_i32_i64(ltid_pre_45826);
    int32_t phys_tid_34991 = local_tid_45822;
    int32_t index_primexp_42354 = sext_i64_i32(gtid_34990);
    int32_t defunc_0_f_res_35237 = sdiv32(index_primexp_42354, m_28624);
    int32_t defunc_0_f_res_35238 = smod32(index_primexp_42354, m_28624);
    bool cond_35239 = slt32(defunc_0_f_res_35238, k2p2zq_28491);
    float defunc_0_f_res_35240;
    
    if (cond_35239) {
        int64_t i_35241 = sext_i32_i64(defunc_0_f_res_35237);
        bool x_35242 = sle64((int64_t) 0, i_35241);
        bool y_35243 = slt64(i_35241, i32_res_28493);
        bool bounds_check_35244 = x_35242 && y_35243;
        int64_t j_35245 = sext_i32_i64(defunc_0_f_res_35238);
        bool x_35246 = sle64((int64_t) 0, j_35245);
        bool y_35247 = slt64(j_35245, i32_res_28493);
        bool bounds_check_35248 = x_35246 && y_35247;
        bool index_ok_35249 = bounds_check_35244 && bounds_check_35248;
        bool index_certs_35250;
        
        if (!index_ok_35249) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 79) == -1) {
                    global_failure_args[0] = i_35241;
                    global_failure_args[1] = j_35245;
                    global_failure_args[2] = i32_res_28493;
                    global_failure_args[3] = i32_res_28493;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float defunc_0_f_res_t_res_35251 = ((__global
                                             float *) defunc_3_map_res_mem_44549)[gtid_34987 *
                                                                                  (i32_res_28493 *
                                                                                   i32_res_28493) +
                                                                                  i_35241 *
                                                                                  i32_res_28493 +
                                                                                  j_35245];
        
        defunc_0_f_res_35240 = defunc_0_f_res_t_res_35251;
    } else {
        int32_t y_35252 = add32(k2p2zq_28491, defunc_0_f_res_35237);
        bool cond_35253 = defunc_0_f_res_35238 == y_35252;
        float defunc_0_f_res_f_res_35254;
        
        if (cond_35253) {
            defunc_0_f_res_f_res_35254 = 1.0F;
        } else {
            defunc_0_f_res_f_res_35254 = 0.0F;
        }
        defunc_0_f_res_35240 = defunc_0_f_res_f_res_35254;
    }
    ((__local float *) mem_44553)[gtid_34990] = defunc_0_f_res_35240;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44563;
    
    mem_44563 = (__local char *) mem_44563_backing_1;
    for (int32_t i_35256 = 0; i_35256 < k2p2zq_28491; i_35256++) {
        int64_t i32_res_35258 = sext_i32_i64(i_35256);
        bool x_35259 = sle64((int64_t) 0, i32_res_35258);
        bool y_35260 = slt64(i32_res_35258, nm_28626);
        bool bounds_check_35261 = x_35259 && y_35260;
        bool index_certs_35262;
        
        if (!bounds_check_35261) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 80) == -1) {
                    global_failure_args[0] = i32_res_35258;
                    global_failure_args[1] = nm_28626;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_35263 = ((__local float *) mem_44553)[i32_res_35258];
        bool cond_35264 = v1_35263 == 0.0F;
        int64_t gtid_35011 = sext_i32_i64(ltid_pre_45826);
        int32_t phys_tid_35012 = local_tid_45822;
        int32_t defunc_0_f_res_35267 = sext_i64_i32(gtid_35011);
        int32_t defunc_0_f_res_35268 = sdiv32(defunc_0_f_res_35267, m_28624);
        int32_t defunc_0_f_res_35269 = smod32(defunc_0_f_res_35267, m_28624);
        float defunc_0_f_res_35270;
        
        if (cond_35264) {
            int32_t x_35271 = mul32(m_28624, defunc_0_f_res_35268);
            int32_t i32_arg_35272 = add32(defunc_0_f_res_35269, x_35271);
            int64_t i32_res_35273 = sext_i32_i64(i32_arg_35272);
            bool x_35274 = sle64((int64_t) 0, i32_res_35273);
            bool y_35275 = slt64(i32_res_35273, nm_28626);
            bool bounds_check_35276 = x_35274 && y_35275;
            bool index_certs_35277;
            
            if (!bounds_check_35276) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 81) ==
                        -1) {
                        global_failure_args[0] = i32_res_35273;
                        global_failure_args[1] = nm_28626;
                        ;
                    }
                    local_failure = true;
                    goto error_1;
                }
            }
            
            float defunc_0_f_res_t_res_35278 = ((__local
                                                 float *) mem_44553)[i32_res_35273];
            
            defunc_0_f_res_35270 = defunc_0_f_res_t_res_35278;
        } else {
            int64_t i32_res_35279 = sext_i32_i64(defunc_0_f_res_35269);
            bool x_35280 = sle64((int64_t) 0, i32_res_35279);
            bool y_35281 = slt64(i32_res_35279, nm_28626);
            bool bounds_check_35282 = x_35280 && y_35281;
            bool index_certs_35283;
            
            if (!bounds_check_35282) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 82) ==
                        -1) {
                        global_failure_args[0] = i32_res_35279;
                        global_failure_args[1] = nm_28626;
                        ;
                    }
                    local_failure = true;
                    goto error_1;
                }
            }
            
            float x_35284 = ((__local float *) mem_44553)[i32_res_35279];
            float x_35285 = x_35284 / v1_35263;
            int32_t y_35286 = sub32(k2p2zq_28491, 1);
            bool cond_35287 = slt32(defunc_0_f_res_35268, y_35286);
            float defunc_0_f_res_f_res_35288;
            
            if (cond_35287) {
                int32_t x_35289 = add32(1, defunc_0_f_res_35268);
                int32_t x_35290 = mul32(m_28624, x_35289);
                int32_t i32_arg_35291 = add32(defunc_0_f_res_35269, x_35290);
                int64_t i32_res_35292 = sext_i32_i64(i32_arg_35291);
                bool x_35293 = sle64((int64_t) 0, i32_res_35292);
                bool y_35294 = slt64(i32_res_35292, nm_28626);
                bool bounds_check_35295 = x_35293 && y_35294;
                bool index_certs_35296;
                
                if (!bounds_check_35295) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 83) ==
                            -1) {
                            global_failure_args[0] = i32_res_35292;
                            global_failure_args[1] = nm_28626;
                            ;
                        }
                        local_failure = true;
                        goto error_1;
                    }
                }
                
                float x_35297 = ((__local float *) mem_44553)[i32_res_35292];
                int32_t i32_arg_35298 = add32(i_35256, x_35290);
                int64_t i32_res_35299 = sext_i32_i64(i32_arg_35298);
                bool x_35300 = sle64((int64_t) 0, i32_res_35299);
                bool y_35301 = slt64(i32_res_35299, nm_28626);
                bool bounds_check_35302 = x_35300 && y_35301;
                bool index_certs_35303;
                
                if (!bounds_check_35302) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 84) ==
                            -1) {
                            global_failure_args[0] = i32_res_35299;
                            global_failure_args[1] = nm_28626;
                            ;
                        }
                        local_failure = true;
                        goto error_1;
                    }
                }
                
                float x_35304 = ((__local float *) mem_44553)[i32_res_35299];
                float y_35305 = x_35285 * x_35304;
                float defunc_0_f_res_f_res_t_res_35306 = x_35297 - y_35305;
                
                defunc_0_f_res_f_res_35288 = defunc_0_f_res_f_res_t_res_35306;
            } else {
                defunc_0_f_res_f_res_35288 = x_35285;
            }
            defunc_0_f_res_35270 = defunc_0_f_res_f_res_35288;
        }
        ((__local float *) mem_44563)[gtid_35011] = defunc_0_f_res_35270;
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_35054 = sext_i32_i64(ltid_pre_45826);
        int32_t phys_tid_35055 = local_tid_45822;
        float write_value_35309 = ((__local float *) mem_44563)[write_i_35054];
        
        if (sle64((int64_t) 0, write_i_35054) && slt64(write_i_35054,
                                                       nm_28626)) {
            ((__local float *) mem_44553)[write_i_35054] = write_value_35309;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_45828 = 0; i_45828 < sdiv_up64(i32_res_28493 *
                                                  i32_res_28493 -
                                                  sext_i32_i64(local_tid_45822),
                                                  nm_28626); i_45828++) {
        ((__global float *) mem_44573)[gtid_34987 * (i32_res_28493 *
                                                     i32_res_28493) +
                                       squot64(i_45828 * nm_28626 +
                                               sext_i32_i64(local_tid_45822),
                                               i32_res_28493) * i32_res_28493 +
                                       (i_45828 * nm_28626 +
                                        sext_i32_i64(local_tid_45822) -
                                        squot64(i_45828 * nm_28626 +
                                                sext_i32_i64(local_tid_45822),
                                                i32_res_28493) *
                                        i32_res_28493)] = ((__local
                                                            float *) mem_44553)[i32_res_28493 +
                                                                                (squot64(i_45828 *
                                                                                         nm_28626 +
                                                                                         sext_i32_i64(local_tid_45822),
                                                                                         i32_res_28493) *
                                                                                 i32_res_28641 +
                                                                                 (i_45828 *
                                                                                  nm_28626 +
                                                                                  sext_i32_i64(local_tid_45822) -
                                                                                  squot64(i_45828 *
                                                                                          nm_28626 +
                                                                                          sext_i32_i64(local_tid_45822),
                                                                                          i32_res_28493) *
                                                                                  i32_res_28493))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35383(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *mem_44594_backing_aligned_0,
                                                     int64_t m_28478,
                                                     int32_t k2p2zq_28491,
                                                     int32_t m_28624,
                                                     int64_t nm_28626,
                                                     int32_t i_35922,
                                                     int64_t i32_res_35924,
                                                     int64_t ctx_param_ext_44580,
                                                     int64_t ctx_param_ext_44581,
                                                     int64_t ctx_param_ext_44583,
                                                     __global
                                                     unsigned char *mem_param_44585,
                                                     __global
                                                     unsigned char *mem_44590,
                                                     __global
                                                     unsigned char *mem_44598)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44594_backing_0 = (__local volatile
                                                           char *) mem_44594_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45855;
    int32_t local_tid_45856;
    int64_t group_sizze_45859;
    int32_t wave_sizze_45858;
    int32_t group_tid_45857;
    
    global_tid_45855 = get_global_id(0);
    local_tid_45856 = get_local_id(0);
    group_sizze_45859 = get_local_size(0);
    wave_sizze_45858 = LOCKSTEP_WIDTH;
    group_tid_45857 = get_group_id(0);
    
    int32_t phys_tid_35383;
    
    phys_tid_35383 = group_tid_45857;
    
    int32_t ltid_pre_45860;
    
    ltid_pre_45860 = local_tid_45856;
    
    int64_t gtid_35335;
    
    gtid_35335 = sext_i32_i64(group_tid_45857);
    
    float v1_35941 = ((__global float *) mem_param_44585)[ctx_param_ext_44580 +
                                                          (gtid_35335 *
                                                           ctx_param_ext_44581 +
                                                           i32_res_35924 *
                                                           ctx_param_ext_44583)];
    bool cond_35942 = v1_35941 == 0.0F;
    __local char *mem_44594;
    
    mem_44594 = (__local char *) mem_44594_backing_0;
    
    int64_t gtid_35338 = sext_i32_i64(ltid_pre_45860);
    int32_t phys_tid_35339 = local_tid_45856;
    int32_t defunc_0_f_res_35945 = sext_i64_i32(gtid_35338);
    int32_t defunc_0_f_res_35946 = sdiv32(defunc_0_f_res_35945, m_28624);
    int32_t defunc_0_f_res_35947 = smod32(defunc_0_f_res_35945, m_28624);
    float defunc_0_f_res_35948;
    
    if (cond_35942) {
        int32_t x_35949 = mul32(m_28624, defunc_0_f_res_35946);
        int32_t i32_arg_35950 = add32(defunc_0_f_res_35947, x_35949);
        int64_t i32_res_35951 = sext_i32_i64(i32_arg_35950);
        bool x_35952 = sle64((int64_t) 0, i32_res_35951);
        bool y_35953 = slt64(i32_res_35951, nm_28626);
        bool bounds_check_35954 = x_35952 && y_35953;
        bool index_certs_35955;
        
        if (!bounds_check_35954) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 86) == -1) {
                    global_failure_args[0] = i32_res_35951;
                    global_failure_args[1] = nm_28626;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float defunc_0_f_res_t_res_35956 = ((__global
                                             float *) mem_param_44585)[ctx_param_ext_44580 +
                                                                       (gtid_35335 *
                                                                        ctx_param_ext_44581 +
                                                                        i32_res_35951 *
                                                                        ctx_param_ext_44583)];
        
        defunc_0_f_res_35948 = defunc_0_f_res_t_res_35956;
    } else {
        int64_t i32_res_35957 = sext_i32_i64(defunc_0_f_res_35947);
        bool x_35958 = sle64((int64_t) 0, i32_res_35957);
        bool y_35959 = slt64(i32_res_35957, nm_28626);
        bool bounds_check_35960 = x_35958 && y_35959;
        bool index_certs_35961;
        
        if (!bounds_check_35960) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 87) == -1) {
                    global_failure_args[0] = i32_res_35957;
                    global_failure_args[1] = nm_28626;
                    ;
                }
                local_failure = true;
                goto error_0;
            }
        }
        
        float x_35962 = ((__global
                          float *) mem_param_44585)[ctx_param_ext_44580 +
                                                    (gtid_35335 *
                                                     ctx_param_ext_44581 +
                                                     i32_res_35957 *
                                                     ctx_param_ext_44583)];
        float x_35963 = x_35962 / v1_35941;
        int32_t y_35964 = sub32(k2p2zq_28491, 1);
        bool cond_35965 = slt32(defunc_0_f_res_35946, y_35964);
        float defunc_0_f_res_f_res_35966;
        
        if (cond_35965) {
            int32_t x_35967 = add32(1, defunc_0_f_res_35946);
            int32_t x_35968 = mul32(m_28624, x_35967);
            int32_t i32_arg_35969 = add32(defunc_0_f_res_35947, x_35968);
            int64_t i32_res_35970 = sext_i32_i64(i32_arg_35969);
            bool x_35971 = sle64((int64_t) 0, i32_res_35970);
            bool y_35972 = slt64(i32_res_35970, nm_28626);
            bool bounds_check_35973 = x_35971 && y_35972;
            bool index_certs_35974;
            
            if (!bounds_check_35973) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 88) ==
                        -1) {
                        global_failure_args[0] = i32_res_35970;
                        global_failure_args[1] = nm_28626;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_35975 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_35335 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_35970 *
                                                         ctx_param_ext_44583)];
            int32_t i32_arg_35976 = add32(i_35922, x_35968);
            int64_t i32_res_35977 = sext_i32_i64(i32_arg_35976);
            bool x_35978 = sle64((int64_t) 0, i32_res_35977);
            bool y_35979 = slt64(i32_res_35977, nm_28626);
            bool bounds_check_35980 = x_35978 && y_35979;
            bool index_certs_35981;
            
            if (!bounds_check_35980) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 89) ==
                        -1) {
                        global_failure_args[0] = i32_res_35977;
                        global_failure_args[1] = nm_28626;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_35982 = ((__global
                              float *) mem_param_44585)[ctx_param_ext_44580 +
                                                        (gtid_35335 *
                                                         ctx_param_ext_44581 +
                                                         i32_res_35977 *
                                                         ctx_param_ext_44583)];
            float y_35983 = x_35963 * x_35982;
            float defunc_0_f_res_f_res_t_res_35984 = x_35975 - y_35983;
            
            defunc_0_f_res_f_res_35966 = defunc_0_f_res_f_res_t_res_35984;
        } else {
            defunc_0_f_res_f_res_35966 = x_35963;
        }
        defunc_0_f_res_35948 = defunc_0_f_res_f_res_35966;
    }
    ((__local float *) mem_44594)[gtid_35338] = defunc_0_f_res_35948;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35381 = sext_i32_i64(ltid_pre_45860);
    int32_t phys_tid_35382 = local_tid_45856;
    float write_value_35987 = ((__local float *) mem_44594)[write_i_35381];
    
    if (sle64((int64_t) 0, write_i_35381) && slt64(write_i_35381, nm_28626)) {
        ((__global float *) mem_44590)[gtid_35335 + write_i_35381 * m_28478] =
            write_value_35987;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45856 == 0) {
        for (int64_t i_45861 = 0; i_45861 < nm_28626; i_45861++) {
            ((__global float *) mem_44598)[gtid_35335 * nm_28626 + i_45861] =
                ((__global float *) mem_44590)[gtid_35335 + i_45861 * m_28478];
        }
    }
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36514(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_45150_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_45148_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *mem_45146_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_45144_backing_aligned_3,
                                                     int64_t N_28477,
                                                     int64_t i_28781, __global
                                                     unsigned char *images_mem_44381,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_45140,
                                                     __global
                                                     unsigned char *mem_45153,
                                                     __global
                                                     unsigned char *mem_45156,
                                                     __global
                                                     unsigned char *mem_45159)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45150_backing_3 = (__local volatile
                                                           char *) mem_45150_backing_aligned_0;
    __local volatile char *restrict mem_45148_backing_2 = (__local volatile
                                                           char *) mem_45148_backing_aligned_1;
    __local volatile char *restrict mem_45146_backing_1 = (__local volatile
                                                           char *) mem_45146_backing_aligned_2;
    __local volatile char *restrict mem_45144_backing_0 = (__local volatile
                                                           char *) mem_45144_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46237;
    int32_t local_tid_46238;
    int64_t group_sizze_46241;
    int32_t wave_sizze_46240;
    int32_t group_tid_46239;
    
    global_tid_46237 = get_global_id(0);
    local_tid_46238 = get_local_id(0);
    group_sizze_46241 = get_local_size(0);
    wave_sizze_46240 = LOCKSTEP_WIDTH;
    group_tid_46239 = get_group_id(0);
    
    int32_t phys_tid_36514;
    
    phys_tid_36514 = group_tid_46239;
    
    int32_t ltid_pre_46242;
    
    ltid_pre_46242 = local_tid_46238;
    
    int64_t gtid_36507;
    
    gtid_36507 = sext_i32_i64(group_tid_46239);
    
    __local char *mem_45144;
    
    mem_45144 = (__local char *) mem_45144_backing_0;
    
    __local char *mem_45146;
    
    mem_45146 = (__local char *) mem_45146_backing_1;
    
    int64_t gtid_36510 = sext_i32_i64(ltid_pre_46242);
    int32_t phys_tid_36511 = local_tid_46238;
    float x_36603 = ((__global float *) images_mem_44381)[gtid_36507 * N_28477 +
                                                          gtid_36510];
    bool isnan_res_36605;
    
    isnan_res_36605 = futrts_isnan32(x_36603);
    
    bool cond_36606 = !isnan_res_36605;
    float defunc_1_f_res_36607;
    
    if (cond_36606) {
        float x_36604 = ((__global
                          float *) defunc_3_map_res_mem_45140)[gtid_36507 *
                                                               N_28477 +
                                                               gtid_36510];
        float defunc_1_f_res_t_res_36608 = x_36603 - x_36604;
        
        defunc_1_f_res_36607 = defunc_1_f_res_t_res_36608;
    } else {
        defunc_1_f_res_36607 = NAN;
    }
    
    bool isnan_res_36609;
    
    isnan_res_36609 = futrts_isnan32(defunc_1_f_res_36607);
    
    bool defunc_0_p_res_36610 = !isnan_res_36609;
    int64_t defunc_0_f_res_36611 = btoi_bool_i64(defunc_0_p_res_36610);
    
    ((__local int64_t *) mem_45144)[gtid_36510] = defunc_0_f_res_36611;
    ((__local float *) mem_45146)[gtid_36510] = defunc_1_f_res_36607;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46243;
    
    dims_flat_46243 = N_28477;
    
    int64_t x_36600;
    int64_t x_36601;
    int64_t x_46245;
    int64_t x_46246;
    bool ltid_in_bounds_46248;
    
    ltid_in_bounds_46248 = slt64(sext_i32_i64(local_tid_46238), N_28477);
    
    int32_t skip_threads_46249;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46248) {
            x_36601 = ((volatile __local
                        int64_t *) mem_45144)[sext_i32_i64(local_tid_46238)];
            if ((local_tid_46238 - squot32(local_tid_46238, 32) * 32) == 0) {
                x_36600 = x_36601;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46249 = 1;
        while (slt32(skip_threads_46249, 32)) {
            if (sle32(skip_threads_46249, local_tid_46238 -
                      squot32(local_tid_46238, 32) * 32) &&
                ltid_in_bounds_46248) {
                // read operands
                {
                    x_36600 = ((volatile __local
                                int64_t *) mem_45144)[sext_i32_i64(local_tid_46238) -
                                                      sext_i32_i64(skip_threads_46249)];
                }
                // perform operation
                {
                    bool inactive_46250 =
                         slt64(srem64(sext_i32_i64(local_tid_46238), N_28477),
                               sext_i32_i64(local_tid_46238) -
                               sext_i32_i64(local_tid_46238 -
                               skip_threads_46249));
                    
                    if (inactive_46250) {
                        x_36600 = x_36601;
                    }
                    if (!inactive_46250) {
                        int64_t defunc_1_op_res_36602 = add64(x_36600, x_36601);
                        
                        x_36600 = defunc_1_op_res_36602;
                    }
                }
            }
            if (sle32(wave_sizze_46240, skip_threads_46249)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46249, local_tid_46238 -
                      squot32(local_tid_46238, 32) * 32) &&
                ltid_in_bounds_46248) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_45144)[sext_i32_i64(local_tid_46238)] =
                        x_36600;
                    x_36601 = x_36600;
                }
            }
            if (sle32(wave_sizze_46240, skip_threads_46249)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46249 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46238 - squot32(local_tid_46238, 32) * 32) == 31 &&
            ltid_in_bounds_46248) {
            ((volatile __local
              int64_t *) mem_45144)[sext_i32_i64(squot32(local_tid_46238,
                                                         32))] = x_36600;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46251;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46238, 32) == 0 && ltid_in_bounds_46248) {
                x_46246 = ((volatile __local
                            int64_t *) mem_45144)[sext_i32_i64(local_tid_46238)];
                if ((local_tid_46238 - squot32(local_tid_46238, 32) * 32) ==
                    0) {
                    x_46245 = x_46246;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46251 = 1;
            while (slt32(skip_threads_46251, 32)) {
                if (sle32(skip_threads_46251, local_tid_46238 -
                          squot32(local_tid_46238, 32) * 32) &&
                    (squot32(local_tid_46238, 32) == 0 &&
                     ltid_in_bounds_46248)) {
                    // read operands
                    {
                        x_46245 = ((volatile __local
                                    int64_t *) mem_45144)[sext_i32_i64(local_tid_46238) -
                                                          sext_i32_i64(skip_threads_46251)];
                    }
                    // perform operation
                    {
                        bool inactive_46252 =
                             slt64(srem64(sext_i32_i64(local_tid_46238 * 32 +
                                          32 - 1), N_28477),
                                   sext_i32_i64(local_tid_46238 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46238 -
                                                 skip_threads_46251) * 32 + 32 -
                                   1));
                        
                        if (inactive_46252) {
                            x_46245 = x_46246;
                        }
                        if (!inactive_46252) {
                            int64_t defunc_1_op_res_46247 = add64(x_46245,
                                                                  x_46246);
                            
                            x_46245 = defunc_1_op_res_46247;
                        }
                    }
                }
                if (sle32(wave_sizze_46240, skip_threads_46251)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46251, local_tid_46238 -
                          squot32(local_tid_46238, 32) * 32) &&
                    (squot32(local_tid_46238, 32) == 0 &&
                     ltid_in_bounds_46248)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_45144)[sext_i32_i64(local_tid_46238)] =
                            x_46245;
                        x_46246 = x_46245;
                    }
                }
                if (sle32(wave_sizze_46240, skip_threads_46251)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46251 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46238, 32) == 0 || !ltid_in_bounds_46248)) {
            // read operands
            {
                x_36601 = x_36600;
                x_36600 = ((__local
                            int64_t *) mem_45144)[sext_i32_i64(squot32(local_tid_46238,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46253 =
                     slt64(srem64(sext_i32_i64(local_tid_46238), N_28477),
                           sext_i32_i64(local_tid_46238) -
                           sext_i32_i64(squot32(local_tid_46238, 32) * 32 - 1));
                
                if (inactive_46253) {
                    x_36600 = x_36601;
                }
                if (!inactive_46253) {
                    int64_t defunc_1_op_res_36602 = add64(x_36600, x_36601);
                    
                    x_36600 = defunc_1_op_res_36602;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_45144)[sext_i32_i64(local_tid_46238)] =
                    x_36600;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46238, 32) == 0) {
            ((__local int64_t *) mem_45144)[sext_i32_i64(local_tid_46238)] =
                x_36601;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_36612 = ((__local int64_t *) mem_45144)[i_28781];
    int32_t defunc_0_f_res_36613 = sext_i64_i32(last_res_36612);
    __local char *mem_45148;
    
    mem_45148 = (__local char *) mem_45148_backing_2;
    ((__local float *) mem_45148)[sext_i32_i64(local_tid_46238)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45150;
    
    mem_45150 = (__local char *) mem_45150_backing_3;
    ((__local int32_t *) mem_45150)[sext_i32_i64(local_tid_46238)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_36512 = sext_i32_i64(ltid_pre_46242);
    int32_t phys_tid_36513 = local_tid_46238;
    float x_36618 = ((__local float *) mem_45146)[write_i_36512];
    int32_t index_primexp_42374 = sext_i64_i32(write_i_36512);
    bool isnan_res_36621;
    
    isnan_res_36621 = futrts_isnan32(x_36618);
    
    bool defunc_0_p_res_36622 = !isnan_res_36621;
    int64_t defunc_1_f_res_36623;
    
    if (defunc_0_p_res_36622) {
        int64_t x_36619 = ((__local int64_t *) mem_45144)[write_i_36512];
        int64_t defunc_1_f_res_t_res_36624 = sub64(x_36619, (int64_t) 1);
        
        defunc_1_f_res_36623 = defunc_1_f_res_t_res_36624;
    } else {
        defunc_1_f_res_36623 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_36623) && slt64(defunc_1_f_res_36623,
                                                          N_28477)) {
        ((__local int32_t *) mem_45150)[defunc_1_f_res_36623] =
            index_primexp_42374;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_36623) && slt64(defunc_1_f_res_36623,
                                                          N_28477)) {
        ((__local float *) mem_45148)[defunc_1_f_res_36623] = x_36618;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_46238 == 0) {
        ((__global int32_t *) mem_45153)[gtid_36507] = defunc_0_f_res_36613;
    }
    ((__global float *) mem_45156)[gtid_36507 * N_28477 +
                                   sext_i32_i64(local_tid_46238)] = ((__local
                                                                      float *) mem_45148)[sext_i32_i64(local_tid_46238)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_45159)[gtid_36507 * N_28477 +
                                     sext_i32_i64(local_tid_46238)] = ((__local
                                                                        int32_t *) mem_45150)[sext_i32_i64(local_tid_46238)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36854(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *red_arr_mem_46362_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_46358_backing_aligned_1,
                                                     int64_t N_28477,
                                                     float hfrac_28483,
                                                     int64_t i32_res_28487,
                                                     int32_t k2p2_28489,
                                                     __global
                                                     unsigned char *images_mem_44381,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_45178,
                                                     __global
                                                     unsigned char *mem_45225,
                                                     __global
                                                     unsigned char *mem_45227,
                                                     __global
                                                     unsigned char *mem_45229)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46362_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46362_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46358_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46358_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46352;
    int32_t local_tid_46353;
    int64_t group_sizze_46356;
    int32_t wave_sizze_46355;
    int32_t group_tid_46354;
    
    global_tid_46352 = get_global_id(0);
    local_tid_46353 = get_local_id(0);
    group_sizze_46356 = get_local_size(0);
    wave_sizze_46355 = LOCKSTEP_WIDTH;
    group_tid_46354 = get_group_id(0);
    
    int32_t phys_tid_36854;
    
    phys_tid_36854 = group_tid_46354;
    
    int32_t ltid_pre_46357;
    
    ltid_pre_46357 = local_tid_46353;
    
    int64_t gtid_36847;
    
    gtid_36847 = sext_i32_i64(group_tid_46354);
    
    int32_t defunc_0_f_res_36939;
    int64_t gtid_36850 = sext_i32_i64(ltid_pre_46357);
    int32_t phys_tid_36851 = local_tid_46353;
    __local char *red_arr_mem_46358;
    
    red_arr_mem_46358 = (__local char *) red_arr_mem_46358_backing_0;
    
    float x_36943;
    
    x_36943 = ((__global float *) images_mem_44381)[gtid_36847 * N_28477 +
                                                    gtid_36850];
    
    bool isnan_res_36944;
    
    isnan_res_36944 = futrts_isnan32(x_36943);
    
    bool cond_36945 = !isnan_res_36944;
    int32_t defunc_0_f_res_36946 = btoi_bool_i32(cond_36945);
    
    ((__local int32_t *) red_arr_mem_46358)[gtid_36850] = defunc_0_f_res_36946;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46360;
    int32_t skip_waves_46361;
    
    skip_waves_46361 = 1;
    
    int32_t x_36940;
    int32_t x_36941;
    
    offset_46360 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46353, sext_i64_i32(i32_res_28487))) {
            x_36940 = ((__local
                        int32_t *) red_arr_mem_46358)[sext_i32_i64(local_tid_46353 +
                                                      offset_46360)];
        }
    }
    offset_46360 = 1;
    while (slt32(offset_46360, wave_sizze_46355)) {
        if (slt32(local_tid_46353 + offset_46360,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_46353 -
                                                    squot32(local_tid_46353,
                                                            wave_sizze_46355) *
                                                    wave_sizze_46355) & (2 *
                                                                         offset_46360 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36941 = ((volatile __local
                            int32_t *) red_arr_mem_46358)[sext_i32_i64(local_tid_46353 +
                                                          offset_46360)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_36942 = add32(x_36940, x_36941);
                
                x_36940 = defunc_1_op_res_36942;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_46358)[sext_i32_i64(local_tid_46353)] =
                    x_36940;
            }
        }
        offset_46360 *= 2;
    }
    while (slt32(skip_waves_46361, squot32(sext_i64_i32(i32_res_28487) +
                                           wave_sizze_46355 - 1,
                                           wave_sizze_46355))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46360 = skip_waves_46361 * wave_sizze_46355;
        if (slt32(local_tid_46353 + offset_46360,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_46353 -
                                                    squot32(local_tid_46353,
                                                            wave_sizze_46355) *
                                                    wave_sizze_46355) == 0 &&
                                                   (squot32(local_tid_46353,
                                                            wave_sizze_46355) &
                                                    (2 * skip_waves_46361 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36941 = ((__local
                            int32_t *) red_arr_mem_46358)[sext_i32_i64(local_tid_46353 +
                                                          offset_46360)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_36942 = add32(x_36940, x_36941);
                
                x_36940 = defunc_1_op_res_36942;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_46358)[sext_i32_i64(local_tid_46353)] =
                    x_36940;
            }
        }
        skip_waves_46361 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36939 = ((__local int32_t *) red_arr_mem_46358)[(int64_t) 0];
    
    float defunc_0_f_res_36947;
    int64_t gtid_36852 = sext_i32_i64(ltid_pre_46357);
    int32_t phys_tid_36853 = local_tid_46353;
    __local char *red_arr_mem_46362;
    
    red_arr_mem_46362 = (__local char *) red_arr_mem_46362_backing_1;
    
    int32_t index_primexp_42382;
    
    index_primexp_42382 = sext_i64_i32(gtid_36852);
    
    bool cond_36952 = slt32(index_primexp_42382, defunc_0_f_res_36939);
    float defunc_0_f_res_36953;
    
    if (cond_36952) {
        int64_t i_36954 = sext_i32_i64(index_primexp_42382);
        bool x_36955 = sle64((int64_t) 0, i_36954);
        bool y_36956 = slt64(i_36954, N_28477);
        bool bounds_check_36957 = x_36955 && y_36956;
        bool index_certs_36958;
        
        if (!bounds_check_36957) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 96) == -1) {
                    global_failure_args[0] = i_36954;
                    global_failure_args[1] = N_28477;
                    ;
                }
                local_failure = true;
                goto error_2;
            }
        }
        
        float defunc_0_f_res_t_res_36959 = ((__global
                                             float *) defunc_4_map_res_mem_45178)[gtid_36847 *
                                                                                  N_28477 +
                                                                                  i_36954];
        
        defunc_0_f_res_36953 = defunc_0_f_res_t_res_36959;
    } else {
        defunc_0_f_res_36953 = 0.0F;
    }
    
    float defunc_0_f_res_36960 = defunc_0_f_res_36953 * defunc_0_f_res_36953;
    
    ((__local float *) red_arr_mem_46362)[gtid_36852] = defunc_0_f_res_36960;
    
  error_2:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46364;
    int32_t skip_waves_46365;
    
    skip_waves_46365 = 1;
    
    float x_36948;
    float x_36949;
    
    offset_46364 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46353, sext_i64_i32(i32_res_28487))) {
            x_36948 = ((__local
                        float *) red_arr_mem_46362)[sext_i32_i64(local_tid_46353 +
                                                    offset_46364)];
        }
    }
    offset_46364 = 1;
    while (slt32(offset_46364, wave_sizze_46355)) {
        if (slt32(local_tid_46353 + offset_46364,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_46353 -
                                                    squot32(local_tid_46353,
                                                            wave_sizze_46355) *
                                                    wave_sizze_46355) & (2 *
                                                                         offset_46364 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36949 = ((volatile __local
                            float *) red_arr_mem_46362)[sext_i32_i64(local_tid_46353 +
                                                        offset_46364)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36950 = x_36948 + x_36949;
                
                x_36948 = defunc_1_op_res_36950;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_46362)[sext_i32_i64(local_tid_46353)] =
                    x_36948;
            }
        }
        offset_46364 *= 2;
    }
    while (slt32(skip_waves_46365, squot32(sext_i64_i32(i32_res_28487) +
                                           wave_sizze_46355 - 1,
                                           wave_sizze_46355))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46364 = skip_waves_46365 * wave_sizze_46355;
        if (slt32(local_tid_46353 + offset_46364,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_46353 -
                                                    squot32(local_tid_46353,
                                                            wave_sizze_46355) *
                                                    wave_sizze_46355) == 0 &&
                                                   (squot32(local_tid_46353,
                                                            wave_sizze_46355) &
                                                    (2 * skip_waves_46365 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36949 = ((__local
                            float *) red_arr_mem_46362)[sext_i32_i64(local_tid_46353 +
                                                        offset_46364)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36950 = x_36948 + x_36949;
                
                x_36948 = defunc_1_op_res_36950;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_46362)[sext_i32_i64(local_tid_46353)] =
                    x_36948;
            }
        }
        skip_waves_46365 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36947 = ((__local float *) red_arr_mem_46362)[(int64_t) 0];
    
    int32_t r32_arg_36961 = sub32(defunc_0_f_res_36939, k2p2_28489);
    float i32_res_36962 = sitofp_i32_f32(r32_arg_36961);
    float sqrt_arg_36963 = defunc_0_f_res_36947 / i32_res_36962;
    float sqrt_res_36964;
    
    sqrt_res_36964 = futrts_sqrt32(sqrt_arg_36963);
    
    float i32_res_36965 = sitofp_i32_f32(defunc_0_f_res_36939);
    float t32_arg_36966 = hfrac_28483 * i32_res_36965;
    int32_t f32_res_36967 = fptosi_f32_i32(t32_arg_36966);
    
    if (local_tid_46353 == 0) {
        ((__global int32_t *) mem_45225)[gtid_36847] = f32_res_36967;
    }
    if (local_tid_46353 == 0) {
        ((__global int32_t *) mem_45227)[gtid_36847] = defunc_0_f_res_36939;
    }
    if (local_tid_46353 == 0) {
        ((__global float *) mem_45229)[gtid_36847] = sqrt_res_36964;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_37880(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *red_arr_mem_46645_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_46643_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *red_arr_mem_46641_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_45329_backing_aligned_3,
                                                     int64_t N_28477,
                                                     int32_t n_28481,
                                                     int64_t iota32_arg_28909,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_45177,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_45178,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_45179,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_45244,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_45245,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_45246,
                                                     __global
                                                     unsigned char *defunc_0_f_res_mem_45279,
                                                     __global
                                                     unsigned char *mem_45284,
                                                     __global
                                                     unsigned char *mem_45332,
                                                     __global
                                                     unsigned char *mem_45334)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46645_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_46645_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46643_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46643_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46641_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46641_backing_aligned_2;
    __local volatile char *restrict mem_45329_backing_0 = (__local volatile
                                                           char *) mem_45329_backing_aligned_3;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46624;
    int32_t local_tid_46625;
    int64_t group_sizze_46628;
    int32_t wave_sizze_46627;
    int32_t group_tid_46626;
    
    global_tid_46624 = get_global_id(0);
    local_tid_46625 = get_local_id(0);
    group_sizze_46628 = get_local_size(0);
    wave_sizze_46627 = LOCKSTEP_WIDTH;
    group_tid_46626 = get_group_id(0);
    
    int32_t phys_tid_37880;
    
    phys_tid_37880 = group_tid_46626;
    
    int32_t ltid_pre_46629;
    
    ltid_pre_46629 = local_tid_46625;
    
    int64_t gtid_37873;
    
    gtid_37873 = sext_i32_i64(group_tid_46626);
    
    int32_t x_38123;
    
    x_38123 = ((__global int32_t *) defunc_4_map_res_mem_45177)[gtid_37873];
    
    int32_t x_38124 = ((__global
                        int32_t *) defunc_3_map_res_mem_45245)[gtid_37873];
    float x_38125 = ((__global float *) defunc_3_map_res_mem_45246)[gtid_37873];
    int32_t x_38126 = ((__global
                        int32_t *) defunc_3_map_res_mem_45244)[gtid_37873];
    float x_38127 = ((__global float *) defunc_0_f_res_mem_45279)[gtid_37873];
    int32_t y_38130 = sub32(x_38123, x_38124);
    float i32_res_38131 = sitofp_i32_f32(x_38124);
    float sqrt_res_38132;
    
    sqrt_res_38132 = futrts_sqrt32(i32_res_38131);
    
    float y_38133 = x_38125 * sqrt_res_38132;
    __local char *mem_45329;
    
    mem_45329 = (__local char *) mem_45329_backing_0;
    
    int64_t gtid_37876 = sext_i32_i64(ltid_pre_46629);
    int32_t phys_tid_37877 = local_tid_46625;
    int32_t index_primexp_42400 = sext_i64_i32(gtid_37876);
    bool cond_38146 = sle32(y_38130, index_primexp_42400);
    float defunc_0_f_res_38147;
    
    if (cond_38146) {
        defunc_0_f_res_38147 = 0.0F;
    } else {
        bool cond_38148 = index_primexp_42400 == 0;
        float defunc_0_f_res_f_res_38149;
        
        if (cond_38148) {
            defunc_0_f_res_f_res_38149 = x_38127;
        } else {
            int32_t i_38150 = add32(x_38124, index_primexp_42400);
            int64_t i_38151 = sext_i32_i64(i_38150);
            bool x_38152 = sle64((int64_t) 0, i_38151);
            bool y_38153 = slt64(i_38151, N_28477);
            bool bounds_check_38154 = x_38152 && y_38153;
            bool index_certs_38155;
            
            if (!bounds_check_38154) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 115) ==
                        -1) {
                        global_failure_args[0] = i_38151;
                        global_failure_args[1] = N_28477;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float x_38156 = ((__global
                              float *) defunc_4_map_res_mem_45178)[gtid_37873 *
                                                                   N_28477 +
                                                                   i_38151];
            int32_t x_38157 = sub32(x_38124, x_38126);
            int32_t i_38158 = add32(x_38157, index_primexp_42400);
            int64_t i_38159 = sext_i32_i64(i_38158);
            bool x_38160 = sle64((int64_t) 0, i_38159);
            bool y_38161 = slt64(i_38159, N_28477);
            bool bounds_check_38162 = x_38160 && y_38161;
            bool index_certs_38163;
            
            if (!bounds_check_38162) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 116) ==
                        -1) {
                        global_failure_args[0] = i_38159;
                        global_failure_args[1] = N_28477;
                        ;
                    }
                    local_failure = true;
                    goto error_0;
                }
            }
            
            float y_38164 = ((__global
                              float *) defunc_4_map_res_mem_45178)[gtid_37873 *
                                                                   N_28477 +
                                                                   i_38159];
            float defunc_0_f_res_f_res_f_res_38165 = x_38156 - y_38164;
            
            defunc_0_f_res_f_res_38149 = defunc_0_f_res_f_res_f_res_38165;
        }
        defunc_0_f_res_38147 = defunc_0_f_res_f_res_38149;
    }
    ((__local float *) mem_45329)[gtid_37876] = defunc_0_f_res_38147;
    
  error_0:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46630;
    
    dims_flat_46630 = iota32_arg_28909;
    
    float x_38142;
    float x_38143;
    float x_46632;
    float x_46633;
    bool ltid_in_bounds_46635;
    
    ltid_in_bounds_46635 = slt64(sext_i32_i64(local_tid_46625),
                                 iota32_arg_28909);
    
    int32_t skip_threads_46636;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46635) {
            x_38143 = ((volatile __local
                        float *) mem_45329)[sext_i32_i64(local_tid_46625)];
            if ((local_tid_46625 - squot32(local_tid_46625, 32) * 32) == 0) {
                x_38142 = x_38143;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46636 = 1;
        while (slt32(skip_threads_46636, 32)) {
            if (sle32(skip_threads_46636, local_tid_46625 -
                      squot32(local_tid_46625, 32) * 32) &&
                ltid_in_bounds_46635) {
                // read operands
                {
                    x_38142 = ((volatile __local
                                float *) mem_45329)[sext_i32_i64(local_tid_46625) -
                                                    sext_i32_i64(skip_threads_46636)];
                }
                // perform operation
                {
                    bool inactive_46637 =
                         slt64(srem64(sext_i32_i64(local_tid_46625),
                                      iota32_arg_28909),
                               sext_i32_i64(local_tid_46625) -
                               sext_i32_i64(local_tid_46625 -
                               skip_threads_46636));
                    
                    if (inactive_46637) {
                        x_38142 = x_38143;
                    }
                    if (!inactive_46637) {
                        float defunc_1_op_res_38144 = x_38142 + x_38143;
                        
                        x_38142 = defunc_1_op_res_38144;
                    }
                }
            }
            if (sle32(wave_sizze_46627, skip_threads_46636)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46636, local_tid_46625 -
                      squot32(local_tid_46625, 32) * 32) &&
                ltid_in_bounds_46635) {
                // write result
                {
                    ((volatile __local
                      float *) mem_45329)[sext_i32_i64(local_tid_46625)] =
                        x_38142;
                    x_38143 = x_38142;
                }
            }
            if (sle32(wave_sizze_46627, skip_threads_46636)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46636 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46625 - squot32(local_tid_46625, 32) * 32) == 31 &&
            ltid_in_bounds_46635) {
            ((volatile __local
              float *) mem_45329)[sext_i32_i64(squot32(local_tid_46625, 32))] =
                x_38142;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46638;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46625, 32) == 0 && ltid_in_bounds_46635) {
                x_46633 = ((volatile __local
                            float *) mem_45329)[sext_i32_i64(local_tid_46625)];
                if ((local_tid_46625 - squot32(local_tid_46625, 32) * 32) ==
                    0) {
                    x_46632 = x_46633;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46638 = 1;
            while (slt32(skip_threads_46638, 32)) {
                if (sle32(skip_threads_46638, local_tid_46625 -
                          squot32(local_tid_46625, 32) * 32) &&
                    (squot32(local_tid_46625, 32) == 0 &&
                     ltid_in_bounds_46635)) {
                    // read operands
                    {
                        x_46632 = ((volatile __local
                                    float *) mem_45329)[sext_i32_i64(local_tid_46625) -
                                                        sext_i32_i64(skip_threads_46638)];
                    }
                    // perform operation
                    {
                        bool inactive_46639 =
                             slt64(srem64(sext_i32_i64(local_tid_46625 * 32 +
                                          32 - 1), iota32_arg_28909),
                                   sext_i32_i64(local_tid_46625 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46625 -
                                                 skip_threads_46638) * 32 + 32 -
                                   1));
                        
                        if (inactive_46639) {
                            x_46632 = x_46633;
                        }
                        if (!inactive_46639) {
                            float defunc_1_op_res_46634 = x_46632 + x_46633;
                            
                            x_46632 = defunc_1_op_res_46634;
                        }
                    }
                }
                if (sle32(wave_sizze_46627, skip_threads_46638)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46638, local_tid_46625 -
                          squot32(local_tid_46625, 32) * 32) &&
                    (squot32(local_tid_46625, 32) == 0 &&
                     ltid_in_bounds_46635)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_45329)[sext_i32_i64(local_tid_46625)] =
                            x_46632;
                        x_46633 = x_46632;
                    }
                }
                if (sle32(wave_sizze_46627, skip_threads_46638)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46638 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46625, 32) == 0 || !ltid_in_bounds_46635)) {
            // read operands
            {
                x_38143 = x_38142;
                x_38142 = ((__local
                            float *) mem_45329)[sext_i32_i64(squot32(local_tid_46625,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_46640 =
                     slt64(srem64(sext_i32_i64(local_tid_46625),
                                  iota32_arg_28909),
                           sext_i32_i64(local_tid_46625) -
                           sext_i32_i64(squot32(local_tid_46625, 32) * 32 - 1));
                
                if (inactive_46640) {
                    x_38142 = x_38143;
                }
                if (!inactive_46640) {
                    float defunc_1_op_res_38144 = x_38142 + x_38143;
                    
                    x_38142 = defunc_1_op_res_38144;
                }
            }
            // write final result
            {
                ((__local float *) mem_45329)[sext_i32_i64(local_tid_46625)] =
                    x_38142;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46625, 32) == 0) {
            ((__local float *) mem_45329)[sext_i32_i64(local_tid_46625)] =
                x_38143;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_38171;
    int32_t acc0_38172;
    float acc0_38173;
    int64_t gtid_37878 = sext_i32_i64(ltid_pre_46629);
    int32_t phys_tid_37879 = local_tid_46625;
    __local char *red_arr_mem_46641;
    
    red_arr_mem_46641 = (__local char *) red_arr_mem_46641_backing_1;
    
    __local char *red_arr_mem_46643;
    
    red_arr_mem_46643 = (__local char *) red_arr_mem_46643_backing_2;
    
    __local char *red_arr_mem_46645;
    
    red_arr_mem_46645 = (__local char *) red_arr_mem_46645_backing_3;
    
    float x_38188;
    
    x_38188 = ((__local float *) mem_45329)[gtid_37878];
    
    float x_38189 = ((__global float *) mem_45284)[gtid_37878];
    int32_t index_primexp_42403 = sext_i64_i32(gtid_37878);
    float defunc_0_f_res_38192 = x_38188 / y_38133;
    bool cond_38193 = slt32(index_primexp_42403, y_38130);
    bool isnan_res_38194;
    
    isnan_res_38194 = futrts_isnan32(defunc_0_f_res_38192);
    
    bool cond_t_res_38195 = !isnan_res_38194;
    bool x_38196 = cond_38193 && cond_t_res_38195;
    float abs_res_38197 = (float) fabs(defunc_0_f_res_38192);
    bool defunc_2_f_res_t_res_38198 = x_38189 < abs_res_38197;
    bool x_38199 = x_38196 && defunc_2_f_res_t_res_38198;
    float defunc_1_f_res_38200;
    
    if (cond_38193) {
        defunc_1_f_res_38200 = defunc_0_f_res_38192;
    } else {
        defunc_1_f_res_38200 = 0.0F;
    }
    ((__local bool *) red_arr_mem_46641)[gtid_37878] = x_38199;
    ((__local int32_t *) red_arr_mem_46643)[gtid_37878] = index_primexp_42403;
    ((__local float *) red_arr_mem_46645)[gtid_37878] = defunc_1_f_res_38200;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46647;
    int32_t skip_waves_46648;
    
    skip_waves_46648 = 1;
    
    bool x_38174;
    int32_t x_38175;
    float x_38176;
    bool x_38177;
    int32_t x_38178;
    float x_38179;
    
    offset_46647 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46625, sext_i64_i32(iota32_arg_28909))) {
            x_38174 = ((__local
                        bool *) red_arr_mem_46641)[sext_i32_i64(local_tid_46625 +
                                                   offset_46647)];
            x_38175 = ((__local
                        int32_t *) red_arr_mem_46643)[sext_i32_i64(local_tid_46625 +
                                                      offset_46647)];
            x_38176 = ((__local
                        float *) red_arr_mem_46645)[sext_i32_i64(local_tid_46625 +
                                                    offset_46647)];
        }
    }
    offset_46647 = 1;
    while (slt32(offset_46647, wave_sizze_46627)) {
        if (slt32(local_tid_46625 + offset_46647,
                  sext_i64_i32(iota32_arg_28909)) && ((local_tid_46625 -
                                                       squot32(local_tid_46625,
                                                               wave_sizze_46627) *
                                                       wave_sizze_46627) & (2 *
                                                                            offset_46647 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_38177 = ((volatile __local
                            bool *) red_arr_mem_46641)[sext_i32_i64(local_tid_46625 +
                                                       offset_46647)];
                x_38178 = ((volatile __local
                            int32_t *) red_arr_mem_46643)[sext_i32_i64(local_tid_46625 +
                                                          offset_46647)];
                x_38179 = ((volatile __local
                            float *) red_arr_mem_46645)[sext_i32_i64(local_tid_46625 +
                                                        offset_46647)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_38180;
                int32_t defunc_1_op_res_38181;
                
                if (x_38174) {
                    defunc_1_op_res_38180 = x_38174;
                    defunc_1_op_res_38181 = x_38175;
                } else {
                    bool x_38182 = x_38177 && x_38177;
                    bool x_38183 = !x_38177;
                    bool y_38184 = x_38174 && x_38183;
                    bool defunc_1_op_res_f_res_38185 = x_38182 || y_38184;
                    int32_t defunc_1_op_res_f_res_38186;
                    
                    if (x_38177) {
                        defunc_1_op_res_f_res_38186 = x_38178;
                    } else {
                        defunc_1_op_res_f_res_38186 = x_38175;
                    }
                    defunc_1_op_res_38180 = defunc_1_op_res_f_res_38185;
                    defunc_1_op_res_38181 = defunc_1_op_res_f_res_38186;
                }
                
                float defunc_1_op_res_38187 = x_38176 + x_38179;
                
                x_38174 = defunc_1_op_res_38180;
                x_38175 = defunc_1_op_res_38181;
                x_38176 = defunc_1_op_res_38187;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_46641)[sext_i32_i64(local_tid_46625)] =
                    x_38174;
                ((volatile __local
                  int32_t *) red_arr_mem_46643)[sext_i32_i64(local_tid_46625)] =
                    x_38175;
                ((volatile __local
                  float *) red_arr_mem_46645)[sext_i32_i64(local_tid_46625)] =
                    x_38176;
            }
        }
        offset_46647 *= 2;
    }
    while (slt32(skip_waves_46648, squot32(sext_i64_i32(iota32_arg_28909) +
                                           wave_sizze_46627 - 1,
                                           wave_sizze_46627))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46647 = skip_waves_46648 * wave_sizze_46627;
        if (slt32(local_tid_46625 + offset_46647,
                  sext_i64_i32(iota32_arg_28909)) && ((local_tid_46625 -
                                                       squot32(local_tid_46625,
                                                               wave_sizze_46627) *
                                                       wave_sizze_46627) == 0 &&
                                                      (squot32(local_tid_46625,
                                                               wave_sizze_46627) &
                                                       (2 * skip_waves_46648 -
                                                        1)) == 0)) {
            // read array element
            {
                x_38177 = ((__local
                            bool *) red_arr_mem_46641)[sext_i32_i64(local_tid_46625 +
                                                       offset_46647)];
                x_38178 = ((__local
                            int32_t *) red_arr_mem_46643)[sext_i32_i64(local_tid_46625 +
                                                          offset_46647)];
                x_38179 = ((__local
                            float *) red_arr_mem_46645)[sext_i32_i64(local_tid_46625 +
                                                        offset_46647)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_38180;
                int32_t defunc_1_op_res_38181;
                
                if (x_38174) {
                    defunc_1_op_res_38180 = x_38174;
                    defunc_1_op_res_38181 = x_38175;
                } else {
                    bool x_38182 = x_38177 && x_38177;
                    bool x_38183 = !x_38177;
                    bool y_38184 = x_38174 && x_38183;
                    bool defunc_1_op_res_f_res_38185 = x_38182 || y_38184;
                    int32_t defunc_1_op_res_f_res_38186;
                    
                    if (x_38177) {
                        defunc_1_op_res_f_res_38186 = x_38178;
                    } else {
                        defunc_1_op_res_f_res_38186 = x_38175;
                    }
                    defunc_1_op_res_38180 = defunc_1_op_res_f_res_38185;
                    defunc_1_op_res_38181 = defunc_1_op_res_f_res_38186;
                }
                
                float defunc_1_op_res_38187 = x_38176 + x_38179;
                
                x_38174 = defunc_1_op_res_38180;
                x_38175 = defunc_1_op_res_38181;
                x_38176 = defunc_1_op_res_38187;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_46641)[sext_i32_i64(local_tid_46625)] =
                    x_38174;
                ((__local
                  int32_t *) red_arr_mem_46643)[sext_i32_i64(local_tid_46625)] =
                    x_38175;
                ((__local
                  float *) red_arr_mem_46645)[sext_i32_i64(local_tid_46625)] =
                    x_38176;
            }
        }
        skip_waves_46648 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_38171 = ((__local bool *) red_arr_mem_46641)[(int64_t) 0];
    acc0_38172 = ((__local int32_t *) red_arr_mem_46643)[(int64_t) 0];
    acc0_38173 = ((__local float *) red_arr_mem_46645)[(int64_t) 0];
    
    bool x_38203 = acc0_38171 && acc0_38171;
    int32_t defunc_1_op_res_f_res_38207;
    
    if (acc0_38171) {
        defunc_1_op_res_f_res_38207 = acc0_38172;
    } else {
        defunc_1_op_res_f_res_38207 = -1;
    }
    
    bool cond_38213 = y_38130 == 0;
    float defunc_0_f_res_38214;
    
    if (cond_38213) {
        defunc_0_f_res_38214 = 0.0F;
    } else {
        float i32_res_38215 = sitofp_i32_f32(y_38130);
        float defunc_0_f_res_f_res_38216 = acc0_38173 / i32_res_38215;
        
        defunc_0_f_res_38214 = defunc_0_f_res_f_res_38216;
    }
    
    bool cond_38217 = !x_38203;
    int32_t fst_breakzq_38218;
    
    if (cond_38217) {
        fst_breakzq_38218 = -1;
    } else {
        bool cond_38219 = slt32(defunc_1_op_res_f_res_38207, y_38130);
        int32_t adjustValInds_res_38220;
        
        if (cond_38219) {
            int32_t i_38221 = add32(x_38124, defunc_1_op_res_f_res_38207);
            int64_t i_38222 = sext_i32_i64(i_38221);
            bool x_38223 = sle64((int64_t) 0, i_38222);
            bool y_38224 = slt64(i_38222, N_28477);
            bool bounds_check_38225 = x_38223 && y_38224;
            bool index_certs_38226;
            
            if (!bounds_check_38225) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 117) ==
                        -1) {
                        global_failure_args[0] = i_38222;
                        global_failure_args[1] = N_28477;
                        ;
                    }
                    local_failure = true;
                    goto error_3;
                }
            }
            
            int32_t x_38227 = ((__global
                                int32_t *) defunc_4_map_res_mem_45179)[gtid_37873 *
                                                                       N_28477 +
                                                                       i_38222];
            int32_t adjustValInds_res_t_res_38228 = sub32(x_38227, n_28481);
            
            adjustValInds_res_38220 = adjustValInds_res_t_res_38228;
        } else {
            adjustValInds_res_38220 = -1;
        }
        fst_breakzq_38218 = adjustValInds_res_38220;
    }
    
    bool cond_38229 = sle32(x_38124, 5);
    bool cond_f_res_38230 = sle32(y_38130, 5);
    bool x_38231 = !cond_38229;
    bool y_38232 = cond_f_res_38230 && x_38231;
    bool cond_38233 = cond_38229 || y_38232;
    int32_t fst_breakzq_38234;
    
    if (cond_38233) {
        fst_breakzq_38234 = -2;
    } else {
        fst_breakzq_38234 = fst_breakzq_38218;
    }
    if (local_tid_46625 == 0) {
        ((__global int32_t *) mem_45332)[gtid_37873] = fst_breakzq_38234;
    }
    if (local_tid_46625 == 0) {
        ((__global float *) mem_45334)[gtid_37873] = defunc_0_f_res_38214;
    }
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_42541(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44480_backing_aligned_0,
                                                     int64_t m_28478,
                                                     int32_t n_28481,
                                                     int64_t i32_res_28493,
                                                     int64_t Ty_42529,
                                                     int64_t Tx_42530,
                                                     int64_t gridDim_x_42531,
                                                     int64_t gridDim_y_42532,
                                                     int64_t group_sizze_tile3d_42536,
                                                     int64_t count_shmem_42537,
                                                     __global
                                                     unsigned char *mem_44393,
                                                     __global
                                                     unsigned char *mem_44397,
                                                     __global
                                                     unsigned char *mem_44468,
                                                     __global
                                                     unsigned char *mem_44528)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44480_backing_0 = (__local volatile
                                                           char *) mem_44480_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45722;
    int32_t local_tid_45723;
    int64_t group_sizze_45726;
    int32_t wave_sizze_45725;
    int32_t group_tid_45724;
    
    global_tid_45722 = get_global_id(0);
    local_tid_45723 = get_local_id(0);
    group_sizze_45726 = get_local_size(0);
    wave_sizze_45725 = LOCKSTEP_WIDTH;
    group_tid_45724 = get_group_id(0);
    
    int32_t gid_flat_42541;
    
    gid_flat_42541 = group_tid_45724;
    
    int32_t ltid_pre_45727;
    
    ltid_pre_45727 = squot32(local_tid_45723, sext_i64_i32(Ty_42529) *
                             sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45728;
    
    ltid_pre_45728 = squot32(local_tid_45723 - squot32(local_tid_45723,
                                                       sext_i64_i32(Ty_42529) *
                                                       sext_i64_i32(Tx_42530)) *
                             (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)),
                             sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45729;
    
    ltid_pre_45729 = local_tid_45723 - squot32(local_tid_45723,
                                               sext_i64_i32(Ty_42529) *
                                               sext_i64_i32(Tx_42530)) *
        (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)) -
        squot32(local_tid_45723 - squot32(local_tid_45723,
                                          sext_i64_i32(Ty_42529) *
                                          sext_i64_i32(Tx_42530)) *
                (sext_i64_i32(Ty_42529) * sext_i64_i32(Tx_42530)),
                sext_i64_i32(Tx_42530)) * sext_i64_i32(Tx_42530);
    
    int32_t ltid_pre_45730;
    
    ltid_pre_45730 = squot32(local_tid_45723, sext_i64_i32(Tx_42530));
    
    int32_t ltid_pre_45731;
    
    ltid_pre_45731 = local_tid_45723 - squot32(local_tid_45723,
                                               sext_i64_i32(Tx_42530)) *
        sext_i64_i32(Tx_42530);
    
    int32_t ltid_pre_45732;
    
    ltid_pre_45732 = local_tid_45723;
    
    int64_t gid_zz_42540;
    
    gid_zz_42540 = squot64(sext_i32_i64(group_tid_45724), gridDim_y_42532 *
                           gridDim_x_42531);
    
    int64_t gid_y_42539;
    
    gid_y_42539 = squot64(sext_i32_i64(group_tid_45724) -
                          squot64(sext_i32_i64(group_tid_45724),
                                  gridDim_y_42532 * gridDim_x_42531) *
                          (gridDim_y_42532 * gridDim_x_42531), gridDim_x_42531);
    
    int64_t gid_x_42538;
    
    gid_x_42538 = sext_i32_i64(group_tid_45724) -
        squot64(sext_i32_i64(group_tid_45724), gridDim_y_42532 *
                gridDim_x_42531) * (gridDim_y_42532 * gridDim_x_42531) -
        squot64(sext_i32_i64(group_tid_45724) -
                squot64(sext_i32_i64(group_tid_45724), gridDim_y_42532 *
                        gridDim_x_42531) * (gridDim_y_42532 * gridDim_x_42531),
                gridDim_x_42531) * gridDim_x_42531;
    
    int64_t ii_42542;
    
    ii_42542 = (int64_t) 30 * gid_zz_42540;
    
    int64_t jj1_42543 = Ty_42529 * gid_y_42539;
    int64_t jj2_42544 = Tx_42530 * gid_x_42538;
    float mem_44478[30];
    int64_t ltid_y_42547 = sext_i32_i64(ltid_pre_45730);
    int64_t ltid_x_42545 = sext_i32_i64(ltid_pre_45731);
    int32_t ltid_flat_42546 = local_tid_45723;
    float mem_44472[30];
    
    for (int32_t i_44270 = 0; i_44270 < 30; i_44270++) {
        int64_t i_42555 = sext_i32_i64(i_44270);
        
        mem_44472[i_42555] = 0.0F;
    }
    for (int64_t i_45734 = 0; i_45734 < (int64_t) 30; i_45734++) {
        mem_44478[i_45734] = mem_44472[i_45734];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44480;
    
    mem_44480 = (__local char *) mem_44480_backing_0;
    
    float loop_mem_44510[30];
    float mem_param_44481[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_44481[i_1] = mem_44478[i_1];
    for (int32_t i_44272 = 0; i_44272 < n_28481; i_44272++) {
        int64_t i_42560 = sext_i32_i64(i_44272);
        
        for (int64_t i_42563 = 0; i_42563 < count_shmem_42537; i_42563++) {
            int64_t offs_42576 = group_sizze_tile3d_42536 * i_42563;
            int64_t ltid_42566 = sext_i32_i64(ltid_pre_45732);
            int32_t ltid_flat_42565 = local_tid_45723;
            int64_t loc_ind_42577 = ltid_42566 + offs_42576;
            int64_t gtid_42578 = ii_42542 + loc_ind_42577;
            bool cond_42579 = slt64(gtid_42578, m_28478);
            float y_elem_42580;
            
            if (cond_42579) {
                float Y_elem_42582 = ((__global float *) mem_44468)[i_42560 *
                                                                    m_28478 +
                                                                    gtid_42578];
                
                y_elem_42580 = Y_elem_42582;
            } else {
                y_elem_42580 = 0.0F;
            }
            
            bool cond_42584 = slt64(loc_ind_42577, (int64_t) 30);
            int64_t y_loc_ind_42585;
            
            if (cond_42584) {
                y_loc_ind_42585 = loc_ind_42577;
            } else {
                y_loc_ind_42585 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_42585) && slt64(y_loc_ind_42585,
                                                             (int64_t) 30)) {
                ((__local float *) mem_44480)[y_loc_ind_42585] = y_elem_42580;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_44509[30];
        int64_t ltid_y_42591 = sext_i32_i64(ltid_pre_45730);
        int64_t ltid_x_42589 = sext_i32_i64(ltid_pre_45731);
        int32_t ltid_flat_42590 = local_tid_45723;
        int64_t gtid_42618 = jj1_42543 + ltid_y_42591;
        int64_t gtid_42619 = jj2_42544 + ltid_x_42589;
        bool binop_x_42621 = slt64(gtid_42618, i32_res_28493);
        bool binop_y_42622 = slt64(gtid_42619, i32_res_28493);
        bool cond_42623 = binop_x_42621 && binop_y_42622;
        float mem_45450[30];
        
        if (cond_42623) {
            float x_42626 = ((__global float *) mem_44393)[i_42560 *
                                                           i32_res_28493 +
                                                           gtid_42618];
            float x_42628 = ((__global float *) mem_44397)[i_42560 *
                                                           i32_res_28493 +
                                                           gtid_42619];
            
            for (int32_t i_44271 = 0; i_44271 < 30; i_44271++) {
                int64_t i_42630 = sext_i32_i64(i_44271);
                int64_t gtid_42632 = ii_42542 + i_42630;
                bool cond_42633 = slt64(gtid_42632, m_28478);
                
                if (cond_42633) {
                    float inp_reg_var2zz_42635 = ((__local
                                                   float *) mem_44480)[i_42630];
                    float res_reg_var2zz_42636 = mem_param_44481[i_42630];
                    float x_42640 = x_42626 * x_42628;
                    bool isnan_res_42641;
                    
                    isnan_res_42641 = futrts_isnan32(inp_reg_var2zz_42635);
                    
                    float y_42642;
                    
                    if (isnan_res_42641) {
                        y_42642 = 0.0F;
                    } else {
                        y_42642 = 1.0F;
                    }
                    
                    float defunc_2_f_res_42643 = x_42640 * y_42642;
                    float defunc_1_op_res_42647 = res_reg_var2zz_42636 +
                          defunc_2_f_res_42643;
                    
                    mem_param_44481[i_42630] = defunc_1_op_res_42647;
                }
            }
            for (int64_t i_45740 = 0; i_45740 < (int64_t) 30; i_45740++) {
                mem_45450[i_45740] = mem_param_44481[i_45740];
            }
        } else {
            for (int64_t i_45741 = 0; i_45741 < (int64_t) 30; i_45741++) {
                mem_45450[i_45741] = mem_param_44481[i_45741];
            }
        }
        for (int64_t i_45742 = 0; i_45742 < (int64_t) 30; i_45742++) {
            mem_44509[i_45742] = mem_45450[i_45742];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45735[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_45735[i_2] = mem_44509[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_44481[i_3] = mem_param_tmp_45735[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_44510[i_4] = mem_param_44481[i_4];
    
    float mem_44524[30 * 1 * 1];
    int64_t ltid_zz_42656 = sext_i32_i64(ltid_pre_45727);
    int64_t ltid_y_42655 = sext_i32_i64(ltid_pre_45728);
    int64_t ltid_x_42653 = sext_i32_i64(ltid_pre_45729);
    int32_t ltid_flat_42654 = local_tid_45723;
    float mem_44518[30 * 1 * 1];
    
    for (int32_t i_44274 = 0; i_44274 < 30; i_44274++) {
        int64_t i_42665 = sext_i32_i64(i_44274);
        
        for (int64_t i_45744 = 0; i_45744 < (int64_t) 1; i_45744++) {
            mem_44518[i_42665 + i_45744] = loop_mem_44510[i_42665 + i_45744];
        }
    }
    for (int64_t i_45745 = 0; i_45745 < (int64_t) 30; i_45745++) {
        for (int64_t i_45746 = 0; i_45746 < (int64_t) 1; i_45746++) {
            for (int64_t i_45747 = 0; i_45747 < (int64_t) 1; i_45747++) {
                mem_44524[i_45745 + i_45746 + i_45747] = mem_44518[i_45745 +
                                                                   i_45746 +
                                                                   i_45747];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_45748 = squot64(sext_i32_i64(local_tid_45723), Ty_42529 *
                                       Tx_42530);
    int64_t reg_tile_i_45749 = squot64(sext_i32_i64(local_tid_45723) -
                                       squot64(sext_i32_i64(local_tid_45723),
                                               Ty_42529 * Tx_42530) *
                                       (Ty_42529 * Tx_42530), Tx_42530);
    int64_t reg_tile_i_45750 = sext_i32_i64(local_tid_45723) -
            squot64(sext_i32_i64(local_tid_45723), Ty_42529 * Tx_42530) *
            (Ty_42529 * Tx_42530) - squot64(sext_i32_i64(local_tid_45723) -
                                            squot64(sext_i32_i64(local_tid_45723),
                                                    Ty_42529 * Tx_42530) *
                                            (Ty_42529 * Tx_42530), Tx_42530) *
            Tx_42530;
    int64_t tile_dim_start_45751 = (int64_t) 30 * (gid_zz_42540 +
                                                   reg_tile_i_45748);
    int64_t tile_dim_start_45752 = Ty_42529 * gid_y_42539 + reg_tile_i_45749;
    int64_t tile_dim_start_45753 = Tx_42530 * gid_x_42538 + reg_tile_i_45750;
    
    for (int64_t nest_i_45754 = 0; nest_i_45754 < (int64_t) 30;
         nest_i_45754++) {
        for (int64_t nest_i_45755 = 0; nest_i_45755 < (int64_t) 1;
             nest_i_45755++) {
            for (int64_t nest_i_45756 = 0; nest_i_45756 < (int64_t) 1;
                 nest_i_45756++) {
                if ((slt64(tile_dim_start_45751 + nest_i_45754, m_28478) &&
                     slt64(tile_dim_start_45752 + nest_i_45755,
                           i32_res_28493)) && slt64(tile_dim_start_45753 +
                                                    nest_i_45756,
                                                    i32_res_28493)) {
                    ((__global float *) mem_44528)[(tile_dim_start_45751 +
                                                    nest_i_45754) *
                                                   (i32_res_28493 *
                                                    i32_res_28493) +
                                                   (tile_dim_start_45752 +
                                                    nest_i_45755) *
                                                   i32_res_28493 +
                                                   (tile_dim_start_45753 +
                                                    nest_i_45756)] =
                        mem_44524[nest_i_45754 + nest_i_45755 + nest_i_45756];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_42694(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44668_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44666_backing_aligned_1,
                                                     int64_t N_28477,
                                                     int64_t m_28478,
                                                     int64_t i32_res_28487,
                                                     int64_t i32_res_28493,
                                                     int64_t gridDim_x_42688,
                                                     int64_t full_tiles_42719,
                                                     int64_t kk_42926, __global
                                                     unsigned char *images_mem_44381,
                                                     __global
                                                     unsigned char *mem_44393,
                                                     __global
                                                     unsigned char *mem_44840)
{
    #define Ty_42675 (mainMagnitudeziTy_42672)
    #define Ry_42676 (mainMagnitudeziRy_42674)
    #define Tx_42677 (mainMagnitudeziTx_42671)
    #define Rx_42678 (mainMagnitudeziRx_42673)
    #define Tk_42679 (mainMagnitudeziTk_42670)
    #define tk_div_tx_42680 (sdiv_up64(mainMagnitudeziTk_42670, mainMagnitudeziTx_42671))
    #define tk_div_ty_42681 (sdiv_up64(mainMagnitudeziTk_42670, mainMagnitudeziTy_42672))
    #define TxRx_42682 (mainMagnitudeziTx_42671 * mainMagnitudeziRx_42673)
    #define TyRy_42683 (mainMagnitudeziTy_42672 * mainMagnitudeziRy_42674)
    #define a_loc_szz_42685 (mainMagnitudeziTk_42670 * (mainMagnitudeziTy_42672 * mainMagnitudeziRy_42674))
    #define b_loc_szz_42687 (mainMagnitudeziRx_42673 * (mainMagnitudeziTx_42671 * mainMagnitudeziTk_42670))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44668_backing_1 = (__local volatile
                                                           char *) mem_44668_backing_aligned_0;
    __local volatile char *restrict mem_44666_backing_0 = (__local volatile
                                                           char *) mem_44666_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45897;
    int32_t local_tid_45898;
    int64_t group_sizze_45901;
    int32_t wave_sizze_45900;
    int32_t group_tid_45899;
    
    global_tid_45897 = get_global_id(0);
    local_tid_45898 = get_local_id(0);
    group_sizze_45901 = get_local_size(0);
    wave_sizze_45900 = LOCKSTEP_WIDTH;
    group_tid_45899 = get_group_id(0);
    
    int32_t gid_flat_42694;
    
    gid_flat_42694 = group_tid_45899;
    
    int32_t ltid_pre_45902;
    
    ltid_pre_45902 = squot32(local_tid_45898, sext_i64_i32(Tx_42677));
    
    int32_t ltid_pre_45903;
    
    ltid_pre_45903 = local_tid_45898 - squot32(local_tid_45898,
                                               sext_i64_i32(Tx_42677)) *
        sext_i64_i32(Tx_42677);
    
    int64_t gid_y_42693;
    
    gid_y_42693 = squot64(sext_i32_i64(group_tid_45899), gridDim_x_42688);
    
    int64_t gid_x_42692;
    
    gid_x_42692 = sext_i32_i64(group_tid_45899) -
        squot64(sext_i32_i64(group_tid_45899), gridDim_x_42688) *
        gridDim_x_42688;
    
    int64_t iii_42695;
    
    iii_42695 = TyRy_42683 * gid_y_42693;
    
    int64_t jjj_42696 = TxRx_42682 * gid_x_42692;
    float mem_44664[Ry_42676 * Rx_42678];
    int64_t ltid_y_42699 = sext_i32_i64(ltid_pre_45902);
    int64_t ltid_x_42697 = sext_i32_i64(ltid_pre_45903);
    int32_t ltid_flat_42698 = local_tid_45898;
    float mem_44655[Ry_42676 * Rx_42678];
    
    for (int64_t i_42710 = 0; i_42710 < Ry_42676; i_42710++) {
        for (int64_t i_42713 = 0; i_42713 < Rx_42678; i_42713++) {
            mem_44655[i_42710 * Rx_42678 + i_42713] = 0.0F;
        }
    }
    for (int64_t i_45906 = 0; i_45906 < Ry_42676; i_45906++) {
        for (int64_t i_45907 = 0; i_45907 < Rx_42678; i_45907++) {
            mem_44664[i_45906 * Rx_42678 + i_45907] = mem_44655[i_45906 *
                                                                Rx_42678 +
                                                                i_45907];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44666;
    
    mem_44666 = (__local char *) mem_44666_backing_0;
    
    __local char *mem_44668;
    
    mem_44668 = (__local char *) mem_44668_backing_1;
    
    float mem_44739[Ry_42676];
    float mem_44743[Rx_42678];
    float loop_mem_44755[Ry_42676 * Rx_42678];
    float mem_param_44669[Ry_42676 * Rx_42678];
    
    for (int32_t i_2 = 0; i_2 < Ry_42676 * Rx_42678; i_2++)
        mem_param_44669[i_2] = mem_44664[i_2];
    for (int64_t i_42720 = 0; i_42720 < full_tiles_42719; i_42720++) {
        int64_t kk_42724 = Tk_42679 * i_42720;
        
        for (int64_t i_42725 = 0; i_42725 < Ry_42676; i_42725++) {
            int64_t binop_y_42748 = Ty_42675 * i_42725;
            
            for (int64_t i_42727 = 0; i_42727 < tk_div_tx_42680; i_42727++) {
                int64_t binop_y_42746 = Tx_42677 * i_42727;
                int64_t ltid_x_42729 = sext_i32_i64(ltid_pre_45902);
                int64_t ltid_y_42730 = sext_i32_i64(ltid_pre_45903);
                int32_t ltid_flat_42731 = local_tid_45898;
                int64_t k_42747 = ltid_y_42730 + binop_y_42746;
                int64_t i_42749 = ltid_x_42729 + binop_y_42748;
                int64_t gtid_42750 = iii_42695 + i_42749;
                int64_t A_col_idx_42751 = kk_42724 + k_42747;
                bool cond_42752 = slt64(gtid_42750, m_28478);
                float A_elem_42753;
                
                if (cond_42752) {
                    float A_elem_42755 = ((__global
                                           float *) images_mem_44381)[gtid_42750 *
                                                                      N_28477 +
                                                                      A_col_idx_42751];
                    
                    A_elem_42753 = A_elem_42755;
                } else {
                    A_elem_42753 = 0.0F;
                }
                
                bool cond_42757 = slt64(k_42747, Tk_42679);
                int64_t a_loc_ind_42758;
                
                if (cond_42757) {
                    int64_t binop_y_42759 = Tk_42679 * i_42749;
                    int64_t loc_fi_42760 = k_42747 + binop_y_42759;
                    
                    a_loc_ind_42758 = loc_fi_42760;
                } else {
                    a_loc_ind_42758 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_42758) &&
                    slt64(a_loc_ind_42758, a_loc_szz_42685)) {
                    ((__local float *) mem_44666)[a_loc_ind_42758] =
                        A_elem_42753;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42765 = 0; i_42765 < tk_div_ty_42681; i_42765++) {
            int64_t binop_y_42786 = Ty_42675 * i_42765;
            
            for (int64_t i_42767 = 0; i_42767 < Rx_42678; i_42767++) {
                int64_t binop_y_42788 = Tx_42677 * i_42767;
                int64_t ltid_x_42769 = sext_i32_i64(ltid_pre_45902);
                int64_t ltid_y_42770 = sext_i32_i64(ltid_pre_45903);
                int32_t ltid_flat_42771 = local_tid_45898;
                int64_t k_42787 = ltid_x_42769 + binop_y_42786;
                int64_t j_42789 = ltid_y_42770 + binop_y_42788;
                int64_t gtid_42790 = jjj_42696 + j_42789;
                int64_t B_row_idx_42791 = kk_42724 + k_42787;
                bool cond_42792 = slt64(gtid_42790, i32_res_28493);
                float B_elem_42793;
                
                if (cond_42792) {
                    float B_elem_42795 = ((__global
                                           float *) mem_44393)[B_row_idx_42791 *
                                                               i32_res_28493 +
                                                               gtid_42790];
                    
                    B_elem_42793 = B_elem_42795;
                } else {
                    B_elem_42793 = 0.0F;
                }
                
                bool cond_42797 = slt64(k_42787, Tk_42679);
                int64_t b_loc_ind_42798;
                
                if (cond_42797) {
                    int64_t binop_y_42799 = TxRx_42682 * k_42787;
                    int64_t loc_fi_42800 = j_42789 + binop_y_42799;
                    
                    b_loc_ind_42798 = loc_fi_42800;
                } else {
                    b_loc_ind_42798 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_42798) &&
                    slt64(b_loc_ind_42798, b_loc_szz_42687)) {
                    ((__local float *) mem_44668)[b_loc_ind_42798] =
                        B_elem_42793;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44754[Ry_42676 * Rx_42678];
        float mem_param_44726[Ry_42676 * Rx_42678];
        
        for (int32_t i_3 = 0; i_3 < Ry_42676 * Rx_42678; i_3++)
            mem_param_44726[i_3] = mem_param_44669[i_3];
        for (int64_t i_42805 = 0; i_42805 < Tk_42679; i_42805++) {
            int64_t binop_y_42844 = TxRx_42682 * i_42805;
            int64_t ltid_y_42809 = sext_i32_i64(ltid_pre_45902);
            int64_t ltid_x_42807 = sext_i32_i64(ltid_pre_45903);
            int32_t ltid_flat_42808 = local_tid_45898;
            float mem_44729[Ry_42676];
            float mem_44731[Rx_42678];
            int64_t binop_x_42835 = Ry_42676 * ltid_y_42809;
            
            for (int64_t i_42833 = 0; i_42833 < Ry_42676; i_42833++) {
                int64_t binop_x_42836 = i_42833 + binop_x_42835;
                int64_t binop_y_42837 = Tk_42679 * binop_x_42836;
                int64_t a_loc_ind_42838 = i_42805 + binop_y_42837;
                
                for (int64_t i_45919 = 0; i_45919 < (int64_t) 1; i_45919++) {
                    mem_44729[i_42833 + i_45919] = ((__local
                                                     float *) mem_44666)[a_loc_ind_42838 +
                                                                         i_45919];
                }
            }
            
            int64_t binop_y_42846 = Rx_42678 * ltid_x_42807;
            
            for (int64_t i_42842 = 0; i_42842 < Rx_42678; i_42842++) {
                int64_t binop_x_42845 = i_42842 + binop_y_42844;
                int64_t b_loc_ind_42847 = binop_x_42845 + binop_y_42846;
                
                for (int64_t i_45921 = 0; i_45921 < (int64_t) 1; i_45921++) {
                    mem_44731[i_42842 + i_45921] = ((__local
                                                     float *) mem_44668)[b_loc_ind_42847 +
                                                                         i_45921];
                }
            }
            for (int64_t i_45922 = 0; i_45922 < Ry_42676; i_45922++) {
                mem_44739[i_45922] = mem_44729[i_45922];
            }
            for (int64_t i_45923 = 0; i_45923 < Rx_42678; i_45923++) {
                mem_44743[i_45923] = mem_44731[i_45923];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44753[Ry_42676 * Rx_42678];
            int64_t ltid_y_42854 = sext_i32_i64(ltid_pre_45902);
            int64_t ltid_x_42852 = sext_i32_i64(ltid_pre_45903);
            int32_t ltid_flat_42853 = local_tid_45898;
            int64_t binop_y_42897 = Ry_42676 * ltid_y_42854;
            int64_t binop_y_42901 = Rx_42678 * ltid_x_42852;
            
            for (int64_t i_42891 = 0; i_42891 < Ry_42676; i_42891++) {
                int64_t binop_x_42896 = iii_42695 + i_42891;
                int64_t cmpop_x_42898 = binop_x_42896 + binop_y_42897;
                bool binop_x_42899 = slt64(cmpop_x_42898, m_28478);
                
                for (int64_t i_42894 = 0; i_42894 < Rx_42678; i_42894++) {
                    int64_t binop_x_42900 = jjj_42696 + i_42894;
                    int64_t cmpop_x_42902 = binop_x_42900 + binop_y_42901;
                    bool binop_y_42903 = slt64(cmpop_x_42902, i32_res_28493);
                    bool cond_42904 = binop_x_42899 && binop_y_42903;
                    
                    if (cond_42904) {
                        float a_42906 = mem_44739[i_42891];
                        float c_42908 = mem_param_44726[i_42891 * Rx_42678 +
                                                        i_42894];
                        bool isnan_res_42911;
                        
                        isnan_res_42911 = futrts_isnan32(a_42906);
                        
                        float defunc_1_f_res_42912;
                        
                        if (isnan_res_42911) {
                            defunc_1_f_res_42912 = 0.0F;
                        } else {
                            float b_42907 = mem_44743[i_42894];
                            float defunc_1_f_res_f_res_42913 = a_42906 *
                                  b_42907;
                            
                            defunc_1_f_res_42912 = defunc_1_f_res_f_res_42913;
                        }
                        
                        float defunc_1_op_res_42917 = c_42908 +
                              defunc_1_f_res_42912;
                        
                        mem_param_44726[i_42891 * Rx_42678 + i_42894] =
                            defunc_1_op_res_42917;
                    }
                }
            }
            for (int64_t i_45926 = 0; i_45926 < Ry_42676; i_45926++) {
                for (int64_t i_45927 = 0; i_45927 < Rx_42678; i_45927++) {
                    mem_44753[i_45926 * Rx_42678 + i_45927] =
                        mem_param_44726[i_45926 * Rx_42678 + i_45927];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45916[Ry_42676 * Rx_42678];
            
            for (int32_t i_4 = 0; i_4 < Ry_42676 * Rx_42678; i_4++)
                mem_param_tmp_45916[i_4] = mem_44753[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42676 * Rx_42678; i_5++)
                mem_param_44726[i_5] = mem_param_tmp_45916[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42676 * Rx_42678; i_6++)
            loop_mem_44754[i_6] = mem_param_44726[i_6];
        
        float mem_param_tmp_45908[Ry_42676 * Rx_42678];
        
        for (int32_t i_7 = 0; i_7 < Ry_42676 * Rx_42678; i_7++)
            mem_param_tmp_45908[i_7] = loop_mem_44754[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42676 * Rx_42678; i_8++)
            mem_param_44669[i_8] = mem_param_tmp_45908[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42676 * Rx_42678; i_9++)
        loop_mem_44755[i_9] = mem_param_44669[i_9];
    for (int64_t i_42927 = 0; i_42927 < Ry_42676; i_42927++) {
        int64_t binop_y_42952 = Ty_42675 * i_42927;
        
        for (int64_t i_42929 = 0; i_42929 < tk_div_tx_42680; i_42929++) {
            int64_t binop_y_42950 = Tx_42677 * i_42929;
            int64_t ltid_x_42931 = sext_i32_i64(ltid_pre_45902);
            int64_t ltid_y_42932 = sext_i32_i64(ltid_pre_45903);
            int32_t ltid_flat_42933 = local_tid_45898;
            int64_t k_42951 = ltid_y_42932 + binop_y_42950;
            int64_t i_42953 = ltid_x_42931 + binop_y_42952;
            int64_t gtid_42954 = iii_42695 + i_42953;
            int64_t A_col_idx_42955 = kk_42926 + k_42951;
            bool binop_x_42956 = slt64(gtid_42954, m_28478);
            bool binop_y_42957 = slt64(A_col_idx_42955, i32_res_28487);
            bool cond_42958 = binop_x_42956 && binop_y_42957;
            float A_elem_42959;
            
            if (cond_42958) {
                float A_elem_42961 = ((__global
                                       float *) images_mem_44381)[gtid_42954 *
                                                                  N_28477 +
                                                                  A_col_idx_42955];
                
                A_elem_42959 = A_elem_42961;
            } else {
                A_elem_42959 = 0.0F;
            }
            
            bool cond_42963 = slt64(k_42951, Tk_42679);
            int64_t a_loc_ind_42964;
            
            if (cond_42963) {
                int64_t binop_y_42965 = Tk_42679 * i_42953;
                int64_t loc_fi_42966 = k_42951 + binop_y_42965;
                
                a_loc_ind_42964 = loc_fi_42966;
            } else {
                a_loc_ind_42964 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_42964) && slt64(a_loc_ind_42964,
                                                             a_loc_szz_42685)) {
                ((__local float *) mem_44666)[a_loc_ind_42964] = A_elem_42959;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42971 = 0; i_42971 < tk_div_ty_42681; i_42971++) {
        int64_t binop_y_42994 = Ty_42675 * i_42971;
        
        for (int64_t i_42973 = 0; i_42973 < Rx_42678; i_42973++) {
            int64_t binop_y_42996 = Tx_42677 * i_42973;
            int64_t ltid_x_42975 = sext_i32_i64(ltid_pre_45902);
            int64_t ltid_y_42976 = sext_i32_i64(ltid_pre_45903);
            int32_t ltid_flat_42977 = local_tid_45898;
            int64_t k_42995 = ltid_x_42975 + binop_y_42994;
            int64_t j_42997 = ltid_y_42976 + binop_y_42996;
            int64_t gtid_42998 = jjj_42696 + j_42997;
            int64_t B_row_idx_42999 = kk_42926 + k_42995;
            bool binop_x_43000 = slt64(gtid_42998, i32_res_28493);
            bool binop_y_43001 = slt64(B_row_idx_42999, i32_res_28487);
            bool cond_43002 = binop_x_43000 && binop_y_43001;
            float B_elem_43003;
            
            if (cond_43002) {
                float B_elem_43005 = ((__global
                                       float *) mem_44393)[B_row_idx_42999 *
                                                           i32_res_28493 +
                                                           gtid_42998];
                
                B_elem_43003 = B_elem_43005;
            } else {
                B_elem_43003 = 0.0F;
            }
            
            bool cond_43007 = slt64(k_42995, Tk_42679);
            int64_t b_loc_ind_43008;
            
            if (cond_43007) {
                int64_t binop_y_43009 = TxRx_42682 * k_42995;
                int64_t loc_fi_43010 = j_42997 + binop_y_43009;
                
                b_loc_ind_43008 = loc_fi_43010;
            } else {
                b_loc_ind_43008 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_43008) && slt64(b_loc_ind_43008,
                                                             b_loc_szz_42687)) {
                ((__local float *) mem_44668)[b_loc_ind_43008] = B_elem_43003;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44821[Ry_42676];
    float mem_44825[Rx_42678];
    float mem_44835[Ry_42676 * Rx_42678];
    float loop_mem_44837[Ry_42676 * Rx_42678];
    float mem_param_44808[Ry_42676 * Rx_42678];
    
    for (int32_t i_10 = 0; i_10 < Ry_42676 * Rx_42678; i_10++)
        mem_param_44808[i_10] = loop_mem_44755[i_10];
    for (int64_t i_43015 = 0; i_43015 < Tk_42679; i_43015++) {
        int64_t cmpop_x_43017 = kk_42926 + i_43015;
        bool cond_43018 = slt64(cmpop_x_43017, i32_res_28487);
        float mem_45468[Ry_42676 * Rx_42678];
        
        if (cond_43018) {
            int64_t binop_y_43056 = TxRx_42682 * i_43015;
            int64_t bytes_44810 = (int64_t) 4 * Ry_42676;
            int64_t bytes_44812 = (int64_t) 4 * Rx_42678;
            int64_t ltid_y_43021 = sext_i32_i64(ltid_pre_45902);
            int64_t ltid_x_43019 = sext_i32_i64(ltid_pre_45903);
            int32_t ltid_flat_43020 = local_tid_45898;
            float mem_44811[Ry_42676];
            float mem_44813[Rx_42678];
            int64_t binop_x_43047 = Ry_42676 * ltid_y_43021;
            
            for (int64_t i_43045 = 0; i_43045 < Ry_42676; i_43045++) {
                int64_t binop_x_43048 = i_43045 + binop_x_43047;
                int64_t binop_y_43049 = Tk_42679 * binop_x_43048;
                int64_t a_loc_ind_43050 = i_43015 + binop_y_43049;
                
                for (int64_t i_45935 = 0; i_45935 < (int64_t) 1; i_45935++) {
                    mem_44811[i_43045 + i_45935] = ((__local
                                                     float *) mem_44666)[a_loc_ind_43050 +
                                                                         i_45935];
                }
            }
            
            int64_t binop_y_43058 = Rx_42678 * ltid_x_43019;
            
            for (int64_t i_43054 = 0; i_43054 < Rx_42678; i_43054++) {
                int64_t binop_x_43057 = i_43054 + binop_y_43056;
                int64_t b_loc_ind_43059 = binop_x_43057 + binop_y_43058;
                
                for (int64_t i_45937 = 0; i_45937 < (int64_t) 1; i_45937++) {
                    mem_44813[i_43054 + i_45937] = ((__local
                                                     float *) mem_44668)[b_loc_ind_43059 +
                                                                         i_45937];
                }
            }
            for (int64_t i_45938 = 0; i_45938 < Ry_42676; i_45938++) {
                mem_44821[i_45938] = mem_44811[i_45938];
            }
            for (int64_t i_45939 = 0; i_45939 < Rx_42678; i_45939++) {
                mem_44825[i_45939] = mem_44813[i_45939];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_43066 = sext_i32_i64(ltid_pre_45902);
            int64_t ltid_x_43064 = sext_i32_i64(ltid_pre_45903);
            int32_t ltid_flat_43065 = local_tid_45898;
            int64_t binop_y_43109 = Ry_42676 * ltid_y_43066;
            int64_t binop_y_43113 = Rx_42678 * ltid_x_43064;
            
            for (int64_t i_43103 = 0; i_43103 < Ry_42676; i_43103++) {
                int64_t binop_x_43108 = iii_42695 + i_43103;
                int64_t cmpop_x_43110 = binop_x_43108 + binop_y_43109;
                bool binop_x_43111 = slt64(cmpop_x_43110, m_28478);
                
                for (int64_t i_43106 = 0; i_43106 < Rx_42678; i_43106++) {
                    int64_t binop_x_43112 = jjj_42696 + i_43106;
                    int64_t cmpop_x_43114 = binop_x_43112 + binop_y_43113;
                    bool binop_y_43115 = slt64(cmpop_x_43114, i32_res_28493);
                    bool cond_43116 = binop_x_43111 && binop_y_43115;
                    
                    if (cond_43116) {
                        float a_43118 = mem_44821[i_43103];
                        float c_43120 = mem_param_44808[i_43103 * Rx_42678 +
                                                        i_43106];
                        bool isnan_res_43123;
                        
                        isnan_res_43123 = futrts_isnan32(a_43118);
                        
                        float defunc_1_f_res_43124;
                        
                        if (isnan_res_43123) {
                            defunc_1_f_res_43124 = 0.0F;
                        } else {
                            float b_43119 = mem_44825[i_43106];
                            float defunc_1_f_res_f_res_43125 = a_43118 *
                                  b_43119;
                            
                            defunc_1_f_res_43124 = defunc_1_f_res_f_res_43125;
                        }
                        
                        float defunc_1_op_res_43129 = c_43120 +
                              defunc_1_f_res_43124;
                        
                        mem_param_44808[i_43103 * Rx_42678 + i_43106] =
                            defunc_1_op_res_43129;
                    }
                }
            }
            for (int64_t i_45942 = 0; i_45942 < Ry_42676; i_45942++) {
                for (int64_t i_45943 = 0; i_45943 < Rx_42678; i_45943++) {
                    mem_44835[i_45942 * Rx_42678 + i_45943] =
                        mem_param_44808[i_45942 * Rx_42678 + i_45943];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45944 = 0; i_45944 < Ry_42676; i_45944++) {
                for (int64_t i_45945 = 0; i_45945 < Rx_42678; i_45945++) {
                    mem_45468[i_45944 * Rx_42678 + i_45945] =
                        mem_44835[i_45944 * Rx_42678 + i_45945];
                }
            }
        } else {
            for (int64_t i_45946 = 0; i_45946 < Ry_42676; i_45946++) {
                for (int64_t i_45947 = 0; i_45947 < Rx_42678; i_45947++) {
                    mem_45468[i_45946 * Rx_42678 + i_45947] =
                        mem_param_44808[i_45946 * Rx_42678 + i_45947];
                }
            }
        }
        
        float mem_param_tmp_45932[Ry_42676 * Rx_42678];
        
        for (int32_t i_11 = 0; i_11 < Ry_42676 * Rx_42678; i_11++)
            mem_param_tmp_45932[i_11] = mem_45468[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42676 * Rx_42678; i_12++)
            mem_param_44808[i_12] = mem_param_tmp_45932[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42676 * Rx_42678; i_13++)
        loop_mem_44837[i_13] = mem_param_44808[i_13];
    
    int64_t reg_tile_i_45948 = squot64(sext_i32_i64(local_tid_45898), Tx_42677);
    int64_t reg_tile_i_45949 = sext_i32_i64(local_tid_45898) -
            squot64(sext_i32_i64(local_tid_45898), Tx_42677) * Tx_42677;
    int64_t tile_dim_start_45950 = Ry_42676 * (Ty_42675 * gid_y_42693 +
                                               reg_tile_i_45948);
    int64_t tile_dim_start_45951 = Rx_42678 * (Tx_42677 * gid_x_42692 +
                                               reg_tile_i_45949);
    
    for (int64_t nest_i_45952 = 0; nest_i_45952 < Ry_42676; nest_i_45952++) {
        for (int64_t nest_i_45953 = 0; nest_i_45953 < Rx_42678;
             nest_i_45953++) {
            if (slt64(tile_dim_start_45950 + nest_i_45952, m_28478) &&
                slt64(tile_dim_start_45951 + nest_i_45953, i32_res_28493)) {
                ((__global float *) mem_44840)[(tile_dim_start_45950 +
                                                nest_i_45952) * i32_res_28493 +
                                               (tile_dim_start_45951 +
                                                nest_i_45953)] =
                    loop_mem_44837[nest_i_45952 * Rx_42678 + nest_i_45953];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42675
    #undef Ry_42676
    #undef Tx_42677
    #undef Rx_42678
    #undef Tk_42679
    #undef tk_div_tx_42680
    #undef tk_div_ty_42681
    #undef TxRx_42682
    #undef TyRy_42683
    #undef a_loc_szz_42685
    #undef b_loc_szz_42687
}
__kernel void mainMagnitudezisegmap_intragroup_43143(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44898_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44889_backing_aligned_1,
                                                     int64_t m_28478,
                                                     int64_t i32_res_28493,
                                                     int64_t num_groups_y_43141,
                                                     int64_t num_whole_tiles_43159,
                                                     int64_t residual_input_43286,
                                                     unsigned char cond_43287,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_44850,
                                                     __global
                                                     unsigned char *mem_44879,
                                                     __global
                                                     unsigned char *mem_44906)
{
    #define tile_sizze_43138 (mainMagnitudezitile_sizze_43137)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44898_backing_5 = (__local volatile
                                                           char *) mem_44898_backing_aligned_0;
    __local volatile char *restrict mem_44889_backing_0 = (__local volatile
                                                           char *) mem_44889_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46029;
    int32_t local_tid_46030;
    int64_t group_sizze_46033;
    int32_t wave_sizze_46032;
    int32_t group_tid_46031;
    
    global_tid_46029 = get_global_id(0);
    local_tid_46030 = get_local_id(0);
    group_sizze_46033 = get_local_size(0);
    wave_sizze_46032 = LOCKSTEP_WIDTH;
    group_tid_46031 = get_group_id(0);
    
    int32_t gid_flat_43143;
    
    gid_flat_43143 = group_tid_46031;
    
    int32_t ltid_pre_46034;
    
    ltid_pre_46034 = squot32(local_tid_46030, sext_i64_i32(tile_sizze_43138));
    
    int32_t ltid_pre_46035;
    
    ltid_pre_46035 = local_tid_46030 - squot32(local_tid_46030,
                                               sext_i64_i32(tile_sizze_43138)) *
        sext_i64_i32(tile_sizze_43138);
    
    int64_t gid_x_43135;
    
    gid_x_43135 = squot64(sext_i32_i64(group_tid_46031), num_groups_y_43141);
    
    int64_t gid_y_43136;
    
    gid_y_43136 = sext_i32_i64(group_tid_46031) -
        squot64(sext_i32_i64(group_tid_46031), num_groups_y_43141) *
        num_groups_y_43141;
    
    float mem_44884[1];
    int64_t ltid_y_43162 = sext_i32_i64(ltid_pre_46034);
    int64_t ltid_x_43160 = sext_i32_i64(ltid_pre_46035);
    int32_t ltid_flat_43161 = local_tid_46030;
    
    if (slt64(ltid_y_43162, tile_sizze_43138) && slt64(ltid_x_43160,
                                                       tile_sizze_43138)) {
        mem_44884[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_43245 = gid_x_43135 * tile_sizze_43138;
    int64_t binop_x_43260 = gid_y_43136 * tile_sizze_43138;
    __local char *mem_44889;
    
    mem_44889 = (__local char *) mem_44889_backing_0;
    
    float accs_mem_44894[1];
    float mem_param_44885[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44885[i_1] = mem_44884[i_1];
    for (int64_t tile_id_43171 = 0; tile_id_43171 < num_whole_tiles_43159;
         tile_id_43171++) {
        int64_t binop_x_43243 = tile_sizze_43138 * tile_id_43171;
        int64_t ltid_y_43174 = sext_i32_i64(ltid_pre_46034);
        int64_t ltid_x_43172 = sext_i32_i64(ltid_pre_46035);
        int32_t ltid_flat_43173 = local_tid_46030;
        int64_t j_43244 = ltid_x_43172 + binop_x_43243;
        int64_t gtid_43246 = ltid_y_43174 + binop_x_43245;
        bool binop_x_43251 = slt64(j_43244, i32_res_28493);
        bool binop_y_43252 = slt64(gtid_43246, m_28478);
        bool cond_43253 = binop_x_43251 && binop_y_43252;
        float pre_43254;
        
        if (cond_43253) {
            float x_43255 = ((__global
                              float *) defunc_3_map_res_mem_44850)[gtid_43246 *
                                                                   i32_res_28493 +
                                                                   j_43244];
            
            pre_43254 = x_43255;
        } else {
            pre_43254 = 0.0F;
        }
        ((__local float *) mem_44889)[ltid_y_43174 * tile_sizze_43138 +
                                      ltid_x_43172] = pre_43254;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44893[1];
        int64_t ltid_y_43206 = sext_i32_i64(ltid_pre_46034);
        int64_t ltid_x_43204 = sext_i32_i64(ltid_pre_46035);
        int32_t ltid_flat_43205 = local_tid_46030;
        int64_t gtid_43259 = ltid_y_43206 + binop_x_43245;
        int64_t gtid_43261 = ltid_x_43204 + binop_x_43260;
        float acc_43264 = mem_param_44885[(int64_t) 0];
        bool binop_x_43268 = slt64(gtid_43259, m_28478);
        bool binop_y_43269 = slt64(gtid_43261, i32_res_28493);
        bool cond_43270 = binop_x_43268 && binop_y_43269;
        float acc_43271;
        
        if (cond_43270) {
            float x_43272;
            float redout_44315 = acc_43264;
            
            for (int64_t i_44316 = 0; i_44316 < tile_sizze_43138; i_44316++) {
                float x_43276 = ((__local float *) mem_44889)[ltid_y_43206 *
                                                              tile_sizze_43138 +
                                                              i_44316];
                int64_t slice_44367 = binop_x_43243 + i_44316;
                float x_43277 = ((__global float *) mem_44879)[slice_44367 *
                                                               (i32_res_28493 *
                                                                m_28478) +
                                                               gtid_43259 *
                                                               i32_res_28493 +
                                                               gtid_43261];
                float defunc_1_f_res_43278 = x_43276 * x_43277;
                float defunc_1_op_res_43275 = defunc_1_f_res_43278 +
                      redout_44315;
                float redout_tmp_46038 = defunc_1_op_res_43275;
                
                redout_44315 = redout_tmp_46038;
            }
            x_43272 = redout_44315;
            acc_43271 = x_43272;
        } else {
            acc_43271 = acc_43264;
        }
        mem_44893[(int64_t) 0] = acc_43271;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46036[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46036[i_2] = mem_44893[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44885[i_3] = mem_param_tmp_46036[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44894[i_4] = mem_param_44885[i_4];
    
    __local char *mem_44898;
    
    mem_44898 = (__local char *) mem_44898_backing_5;
    
    float mem_44902[1];
    float mem_45482[1];
    
    if (cond_43287) {
        mem_45482[(int64_t) 0] = accs_mem_44894[(int64_t) 0];
    } else {
        int64_t binop_x_43360 = tile_sizze_43138 * num_whole_tiles_43159;
        int64_t ltid_y_43290 = sext_i32_i64(ltid_pre_46034);
        int64_t ltid_x_43288 = sext_i32_i64(ltid_pre_46035);
        int32_t ltid_flat_43289 = local_tid_46030;
        int64_t j_43361 = ltid_x_43288 + binop_x_43360;
        int64_t gtid_43363 = binop_x_43245 + ltid_y_43290;
        bool binop_x_43368 = slt64(j_43361, i32_res_28493);
        bool binop_y_43369 = slt64(gtid_43363, m_28478);
        bool cond_43370 = binop_x_43368 && binop_y_43369;
        float pre_43371;
        
        if (cond_43370) {
            float x_43372 = ((__global
                              float *) defunc_3_map_res_mem_44850)[gtid_43363 *
                                                                   i32_res_28493 +
                                                                   j_43361];
            
            pre_43371 = x_43372;
        } else {
            pre_43371 = 0.0F;
        }
        ((__local float *) mem_44898)[ltid_y_43290 * tile_sizze_43138 +
                                      ltid_x_43288] = pre_43371;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_43323 = sext_i32_i64(ltid_pre_46034);
        int64_t ltid_x_43321 = sext_i32_i64(ltid_pre_46035);
        int32_t ltid_flat_43322 = local_tid_46030;
        int64_t gtid_43377 = binop_x_43245 + ltid_y_43323;
        int64_t gtid_43379 = binop_x_43260 + ltid_x_43321;
        float acc_43382 = accs_mem_44894[(int64_t) 0];
        bool binop_x_43386 = slt64(gtid_43377, m_28478);
        bool binop_y_43387 = slt64(gtid_43379, i32_res_28493);
        bool cond_43388 = binop_x_43386 && binop_y_43387;
        float acc_43389;
        
        if (cond_43388) {
            float x_43390;
            float redout_44317 = acc_43382;
            
            for (int64_t i_44318 = 0; i_44318 < residual_input_43286;
                 i_44318++) {
                float x_43394 = ((__local float *) mem_44898)[ltid_y_43323 *
                                                              tile_sizze_43138 +
                                                              i_44318];
                int64_t slice_44368 = binop_x_43360 + i_44318;
                float x_43395 = ((__global float *) mem_44879)[slice_44368 *
                                                               (i32_res_28493 *
                                                                m_28478) +
                                                               gtid_43377 *
                                                               i32_res_28493 +
                                                               gtid_43379];
                float defunc_1_f_res_43396 = x_43394 * x_43395;
                float defunc_1_op_res_43393 = defunc_1_f_res_43396 +
                      redout_44317;
                float redout_tmp_46039 = defunc_1_op_res_43393;
                
                redout_44317 = redout_tmp_46039;
            }
            x_43390 = redout_44317;
            acc_43389 = x_43390;
        } else {
            acc_43389 = acc_43382;
        }
        mem_44902[(int64_t) 0] = acc_43389;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45482[(int64_t) 0] = mem_44902[(int64_t) 0];
    }
    
    int64_t thread_out_index_46040 = gid_x_43135 * tile_sizze_43138 +
            sext_i32_i64(ltid_pre_46034);
    int64_t thread_out_index_46041 = gid_y_43136 * tile_sizze_43138 +
            sext_i32_i64(ltid_pre_46035);
    
    if (slt64(thread_out_index_46040, m_28478) && slt64(thread_out_index_46041,
                                                        i32_res_28493)) {
        ((__global float *) mem_44906)[thread_out_index_46040 * i32_res_28493 +
                                       thread_out_index_46041] =
            mem_45482[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_43138
}
__kernel void mainMagnitudezisegmap_intragroup_43435(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44958_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44956_backing_aligned_1,
                                                     int64_t N_28477,
                                                     int64_t m_28478,
                                                     int64_t i32_res_28493,
                                                     int64_t gridDim_x_43429,
                                                     int64_t full_tiles_43460,
                                                     int64_t kk_43663, __global
                                                     unsigned char *defunc_4_map_res_mem_44916,
                                                     __global
                                                     unsigned char *mem_44940,
                                                     __global
                                                     unsigned char *mem_45130)
{
    #define Ty_43416 (mainMagnitudeziTy_43413)
    #define Ry_43417 (mainMagnitudeziRy_43415)
    #define Tx_43418 (mainMagnitudeziTx_43412)
    #define Rx_43419 (mainMagnitudeziRx_43414)
    #define Tk_43420 (mainMagnitudeziTk_43411)
    #define tk_div_tx_43421 (sdiv_up64(mainMagnitudeziTk_43411, mainMagnitudeziTx_43412))
    #define tk_div_ty_43422 (sdiv_up64(mainMagnitudeziTk_43411, mainMagnitudeziTy_43413))
    #define TxRx_43423 (mainMagnitudeziTx_43412 * mainMagnitudeziRx_43414)
    #define TyRy_43424 (mainMagnitudeziTy_43413 * mainMagnitudeziRy_43415)
    #define a_loc_szz_43426 (mainMagnitudeziTk_43411 * (mainMagnitudeziTy_43413 * mainMagnitudeziRy_43415))
    #define b_loc_szz_43428 (mainMagnitudeziRx_43414 * (mainMagnitudeziTx_43412 * mainMagnitudeziTk_43411))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44958_backing_1 = (__local volatile
                                                           char *) mem_44958_backing_aligned_0;
    __local volatile char *restrict mem_44956_backing_0 = (__local volatile
                                                           char *) mem_44956_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46117;
    int32_t local_tid_46118;
    int64_t group_sizze_46121;
    int32_t wave_sizze_46120;
    int32_t group_tid_46119;
    
    global_tid_46117 = get_global_id(0);
    local_tid_46118 = get_local_id(0);
    group_sizze_46121 = get_local_size(0);
    wave_sizze_46120 = LOCKSTEP_WIDTH;
    group_tid_46119 = get_group_id(0);
    
    int32_t gid_flat_43435;
    
    gid_flat_43435 = group_tid_46119;
    
    int32_t ltid_pre_46122;
    
    ltid_pre_46122 = squot32(local_tid_46118, sext_i64_i32(Tx_43418));
    
    int32_t ltid_pre_46123;
    
    ltid_pre_46123 = local_tid_46118 - squot32(local_tid_46118,
                                               sext_i64_i32(Tx_43418)) *
        sext_i64_i32(Tx_43418);
    
    int64_t gid_y_43434;
    
    gid_y_43434 = squot64(sext_i32_i64(group_tid_46119), gridDim_x_43429);
    
    int64_t gid_x_43433;
    
    gid_x_43433 = sext_i32_i64(group_tid_46119) -
        squot64(sext_i32_i64(group_tid_46119), gridDim_x_43429) *
        gridDim_x_43429;
    
    int64_t iii_43436;
    
    iii_43436 = TyRy_43424 * gid_y_43434;
    
    int64_t jjj_43437 = TxRx_43423 * gid_x_43433;
    float mem_44954[Ry_43417 * Rx_43419];
    int64_t ltid_y_43440 = sext_i32_i64(ltid_pre_46122);
    int64_t ltid_x_43438 = sext_i32_i64(ltid_pre_46123);
    int32_t ltid_flat_43439 = local_tid_46118;
    float mem_44945[Ry_43417 * Rx_43419];
    
    for (int64_t i_43451 = 0; i_43451 < Ry_43417; i_43451++) {
        for (int64_t i_43454 = 0; i_43454 < Rx_43419; i_43454++) {
            mem_44945[i_43451 * Rx_43419 + i_43454] = 0.0F;
        }
    }
    for (int64_t i_46126 = 0; i_46126 < Ry_43417; i_46126++) {
        for (int64_t i_46127 = 0; i_46127 < Rx_43419; i_46127++) {
            mem_44954[i_46126 * Rx_43419 + i_46127] = mem_44945[i_46126 *
                                                                Rx_43419 +
                                                                i_46127];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44956;
    
    mem_44956 = (__local char *) mem_44956_backing_0;
    
    __local char *mem_44958;
    
    mem_44958 = (__local char *) mem_44958_backing_1;
    
    float mem_45029[Ry_43417];
    float mem_45033[Rx_43419];
    float loop_mem_45045[Ry_43417 * Rx_43419];
    float mem_param_44959[Ry_43417 * Rx_43419];
    
    for (int32_t i_2 = 0; i_2 < Ry_43417 * Rx_43419; i_2++)
        mem_param_44959[i_2] = mem_44954[i_2];
    for (int64_t i_43461 = 0; i_43461 < full_tiles_43460; i_43461++) {
        int64_t kk_43465 = Tk_43420 * i_43461;
        
        for (int64_t i_43466 = 0; i_43466 < Ry_43417; i_43466++) {
            int64_t binop_y_43489 = Ty_43416 * i_43466;
            
            for (int64_t i_43468 = 0; i_43468 < tk_div_tx_43421; i_43468++) {
                int64_t binop_y_43487 = Tx_43418 * i_43468;
                int64_t ltid_x_43470 = sext_i32_i64(ltid_pre_46122);
                int64_t ltid_y_43471 = sext_i32_i64(ltid_pre_46123);
                int32_t ltid_flat_43472 = local_tid_46118;
                int64_t k_43488 = ltid_y_43471 + binop_y_43487;
                int64_t i_43490 = ltid_x_43470 + binop_y_43489;
                int64_t gtid_43491 = iii_43436 + i_43490;
                int64_t A_col_idx_43492 = kk_43465 + k_43488;
                bool cond_43493 = slt64(gtid_43491, m_28478);
                float A_elem_43494;
                
                if (cond_43493) {
                    float A_elem_43496 = ((__global
                                           float *) defunc_4_map_res_mem_44916)[gtid_43491 *
                                                                                i32_res_28493 +
                                                                                A_col_idx_43492];
                    
                    A_elem_43494 = A_elem_43496;
                } else {
                    A_elem_43494 = 0.0F;
                }
                
                bool cond_43498 = slt64(k_43488, Tk_43420);
                int64_t a_loc_ind_43499;
                
                if (cond_43498) {
                    int64_t binop_y_43500 = Tk_43420 * i_43490;
                    int64_t loc_fi_43501 = k_43488 + binop_y_43500;
                    
                    a_loc_ind_43499 = loc_fi_43501;
                } else {
                    a_loc_ind_43499 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_43499) &&
                    slt64(a_loc_ind_43499, a_loc_szz_43426)) {
                    ((__local float *) mem_44956)[a_loc_ind_43499] =
                        A_elem_43494;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_43506 = 0; i_43506 < tk_div_ty_43422; i_43506++) {
            int64_t binop_y_43527 = Ty_43416 * i_43506;
            
            for (int64_t i_43508 = 0; i_43508 < Rx_43419; i_43508++) {
                int64_t binop_y_43529 = Tx_43418 * i_43508;
                int64_t ltid_x_43510 = sext_i32_i64(ltid_pre_46122);
                int64_t ltid_y_43511 = sext_i32_i64(ltid_pre_46123);
                int32_t ltid_flat_43512 = local_tid_46118;
                int64_t k_43528 = ltid_x_43510 + binop_y_43527;
                int64_t j_43530 = ltid_y_43511 + binop_y_43529;
                int64_t gtid_43531 = jjj_43437 + j_43530;
                int64_t B_row_idx_43532 = kk_43465 + k_43528;
                bool cond_43533 = slt64(gtid_43531, N_28477);
                float B_elem_43534;
                
                if (cond_43533) {
                    float B_elem_43536 = ((__global
                                           float *) mem_44940)[B_row_idx_43532 *
                                                               N_28477 +
                                                               gtid_43531];
                    
                    B_elem_43534 = B_elem_43536;
                } else {
                    B_elem_43534 = 0.0F;
                }
                
                bool cond_43538 = slt64(k_43528, Tk_43420);
                int64_t b_loc_ind_43539;
                
                if (cond_43538) {
                    int64_t binop_y_43540 = TxRx_43423 * k_43528;
                    int64_t loc_fi_43541 = j_43530 + binop_y_43540;
                    
                    b_loc_ind_43539 = loc_fi_43541;
                } else {
                    b_loc_ind_43539 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_43539) &&
                    slt64(b_loc_ind_43539, b_loc_szz_43428)) {
                    ((__local float *) mem_44958)[b_loc_ind_43539] =
                        B_elem_43534;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_45044[Ry_43417 * Rx_43419];
        float mem_param_45016[Ry_43417 * Rx_43419];
        
        for (int32_t i_3 = 0; i_3 < Ry_43417 * Rx_43419; i_3++)
            mem_param_45016[i_3] = mem_param_44959[i_3];
        for (int64_t i_43546 = 0; i_43546 < Tk_43420; i_43546++) {
            int64_t binop_y_43585 = TxRx_43423 * i_43546;
            int64_t ltid_y_43550 = sext_i32_i64(ltid_pre_46122);
            int64_t ltid_x_43548 = sext_i32_i64(ltid_pre_46123);
            int32_t ltid_flat_43549 = local_tid_46118;
            float mem_45019[Ry_43417];
            float mem_45021[Rx_43419];
            int64_t binop_x_43576 = Ry_43417 * ltid_y_43550;
            
            for (int64_t i_43574 = 0; i_43574 < Ry_43417; i_43574++) {
                int64_t binop_x_43577 = i_43574 + binop_x_43576;
                int64_t binop_y_43578 = Tk_43420 * binop_x_43577;
                int64_t a_loc_ind_43579 = i_43546 + binop_y_43578;
                
                for (int64_t i_46139 = 0; i_46139 < (int64_t) 1; i_46139++) {
                    mem_45019[i_43574 + i_46139] = ((__local
                                                     float *) mem_44956)[a_loc_ind_43579 +
                                                                         i_46139];
                }
            }
            
            int64_t binop_y_43587 = Rx_43419 * ltid_x_43548;
            
            for (int64_t i_43583 = 0; i_43583 < Rx_43419; i_43583++) {
                int64_t binop_x_43586 = i_43583 + binop_y_43585;
                int64_t b_loc_ind_43588 = binop_x_43586 + binop_y_43587;
                
                for (int64_t i_46141 = 0; i_46141 < (int64_t) 1; i_46141++) {
                    mem_45021[i_43583 + i_46141] = ((__local
                                                     float *) mem_44958)[b_loc_ind_43588 +
                                                                         i_46141];
                }
            }
            for (int64_t i_46142 = 0; i_46142 < Ry_43417; i_46142++) {
                mem_45029[i_46142] = mem_45019[i_46142];
            }
            for (int64_t i_46143 = 0; i_46143 < Rx_43419; i_46143++) {
                mem_45033[i_46143] = mem_45021[i_46143];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_45043[Ry_43417 * Rx_43419];
            int64_t ltid_y_43595 = sext_i32_i64(ltid_pre_46122);
            int64_t ltid_x_43593 = sext_i32_i64(ltid_pre_46123);
            int32_t ltid_flat_43594 = local_tid_46118;
            int64_t binop_y_43636 = Ry_43417 * ltid_y_43595;
            int64_t binop_y_43640 = Rx_43419 * ltid_x_43593;
            
            for (int64_t i_43630 = 0; i_43630 < Ry_43417; i_43630++) {
                int64_t binop_x_43635 = iii_43436 + i_43630;
                int64_t cmpop_x_43637 = binop_x_43635 + binop_y_43636;
                bool binop_x_43638 = slt64(cmpop_x_43637, m_28478);
                
                for (int64_t i_43633 = 0; i_43633 < Rx_43419; i_43633++) {
                    int64_t binop_x_43639 = jjj_43437 + i_43633;
                    int64_t cmpop_x_43641 = binop_x_43639 + binop_y_43640;
                    bool binop_y_43642 = slt64(cmpop_x_43641, N_28477);
                    bool cond_43643 = binop_x_43638 && binop_y_43642;
                    
                    if (cond_43643) {
                        float a_43645 = mem_45029[i_43630];
                        float b_43646 = mem_45033[i_43633];
                        float c_43647 = mem_param_45016[i_43630 * Rx_43419 +
                                                        i_43633];
                        float defunc_1_f_res_43650 = a_43645 * b_43646;
                        float defunc_1_op_res_43654 = c_43647 +
                              defunc_1_f_res_43650;
                        
                        mem_param_45016[i_43630 * Rx_43419 + i_43633] =
                            defunc_1_op_res_43654;
                    }
                }
            }
            for (int64_t i_46146 = 0; i_46146 < Ry_43417; i_46146++) {
                for (int64_t i_46147 = 0; i_46147 < Rx_43419; i_46147++) {
                    mem_45043[i_46146 * Rx_43419 + i_46147] =
                        mem_param_45016[i_46146 * Rx_43419 + i_46147];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_46136[Ry_43417 * Rx_43419];
            
            for (int32_t i_4 = 0; i_4 < Ry_43417 * Rx_43419; i_4++)
                mem_param_tmp_46136[i_4] = mem_45043[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_43417 * Rx_43419; i_5++)
                mem_param_45016[i_5] = mem_param_tmp_46136[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_43417 * Rx_43419; i_6++)
            loop_mem_45044[i_6] = mem_param_45016[i_6];
        
        float mem_param_tmp_46128[Ry_43417 * Rx_43419];
        
        for (int32_t i_7 = 0; i_7 < Ry_43417 * Rx_43419; i_7++)
            mem_param_tmp_46128[i_7] = loop_mem_45044[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_43417 * Rx_43419; i_8++)
            mem_param_44959[i_8] = mem_param_tmp_46128[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_43417 * Rx_43419; i_9++)
        loop_mem_45045[i_9] = mem_param_44959[i_9];
    for (int64_t i_43664 = 0; i_43664 < Ry_43417; i_43664++) {
        int64_t binop_y_43689 = Ty_43416 * i_43664;
        
        for (int64_t i_43666 = 0; i_43666 < tk_div_tx_43421; i_43666++) {
            int64_t binop_y_43687 = Tx_43418 * i_43666;
            int64_t ltid_x_43668 = sext_i32_i64(ltid_pre_46122);
            int64_t ltid_y_43669 = sext_i32_i64(ltid_pre_46123);
            int32_t ltid_flat_43670 = local_tid_46118;
            int64_t k_43688 = ltid_y_43669 + binop_y_43687;
            int64_t i_43690 = ltid_x_43668 + binop_y_43689;
            int64_t gtid_43691 = iii_43436 + i_43690;
            int64_t A_col_idx_43692 = kk_43663 + k_43688;
            bool binop_x_43693 = slt64(gtid_43691, m_28478);
            bool binop_y_43694 = slt64(A_col_idx_43692, i32_res_28493);
            bool cond_43695 = binop_x_43693 && binop_y_43694;
            float A_elem_43696;
            
            if (cond_43695) {
                float A_elem_43698 = ((__global
                                       float *) defunc_4_map_res_mem_44916)[gtid_43691 *
                                                                            i32_res_28493 +
                                                                            A_col_idx_43692];
                
                A_elem_43696 = A_elem_43698;
            } else {
                A_elem_43696 = 0.0F;
            }
            
            bool cond_43700 = slt64(k_43688, Tk_43420);
            int64_t a_loc_ind_43701;
            
            if (cond_43700) {
                int64_t binop_y_43702 = Tk_43420 * i_43690;
                int64_t loc_fi_43703 = k_43688 + binop_y_43702;
                
                a_loc_ind_43701 = loc_fi_43703;
            } else {
                a_loc_ind_43701 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_43701) && slt64(a_loc_ind_43701,
                                                             a_loc_szz_43426)) {
                ((__local float *) mem_44956)[a_loc_ind_43701] = A_elem_43696;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_43708 = 0; i_43708 < tk_div_ty_43422; i_43708++) {
        int64_t binop_y_43731 = Ty_43416 * i_43708;
        
        for (int64_t i_43710 = 0; i_43710 < Rx_43419; i_43710++) {
            int64_t binop_y_43733 = Tx_43418 * i_43710;
            int64_t ltid_x_43712 = sext_i32_i64(ltid_pre_46122);
            int64_t ltid_y_43713 = sext_i32_i64(ltid_pre_46123);
            int32_t ltid_flat_43714 = local_tid_46118;
            int64_t k_43732 = ltid_x_43712 + binop_y_43731;
            int64_t j_43734 = ltid_y_43713 + binop_y_43733;
            int64_t gtid_43735 = jjj_43437 + j_43734;
            int64_t B_row_idx_43736 = kk_43663 + k_43732;
            bool binop_x_43737 = slt64(gtid_43735, N_28477);
            bool binop_y_43738 = slt64(B_row_idx_43736, i32_res_28493);
            bool cond_43739 = binop_x_43737 && binop_y_43738;
            float B_elem_43740;
            
            if (cond_43739) {
                float B_elem_43742 = ((__global
                                       float *) mem_44940)[B_row_idx_43736 *
                                                           N_28477 +
                                                           gtid_43735];
                
                B_elem_43740 = B_elem_43742;
            } else {
                B_elem_43740 = 0.0F;
            }
            
            bool cond_43744 = slt64(k_43732, Tk_43420);
            int64_t b_loc_ind_43745;
            
            if (cond_43744) {
                int64_t binop_y_43746 = TxRx_43423 * k_43732;
                int64_t loc_fi_43747 = j_43734 + binop_y_43746;
                
                b_loc_ind_43745 = loc_fi_43747;
            } else {
                b_loc_ind_43745 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_43745) && slt64(b_loc_ind_43745,
                                                             b_loc_szz_43428)) {
                ((__local float *) mem_44958)[b_loc_ind_43745] = B_elem_43740;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_45111[Ry_43417];
    float mem_45115[Rx_43419];
    float mem_45125[Ry_43417 * Rx_43419];
    float loop_mem_45127[Ry_43417 * Rx_43419];
    float mem_param_45098[Ry_43417 * Rx_43419];
    
    for (int32_t i_10 = 0; i_10 < Ry_43417 * Rx_43419; i_10++)
        mem_param_45098[i_10] = loop_mem_45045[i_10];
    for (int64_t i_43752 = 0; i_43752 < Tk_43420; i_43752++) {
        int64_t cmpop_x_43754 = kk_43663 + i_43752;
        bool cond_43755 = slt64(cmpop_x_43754, i32_res_28493);
        float mem_45498[Ry_43417 * Rx_43419];
        
        if (cond_43755) {
            int64_t binop_y_43793 = TxRx_43423 * i_43752;
            int64_t bytes_45100 = (int64_t) 4 * Ry_43417;
            int64_t bytes_45102 = (int64_t) 4 * Rx_43419;
            int64_t ltid_y_43758 = sext_i32_i64(ltid_pre_46122);
            int64_t ltid_x_43756 = sext_i32_i64(ltid_pre_46123);
            int32_t ltid_flat_43757 = local_tid_46118;
            float mem_45101[Ry_43417];
            float mem_45103[Rx_43419];
            int64_t binop_x_43784 = Ry_43417 * ltid_y_43758;
            
            for (int64_t i_43782 = 0; i_43782 < Ry_43417; i_43782++) {
                int64_t binop_x_43785 = i_43782 + binop_x_43784;
                int64_t binop_y_43786 = Tk_43420 * binop_x_43785;
                int64_t a_loc_ind_43787 = i_43752 + binop_y_43786;
                
                for (int64_t i_46155 = 0; i_46155 < (int64_t) 1; i_46155++) {
                    mem_45101[i_43782 + i_46155] = ((__local
                                                     float *) mem_44956)[a_loc_ind_43787 +
                                                                         i_46155];
                }
            }
            
            int64_t binop_y_43795 = Rx_43419 * ltid_x_43756;
            
            for (int64_t i_43791 = 0; i_43791 < Rx_43419; i_43791++) {
                int64_t binop_x_43794 = i_43791 + binop_y_43793;
                int64_t b_loc_ind_43796 = binop_x_43794 + binop_y_43795;
                
                for (int64_t i_46157 = 0; i_46157 < (int64_t) 1; i_46157++) {
                    mem_45103[i_43791 + i_46157] = ((__local
                                                     float *) mem_44958)[b_loc_ind_43796 +
                                                                         i_46157];
                }
            }
            for (int64_t i_46158 = 0; i_46158 < Ry_43417; i_46158++) {
                mem_45111[i_46158] = mem_45101[i_46158];
            }
            for (int64_t i_46159 = 0; i_46159 < Rx_43419; i_46159++) {
                mem_45115[i_46159] = mem_45103[i_46159];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_43803 = sext_i32_i64(ltid_pre_46122);
            int64_t ltid_x_43801 = sext_i32_i64(ltid_pre_46123);
            int32_t ltid_flat_43802 = local_tid_46118;
            int64_t binop_y_43844 = Ry_43417 * ltid_y_43803;
            int64_t binop_y_43848 = Rx_43419 * ltid_x_43801;
            
            for (int64_t i_43838 = 0; i_43838 < Ry_43417; i_43838++) {
                int64_t binop_x_43843 = iii_43436 + i_43838;
                int64_t cmpop_x_43845 = binop_x_43843 + binop_y_43844;
                bool binop_x_43846 = slt64(cmpop_x_43845, m_28478);
                
                for (int64_t i_43841 = 0; i_43841 < Rx_43419; i_43841++) {
                    int64_t binop_x_43847 = jjj_43437 + i_43841;
                    int64_t cmpop_x_43849 = binop_x_43847 + binop_y_43848;
                    bool binop_y_43850 = slt64(cmpop_x_43849, N_28477);
                    bool cond_43851 = binop_x_43846 && binop_y_43850;
                    
                    if (cond_43851) {
                        float a_43853 = mem_45111[i_43838];
                        float b_43854 = mem_45115[i_43841];
                        float c_43855 = mem_param_45098[i_43838 * Rx_43419 +
                                                        i_43841];
                        float defunc_1_f_res_43858 = a_43853 * b_43854;
                        float defunc_1_op_res_43862 = c_43855 +
                              defunc_1_f_res_43858;
                        
                        mem_param_45098[i_43838 * Rx_43419 + i_43841] =
                            defunc_1_op_res_43862;
                    }
                }
            }
            for (int64_t i_46162 = 0; i_46162 < Ry_43417; i_46162++) {
                for (int64_t i_46163 = 0; i_46163 < Rx_43419; i_46163++) {
                    mem_45125[i_46162 * Rx_43419 + i_46163] =
                        mem_param_45098[i_46162 * Rx_43419 + i_46163];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_46164 = 0; i_46164 < Ry_43417; i_46164++) {
                for (int64_t i_46165 = 0; i_46165 < Rx_43419; i_46165++) {
                    mem_45498[i_46164 * Rx_43419 + i_46165] =
                        mem_45125[i_46164 * Rx_43419 + i_46165];
                }
            }
        } else {
            for (int64_t i_46166 = 0; i_46166 < Ry_43417; i_46166++) {
                for (int64_t i_46167 = 0; i_46167 < Rx_43419; i_46167++) {
                    mem_45498[i_46166 * Rx_43419 + i_46167] =
                        mem_param_45098[i_46166 * Rx_43419 + i_46167];
                }
            }
        }
        
        float mem_param_tmp_46152[Ry_43417 * Rx_43419];
        
        for (int32_t i_11 = 0; i_11 < Ry_43417 * Rx_43419; i_11++)
            mem_param_tmp_46152[i_11] = mem_45498[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_43417 * Rx_43419; i_12++)
            mem_param_45098[i_12] = mem_param_tmp_46152[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_43417 * Rx_43419; i_13++)
        loop_mem_45127[i_13] = mem_param_45098[i_13];
    
    int64_t reg_tile_i_46168 = squot64(sext_i32_i64(local_tid_46118), Tx_43418);
    int64_t reg_tile_i_46169 = sext_i32_i64(local_tid_46118) -
            squot64(sext_i32_i64(local_tid_46118), Tx_43418) * Tx_43418;
    int64_t tile_dim_start_46170 = Ry_43417 * (Ty_43416 * gid_y_43434 +
                                               reg_tile_i_46168);
    int64_t tile_dim_start_46171 = Rx_43419 * (Tx_43418 * gid_x_43433 +
                                               reg_tile_i_46169);
    
    for (int64_t nest_i_46172 = 0; nest_i_46172 < Ry_43417; nest_i_46172++) {
        for (int64_t nest_i_46173 = 0; nest_i_46173 < Rx_43419;
             nest_i_46173++) {
            if (slt64(tile_dim_start_46170 + nest_i_46172, m_28478) &&
                slt64(tile_dim_start_46171 + nest_i_46173, N_28477)) {
                ((__global float *) mem_45130)[(tile_dim_start_46170 +
                                                nest_i_46172) * N_28477 +
                                               (tile_dim_start_46171 +
                                                nest_i_46173)] =
                    loop_mem_45127[nest_i_46172 * Rx_43419 + nest_i_46173];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_43416
    #undef Ry_43417
    #undef Tx_43418
    #undef Rx_43419
    #undef Tk_43420
    #undef tk_div_tx_43421
    #undef tk_div_ty_43422
    #undef TxRx_43423
    #undef TyRy_43424
    #undef a_loc_szz_43426
    #undef b_loc_szz_43428
}
__kernel void mainMagnitudezisegmap_intragroup_43869(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *mem_45203_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_45196_backing_aligned_1,
                                                     int64_t N_28477,
                                                     int64_t m_28478,
                                                     int32_t n_28481,
                                                     float hfrac_28483,
                                                     int64_t i32_res_28487,
                                                     int32_t k2p2_28489,
                                                     int64_t num_whole_tiles_43891,
                                                     int64_t residual_input_43992,
                                                     unsigned char cond_43993,
                                                     __global
                                                     unsigned char *mem_45182,
                                                     __global
                                                     unsigned char *mem_45185,
                                                     __global
                                                     unsigned char *mem_45216,
                                                     __global
                                                     unsigned char *mem_45218,
                                                     __global
                                                     unsigned char *mem_45220)
{
    #define segmap_group_sizze_36893 (mainMagnitudezisegmap_group_sizze_36858)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45203_backing_5 = (__local volatile
                                                           char *) mem_45203_backing_aligned_0;
    __local volatile char *restrict mem_45196_backing_0 = (__local volatile
                                                           char *) mem_45196_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46341;
    int32_t local_tid_46342;
    int64_t group_sizze_46345;
    int32_t wave_sizze_46344;
    int32_t group_tid_46343;
    
    global_tid_46341 = get_global_id(0);
    local_tid_46342 = get_local_id(0);
    group_sizze_46345 = get_local_size(0);
    wave_sizze_46344 = LOCKSTEP_WIDTH;
    group_tid_46343 = get_group_id(0);
    
    int32_t gid_flat_43869;
    
    gid_flat_43869 = group_tid_46343;
    
    int32_t ltid_pre_46346;
    
    ltid_pre_46346 = local_tid_46342;
    
    int64_t gid_43868;
    
    gid_43868 = sext_i32_i64(group_tid_46343);
    
    int64_t binop_x_43876;
    
    binop_x_43876 = segmap_group_sizze_36893 * gid_43868;
    
    int32_t mem_45189[1];
    int64_t ltid_43870 = sext_i32_i64(ltid_pre_46346);
    int32_t ltid_flat_43871 = local_tid_46342;
    int64_t gtid_43877 = ltid_43870 + binop_x_43876;
    bool cond_43878 = slt64(gtid_43877, m_28478);
    int32_t pre_43879;
    
    if (cond_43878) {
        int32_t defunc_0_f_res_43881;
        int32_t redout_44325 = 0;
        
        for (int32_t i_44370 = 0; i_44370 < n_28481; i_44370++) {
            int64_t i_44326 = sext_i32_i64(i_44370);
            float x_43885 = ((__global float *) mem_45182)[i_44326 * m_28478 +
                                                           gtid_43877];
            bool isnan_res_43886;
            
            isnan_res_43886 = futrts_isnan32(x_43885);
            
            bool cond_43887 = !isnan_res_43886;
            int32_t defunc_0_f_res_43888 = btoi_bool_i32(cond_43887);
            int32_t defunc_1_op_res_43884 = add32(defunc_0_f_res_43888,
                                                  redout_44325);
            int32_t redout_tmp_46347 = defunc_1_op_res_43884;
            
            redout_44325 = redout_tmp_46347;
        }
        defunc_0_f_res_43881 = redout_44325;
        pre_43879 = defunc_0_f_res_43881;
    } else {
        pre_43879 = 0;
    }
    mem_45189[(int64_t) 0] = pre_43879;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_45192[1];
    int64_t ltid_43892 = sext_i32_i64(ltid_pre_46346);
    int32_t ltid_flat_43893 = local_tid_46342;
    
    mem_45192[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45196;
    
    mem_45196 = (__local char *) mem_45196_backing_0;
    
    float accs_mem_45200[1];
    float mem_param_45193[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_45193[i_1] = mem_45192[i_1];
    for (int64_t tile_id_43899 = 0; tile_id_43899 < num_whole_tiles_43891;
         tile_id_43899++) {
        int64_t binop_x_43948 = segmap_group_sizze_36893 * tile_id_43899;
        int64_t ltid_43900 = sext_i32_i64(ltid_pre_46346);
        int32_t ltid_flat_43901 = local_tid_46342;
        int64_t j_43949 = ltid_43900 + binop_x_43948;
        bool cond_43953 = slt64(j_43949, i32_res_28487);
        int32_t pre_43954;
        
        if (cond_43953) {
            int32_t index_primexp_44283 = sext_i64_i32(j_43949);
            
            pre_43954 = index_primexp_44283;
        } else {
            pre_43954 = 0;
        }
        ((__local int32_t *) mem_45196)[ltid_43900] = pre_43954;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_45199[1];
        int64_t ltid_43919 = sext_i32_i64(ltid_pre_46346);
        int32_t ltid_flat_43920 = local_tid_46342;
        int64_t gtid_43959 = binop_x_43876 + ltid_43919;
        float acc_43961 = mem_param_45193[(int64_t) 0];
        bool cond_43962 = slt64(gtid_43959, m_28478);
        float acc_43963;
        
        if (cond_43962) {
            int32_t defunc_0_f_res_43960 = mem_45189[(int64_t) 0];
            float x_43964;
            float redout_44327 = acc_43961;
            
            for (int64_t i_44328 = 0; i_44328 < segmap_group_sizze_36893;
                 i_44328++) {
                int32_t x_43968 = ((__local int32_t *) mem_45196)[i_44328];
                bool cond_43969 = slt32(x_43968, defunc_0_f_res_43960);
                float defunc_0_f_res_43970;
                
                if (cond_43969) {
                    int64_t i_43971 = sext_i32_i64(x_43968);
                    bool x_43972 = sle64((int64_t) 0, i_43971);
                    bool y_43973 = slt64(i_43971, N_28477);
                    bool bounds_check_43974 = x_43972 && y_43973;
                    bool index_certs_43975;
                    
                    if (!bounds_check_43974) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          94) == -1) {
                                global_failure_args[0] = i_43971;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_3;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_43976 = ((__global
                                                         float *) mem_45185)[i_43971 *
                                                                             m_28478 +
                                                                             gtid_43959];
                    
                    defunc_0_f_res_43970 = defunc_0_f_res_t_res_43976;
                } else {
                    defunc_0_f_res_43970 = 0.0F;
                }
                
                float defunc_0_f_res_43977 = defunc_0_f_res_43970 *
                      defunc_0_f_res_43970;
                float defunc_1_op_res_43967 = defunc_0_f_res_43977 +
                      redout_44327;
                float redout_tmp_46350 = defunc_1_op_res_43967;
                
                redout_44327 = redout_tmp_46350;
            }
            x_43964 = redout_44327;
            acc_43963 = x_43964;
        } else {
            acc_43963 = acc_43961;
        }
        mem_45199[(int64_t) 0] = acc_43963;
        
      error_3:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46348[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46348[i_2] = mem_45199[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_45193[i_3] = mem_param_tmp_46348[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_45200[i_4] = mem_param_45193[i_4];
    
    __local char *mem_45203;
    
    mem_45203 = (__local char *) mem_45203_backing_5;
    
    float mem_45206[1];
    float mem_45511[1];
    
    if (cond_43993) {
        mem_45511[(int64_t) 0] = accs_mem_45200[(int64_t) 0];
    } else {
        int64_t binop_x_44003 = segmap_group_sizze_36893 *
                num_whole_tiles_43891;
        int64_t ltid_43994 = sext_i32_i64(ltid_pre_46346);
        int32_t ltid_flat_43995 = local_tid_46342;
        int64_t j_44004 = ltid_43994 + binop_x_44003;
        bool cond_44008 = slt64(j_44004, i32_res_28487);
        int32_t pre_44009;
        
        if (cond_44008) {
            int32_t index_primexp_44284 = sext_i64_i32(j_44004);
            
            pre_44009 = index_primexp_44284;
        } else {
            pre_44009 = 0;
        }
        ((__local int32_t *) mem_45203)[ltid_43994] = pre_44009;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_44014 = sext_i32_i64(ltid_pre_46346);
        int32_t ltid_flat_44015 = local_tid_46342;
        int64_t gtid_44022 = binop_x_43876 + ltid_44014;
        float acc_44024 = accs_mem_45200[(int64_t) 0];
        bool cond_44025 = slt64(gtid_44022, m_28478);
        float acc_44026;
        
        if (cond_44025) {
            int32_t defunc_0_f_res_44023 = mem_45189[(int64_t) 0];
            float x_44027;
            float redout_44329 = acc_44024;
            
            for (int64_t i_44330 = 0; i_44330 < residual_input_43992;
                 i_44330++) {
                int32_t x_44031 = ((__local int32_t *) mem_45203)[i_44330];
                bool cond_44032 = slt32(x_44031, defunc_0_f_res_44023);
                float defunc_0_f_res_44033;
                
                if (cond_44032) {
                    int64_t i_44034 = sext_i32_i64(x_44031);
                    bool x_44035 = sle64((int64_t) 0, i_44034);
                    bool y_44036 = slt64(i_44034, N_28477);
                    bool bounds_check_44037 = x_44035 && y_44036;
                    bool index_certs_44038;
                    
                    if (!bounds_check_44037) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          95) == -1) {
                                global_failure_args[0] = i_44034;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_5;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44039 = ((__global
                                                         float *) mem_45185)[i_44034 *
                                                                             m_28478 +
                                                                             gtid_44022];
                    
                    defunc_0_f_res_44033 = defunc_0_f_res_t_res_44039;
                } else {
                    defunc_0_f_res_44033 = 0.0F;
                }
                
                float defunc_0_f_res_44040 = defunc_0_f_res_44033 *
                      defunc_0_f_res_44033;
                float defunc_1_op_res_44030 = defunc_0_f_res_44040 +
                      redout_44329;
                float redout_tmp_46351 = defunc_1_op_res_44030;
                
                redout_44329 = redout_tmp_46351;
            }
            x_44027 = redout_44329;
            acc_44026 = x_44027;
        } else {
            acc_44026 = acc_44024;
        }
        mem_45206[(int64_t) 0] = acc_44026;
        
      error_5:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45511[(int64_t) 0] = mem_45206[(int64_t) 0];
    }
    
    int32_t mem_45210[1];
    int32_t mem_45212[1];
    float mem_45214[1];
    int64_t ltid_44043 = sext_i32_i64(ltid_pre_46346);
    int32_t ltid_flat_44044 = local_tid_46342;
    int64_t gtid_44054 = binop_x_43876 + ltid_44043;
    bool cond_44056 = slt64(gtid_44054, m_28478);
    int32_t postlude_44057;
    int32_t postlude_44058;
    float postlude_44059;
    
    if (cond_44056) {
        float defunc_0_f_res_44055 = mem_45511[(int64_t) 0];
        int32_t defunc_0_f_res_44060 = mem_45189[(int64_t) 0];
        int32_t r32_arg_44061 = sub32(defunc_0_f_res_44060, k2p2_28489);
        float i32_res_44062 = sitofp_i32_f32(r32_arg_44061);
        float sqrt_arg_44063 = defunc_0_f_res_44055 / i32_res_44062;
        float sqrt_res_44064;
        
        sqrt_res_44064 = futrts_sqrt32(sqrt_arg_44063);
        
        float i32_res_44065 = sitofp_i32_f32(defunc_0_f_res_44060);
        float t32_arg_44066 = hfrac_28483 * i32_res_44065;
        int32_t f32_res_44067 = fptosi_f32_i32(t32_arg_44066);
        
        postlude_44057 = f32_res_44067;
        postlude_44058 = defunc_0_f_res_44060;
        postlude_44059 = sqrt_res_44064;
    } else {
        postlude_44057 = 0;
        postlude_44058 = 0;
        postlude_44059 = 0.0F;
    }
    mem_45210[(int64_t) 0] = postlude_44057;
    mem_45212[(int64_t) 0] = postlude_44058;
    mem_45214[(int64_t) 0] = postlude_44059;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_46342) + segmap_group_sizze_36893 *
              sext_i32_i64(group_tid_46343), m_28478)) {
        ((__global int32_t *) mem_45216)[sext_i32_i64(local_tid_46342) +
                                         segmap_group_sizze_36893 *
                                         sext_i32_i64(group_tid_46343)] =
            mem_45210[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46342) + segmap_group_sizze_36893 *
              sext_i32_i64(group_tid_46343), m_28478)) {
        ((__global int32_t *) mem_45218)[sext_i32_i64(local_tid_46342) +
                                         segmap_group_sizze_36893 *
                                         sext_i32_i64(group_tid_46343)] =
            mem_45212[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46342) + segmap_group_sizze_36893 *
              sext_i32_i64(group_tid_46343), m_28478)) {
        ((__global float *) mem_45220)[sext_i32_i64(local_tid_46342) +
                                       segmap_group_sizze_36893 *
                                       sext_i32_i64(group_tid_46343)] =
            mem_45214[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_36893
}
__kernel void mainMagnitudezisegmap_intragroup_44075(__global
                                                     int *global_failure,
                                                     int failure_is_an_option,
                                                     __global
                                                     int64_t *global_failure_args,
                                                     __local volatile
                                                     int64_t *mem_45269_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_45262_backing_aligned_1,
                                                     int64_t N_28477,
                                                     int64_t m_28478,
                                                     int64_t i32_res_28880,
                                                     int64_t num_whole_tiles_44095,
                                                     int64_t residual_input_44206,
                                                     unsigned char cond_44207,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_45178,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_45244,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_45245,
                                                     __global
                                                     unsigned char *mem_45275)
{
    #define segmap_group_sizze_37150 (mainMagnitudezisegmap_group_sizze_37127)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_45269_backing_5 = (__local volatile
                                                           char *) mem_45269_backing_aligned_0;
    __local volatile char *restrict mem_45262_backing_0 = (__local volatile
                                                           char *) mem_45262_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46525;
    int32_t local_tid_46526;
    int64_t group_sizze_46529;
    int32_t wave_sizze_46528;
    int32_t group_tid_46527;
    
    global_tid_46525 = get_global_id(0);
    local_tid_46526 = get_local_id(0);
    group_sizze_46529 = get_local_size(0);
    wave_sizze_46528 = LOCKSTEP_WIDTH;
    group_tid_46527 = get_group_id(0);
    
    int32_t gid_flat_44075;
    
    gid_flat_44075 = group_tid_46527;
    
    int32_t ltid_pre_46530;
    
    ltid_pre_46530 = local_tid_46526;
    
    int64_t gid_44074;
    
    gid_44074 = sext_i32_i64(group_tid_46527);
    
    int64_t binop_x_44084;
    
    binop_x_44084 = segmap_group_sizze_37150 * gid_44074;
    
    int32_t mem_45253[1];
    int32_t mem_45255[1];
    int64_t ltid_44076 = sext_i32_i64(ltid_pre_46530);
    int32_t ltid_flat_44077 = local_tid_46526;
    int64_t gtid_44085 = ltid_44076 + binop_x_44084;
    bool cond_44086 = slt64(gtid_44085, m_28478);
    int32_t pre_44087;
    int32_t pre_44088;
    
    if (cond_44086) {
        int32_t x_44089 = ((__global
                            int32_t *) defunc_3_map_res_mem_45245)[gtid_44085];
        int32_t x_44090 = ((__global
                            int32_t *) defunc_3_map_res_mem_45244)[gtid_44085];
        
        pre_44087 = x_44089;
        pre_44088 = x_44090;
    } else {
        pre_44087 = 0;
        pre_44088 = 0;
    }
    mem_45253[(int64_t) 0] = pre_44087;
    mem_45255[(int64_t) 0] = pre_44088;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_45258[1];
    int64_t ltid_44096 = sext_i32_i64(ltid_pre_46530);
    int32_t ltid_flat_44097 = local_tid_46526;
    
    mem_45258[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_45262;
    
    mem_45262 = (__local char *) mem_45262_backing_0;
    
    float accs_mem_45266[1];
    float mem_param_45259[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_45259[i_1] = mem_45258[i_1];
    for (int64_t tile_id_44103 = 0; tile_id_44103 < num_whole_tiles_44095;
         tile_id_44103++) {
        int64_t binop_x_44156 = segmap_group_sizze_37150 * tile_id_44103;
        int64_t ltid_44104 = sext_i32_i64(ltid_pre_46530);
        int32_t ltid_flat_44105 = local_tid_46526;
        int64_t j_44157 = ltid_44104 + binop_x_44156;
        bool cond_44162 = slt64(j_44157, i32_res_28880);
        int32_t pre_44163;
        
        if (cond_44162) {
            int32_t index_primexp_44285 = sext_i64_i32(j_44157);
            int32_t tile_elem_44164 = index_primexp_44285;
            
            pre_44163 = tile_elem_44164;
        } else {
            pre_44163 = 0;
        }
        ((__local int32_t *) mem_45262)[ltid_44104] = pre_44163;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_45265[1];
        int64_t ltid_44124 = sext_i32_i64(ltid_pre_46530);
        int32_t ltid_flat_44125 = local_tid_46526;
        int64_t gtid_44168 = binop_x_44084 + ltid_44124;
        float acc_44171 = mem_param_45259[(int64_t) 0];
        bool cond_44172 = slt64(gtid_44168, m_28478);
        float acc_44173;
        
        if (cond_44172) {
            int32_t x_44169 = mem_45253[(int64_t) 0];
            int32_t x_44170 = mem_45255[(int64_t) 0];
            float x_44174;
            float redout_44331 = acc_44171;
            
            for (int64_t i_44332 = 0; i_44332 < segmap_group_sizze_37150;
                 i_44332++) {
                int32_t x_44178 = ((__local int32_t *) mem_45262)[i_44332];
                bool cond_44179 = slt32(x_44178, x_44170);
                float defunc_0_f_res_44180;
                
                if (cond_44179) {
                    int32_t x_44181 = add32(x_44169, x_44178);
                    int32_t x_44182 = sub32(x_44181, x_44170);
                    int32_t i_44183 = add32(1, x_44182);
                    int64_t i_44184 = sext_i32_i64(i_44183);
                    bool x_44185 = sle64((int64_t) 0, i_44184);
                    bool y_44186 = slt64(i_44184, N_28477);
                    bool bounds_check_44187 = x_44185 && y_44186;
                    bool index_certs_44188;
                    
                    if (!bounds_check_44187) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          99) == -1) {
                                global_failure_args[0] = i_44184;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_3;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44189 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_44168 *
                                                                                              N_28477 +
                                                                                              i_44184];
                    
                    defunc_0_f_res_44180 = defunc_0_f_res_t_res_44189;
                } else {
                    defunc_0_f_res_44180 = 0.0F;
                }
                
                float defunc_1_op_res_44177 = defunc_0_f_res_44180 +
                      redout_44331;
                float redout_tmp_46533 = defunc_1_op_res_44177;
                
                redout_44331 = redout_tmp_46533;
            }
            x_44174 = redout_44331;
            acc_44173 = x_44174;
        } else {
            acc_44173 = acc_44171;
        }
        mem_45265[(int64_t) 0] = acc_44173;
        
      error_3:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_46531[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_46531[i_2] = mem_45265[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_45259[i_3] = mem_param_tmp_46531[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_45266[i_4] = mem_param_45259[i_4];
    
    __local char *mem_45269;
    
    mem_45269 = (__local char *) mem_45269_backing_5;
    
    float mem_45272[1];
    float mem_45520[1];
    
    if (cond_44207) {
        mem_45520[(int64_t) 0] = accs_mem_45266[(int64_t) 0];
    } else {
        int64_t binop_x_44217 = segmap_group_sizze_37150 *
                num_whole_tiles_44095;
        int64_t ltid_44208 = sext_i32_i64(ltid_pre_46530);
        int32_t ltid_flat_44209 = local_tid_46526;
        int64_t j_44218 = ltid_44208 + binop_x_44217;
        bool cond_44223 = slt64(j_44218, i32_res_28880);
        int32_t pre_44224;
        
        if (cond_44223) {
            int32_t index_primexp_44286 = sext_i64_i32(j_44218);
            int32_t tile_elem_44225 = index_primexp_44286;
            
            pre_44224 = tile_elem_44225;
        } else {
            pre_44224 = 0;
        }
        ((__local int32_t *) mem_45269)[ltid_44208] = pre_44224;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_44229 = sext_i32_i64(ltid_pre_46530);
        int32_t ltid_flat_44230 = local_tid_46526;
        int64_t gtid_44237 = binop_x_44084 + ltid_44229;
        float acc_44240 = accs_mem_45266[(int64_t) 0];
        bool cond_44241 = slt64(gtid_44237, m_28478);
        float acc_44242;
        
        if (cond_44241) {
            int32_t x_44238 = mem_45253[(int64_t) 0];
            int32_t x_44239 = mem_45255[(int64_t) 0];
            float x_44243;
            float redout_44333 = acc_44240;
            
            for (int64_t i_44334 = 0; i_44334 < residual_input_44206;
                 i_44334++) {
                int32_t x_44247 = ((__local int32_t *) mem_45269)[i_44334];
                bool cond_44248 = slt32(x_44247, x_44239);
                float defunc_0_f_res_44249;
                
                if (cond_44248) {
                    int32_t x_44250 = add32(x_44238, x_44247);
                    int32_t x_44251 = sub32(x_44250, x_44239);
                    int32_t i_44252 = add32(1, x_44251);
                    int64_t i_44253 = sext_i32_i64(i_44252);
                    bool x_44254 = sle64((int64_t) 0, i_44253);
                    bool y_44255 = slt64(i_44253, N_28477);
                    bool bounds_check_44256 = x_44254 && y_44255;
                    bool index_certs_44257;
                    
                    if (!bounds_check_44256) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          100) == -1) {
                                global_failure_args[0] = i_44253;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_5;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_44258 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_44237 *
                                                                                              N_28477 +
                                                                                              i_44253];
                    
                    defunc_0_f_res_44249 = defunc_0_f_res_t_res_44258;
                } else {
                    defunc_0_f_res_44249 = 0.0F;
                }
                
                float defunc_1_op_res_44246 = defunc_0_f_res_44249 +
                      redout_44333;
                float redout_tmp_46534 = defunc_1_op_res_44246;
                
                redout_44333 = redout_tmp_46534;
            }
            x_44243 = redout_44333;
            acc_44242 = x_44243;
        } else {
            acc_44242 = acc_44240;
        }
        mem_45272[(int64_t) 0] = acc_44242;
        
      error_5:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_45520[(int64_t) 0] = mem_45272[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_46526) + segmap_group_sizze_37150 *
              sext_i32_i64(group_tid_46527), m_28478)) {
        ((__global float *) mem_45275)[sext_i32_i64(local_tid_46526) +
                                       segmap_group_sizze_37150 *
                                       sext_i32_i64(group_tid_46527)] =
            mem_45520[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_37150
}
__kernel void mainMagnitudezisegred_large_34797(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45794_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45792_backing_aligned_1,
                                                int64_t N_28477,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_34936,
                                                int64_t groups_per_segment_45778,
                                                int64_t elements_per_thread_45779,
                                                int64_t virt_num_groups_45780,
                                                int64_t threads_per_segment_45782,
                                                __global
                                                unsigned char *images_mem_44381,
                                                __global
                                                unsigned char *binop_p_mem_44390,
                                                __global
                                                unsigned char *mem_44531,
                                                __global
                                                unsigned char *mem_44536,
                                                __global
                                                unsigned char *group_res_arr_mem_45783,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45785)
{
    #define segred_group_sizze_34935 (mainMagnitudezisegred_group_sizze_34791)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45794_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45794_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45792_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45792_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45787;
    int32_t local_tid_45788;
    int64_t group_sizze_45791;
    int32_t wave_sizze_45790;
    int32_t group_tid_45789;
    
    global_tid_45787 = get_global_id(0);
    local_tid_45788 = get_local_id(0);
    group_sizze_45791 = get_local_size(0);
    wave_sizze_45790 = LOCKSTEP_WIDTH;
    group_tid_45789 = get_group_id(0);
    
    int32_t phys_tid_34797;
    
    phys_tid_34797 = global_tid_45787;
    
    __local char *red_arr_mem_45792;
    
    red_arr_mem_45792 = (__local char *) red_arr_mem_45792_backing_0;
    
    __local char *sync_arr_mem_45794;
    
    sync_arr_mem_45794 = (__local char *) sync_arr_mem_45794_backing_1;
    
    int32_t phys_group_id_45796;
    
    phys_group_id_45796 = get_group_id(0);
    for (int32_t i_45797 = 0; i_45797 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45780) - phys_group_id_45796,
                   sext_i64_i32(num_groups_34936)); i_45797++) {
        int32_t virt_group_id_45798 = phys_group_id_45796 + i_45797 *
                sext_i64_i32(num_groups_34936);
        int32_t flat_segment_id_45799 = squot32(virt_group_id_45798,
                                                sext_i64_i32(groups_per_segment_45778));
        int64_t global_tid_45800 = srem64(sext_i32_i64(virt_group_id_45798) *
                                          segred_group_sizze_34935 +
                                          sext_i32_i64(local_tid_45788),
                                          segred_group_sizze_34935 *
                                          groups_per_segment_45778);
        int64_t gtid_34784 = squot64(sext_i32_i64(flat_segment_id_45799),
                                     i32_res_28493 * i32_res_28493);
        int64_t gtid_34785 = squot64(sext_i32_i64(flat_segment_id_45799) -
                                     squot64(sext_i32_i64(flat_segment_id_45799),
                                             i32_res_28493 * i32_res_28493) *
                                     (i32_res_28493 * i32_res_28493),
                                     i32_res_28493);
        int64_t gtid_34786 = sext_i32_i64(flat_segment_id_45799) -
                squot64(sext_i32_i64(flat_segment_id_45799), i32_res_28493 *
                        i32_res_28493) * (i32_res_28493 * i32_res_28493) -
                squot64(sext_i32_i64(flat_segment_id_45799) -
                        squot64(sext_i32_i64(flat_segment_id_45799),
                                i32_res_28493 * i32_res_28493) *
                        (i32_res_28493 * i32_res_28493), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_34796;
        float x_acc_45801;
        int64_t chunk_sizze_45802;
        
        chunk_sizze_45802 = smin64(elements_per_thread_45779,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45800)),
                                             threads_per_segment_45782));
        
        float x_34939;
        float x_34940;
        
        // neutral-initialise the accumulators
        {
            x_acc_45801 = 0.0F;
        }
        for (int64_t i_45806 = 0; i_45806 < chunk_sizze_45802; i_45806++) {
            gtid_34796 = sext_i32_i64(sext_i64_i32(global_tid_45800)) +
                threads_per_segment_45782 * i_45806;
            // apply map function
            {
                float x_34945 = ((__global
                                  float *) images_mem_44381)[gtid_34784 *
                                                             N_28477 +
                                                             gtid_34796];
                float x_34946 = ((__global
                                  float *) binop_p_mem_44390)[gtid_34785 *
                                                              N_28477 +
                                                              gtid_34796];
                float x_34947 = ((__global float *) mem_44531)[gtid_34786 *
                                                               N_28477 +
                                                               gtid_34796];
                float x_34948 = x_34946 * x_34947;
                bool isnan_res_34949;
                
                isnan_res_34949 = futrts_isnan32(x_34945);
                
                float y_34950;
                
                if (isnan_res_34949) {
                    y_34950 = 0.0F;
                } else {
                    y_34950 = 1.0F;
                }
                
                float defunc_2_f_res_34951 = x_34948 * y_34950;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34939 = x_acc_45801;
                }
                // load new values
                {
                    x_34940 = defunc_2_f_res_34951;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34941 = x_34939 + x_34940;
                    
                    // store in accumulator
                    {
                        x_acc_45801 = defunc_1_op_res_34941;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34939 = x_acc_45801;
            ((__local
              float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788)] =
                x_34939;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45807;
        int32_t skip_waves_45808;
        
        skip_waves_45808 = 1;
        
        float x_45803;
        float x_45804;
        
        offset_45807 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45788,
                      sext_i64_i32(segred_group_sizze_34935))) {
                x_45803 = ((__local
                            float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788 +
                                                        offset_45807)];
            }
        }
        offset_45807 = 1;
        while (slt32(offset_45807, wave_sizze_45790)) {
            if (slt32(local_tid_45788 + offset_45807,
                      sext_i64_i32(segred_group_sizze_34935)) &&
                ((local_tid_45788 - squot32(local_tid_45788, wave_sizze_45790) *
                  wave_sizze_45790) & (2 * offset_45807 - 1)) == 0) {
                // read array element
                {
                    x_45804 = ((volatile __local
                                float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788 +
                                                            offset_45807)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45805 = x_45803 + x_45804;
                    
                    x_45803 = defunc_1_op_res_45805;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788)] =
                        x_45803;
                }
            }
            offset_45807 *= 2;
        }
        while (slt32(skip_waves_45808,
                     squot32(sext_i64_i32(segred_group_sizze_34935) +
                             wave_sizze_45790 - 1, wave_sizze_45790))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45807 = skip_waves_45808 * wave_sizze_45790;
            if (slt32(local_tid_45788 + offset_45807,
                      sext_i64_i32(segred_group_sizze_34935)) &&
                ((local_tid_45788 - squot32(local_tid_45788, wave_sizze_45790) *
                  wave_sizze_45790) == 0 && (squot32(local_tid_45788,
                                                     wave_sizze_45790) & (2 *
                                                                          skip_waves_45808 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45804 = ((__local
                                float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788 +
                                                            offset_45807)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45805 = x_45803 + x_45804;
                    
                    x_45803 = defunc_1_op_res_45805;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788)] =
                        x_45803;
                }
            }
            skip_waves_45808 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45788) == (int64_t) 0) {
                x_acc_45801 = x_45803;
            }
        }
        if (groups_per_segment_45778 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45788 == 0) {
                    ((__global float *) mem_44536)[gtid_34784 * (i32_res_28493 *
                                                                 i32_res_28493) +
                                                   gtid_34785 * i32_res_28493 +
                                                   gtid_34786] = x_acc_45801;
                }
            }
        } else {
            int32_t old_counter_45809;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45788 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45783)[sext_i32_i64(virt_group_id_45798) *
                                                        segred_group_sizze_34935] =
                        x_acc_45801;
                    mem_fence_global();
                    old_counter_45809 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45785)[sext_i32_i64(srem32(flat_segment_id_45799,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45794)[(int64_t) 0] =
                        old_counter_45809 == groups_per_segment_45778 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45810;
            
            is_last_group_45810 = ((__local
                                    bool *) sync_arr_mem_45794)[(int64_t) 0];
            if (is_last_group_45810) {
                if (local_tid_45788 == 0) {
                    old_counter_45809 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45785)[sext_i32_i64(srem32(flat_segment_id_45799,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45778));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45811 =
                            sdiv_up64(groups_per_segment_45778,
                                      segred_group_sizze_34935);
                    
                    x_34939 = 0.0F;
                    for (int64_t i_45812 = 0; i_45812 < read_per_thread_45811;
                         i_45812++) {
                        int64_t group_res_id_45813 =
                                sext_i32_i64(local_tid_45788) *
                                read_per_thread_45811 + i_45812;
                        int64_t index_of_group_res_45814 =
                                sext_i32_i64(flat_segment_id_45799) *
                                groups_per_segment_45778 + group_res_id_45813;
                        
                        if (slt64(group_res_id_45813,
                                  groups_per_segment_45778)) {
                            x_34940 = ((__global
                                        float *) group_res_arr_mem_45783)[index_of_group_res_45814 *
                                                                          segred_group_sizze_34935];
                            
                            float defunc_1_op_res_34941;
                            
                            defunc_1_op_res_34941 = x_34939 + x_34940;
                            x_34939 = defunc_1_op_res_34941;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788)] =
                    x_34939;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45815;
                    int32_t skip_waves_45816;
                    
                    skip_waves_45816 = 1;
                    
                    float x_45803;
                    float x_45804;
                    
                    offset_45815 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45788,
                                  sext_i64_i32(segred_group_sizze_34935))) {
                            x_45803 = ((__local
                                        float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788 +
                                                                    offset_45815)];
                        }
                    }
                    offset_45815 = 1;
                    while (slt32(offset_45815, wave_sizze_45790)) {
                        if (slt32(local_tid_45788 + offset_45815,
                                  sext_i64_i32(segred_group_sizze_34935)) &&
                            ((local_tid_45788 - squot32(local_tid_45788,
                                                        wave_sizze_45790) *
                              wave_sizze_45790) & (2 * offset_45815 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45804 = ((volatile __local
                                            float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788 +
                                                                        offset_45815)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45805 = x_45803 + x_45804;
                                
                                x_45803 = defunc_1_op_res_45805;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788)] =
                                    x_45803;
                            }
                        }
                        offset_45815 *= 2;
                    }
                    while (slt32(skip_waves_45816,
                                 squot32(sext_i64_i32(segred_group_sizze_34935) +
                                         wave_sizze_45790 - 1,
                                         wave_sizze_45790))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45815 = skip_waves_45816 * wave_sizze_45790;
                        if (slt32(local_tid_45788 + offset_45815,
                                  sext_i64_i32(segred_group_sizze_34935)) &&
                            ((local_tid_45788 - squot32(local_tid_45788,
                                                        wave_sizze_45790) *
                              wave_sizze_45790) == 0 &&
                             (squot32(local_tid_45788, wave_sizze_45790) & (2 *
                                                                            skip_waves_45816 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45804 = ((__local
                                            float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788 +
                                                                        offset_45815)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45805 = x_45803 + x_45804;
                                
                                x_45803 = defunc_1_op_res_45805;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45792)[sext_i32_i64(local_tid_45788)] =
                                    x_45803;
                            }
                        }
                        skip_waves_45816 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45788 == 0) {
                            ((__global float *) mem_44536)[gtid_34784 *
                                                           (i32_res_28493 *
                                                            i32_res_28493) +
                                                           gtid_34785 *
                                                           i32_res_28493 +
                                                           gtid_34786] =
                                x_45803;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34935
}
__kernel void mainMagnitudezisegred_large_36148(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45991_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45989_backing_aligned_1,
                                                int64_t N_28477,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_36201,
                                                int64_t groups_per_segment_45975,
                                                int64_t elements_per_thread_45976,
                                                int64_t virt_num_groups_45977,
                                                int64_t threads_per_segment_45979,
                                                __global
                                                unsigned char *images_mem_44381,
                                                __global
                                                unsigned char *binop_p_mem_44390,
                                                __global
                                                unsigned char *mem_44844,
                                                __global
                                                unsigned char *group_res_arr_mem_45980,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45982)
{
    #define segred_group_sizze_36200 (mainMagnitudezisegred_group_sizze_36142)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45991_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45991_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45989_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45989_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45984;
    int32_t local_tid_45985;
    int64_t group_sizze_45988;
    int32_t wave_sizze_45987;
    int32_t group_tid_45986;
    
    global_tid_45984 = get_global_id(0);
    local_tid_45985 = get_local_id(0);
    group_sizze_45988 = get_local_size(0);
    wave_sizze_45987 = LOCKSTEP_WIDTH;
    group_tid_45986 = get_group_id(0);
    
    int32_t phys_tid_36148;
    
    phys_tid_36148 = global_tid_45984;
    
    __local char *red_arr_mem_45989;
    
    red_arr_mem_45989 = (__local char *) red_arr_mem_45989_backing_0;
    
    __local char *sync_arr_mem_45991;
    
    sync_arr_mem_45991 = (__local char *) sync_arr_mem_45991_backing_1;
    
    int32_t phys_group_id_45993;
    
    phys_group_id_45993 = get_group_id(0);
    for (int32_t i_45994 = 0; i_45994 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45977) - phys_group_id_45993,
                   sext_i64_i32(num_groups_36201)); i_45994++) {
        int32_t virt_group_id_45995 = phys_group_id_45993 + i_45994 *
                sext_i64_i32(num_groups_36201);
        int32_t flat_segment_id_45996 = squot32(virt_group_id_45995,
                                                sext_i64_i32(groups_per_segment_45975));
        int64_t global_tid_45997 = srem64(sext_i32_i64(virt_group_id_45995) *
                                          segred_group_sizze_36200 +
                                          sext_i32_i64(local_tid_45985),
                                          segred_group_sizze_36200 *
                                          groups_per_segment_45975);
        int64_t gtid_36137 = squot64(sext_i32_i64(flat_segment_id_45996),
                                     i32_res_28493);
        int64_t gtid_36138 = sext_i32_i64(flat_segment_id_45996) -
                squot64(sext_i32_i64(flat_segment_id_45996), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_36147;
        float x_acc_45998;
        int64_t chunk_sizze_45999;
        
        chunk_sizze_45999 = smin64(elements_per_thread_45976,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45997)),
                                             threads_per_segment_45979));
        
        float x_36204;
        float x_36205;
        
        // neutral-initialise the accumulators
        {
            x_acc_45998 = 0.0F;
        }
        for (int64_t i_46003 = 0; i_46003 < chunk_sizze_45999; i_46003++) {
            gtid_36147 = sext_i32_i64(sext_i64_i32(global_tid_45997)) +
                threads_per_segment_45979 * i_46003;
            // apply map function
            {
                float x_36210 = ((__global
                                  float *) images_mem_44381)[gtid_36137 *
                                                             N_28477 +
                                                             gtid_36147];
                bool isnan_res_36211;
                
                isnan_res_36211 = futrts_isnan32(x_36210);
                
                float defunc_1_f_res_36212;
                
                if (isnan_res_36211) {
                    defunc_1_f_res_36212 = 0.0F;
                } else {
                    float x_36209 = ((__global
                                      float *) binop_p_mem_44390)[gtid_36138 *
                                                                  N_28477 +
                                                                  gtid_36147];
                    float defunc_1_f_res_f_res_36213 = x_36209 * x_36210;
                    
                    defunc_1_f_res_36212 = defunc_1_f_res_f_res_36213;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_36204 = x_acc_45998;
                }
                // load new values
                {
                    x_36205 = defunc_1_f_res_36212;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36206 = x_36204 + x_36205;
                    
                    // store in accumulator
                    {
                        x_acc_45998 = defunc_1_op_res_36206;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36204 = x_acc_45998;
            ((__local
              float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985)] =
                x_36204;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46004;
        int32_t skip_waves_46005;
        
        skip_waves_46005 = 1;
        
        float x_46000;
        float x_46001;
        
        offset_46004 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45985,
                      sext_i64_i32(segred_group_sizze_36200))) {
                x_46000 = ((__local
                            float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985 +
                                                        offset_46004)];
            }
        }
        offset_46004 = 1;
        while (slt32(offset_46004, wave_sizze_45987)) {
            if (slt32(local_tid_45985 + offset_46004,
                      sext_i64_i32(segred_group_sizze_36200)) &&
                ((local_tid_45985 - squot32(local_tid_45985, wave_sizze_45987) *
                  wave_sizze_45987) & (2 * offset_46004 - 1)) == 0) {
                // read array element
                {
                    x_46001 = ((volatile __local
                                float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985 +
                                                            offset_46004)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46002 = x_46000 + x_46001;
                    
                    x_46000 = defunc_1_op_res_46002;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985)] =
                        x_46000;
                }
            }
            offset_46004 *= 2;
        }
        while (slt32(skip_waves_46005,
                     squot32(sext_i64_i32(segred_group_sizze_36200) +
                             wave_sizze_45987 - 1, wave_sizze_45987))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46004 = skip_waves_46005 * wave_sizze_45987;
            if (slt32(local_tid_45985 + offset_46004,
                      sext_i64_i32(segred_group_sizze_36200)) &&
                ((local_tid_45985 - squot32(local_tid_45985, wave_sizze_45987) *
                  wave_sizze_45987) == 0 && (squot32(local_tid_45985,
                                                     wave_sizze_45987) & (2 *
                                                                          skip_waves_46005 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46001 = ((__local
                                float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985 +
                                                            offset_46004)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46002 = x_46000 + x_46001;
                    
                    x_46000 = defunc_1_op_res_46002;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985)] =
                        x_46000;
                }
            }
            skip_waves_46005 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45985) == (int64_t) 0) {
                x_acc_45998 = x_46000;
            }
        }
        if (groups_per_segment_45975 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45985 == 0) {
                    ((__global float *) mem_44844)[gtid_36137 * i32_res_28493 +
                                                   gtid_36138] = x_acc_45998;
                }
            }
        } else {
            int32_t old_counter_46006;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45985 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45980)[sext_i32_i64(virt_group_id_45995) *
                                                        segred_group_sizze_36200] =
                        x_acc_45998;
                    mem_fence_global();
                    old_counter_46006 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45982)[sext_i32_i64(srem32(flat_segment_id_45996,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45991)[(int64_t) 0] =
                        old_counter_46006 == groups_per_segment_45975 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46007;
            
            is_last_group_46007 = ((__local
                                    bool *) sync_arr_mem_45991)[(int64_t) 0];
            if (is_last_group_46007) {
                if (local_tid_45985 == 0) {
                    old_counter_46006 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45982)[sext_i32_i64(srem32(flat_segment_id_45996,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45975));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46008 =
                            sdiv_up64(groups_per_segment_45975,
                                      segred_group_sizze_36200);
                    
                    x_36204 = 0.0F;
                    for (int64_t i_46009 = 0; i_46009 < read_per_thread_46008;
                         i_46009++) {
                        int64_t group_res_id_46010 =
                                sext_i32_i64(local_tid_45985) *
                                read_per_thread_46008 + i_46009;
                        int64_t index_of_group_res_46011 =
                                sext_i32_i64(flat_segment_id_45996) *
                                groups_per_segment_45975 + group_res_id_46010;
                        
                        if (slt64(group_res_id_46010,
                                  groups_per_segment_45975)) {
                            x_36205 = ((__global
                                        float *) group_res_arr_mem_45980)[index_of_group_res_46011 *
                                                                          segred_group_sizze_36200];
                            
                            float defunc_1_op_res_36206;
                            
                            defunc_1_op_res_36206 = x_36204 + x_36205;
                            x_36204 = defunc_1_op_res_36206;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985)] =
                    x_36204;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46012;
                    int32_t skip_waves_46013;
                    
                    skip_waves_46013 = 1;
                    
                    float x_46000;
                    float x_46001;
                    
                    offset_46012 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45985,
                                  sext_i64_i32(segred_group_sizze_36200))) {
                            x_46000 = ((__local
                                        float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985 +
                                                                    offset_46012)];
                        }
                    }
                    offset_46012 = 1;
                    while (slt32(offset_46012, wave_sizze_45987)) {
                        if (slt32(local_tid_45985 + offset_46012,
                                  sext_i64_i32(segred_group_sizze_36200)) &&
                            ((local_tid_45985 - squot32(local_tid_45985,
                                                        wave_sizze_45987) *
                              wave_sizze_45987) & (2 * offset_46012 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46001 = ((volatile __local
                                            float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985 +
                                                                        offset_46012)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46002 = x_46000 + x_46001;
                                
                                x_46000 = defunc_1_op_res_46002;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985)] =
                                    x_46000;
                            }
                        }
                        offset_46012 *= 2;
                    }
                    while (slt32(skip_waves_46013,
                                 squot32(sext_i64_i32(segred_group_sizze_36200) +
                                         wave_sizze_45987 - 1,
                                         wave_sizze_45987))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46012 = skip_waves_46013 * wave_sizze_45987;
                        if (slt32(local_tid_45985 + offset_46012,
                                  sext_i64_i32(segred_group_sizze_36200)) &&
                            ((local_tid_45985 - squot32(local_tid_45985,
                                                        wave_sizze_45987) *
                              wave_sizze_45987) == 0 &&
                             (squot32(local_tid_45985, wave_sizze_45987) & (2 *
                                                                            skip_waves_46013 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46001 = ((__local
                                            float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985 +
                                                                        offset_46012)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46002 = x_46000 + x_46001;
                                
                                x_46000 = defunc_1_op_res_46002;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45989)[sext_i32_i64(local_tid_45985)] =
                                    x_46000;
                            }
                        }
                        skip_waves_46013 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45985 == 0) {
                            ((__global float *) mem_44844)[gtid_36137 *
                                                           i32_res_28493 +
                                                           gtid_36138] =
                                x_46000;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36200
}
__kernel void mainMagnitudezisegred_large_36285(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_46079_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46077_backing_aligned_1,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_36334,
                                                int64_t groups_per_segment_46063,
                                                int64_t elements_per_thread_46064,
                                                int64_t virt_num_groups_46065,
                                                int64_t threads_per_segment_46067,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44629,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44850,
                                                __global
                                                unsigned char *mem_44910,
                                                __global
                                                unsigned char *group_res_arr_mem_46068,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_46070)
{
    #define segred_group_sizze_36333 (mainMagnitudezisegred_group_sizze_36279)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46079_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46079_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46077_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46077_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46072;
    int32_t local_tid_46073;
    int64_t group_sizze_46076;
    int32_t wave_sizze_46075;
    int32_t group_tid_46074;
    
    global_tid_46072 = get_global_id(0);
    local_tid_46073 = get_local_id(0);
    group_sizze_46076 = get_local_size(0);
    wave_sizze_46075 = LOCKSTEP_WIDTH;
    group_tid_46074 = get_group_id(0);
    
    int32_t phys_tid_36285;
    
    phys_tid_36285 = global_tid_46072;
    
    __local char *red_arr_mem_46077;
    
    red_arr_mem_46077 = (__local char *) red_arr_mem_46077_backing_0;
    
    __local char *sync_arr_mem_46079;
    
    sync_arr_mem_46079 = (__local char *) sync_arr_mem_46079_backing_1;
    
    int32_t phys_group_id_46081;
    
    phys_group_id_46081 = get_group_id(0);
    for (int32_t i_46082 = 0; i_46082 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46065) - phys_group_id_46081,
                   sext_i64_i32(num_groups_36334)); i_46082++) {
        int32_t virt_group_id_46083 = phys_group_id_46081 + i_46082 *
                sext_i64_i32(num_groups_36334);
        int32_t flat_segment_id_46084 = squot32(virt_group_id_46083,
                                                sext_i64_i32(groups_per_segment_46063));
        int64_t global_tid_46085 = srem64(sext_i32_i64(virt_group_id_46083) *
                                          segred_group_sizze_36333 +
                                          sext_i32_i64(local_tid_46073),
                                          segred_group_sizze_36333 *
                                          groups_per_segment_46063);
        int64_t gtid_36274 = squot64(sext_i32_i64(flat_segment_id_46084),
                                     i32_res_28493);
        int64_t gtid_36275 = sext_i32_i64(flat_segment_id_46084) -
                squot64(sext_i32_i64(flat_segment_id_46084), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_36284;
        float x_acc_46086;
        int64_t chunk_sizze_46087;
        
        chunk_sizze_46087 = smin64(elements_per_thread_46064,
                                   sdiv_up64(i32_res_28493 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46085)),
                                             threads_per_segment_46067));
        
        float x_36337;
        float x_36338;
        
        // neutral-initialise the accumulators
        {
            x_acc_46086 = 0.0F;
        }
        for (int64_t i_46091 = 0; i_46091 < chunk_sizze_46087; i_46091++) {
            gtid_36284 = sext_i32_i64(sext_i64_i32(global_tid_46085)) +
                threads_per_segment_46067 * i_46091;
            // apply map function
            {
                float x_36343 = ((__global
                                  float *) defunc_3_map_res_mem_44850)[gtid_36274 *
                                                                       i32_res_28493 +
                                                                       gtid_36284];
                float x_36344 = ((__global
                                  float *) defunc_3_map_res_mem_44629)[gtid_36274 *
                                                                       (i32_res_28493 *
                                                                        i32_res_28493) +
                                                                       gtid_36275 *
                                                                       i32_res_28493 +
                                                                       gtid_36284];
                float defunc_1_f_res_36345 = x_36343 * x_36344;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36337 = x_acc_46086;
                }
                // load new values
                {
                    x_36338 = defunc_1_f_res_36345;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36339 = x_36337 + x_36338;
                    
                    // store in accumulator
                    {
                        x_acc_46086 = defunc_1_op_res_36339;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36337 = x_acc_46086;
            ((__local
              float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073)] =
                x_36337;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46092;
        int32_t skip_waves_46093;
        
        skip_waves_46093 = 1;
        
        float x_46088;
        float x_46089;
        
        offset_46092 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46073,
                      sext_i64_i32(segred_group_sizze_36333))) {
                x_46088 = ((__local
                            float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073 +
                                                        offset_46092)];
            }
        }
        offset_46092 = 1;
        while (slt32(offset_46092, wave_sizze_46075)) {
            if (slt32(local_tid_46073 + offset_46092,
                      sext_i64_i32(segred_group_sizze_36333)) &&
                ((local_tid_46073 - squot32(local_tid_46073, wave_sizze_46075) *
                  wave_sizze_46075) & (2 * offset_46092 - 1)) == 0) {
                // read array element
                {
                    x_46089 = ((volatile __local
                                float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073 +
                                                            offset_46092)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46090 = x_46088 + x_46089;
                    
                    x_46088 = defunc_1_op_res_46090;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073)] =
                        x_46088;
                }
            }
            offset_46092 *= 2;
        }
        while (slt32(skip_waves_46093,
                     squot32(sext_i64_i32(segred_group_sizze_36333) +
                             wave_sizze_46075 - 1, wave_sizze_46075))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46092 = skip_waves_46093 * wave_sizze_46075;
            if (slt32(local_tid_46073 + offset_46092,
                      sext_i64_i32(segred_group_sizze_36333)) &&
                ((local_tid_46073 - squot32(local_tid_46073, wave_sizze_46075) *
                  wave_sizze_46075) == 0 && (squot32(local_tid_46073,
                                                     wave_sizze_46075) & (2 *
                                                                          skip_waves_46093 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46089 = ((__local
                                float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073 +
                                                            offset_46092)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46090 = x_46088 + x_46089;
                    
                    x_46088 = defunc_1_op_res_46090;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073)] =
                        x_46088;
                }
            }
            skip_waves_46093 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46073) == (int64_t) 0) {
                x_acc_46086 = x_46088;
            }
        }
        if (groups_per_segment_46063 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46073 == 0) {
                    ((__global float *) mem_44910)[gtid_36274 * i32_res_28493 +
                                                   gtid_36275] = x_acc_46086;
                }
            }
        } else {
            int32_t old_counter_46094;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46073 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46068)[sext_i32_i64(virt_group_id_46083) *
                                                        segred_group_sizze_36333] =
                        x_acc_46086;
                    mem_fence_global();
                    old_counter_46094 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46070)[sext_i32_i64(srem32(flat_segment_id_46084,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46079)[(int64_t) 0] =
                        old_counter_46094 == groups_per_segment_46063 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46095;
            
            is_last_group_46095 = ((__local
                                    bool *) sync_arr_mem_46079)[(int64_t) 0];
            if (is_last_group_46095) {
                if (local_tid_46073 == 0) {
                    old_counter_46094 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46070)[sext_i32_i64(srem32(flat_segment_id_46084,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46063));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46096 =
                            sdiv_up64(groups_per_segment_46063,
                                      segred_group_sizze_36333);
                    
                    x_36337 = 0.0F;
                    for (int64_t i_46097 = 0; i_46097 < read_per_thread_46096;
                         i_46097++) {
                        int64_t group_res_id_46098 =
                                sext_i32_i64(local_tid_46073) *
                                read_per_thread_46096 + i_46097;
                        int64_t index_of_group_res_46099 =
                                sext_i32_i64(flat_segment_id_46084) *
                                groups_per_segment_46063 + group_res_id_46098;
                        
                        if (slt64(group_res_id_46098,
                                  groups_per_segment_46063)) {
                            x_36338 = ((__global
                                        float *) group_res_arr_mem_46068)[index_of_group_res_46099 *
                                                                          segred_group_sizze_36333];
                            
                            float defunc_1_op_res_36339;
                            
                            defunc_1_op_res_36339 = x_36337 + x_36338;
                            x_36337 = defunc_1_op_res_36339;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073)] =
                    x_36337;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46100;
                    int32_t skip_waves_46101;
                    
                    skip_waves_46101 = 1;
                    
                    float x_46088;
                    float x_46089;
                    
                    offset_46100 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46073,
                                  sext_i64_i32(segred_group_sizze_36333))) {
                            x_46088 = ((__local
                                        float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073 +
                                                                    offset_46100)];
                        }
                    }
                    offset_46100 = 1;
                    while (slt32(offset_46100, wave_sizze_46075)) {
                        if (slt32(local_tid_46073 + offset_46100,
                                  sext_i64_i32(segred_group_sizze_36333)) &&
                            ((local_tid_46073 - squot32(local_tid_46073,
                                                        wave_sizze_46075) *
                              wave_sizze_46075) & (2 * offset_46100 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46089 = ((volatile __local
                                            float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073 +
                                                                        offset_46100)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46090 = x_46088 + x_46089;
                                
                                x_46088 = defunc_1_op_res_46090;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073)] =
                                    x_46088;
                            }
                        }
                        offset_46100 *= 2;
                    }
                    while (slt32(skip_waves_46101,
                                 squot32(sext_i64_i32(segred_group_sizze_36333) +
                                         wave_sizze_46075 - 1,
                                         wave_sizze_46075))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46100 = skip_waves_46101 * wave_sizze_46075;
                        if (slt32(local_tid_46073 + offset_46100,
                                  sext_i64_i32(segred_group_sizze_36333)) &&
                            ((local_tid_46073 - squot32(local_tid_46073,
                                                        wave_sizze_46075) *
                              wave_sizze_46075) == 0 &&
                             (squot32(local_tid_46073, wave_sizze_46075) & (2 *
                                                                            skip_waves_46101 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46089 = ((__local
                                            float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073 +
                                                                        offset_46100)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46090 = x_46088 + x_46089;
                                
                                x_46088 = defunc_1_op_res_46090;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46077)[sext_i32_i64(local_tid_46073)] =
                                    x_46088;
                            }
                        }
                        skip_waves_46101 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46073 == 0) {
                            ((__global float *) mem_44910)[gtid_36274 *
                                                           i32_res_28493 +
                                                           gtid_36275] =
                                x_46088;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36333
}
__kernel void mainMagnitudezisegred_large_36415(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_46211_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46209_backing_aligned_1,
                                                int64_t N_28477,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_36462,
                                                int64_t groups_per_segment_46195,
                                                int64_t elements_per_thread_46196,
                                                int64_t virt_num_groups_46197,
                                                int64_t threads_per_segment_46199,
                                                __global
                                                unsigned char *mem_44397,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_44916,
                                                __global
                                                unsigned char *mem_45134,
                                                __global
                                                unsigned char *group_res_arr_mem_46200,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_46202)
{
    #define segred_group_sizze_36461 (mainMagnitudezisegred_group_sizze_36409)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46211_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46211_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46209_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46209_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46204;
    int32_t local_tid_46205;
    int64_t group_sizze_46208;
    int32_t wave_sizze_46207;
    int32_t group_tid_46206;
    
    global_tid_46204 = get_global_id(0);
    local_tid_46205 = get_local_id(0);
    group_sizze_46208 = get_local_size(0);
    wave_sizze_46207 = LOCKSTEP_WIDTH;
    group_tid_46206 = get_group_id(0);
    
    int32_t phys_tid_36415;
    
    phys_tid_36415 = global_tid_46204;
    
    __local char *red_arr_mem_46209;
    
    red_arr_mem_46209 = (__local char *) red_arr_mem_46209_backing_0;
    
    __local char *sync_arr_mem_46211;
    
    sync_arr_mem_46211 = (__local char *) sync_arr_mem_46211_backing_1;
    
    int32_t phys_group_id_46213;
    
    phys_group_id_46213 = get_group_id(0);
    for (int32_t i_46214 = 0; i_46214 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46197) - phys_group_id_46213,
                   sext_i64_i32(num_groups_36462)); i_46214++) {
        int32_t virt_group_id_46215 = phys_group_id_46213 + i_46214 *
                sext_i64_i32(num_groups_36462);
        int32_t flat_segment_id_46216 = squot32(virt_group_id_46215,
                                                sext_i64_i32(groups_per_segment_46195));
        int64_t global_tid_46217 = srem64(sext_i32_i64(virt_group_id_46215) *
                                          segred_group_sizze_36461 +
                                          sext_i32_i64(local_tid_46205),
                                          segred_group_sizze_36461 *
                                          groups_per_segment_46195);
        int64_t gtid_36404 = squot64(sext_i32_i64(flat_segment_id_46216),
                                     N_28477);
        int64_t gtid_36405 = sext_i32_i64(flat_segment_id_46216) -
                squot64(sext_i32_i64(flat_segment_id_46216), N_28477) * N_28477;
        int64_t gtid_36414;
        float x_acc_46218;
        int64_t chunk_sizze_46219;
        
        chunk_sizze_46219 = smin64(elements_per_thread_46196,
                                   sdiv_up64(i32_res_28493 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46217)),
                                             threads_per_segment_46199));
        
        float x_36465;
        float x_36466;
        
        // neutral-initialise the accumulators
        {
            x_acc_46218 = 0.0F;
        }
        for (int64_t i_46223 = 0; i_46223 < chunk_sizze_46219; i_46223++) {
            gtid_36414 = sext_i32_i64(sext_i64_i32(global_tid_46217)) +
                threads_per_segment_46199 * i_46223;
            // apply map function
            {
                float x_36470 = ((__global
                                  float *) defunc_4_map_res_mem_44916)[gtid_36404 *
                                                                       i32_res_28493 +
                                                                       gtid_36414];
                float x_36471 = ((__global float *) mem_44397)[gtid_36405 *
                                                               i32_res_28493 +
                                                               gtid_36414];
                float defunc_1_f_res_36472 = x_36470 * x_36471;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36465 = x_acc_46218;
                }
                // load new values
                {
                    x_36466 = defunc_1_f_res_36472;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36467 = x_36465 + x_36466;
                    
                    // store in accumulator
                    {
                        x_acc_46218 = defunc_1_op_res_36467;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36465 = x_acc_46218;
            ((__local
              float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205)] =
                x_36465;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46224;
        int32_t skip_waves_46225;
        
        skip_waves_46225 = 1;
        
        float x_46220;
        float x_46221;
        
        offset_46224 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46205,
                      sext_i64_i32(segred_group_sizze_36461))) {
                x_46220 = ((__local
                            float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205 +
                                                        offset_46224)];
            }
        }
        offset_46224 = 1;
        while (slt32(offset_46224, wave_sizze_46207)) {
            if (slt32(local_tid_46205 + offset_46224,
                      sext_i64_i32(segred_group_sizze_36461)) &&
                ((local_tid_46205 - squot32(local_tid_46205, wave_sizze_46207) *
                  wave_sizze_46207) & (2 * offset_46224 - 1)) == 0) {
                // read array element
                {
                    x_46221 = ((volatile __local
                                float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205 +
                                                            offset_46224)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46222 = x_46220 + x_46221;
                    
                    x_46220 = defunc_1_op_res_46222;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205)] =
                        x_46220;
                }
            }
            offset_46224 *= 2;
        }
        while (slt32(skip_waves_46225,
                     squot32(sext_i64_i32(segred_group_sizze_36461) +
                             wave_sizze_46207 - 1, wave_sizze_46207))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46224 = skip_waves_46225 * wave_sizze_46207;
            if (slt32(local_tid_46205 + offset_46224,
                      sext_i64_i32(segred_group_sizze_36461)) &&
                ((local_tid_46205 - squot32(local_tid_46205, wave_sizze_46207) *
                  wave_sizze_46207) == 0 && (squot32(local_tid_46205,
                                                     wave_sizze_46207) & (2 *
                                                                          skip_waves_46225 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46221 = ((__local
                                float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205 +
                                                            offset_46224)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46222 = x_46220 + x_46221;
                    
                    x_46220 = defunc_1_op_res_46222;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205)] =
                        x_46220;
                }
            }
            skip_waves_46225 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46205) == (int64_t) 0) {
                x_acc_46218 = x_46220;
            }
        }
        if (groups_per_segment_46195 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46205 == 0) {
                    ((__global float *) mem_45134)[gtid_36404 * N_28477 +
                                                   gtid_36405] = x_acc_46218;
                }
            }
        } else {
            int32_t old_counter_46226;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46205 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46200)[sext_i32_i64(virt_group_id_46215) *
                                                        segred_group_sizze_36461] =
                        x_acc_46218;
                    mem_fence_global();
                    old_counter_46226 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46202)[sext_i32_i64(srem32(flat_segment_id_46216,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46211)[(int64_t) 0] =
                        old_counter_46226 == groups_per_segment_46195 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46227;
            
            is_last_group_46227 = ((__local
                                    bool *) sync_arr_mem_46211)[(int64_t) 0];
            if (is_last_group_46227) {
                if (local_tid_46205 == 0) {
                    old_counter_46226 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46202)[sext_i32_i64(srem32(flat_segment_id_46216,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46195));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46228 =
                            sdiv_up64(groups_per_segment_46195,
                                      segred_group_sizze_36461);
                    
                    x_36465 = 0.0F;
                    for (int64_t i_46229 = 0; i_46229 < read_per_thread_46228;
                         i_46229++) {
                        int64_t group_res_id_46230 =
                                sext_i32_i64(local_tid_46205) *
                                read_per_thread_46228 + i_46229;
                        int64_t index_of_group_res_46231 =
                                sext_i32_i64(flat_segment_id_46216) *
                                groups_per_segment_46195 + group_res_id_46230;
                        
                        if (slt64(group_res_id_46230,
                                  groups_per_segment_46195)) {
                            x_36466 = ((__global
                                        float *) group_res_arr_mem_46200)[index_of_group_res_46231 *
                                                                          segred_group_sizze_36461];
                            
                            float defunc_1_op_res_36467;
                            
                            defunc_1_op_res_36467 = x_36465 + x_36466;
                            x_36465 = defunc_1_op_res_36467;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205)] =
                    x_36465;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46232;
                    int32_t skip_waves_46233;
                    
                    skip_waves_46233 = 1;
                    
                    float x_46220;
                    float x_46221;
                    
                    offset_46232 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46205,
                                  sext_i64_i32(segred_group_sizze_36461))) {
                            x_46220 = ((__local
                                        float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205 +
                                                                    offset_46232)];
                        }
                    }
                    offset_46232 = 1;
                    while (slt32(offset_46232, wave_sizze_46207)) {
                        if (slt32(local_tid_46205 + offset_46232,
                                  sext_i64_i32(segred_group_sizze_36461)) &&
                            ((local_tid_46205 - squot32(local_tid_46205,
                                                        wave_sizze_46207) *
                              wave_sizze_46207) & (2 * offset_46232 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46221 = ((volatile __local
                                            float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205 +
                                                                        offset_46232)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46222 = x_46220 + x_46221;
                                
                                x_46220 = defunc_1_op_res_46222;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205)] =
                                    x_46220;
                            }
                        }
                        offset_46232 *= 2;
                    }
                    while (slt32(skip_waves_46233,
                                 squot32(sext_i64_i32(segred_group_sizze_36461) +
                                         wave_sizze_46207 - 1,
                                         wave_sizze_46207))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46232 = skip_waves_46233 * wave_sizze_46207;
                        if (slt32(local_tid_46205 + offset_46232,
                                  sext_i64_i32(segred_group_sizze_36461)) &&
                            ((local_tid_46205 - squot32(local_tid_46205,
                                                        wave_sizze_46207) *
                              wave_sizze_46207) == 0 &&
                             (squot32(local_tid_46205, wave_sizze_46207) & (2 *
                                                                            skip_waves_46233 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46221 = ((__local
                                            float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205 +
                                                                        offset_46232)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46222 = x_46220 + x_46221;
                                
                                x_46220 = defunc_1_op_res_46222;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46209)[sext_i32_i64(local_tid_46205)] =
                                    x_46220;
                            }
                        }
                        skip_waves_46233 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46205 == 0) {
                            ((__global float *) mem_45134)[gtid_36404 *
                                                           N_28477 +
                                                           gtid_36405] =
                                x_46220;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36461
}
__kernel void mainMagnitudezisegred_large_36993(__global int *global_failure,
                                                int failure_is_an_option,
                                                __global
                                                int64_t *global_failure_args,
                                                __local volatile
                                                int64_t *sync_arr_mem_46463_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46461_backing_aligned_1,
                                                int64_t N_28477,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_37044,
                                                int64_t groups_per_segment_46447,
                                                int64_t elements_per_thread_46448,
                                                int64_t virt_num_groups_46449,
                                                int64_t threads_per_segment_46451,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_45178,
                                                __global
                                                unsigned char *mem_45232,
                                                __global
                                                unsigned char *mem_45235,
                                                __global
                                                unsigned char *group_res_arr_mem_46452,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_46454)
{
    #define segred_group_sizze_37043 (mainMagnitudezisegred_group_sizze_36987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46463_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46463_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46461_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46461_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46456;
    int32_t local_tid_46457;
    int64_t group_sizze_46460;
    int32_t wave_sizze_46459;
    int32_t group_tid_46458;
    
    global_tid_46456 = get_global_id(0);
    local_tid_46457 = get_local_id(0);
    group_sizze_46460 = get_local_size(0);
    wave_sizze_46459 = LOCKSTEP_WIDTH;
    group_tid_46458 = get_group_id(0);
    
    int32_t phys_tid_36993;
    
    phys_tid_36993 = global_tid_46456;
    
    __local char *red_arr_mem_46461;
    
    red_arr_mem_46461 = (__local char *) red_arr_mem_46461_backing_0;
    
    __local char *sync_arr_mem_46463;
    
    sync_arr_mem_46463 = (__local char *) sync_arr_mem_46463_backing_1;
    
    int32_t phys_group_id_46465;
    
    phys_group_id_46465 = get_group_id(0);
    for (int32_t i_46466 = 0; i_46466 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46449) - phys_group_id_46465,
                   sext_i64_i32(num_groups_37044)); i_46466++) {
        int32_t virt_group_id_46467 = phys_group_id_46465 + i_46466 *
                sext_i64_i32(num_groups_37044);
        int32_t flat_segment_id_46468 = squot32(virt_group_id_46467,
                                                sext_i64_i32(groups_per_segment_46447));
        int64_t global_tid_46469 = srem64(sext_i32_i64(virt_group_id_46467) *
                                          segred_group_sizze_37043 +
                                          sext_i32_i64(local_tid_46457),
                                          segred_group_sizze_37043 *
                                          groups_per_segment_46447);
        int64_t gtid_36984 = sext_i32_i64(flat_segment_id_46468);
        int64_t gtid_36992;
        float x_acc_46470;
        int64_t chunk_sizze_46471;
        
        chunk_sizze_46471 = smin64(elements_per_thread_46448,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46469)),
                                             threads_per_segment_46451));
        
        float x_37047;
        float x_37048;
        
        // neutral-initialise the accumulators
        {
            x_acc_46470 = 0.0F;
        }
        for (int64_t i_46475 = 0; i_46475 < chunk_sizze_46471; i_46475++) {
            gtid_36992 = sext_i32_i64(sext_i64_i32(global_tid_46469)) +
                threads_per_segment_46451 * i_46475;
            // apply map function
            {
                int32_t defunc_0_f_res_37051 = ((__global
                                                 int32_t *) mem_45232)[gtid_36984];
                int32_t index_primexp_42385 = sext_i64_i32(gtid_36992);
                bool cond_37053 = slt32(index_primexp_42385,
                                        defunc_0_f_res_37051);
                float defunc_0_f_res_37054;
                
                if (cond_37053) {
                    int64_t i_37055 = sext_i32_i64(index_primexp_42385);
                    bool x_37056 = sle64((int64_t) 0, i_37055);
                    bool y_37057 = slt64(i_37055, N_28477);
                    bool bounds_check_37058 = x_37056 && y_37057;
                    bool index_certs_37059;
                    
                    if (!bounds_check_37058) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          98) == -1) {
                                global_failure_args[0] = i_37055;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_37060 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_36984 *
                                                                                              N_28477 +
                                                                                              i_37055];
                    
                    defunc_0_f_res_37054 = defunc_0_f_res_t_res_37060;
                } else {
                    defunc_0_f_res_37054 = 0.0F;
                }
                
                float defunc_0_f_res_37061 = defunc_0_f_res_37054 *
                      defunc_0_f_res_37054;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_37047 = x_acc_46470;
                }
                // load new values
                {
                    x_37048 = defunc_0_f_res_37061;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_37049 = x_37047 + x_37048;
                    
                    // store in accumulator
                    {
                        x_acc_46470 = defunc_1_op_res_37049;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37047 = x_acc_46470;
            ((__local
              float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457)] =
                x_37047;
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46476;
        int32_t skip_waves_46477;
        
        skip_waves_46477 = 1;
        
        float x_46472;
        float x_46473;
        
        offset_46476 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46457,
                      sext_i64_i32(segred_group_sizze_37043))) {
                x_46472 = ((__local
                            float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457 +
                                                        offset_46476)];
            }
        }
        offset_46476 = 1;
        while (slt32(offset_46476, wave_sizze_46459)) {
            if (slt32(local_tid_46457 + offset_46476,
                      sext_i64_i32(segred_group_sizze_37043)) &&
                ((local_tid_46457 - squot32(local_tid_46457, wave_sizze_46459) *
                  wave_sizze_46459) & (2 * offset_46476 - 1)) == 0) {
                // read array element
                {
                    x_46473 = ((volatile __local
                                float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457 +
                                                            offset_46476)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46474 = x_46472 + x_46473;
                    
                    x_46472 = defunc_1_op_res_46474;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457)] =
                        x_46472;
                }
            }
            offset_46476 *= 2;
        }
        while (slt32(skip_waves_46477,
                     squot32(sext_i64_i32(segred_group_sizze_37043) +
                             wave_sizze_46459 - 1, wave_sizze_46459))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46476 = skip_waves_46477 * wave_sizze_46459;
            if (slt32(local_tid_46457 + offset_46476,
                      sext_i64_i32(segred_group_sizze_37043)) &&
                ((local_tid_46457 - squot32(local_tid_46457, wave_sizze_46459) *
                  wave_sizze_46459) == 0 && (squot32(local_tid_46457,
                                                     wave_sizze_46459) & (2 *
                                                                          skip_waves_46477 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46473 = ((__local
                                float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457 +
                                                            offset_46476)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46474 = x_46472 + x_46473;
                    
                    x_46472 = defunc_1_op_res_46474;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457)] =
                        x_46472;
                }
            }
            skip_waves_46477 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46457) == (int64_t) 0) {
                x_acc_46470 = x_46472;
            }
        }
        if (groups_per_segment_46447 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46457 == 0) {
                    ((__global float *) mem_45235)[gtid_36984] = x_acc_46470;
                }
            }
        } else {
            int32_t old_counter_46478;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46457 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46452)[sext_i32_i64(virt_group_id_46467) *
                                                        segred_group_sizze_37043] =
                        x_acc_46470;
                    mem_fence_global();
                    old_counter_46478 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46454)[sext_i32_i64(srem32(flat_segment_id_46468,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46463)[(int64_t) 0] =
                        old_counter_46478 == groups_per_segment_46447 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46479;
            
            is_last_group_46479 = ((__local
                                    bool *) sync_arr_mem_46463)[(int64_t) 0];
            if (is_last_group_46479) {
                if (local_tid_46457 == 0) {
                    old_counter_46478 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46454)[sext_i32_i64(srem32(flat_segment_id_46468,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46447));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46480 =
                            sdiv_up64(groups_per_segment_46447,
                                      segred_group_sizze_37043);
                    
                    x_37047 = 0.0F;
                    for (int64_t i_46481 = 0; i_46481 < read_per_thread_46480;
                         i_46481++) {
                        int64_t group_res_id_46482 =
                                sext_i32_i64(local_tid_46457) *
                                read_per_thread_46480 + i_46481;
                        int64_t index_of_group_res_46483 =
                                sext_i32_i64(flat_segment_id_46468) *
                                groups_per_segment_46447 + group_res_id_46482;
                        
                        if (slt64(group_res_id_46482,
                                  groups_per_segment_46447)) {
                            x_37048 = ((__global
                                        float *) group_res_arr_mem_46452)[index_of_group_res_46483 *
                                                                          segred_group_sizze_37043];
                            
                            float defunc_1_op_res_37049;
                            
                            defunc_1_op_res_37049 = x_37047 + x_37048;
                            x_37047 = defunc_1_op_res_37049;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457)] =
                    x_37047;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46484;
                    int32_t skip_waves_46485;
                    
                    skip_waves_46485 = 1;
                    
                    float x_46472;
                    float x_46473;
                    
                    offset_46484 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46457,
                                  sext_i64_i32(segred_group_sizze_37043))) {
                            x_46472 = ((__local
                                        float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457 +
                                                                    offset_46484)];
                        }
                    }
                    offset_46484 = 1;
                    while (slt32(offset_46484, wave_sizze_46459)) {
                        if (slt32(local_tid_46457 + offset_46484,
                                  sext_i64_i32(segred_group_sizze_37043)) &&
                            ((local_tid_46457 - squot32(local_tid_46457,
                                                        wave_sizze_46459) *
                              wave_sizze_46459) & (2 * offset_46484 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46473 = ((volatile __local
                                            float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457 +
                                                                        offset_46484)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46474 = x_46472 + x_46473;
                                
                                x_46472 = defunc_1_op_res_46474;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457)] =
                                    x_46472;
                            }
                        }
                        offset_46484 *= 2;
                    }
                    while (slt32(skip_waves_46485,
                                 squot32(sext_i64_i32(segred_group_sizze_37043) +
                                         wave_sizze_46459 - 1,
                                         wave_sizze_46459))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46484 = skip_waves_46485 * wave_sizze_46459;
                        if (slt32(local_tid_46457 + offset_46484,
                                  sext_i64_i32(segred_group_sizze_37043)) &&
                            ((local_tid_46457 - squot32(local_tid_46457,
                                                        wave_sizze_46459) *
                              wave_sizze_46459) == 0 &&
                             (squot32(local_tid_46457, wave_sizze_46459) & (2 *
                                                                            skip_waves_46485 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46473 = ((__local
                                            float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457 +
                                                                        offset_46484)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46474 = x_46472 + x_46473;
                                
                                x_46472 = defunc_1_op_res_46474;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46461)[sext_i32_i64(local_tid_46457)] =
                                    x_46472;
                            }
                        }
                        skip_waves_46485 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46457 == 0) {
                            ((__global float *) mem_45235)[gtid_36984] =
                                x_46472;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37043
}
__kernel void mainMagnitudezisegred_large_37018(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_46403_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46401_backing_aligned_1,
                                                int64_t N_28477,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_37030,
                                                int64_t groups_per_segment_46387,
                                                int64_t elements_per_thread_46388,
                                                int64_t virt_num_groups_46389,
                                                int64_t threads_per_segment_46391,
                                                __global
                                                unsigned char *images_mem_44381,
                                                __global
                                                unsigned char *mem_45232,
                                                __global
                                                unsigned char *group_res_arr_mem_46392,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_46394)
{
    #define segred_group_sizze_37029 (mainMagnitudezisegred_group_sizze_37012)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46403_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46403_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46401_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46401_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46396;
    int32_t local_tid_46397;
    int64_t group_sizze_46400;
    int32_t wave_sizze_46399;
    int32_t group_tid_46398;
    
    global_tid_46396 = get_global_id(0);
    local_tid_46397 = get_local_id(0);
    group_sizze_46400 = get_local_size(0);
    wave_sizze_46399 = LOCKSTEP_WIDTH;
    group_tid_46398 = get_group_id(0);
    
    int32_t phys_tid_37018;
    
    phys_tid_37018 = global_tid_46396;
    
    __local char *red_arr_mem_46401;
    
    red_arr_mem_46401 = (__local char *) red_arr_mem_46401_backing_0;
    
    __local char *sync_arr_mem_46403;
    
    sync_arr_mem_46403 = (__local char *) sync_arr_mem_46403_backing_1;
    
    int32_t phys_group_id_46405;
    
    phys_group_id_46405 = get_group_id(0);
    for (int32_t i_46406 = 0; i_46406 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46389) - phys_group_id_46405,
                   sext_i64_i32(num_groups_37030)); i_46406++) {
        int32_t virt_group_id_46407 = phys_group_id_46405 + i_46406 *
                sext_i64_i32(num_groups_37030);
        int32_t flat_segment_id_46408 = squot32(virt_group_id_46407,
                                                sext_i64_i32(groups_per_segment_46387));
        int64_t global_tid_46409 = srem64(sext_i32_i64(virt_group_id_46407) *
                                          segred_group_sizze_37029 +
                                          sext_i32_i64(local_tid_46397),
                                          segred_group_sizze_37029 *
                                          groups_per_segment_46387);
        int64_t gtid_37009 = sext_i32_i64(flat_segment_id_46408);
        int64_t gtid_37017;
        int32_t x_acc_46410;
        int64_t chunk_sizze_46411;
        
        chunk_sizze_46411 = smin64(elements_per_thread_46388,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46409)),
                                             threads_per_segment_46391));
        
        int32_t x_37033;
        int32_t x_37034;
        
        // neutral-initialise the accumulators
        {
            x_acc_46410 = 0;
        }
        for (int64_t i_46415 = 0; i_46415 < chunk_sizze_46411; i_46415++) {
            gtid_37017 = sext_i32_i64(sext_i64_i32(global_tid_46409)) +
                threads_per_segment_46391 * i_46415;
            // apply map function
            {
                float x_37037 = ((__global
                                  float *) images_mem_44381)[gtid_37009 *
                                                             N_28477 +
                                                             gtid_37017];
                bool isnan_res_37038;
                
                isnan_res_37038 = futrts_isnan32(x_37037);
                
                bool cond_37039 = !isnan_res_37038;
                int32_t defunc_0_f_res_37040 = btoi_bool_i32(cond_37039);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_37033 = x_acc_46410;
                }
                // load new values
                {
                    x_37034 = defunc_0_f_res_37040;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_37035 = add32(x_37033, x_37034);
                    
                    // store in accumulator
                    {
                        x_acc_46410 = defunc_1_op_res_37035;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37033 = x_acc_46410;
            ((__local
              int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397)] =
                x_37033;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46416;
        int32_t skip_waves_46417;
        
        skip_waves_46417 = 1;
        
        int32_t x_46412;
        int32_t x_46413;
        
        offset_46416 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46397,
                      sext_i64_i32(segred_group_sizze_37029))) {
                x_46412 = ((__local
                            int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397 +
                                                          offset_46416)];
            }
        }
        offset_46416 = 1;
        while (slt32(offset_46416, wave_sizze_46399)) {
            if (slt32(local_tid_46397 + offset_46416,
                      sext_i64_i32(segred_group_sizze_37029)) &&
                ((local_tid_46397 - squot32(local_tid_46397, wave_sizze_46399) *
                  wave_sizze_46399) & (2 * offset_46416 - 1)) == 0) {
                // read array element
                {
                    x_46413 = ((volatile __local
                                int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397 +
                                                              offset_46416)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_46414 = add32(x_46412, x_46413);
                    
                    x_46412 = defunc_1_op_res_46414;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397)] =
                        x_46412;
                }
            }
            offset_46416 *= 2;
        }
        while (slt32(skip_waves_46417,
                     squot32(sext_i64_i32(segred_group_sizze_37029) +
                             wave_sizze_46399 - 1, wave_sizze_46399))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46416 = skip_waves_46417 * wave_sizze_46399;
            if (slt32(local_tid_46397 + offset_46416,
                      sext_i64_i32(segred_group_sizze_37029)) &&
                ((local_tid_46397 - squot32(local_tid_46397, wave_sizze_46399) *
                  wave_sizze_46399) == 0 && (squot32(local_tid_46397,
                                                     wave_sizze_46399) & (2 *
                                                                          skip_waves_46417 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46413 = ((__local
                                int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397 +
                                                              offset_46416)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_46414 = add32(x_46412, x_46413);
                    
                    x_46412 = defunc_1_op_res_46414;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397)] =
                        x_46412;
                }
            }
            skip_waves_46417 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46397) == (int64_t) 0) {
                x_acc_46410 = x_46412;
            }
        }
        if (groups_per_segment_46387 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46397 == 0) {
                    ((__global int32_t *) mem_45232)[gtid_37009] = x_acc_46410;
                }
            }
        } else {
            int32_t old_counter_46418;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46397 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_46392)[sext_i32_i64(virt_group_id_46407) *
                                                          segred_group_sizze_37029] =
                        x_acc_46410;
                    mem_fence_global();
                    old_counter_46418 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46394)[sext_i32_i64(srem32(flat_segment_id_46408,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46403)[(int64_t) 0] =
                        old_counter_46418 == groups_per_segment_46387 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46419;
            
            is_last_group_46419 = ((__local
                                    bool *) sync_arr_mem_46403)[(int64_t) 0];
            if (is_last_group_46419) {
                if (local_tid_46397 == 0) {
                    old_counter_46418 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46394)[sext_i32_i64(srem32(flat_segment_id_46408,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46387));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46420 =
                            sdiv_up64(groups_per_segment_46387,
                                      segred_group_sizze_37029);
                    
                    x_37033 = 0;
                    for (int64_t i_46421 = 0; i_46421 < read_per_thread_46420;
                         i_46421++) {
                        int64_t group_res_id_46422 =
                                sext_i32_i64(local_tid_46397) *
                                read_per_thread_46420 + i_46421;
                        int64_t index_of_group_res_46423 =
                                sext_i32_i64(flat_segment_id_46408) *
                                groups_per_segment_46387 + group_res_id_46422;
                        
                        if (slt64(group_res_id_46422,
                                  groups_per_segment_46387)) {
                            x_37034 = ((__global
                                        int32_t *) group_res_arr_mem_46392)[index_of_group_res_46423 *
                                                                            segred_group_sizze_37029];
                            
                            int32_t defunc_1_op_res_37035;
                            
                            defunc_1_op_res_37035 = add32(x_37033, x_37034);
                            x_37033 = defunc_1_op_res_37035;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397)] =
                    x_37033;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46424;
                    int32_t skip_waves_46425;
                    
                    skip_waves_46425 = 1;
                    
                    int32_t x_46412;
                    int32_t x_46413;
                    
                    offset_46424 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46397,
                                  sext_i64_i32(segred_group_sizze_37029))) {
                            x_46412 = ((__local
                                        int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397 +
                                                                      offset_46424)];
                        }
                    }
                    offset_46424 = 1;
                    while (slt32(offset_46424, wave_sizze_46399)) {
                        if (slt32(local_tid_46397 + offset_46424,
                                  sext_i64_i32(segred_group_sizze_37029)) &&
                            ((local_tid_46397 - squot32(local_tid_46397,
                                                        wave_sizze_46399) *
                              wave_sizze_46399) & (2 * offset_46424 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46413 = ((volatile __local
                                            int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397 +
                                                                          offset_46424)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_46414 = add32(x_46412,
                                                                      x_46413);
                                
                                x_46412 = defunc_1_op_res_46414;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397)] =
                                    x_46412;
                            }
                        }
                        offset_46424 *= 2;
                    }
                    while (slt32(skip_waves_46425,
                                 squot32(sext_i64_i32(segred_group_sizze_37029) +
                                         wave_sizze_46399 - 1,
                                         wave_sizze_46399))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46424 = skip_waves_46425 * wave_sizze_46399;
                        if (slt32(local_tid_46397 + offset_46424,
                                  sext_i64_i32(segred_group_sizze_37029)) &&
                            ((local_tid_46397 - squot32(local_tid_46397,
                                                        wave_sizze_46399) *
                              wave_sizze_46399) == 0 &&
                             (squot32(local_tid_46397, wave_sizze_46399) & (2 *
                                                                            skip_waves_46425 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46413 = ((__local
                                            int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397 +
                                                                          offset_46424)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_46414 = add32(x_46412,
                                                                      x_46413);
                                
                                x_46412 = defunc_1_op_res_46414;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_46401)[sext_i32_i64(local_tid_46397)] =
                                    x_46412;
                            }
                        }
                        skip_waves_46425 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46397 == 0) {
                            ((__global int32_t *) mem_45232)[gtid_37009] =
                                x_46412;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37029
}
__kernel void mainMagnitudezisegred_large_37181(__global int *global_failure,
                                                int failure_is_an_option,
                                                __global
                                                int64_t *global_failure_args,
                                                __local volatile
                                                int64_t *sync_arr_mem_46572_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46570_backing_aligned_1,
                                                int64_t N_28477,
                                                int64_t i32_res_28880,
                                                int64_t num_groups_37203,
                                                int64_t groups_per_segment_46556,
                                                int64_t elements_per_thread_46557,
                                                int64_t virt_num_groups_46558,
                                                int64_t threads_per_segment_46560,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_45178,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_45244,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_45245,
                                                __global
                                                unsigned char *mem_45278,
                                                __global
                                                unsigned char *group_res_arr_mem_46561,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_46563)
{
    #define segred_group_sizze_37202 (mainMagnitudezisegred_group_sizze_37175)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46572_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_46572_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46570_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46570_backing_aligned_1;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46565;
    int32_t local_tid_46566;
    int64_t group_sizze_46569;
    int32_t wave_sizze_46568;
    int32_t group_tid_46567;
    
    global_tid_46565 = get_global_id(0);
    local_tid_46566 = get_local_id(0);
    group_sizze_46569 = get_local_size(0);
    wave_sizze_46568 = LOCKSTEP_WIDTH;
    group_tid_46567 = get_group_id(0);
    
    int32_t phys_tid_37181;
    
    phys_tid_37181 = global_tid_46565;
    
    __local char *red_arr_mem_46570;
    
    red_arr_mem_46570 = (__local char *) red_arr_mem_46570_backing_0;
    
    __local char *sync_arr_mem_46572;
    
    sync_arr_mem_46572 = (__local char *) sync_arr_mem_46572_backing_1;
    
    int32_t phys_group_id_46574;
    
    phys_group_id_46574 = get_group_id(0);
    for (int32_t i_46575 = 0; i_46575 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46558) - phys_group_id_46574,
                   sext_i64_i32(num_groups_37203)); i_46575++) {
        int32_t virt_group_id_46576 = phys_group_id_46574 + i_46575 *
                sext_i64_i32(num_groups_37203);
        int32_t flat_segment_id_46577 = squot32(virt_group_id_46576,
                                                sext_i64_i32(groups_per_segment_46556));
        int64_t global_tid_46578 = srem64(sext_i32_i64(virt_group_id_46576) *
                                          segred_group_sizze_37202 +
                                          sext_i32_i64(local_tid_46566),
                                          segred_group_sizze_37202 *
                                          groups_per_segment_46556);
        int64_t gtid_37172 = sext_i32_i64(flat_segment_id_46577);
        int64_t gtid_37180;
        float x_acc_46579;
        int64_t chunk_sizze_46580;
        
        chunk_sizze_46580 = smin64(elements_per_thread_46557,
                                   sdiv_up64(i32_res_28880 -
                                             sext_i32_i64(sext_i64_i32(global_tid_46578)),
                                             threads_per_segment_46560));
        
        float x_37206;
        float x_37207;
        
        // neutral-initialise the accumulators
        {
            x_acc_46579 = 0.0F;
        }
        for (int64_t i_46584 = 0; i_46584 < chunk_sizze_46580; i_46584++) {
            gtid_37180 = sext_i32_i64(sext_i64_i32(global_tid_46578)) +
                threads_per_segment_46560 * i_46584;
            // apply map function
            {
                int32_t x_37211 = ((__global
                                    int32_t *) defunc_3_map_res_mem_45244)[gtid_37172];
                int32_t index_primexp_42390 = sext_i64_i32(gtid_37180);
                bool cond_37213 = slt32(index_primexp_42390, x_37211);
                float defunc_0_f_res_37214;
                
                if (cond_37213) {
                    int32_t x_37210 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_37172];
                    int32_t x_37215 = add32(x_37210, index_primexp_42390);
                    int32_t x_37216 = sub32(x_37215, x_37211);
                    int32_t i_37217 = add32(1, x_37216);
                    int64_t i_37218 = sext_i32_i64(i_37217);
                    bool x_37219 = sle64((int64_t) 0, i_37218);
                    bool y_37220 = slt64(i_37218, N_28477);
                    bool bounds_check_37221 = x_37219 && y_37220;
                    bool index_certs_37222;
                    
                    if (!bounds_check_37221) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          102) == -1) {
                                global_failure_args[0] = i_37218;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_37223 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_37172 *
                                                                                              N_28477 +
                                                                                              i_37218];
                    
                    defunc_0_f_res_37214 = defunc_0_f_res_t_res_37223;
                } else {
                    defunc_0_f_res_37214 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_37206 = x_acc_46579;
                }
                // load new values
                {
                    x_37207 = defunc_0_f_res_37214;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_37208 = x_37206 + x_37207;
                    
                    // store in accumulator
                    {
                        x_acc_46579 = defunc_1_op_res_37208;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37206 = x_acc_46579;
            ((__local
              float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566)] =
                x_37206;
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_46585;
        int32_t skip_waves_46586;
        
        skip_waves_46586 = 1;
        
        float x_46581;
        float x_46582;
        
        offset_46585 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_46566,
                      sext_i64_i32(segred_group_sizze_37202))) {
                x_46581 = ((__local
                            float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566 +
                                                        offset_46585)];
            }
        }
        offset_46585 = 1;
        while (slt32(offset_46585, wave_sizze_46568)) {
            if (slt32(local_tid_46566 + offset_46585,
                      sext_i64_i32(segred_group_sizze_37202)) &&
                ((local_tid_46566 - squot32(local_tid_46566, wave_sizze_46568) *
                  wave_sizze_46568) & (2 * offset_46585 - 1)) == 0) {
                // read array element
                {
                    x_46582 = ((volatile __local
                                float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566 +
                                                            offset_46585)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46583 = x_46581 + x_46582;
                    
                    x_46581 = defunc_1_op_res_46583;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566)] =
                        x_46581;
                }
            }
            offset_46585 *= 2;
        }
        while (slt32(skip_waves_46586,
                     squot32(sext_i64_i32(segred_group_sizze_37202) +
                             wave_sizze_46568 - 1, wave_sizze_46568))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_46585 = skip_waves_46586 * wave_sizze_46568;
            if (slt32(local_tid_46566 + offset_46585,
                      sext_i64_i32(segred_group_sizze_37202)) &&
                ((local_tid_46566 - squot32(local_tid_46566, wave_sizze_46568) *
                  wave_sizze_46568) == 0 && (squot32(local_tid_46566,
                                                     wave_sizze_46568) & (2 *
                                                                          skip_waves_46586 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_46582 = ((__local
                                float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566 +
                                                            offset_46585)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_46583 = x_46581 + x_46582;
                    
                    x_46581 = defunc_1_op_res_46583;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566)] =
                        x_46581;
                }
            }
            skip_waves_46586 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_46566) == (int64_t) 0) {
                x_acc_46579 = x_46581;
            }
        }
        if (groups_per_segment_46556 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46566 == 0) {
                    ((__global float *) mem_45278)[gtid_37172] = x_acc_46579;
                }
            }
        } else {
            int32_t old_counter_46587;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46566 == 0) {
                    ((__global
                      float *) group_res_arr_mem_46561)[sext_i32_i64(virt_group_id_46576) *
                                                        segred_group_sizze_37202] =
                        x_acc_46579;
                    mem_fence_global();
                    old_counter_46587 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46563)[sext_i32_i64(srem32(flat_segment_id_46577,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46572)[(int64_t) 0] =
                        old_counter_46587 == groups_per_segment_46556 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46588;
            
            is_last_group_46588 = ((__local
                                    bool *) sync_arr_mem_46572)[(int64_t) 0];
            if (is_last_group_46588) {
                if (local_tid_46566 == 0) {
                    old_counter_46587 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46563)[sext_i32_i64(srem32(flat_segment_id_46577,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46556));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46589 =
                            sdiv_up64(groups_per_segment_46556,
                                      segred_group_sizze_37202);
                    
                    x_37206 = 0.0F;
                    for (int64_t i_46590 = 0; i_46590 < read_per_thread_46589;
                         i_46590++) {
                        int64_t group_res_id_46591 =
                                sext_i32_i64(local_tid_46566) *
                                read_per_thread_46589 + i_46590;
                        int64_t index_of_group_res_46592 =
                                sext_i32_i64(flat_segment_id_46577) *
                                groups_per_segment_46556 + group_res_id_46591;
                        
                        if (slt64(group_res_id_46591,
                                  groups_per_segment_46556)) {
                            x_37207 = ((__global
                                        float *) group_res_arr_mem_46561)[index_of_group_res_46592 *
                                                                          segred_group_sizze_37202];
                            
                            float defunc_1_op_res_37208;
                            
                            defunc_1_op_res_37208 = x_37206 + x_37207;
                            x_37206 = defunc_1_op_res_37208;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566)] =
                    x_37206;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46593;
                    int32_t skip_waves_46594;
                    
                    skip_waves_46594 = 1;
                    
                    float x_46581;
                    float x_46582;
                    
                    offset_46593 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46566,
                                  sext_i64_i32(segred_group_sizze_37202))) {
                            x_46581 = ((__local
                                        float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566 +
                                                                    offset_46593)];
                        }
                    }
                    offset_46593 = 1;
                    while (slt32(offset_46593, wave_sizze_46568)) {
                        if (slt32(local_tid_46566 + offset_46593,
                                  sext_i64_i32(segred_group_sizze_37202)) &&
                            ((local_tid_46566 - squot32(local_tid_46566,
                                                        wave_sizze_46568) *
                              wave_sizze_46568) & (2 * offset_46593 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46582 = ((volatile __local
                                            float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566 +
                                                                        offset_46593)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46583 = x_46581 + x_46582;
                                
                                x_46581 = defunc_1_op_res_46583;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566)] =
                                    x_46581;
                            }
                        }
                        offset_46593 *= 2;
                    }
                    while (slt32(skip_waves_46594,
                                 squot32(sext_i64_i32(segred_group_sizze_37202) +
                                         wave_sizze_46568 - 1,
                                         wave_sizze_46568))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46593 = skip_waves_46594 * wave_sizze_46568;
                        if (slt32(local_tid_46566 + offset_46593,
                                  sext_i64_i32(segred_group_sizze_37202)) &&
                            ((local_tid_46566 - squot32(local_tid_46566,
                                                        wave_sizze_46568) *
                              wave_sizze_46568) == 0 &&
                             (squot32(local_tid_46566, wave_sizze_46568) & (2 *
                                                                            skip_waves_46594 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46582 = ((__local
                                            float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566 +
                                                                        offset_46593)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_46583 = x_46581 + x_46582;
                                
                                x_46581 = defunc_1_op_res_46583;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_46570)[sext_i32_i64(local_tid_46566)] =
                                    x_46581;
                            }
                        }
                        skip_waves_46594 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46566 == 0) {
                            ((__global float *) mem_45278)[gtid_37172] =
                                x_46581;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37202
}
__kernel void mainMagnitudezisegred_large_38300(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_46773_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46771_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_46769_backing_aligned_2,
                                                __local volatile
                                                int64_t *red_arr_mem_46767_backing_aligned_3,
                                                int64_t iota32_arg_28909,
                                                int64_t num_groups_38487,
                                                int64_t groups_per_segment_46749,
                                                int64_t elements_per_thread_46750,
                                                int64_t virt_num_groups_46751,
                                                __global
                                                unsigned char *mem_45284,
                                                __global
                                                unsigned char *mem_45337,
                                                __global
                                                unsigned char *mem_45339,
                                                __global
                                                unsigned char *mem_45343,
                                                __global
                                                unsigned char *mem_45346,
                                                __global
                                                unsigned char *mem_45348,
                                                __global
                                                unsigned char *mem_45350,
                                                __global
                                                unsigned char *group_res_arr_mem_46754,
                                                __global
                                                unsigned char *group_res_arr_mem_46756,
                                                __global
                                                unsigned char *group_res_arr_mem_46758,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_46760)
{
    #define segred_group_sizze_38486 (mainMagnitudezisegred_group_sizze_38294)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46773_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_46773_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46771_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46771_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46769_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46769_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_46767_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46767_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46762;
    int32_t local_tid_46763;
    int64_t group_sizze_46766;
    int32_t wave_sizze_46765;
    int32_t group_tid_46764;
    
    global_tid_46762 = get_global_id(0);
    local_tid_46763 = get_local_id(0);
    group_sizze_46766 = get_local_size(0);
    wave_sizze_46765 = LOCKSTEP_WIDTH;
    group_tid_46764 = get_group_id(0);
    
    int32_t phys_tid_38300;
    
    phys_tid_38300 = global_tid_46762;
    
    __local char *red_arr_mem_46767;
    
    red_arr_mem_46767 = (__local char *) red_arr_mem_46767_backing_0;
    
    __local char *red_arr_mem_46769;
    
    red_arr_mem_46769 = (__local char *) red_arr_mem_46769_backing_1;
    
    __local char *red_arr_mem_46771;
    
    red_arr_mem_46771 = (__local char *) red_arr_mem_46771_backing_2;
    
    __local char *sync_arr_mem_46773;
    
    sync_arr_mem_46773 = (__local char *) sync_arr_mem_46773_backing_3;
    
    int32_t phys_group_id_46775;
    
    phys_group_id_46775 = get_group_id(0);
    for (int32_t i_46776 = 0; i_46776 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46751) - phys_group_id_46775,
                   sext_i64_i32(num_groups_38487)); i_46776++) {
        int32_t virt_group_id_46777 = phys_group_id_46775 + i_46776 *
                sext_i64_i32(num_groups_38487);
        int32_t flat_segment_id_46778 = squot32(virt_group_id_46777,
                                                sext_i64_i32(groups_per_segment_46749));
        int64_t global_tid_46779 = srem64(sext_i32_i64(virt_group_id_46777) *
                                          segred_group_sizze_38486 +
                                          sext_i32_i64(local_tid_46763),
                                          segred_group_sizze_38486 *
                                          groups_per_segment_46749);
        int64_t gtid_38291 = sext_i32_i64(flat_segment_id_46778);
        int64_t gtid_38299;
        bool x_acc_46780;
        int32_t x_acc_46781;
        float x_acc_46782;
        int64_t chunk_sizze_46783;
        int64_t starting_point_46784;
        
        starting_point_46784 = sext_i32_i64(sext_i64_i32(global_tid_46779)) *
            elements_per_thread_46750;
        
        int64_t remaining_elements_46785;
        
        remaining_elements_46785 = iota32_arg_28909 - starting_point_46784;
        if (sle64(remaining_elements_46785, (int64_t) 0) ||
            sle64(iota32_arg_28909, starting_point_46784)) {
            chunk_sizze_46783 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_28909,
                      (sext_i32_i64(sext_i64_i32(global_tid_46779)) +
                       (int64_t) 1) * elements_per_thread_46750)) {
                chunk_sizze_46783 = iota32_arg_28909 -
                    sext_i32_i64(sext_i64_i32(global_tid_46779)) *
                    elements_per_thread_46750;
            } else {
                chunk_sizze_46783 = elements_per_thread_46750;
            }
        }
        
        bool x_38492;
        int32_t x_38493;
        float x_38494;
        bool x_38495;
        int32_t x_38496;
        float x_38497;
        
        // neutral-initialise the accumulators
        {
            x_acc_46780 = 0;
            x_acc_46781 = -1;
            x_acc_46782 = 0.0F;
        }
        for (int64_t i_46800 = 0; i_46800 < elements_per_thread_46750;
             i_46800++) {
            gtid_38299 = sext_i32_i64(local_tid_46763) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_46779),
                                      sext_i64_i32(segred_group_sizze_38486))) *
                 elements_per_thread_46750 + i_46800) *
                segred_group_sizze_38486;
            if (slt64(gtid_38299, iota32_arg_28909)) {
                // apply map function
                {
                    int32_t y_38506 = ((__global
                                        int32_t *) mem_45339)[gtid_38291];
                    float y_38507 = ((__global float *) mem_45337)[gtid_38291];
                    float x_38511 = ((__global float *) mem_45343)[gtid_38291 *
                                                                   iota32_arg_28909 +
                                                                   gtid_38299];
                    float x_38512 = ((__global float *) mem_45284)[gtid_38299];
                    int32_t index_primexp_42409 = sext_i64_i32(gtid_38299);
                    float defunc_0_f_res_38515 = x_38511 / y_38507;
                    bool cond_38516 = slt32(index_primexp_42409, y_38506);
                    bool isnan_res_38517;
                    
                    isnan_res_38517 = futrts_isnan32(defunc_0_f_res_38515);
                    
                    bool cond_t_res_38518 = !isnan_res_38517;
                    bool x_38519 = cond_38516 && cond_t_res_38518;
                    float abs_res_38520 = (float) fabs(defunc_0_f_res_38515);
                    bool defunc_2_f_res_t_res_38521 = x_38512 < abs_res_38520;
                    bool x_38522 = x_38519 && defunc_2_f_res_t_res_38521;
                    float defunc_1_f_res_38523;
                    
                    if (cond_38516) {
                        defunc_1_f_res_38523 = defunc_0_f_res_38515;
                    } else {
                        defunc_1_f_res_38523 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_38492 = x_acc_46780;
                        x_38493 = x_acc_46781;
                        x_38494 = x_acc_46782;
                    }
                    // load new values
                    {
                        x_38495 = x_38522;
                        x_38496 = index_primexp_42409;
                        x_38497 = defunc_1_f_res_38523;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_38498;
                        int32_t defunc_1_op_res_38499;
                        
                        if (x_38492) {
                            defunc_1_op_res_38498 = x_38492;
                            defunc_1_op_res_38499 = x_38493;
                        } else {
                            bool x_38500 = x_38495 && x_38495;
                            bool x_38501 = !x_38495;
                            bool y_38502 = x_38492 && x_38501;
                            bool defunc_1_op_res_f_res_38503 = x_38500 ||
                                 y_38502;
                            int32_t defunc_1_op_res_f_res_38504;
                            
                            if (x_38495) {
                                defunc_1_op_res_f_res_38504 = x_38496;
                            } else {
                                defunc_1_op_res_f_res_38504 = x_38493;
                            }
                            defunc_1_op_res_38498 = defunc_1_op_res_f_res_38503;
                            defunc_1_op_res_38499 = defunc_1_op_res_f_res_38504;
                        }
                        
                        float defunc_1_op_res_38505 = x_38494 + x_38497;
                        
                        // store in accumulator
                        {
                            x_acc_46780 = defunc_1_op_res_38498;
                            x_acc_46781 = defunc_1_op_res_38499;
                            x_acc_46782 = defunc_1_op_res_38505;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_38492 = x_acc_46780;
                x_38493 = x_acc_46781;
                x_38494 = x_acc_46782;
                ((__local
                  bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763)] =
                    x_38492;
                ((__local
                  int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763)] =
                    x_38493;
                ((__local
                  float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763)] =
                    x_38494;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_46801;
            int32_t skip_waves_46802;
            
            skip_waves_46802 = 1;
            
            bool x_46786;
            int32_t x_46787;
            float x_46788;
            bool x_46789;
            int32_t x_46790;
            float x_46791;
            
            offset_46801 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46763,
                          sext_i64_i32(segred_group_sizze_38486))) {
                    x_46786 = ((__local
                                bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763 +
                                                           offset_46801)];
                    x_46787 = ((__local
                                int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763 +
                                                              offset_46801)];
                    x_46788 = ((__local
                                float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763 +
                                                            offset_46801)];
                }
            }
            offset_46801 = 1;
            while (slt32(offset_46801, wave_sizze_46765)) {
                if (slt32(local_tid_46763 + offset_46801,
                          sext_i64_i32(segred_group_sizze_38486)) &&
                    ((local_tid_46763 - squot32(local_tid_46763,
                                                wave_sizze_46765) *
                      wave_sizze_46765) & (2 * offset_46801 - 1)) == 0) {
                    // read array element
                    {
                        x_46789 = ((volatile __local
                                    bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763 +
                                                               offset_46801)];
                        x_46790 = ((volatile __local
                                    int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763 +
                                                                  offset_46801)];
                        x_46791 = ((volatile __local
                                    float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763 +
                                                                offset_46801)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46792;
                        int32_t defunc_1_op_res_46793;
                        
                        if (x_46786) {
                            defunc_1_op_res_46792 = x_46786;
                            defunc_1_op_res_46793 = x_46787;
                        } else {
                            bool x_46794 = x_46789 && x_46789;
                            bool x_46795 = !x_46789;
                            bool y_46796 = x_46786 && x_46795;
                            bool defunc_1_op_res_f_res_46797 = x_46794 ||
                                 y_46796;
                            int32_t defunc_1_op_res_f_res_46798;
                            
                            if (x_46789) {
                                defunc_1_op_res_f_res_46798 = x_46790;
                            } else {
                                defunc_1_op_res_f_res_46798 = x_46787;
                            }
                            defunc_1_op_res_46792 = defunc_1_op_res_f_res_46797;
                            defunc_1_op_res_46793 = defunc_1_op_res_f_res_46798;
                        }
                        
                        float defunc_1_op_res_46799 = x_46788 + x_46791;
                        
                        x_46786 = defunc_1_op_res_46792;
                        x_46787 = defunc_1_op_res_46793;
                        x_46788 = defunc_1_op_res_46799;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763)] =
                            x_46786;
                        ((volatile __local
                          int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763)] =
                            x_46787;
                        ((volatile __local
                          float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763)] =
                            x_46788;
                    }
                }
                offset_46801 *= 2;
            }
            while (slt32(skip_waves_46802,
                         squot32(sext_i64_i32(segred_group_sizze_38486) +
                                 wave_sizze_46765 - 1, wave_sizze_46765))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46801 = skip_waves_46802 * wave_sizze_46765;
                if (slt32(local_tid_46763 + offset_46801,
                          sext_i64_i32(segred_group_sizze_38486)) &&
                    ((local_tid_46763 - squot32(local_tid_46763,
                                                wave_sizze_46765) *
                      wave_sizze_46765) == 0 && (squot32(local_tid_46763,
                                                         wave_sizze_46765) &
                                                 (2 * skip_waves_46802 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46789 = ((__local
                                    bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763 +
                                                               offset_46801)];
                        x_46790 = ((__local
                                    int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763 +
                                                                  offset_46801)];
                        x_46791 = ((__local
                                    float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763 +
                                                                offset_46801)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46792;
                        int32_t defunc_1_op_res_46793;
                        
                        if (x_46786) {
                            defunc_1_op_res_46792 = x_46786;
                            defunc_1_op_res_46793 = x_46787;
                        } else {
                            bool x_46794 = x_46789 && x_46789;
                            bool x_46795 = !x_46789;
                            bool y_46796 = x_46786 && x_46795;
                            bool defunc_1_op_res_f_res_46797 = x_46794 ||
                                 y_46796;
                            int32_t defunc_1_op_res_f_res_46798;
                            
                            if (x_46789) {
                                defunc_1_op_res_f_res_46798 = x_46790;
                            } else {
                                defunc_1_op_res_f_res_46798 = x_46787;
                            }
                            defunc_1_op_res_46792 = defunc_1_op_res_f_res_46797;
                            defunc_1_op_res_46793 = defunc_1_op_res_f_res_46798;
                        }
                        
                        float defunc_1_op_res_46799 = x_46788 + x_46791;
                        
                        x_46786 = defunc_1_op_res_46792;
                        x_46787 = defunc_1_op_res_46793;
                        x_46788 = defunc_1_op_res_46799;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763)] =
                            x_46786;
                        ((__local
                          int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763)] =
                            x_46787;
                        ((__local
                          float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763)] =
                            x_46788;
                    }
                }
                skip_waves_46802 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_46763) == (int64_t) 0) {
                    x_acc_46780 = x_46786;
                    x_acc_46781 = x_46787;
                    x_acc_46782 = x_46788;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_46763) == (int64_t) 0)) {
                    x_acc_46780 = 0;
                    x_acc_46781 = -1;
                    x_acc_46782 = 0.0F;
                }
            }
        }
        x_38492 = x_acc_46780;
        x_38493 = x_acc_46781;
        x_38494 = x_acc_46782;
        if (groups_per_segment_46749 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46763 == 0) {
                    ((__global bool *) mem_45346)[gtid_38291] = x_acc_46780;
                    ((__global int32_t *) mem_45348)[gtid_38291] = x_acc_46781;
                    ((__global float *) mem_45350)[gtid_38291] = x_acc_46782;
                }
            }
        } else {
            int32_t old_counter_46803;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46763 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_46754)[sext_i32_i64(virt_group_id_46777) *
                                                       segred_group_sizze_38486] =
                        x_acc_46780;
                    ((__global
                      int32_t *) group_res_arr_mem_46756)[sext_i32_i64(virt_group_id_46777) *
                                                          segred_group_sizze_38486] =
                        x_acc_46781;
                    ((__global
                      float *) group_res_arr_mem_46758)[sext_i32_i64(virt_group_id_46777) *
                                                        segred_group_sizze_38486] =
                        x_acc_46782;
                    mem_fence_global();
                    old_counter_46803 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46760)[sext_i32_i64(srem32(flat_segment_id_46778,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46773)[(int64_t) 0] =
                        old_counter_46803 == groups_per_segment_46749 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46804;
            
            is_last_group_46804 = ((__local
                                    bool *) sync_arr_mem_46773)[(int64_t) 0];
            if (is_last_group_46804) {
                if (local_tid_46763 == 0) {
                    old_counter_46803 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_46760)[sext_i32_i64(srem32(flat_segment_id_46778,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_46749));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46805 =
                            sdiv_up64(groups_per_segment_46749,
                                      segred_group_sizze_38486);
                    
                    x_38492 = 0;
                    x_38493 = -1;
                    x_38494 = 0.0F;
                    for (int64_t i_46806 = 0; i_46806 < read_per_thread_46805;
                         i_46806++) {
                        int64_t group_res_id_46807 =
                                sext_i32_i64(local_tid_46763) *
                                read_per_thread_46805 + i_46806;
                        int64_t index_of_group_res_46808 =
                                sext_i32_i64(flat_segment_id_46778) *
                                groups_per_segment_46749 + group_res_id_46807;
                        
                        if (slt64(group_res_id_46807,
                                  groups_per_segment_46749)) {
                            x_38495 = ((__global
                                        bool *) group_res_arr_mem_46754)[index_of_group_res_46808 *
                                                                         segred_group_sizze_38486];
                            x_38496 = ((__global
                                        int32_t *) group_res_arr_mem_46756)[index_of_group_res_46808 *
                                                                            segred_group_sizze_38486];
                            x_38497 = ((__global
                                        float *) group_res_arr_mem_46758)[index_of_group_res_46808 *
                                                                          segred_group_sizze_38486];
                            
                            bool defunc_1_op_res_38498;
                            int32_t defunc_1_op_res_38499;
                            
                            if (x_38492) {
                                defunc_1_op_res_38498 = x_38492;
                                defunc_1_op_res_38499 = x_38493;
                            } else {
                                bool x_38500 = x_38495 && x_38495;
                                bool x_38501 = !x_38495;
                                bool y_38502 = x_38492 && x_38501;
                                bool defunc_1_op_res_f_res_38503 = x_38500 ||
                                     y_38502;
                                int32_t defunc_1_op_res_f_res_38504;
                                
                                if (x_38495) {
                                    defunc_1_op_res_f_res_38504 = x_38496;
                                } else {
                                    defunc_1_op_res_f_res_38504 = x_38493;
                                }
                                defunc_1_op_res_38498 =
                                    defunc_1_op_res_f_res_38503;
                                defunc_1_op_res_38499 =
                                    defunc_1_op_res_f_res_38504;
                            }
                            
                            float defunc_1_op_res_38505 = x_38494 + x_38497;
                            
                            x_38492 = defunc_1_op_res_38498;
                            x_38493 = defunc_1_op_res_38499;
                            x_38494 = defunc_1_op_res_38505;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763)] =
                    x_38492;
                ((__local
                  int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763)] =
                    x_38493;
                ((__local
                  float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763)] =
                    x_38494;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46809;
                    int32_t skip_waves_46810;
                    
                    skip_waves_46810 = 1;
                    
                    bool x_46786;
                    int32_t x_46787;
                    float x_46788;
                    bool x_46789;
                    int32_t x_46790;
                    float x_46791;
                    
                    offset_46809 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46763,
                                  sext_i64_i32(segred_group_sizze_38486))) {
                            x_46786 = ((__local
                                        bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763 +
                                                                   offset_46809)];
                            x_46787 = ((__local
                                        int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763 +
                                                                      offset_46809)];
                            x_46788 = ((__local
                                        float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763 +
                                                                    offset_46809)];
                        }
                    }
                    offset_46809 = 1;
                    while (slt32(offset_46809, wave_sizze_46765)) {
                        if (slt32(local_tid_46763 + offset_46809,
                                  sext_i64_i32(segred_group_sizze_38486)) &&
                            ((local_tid_46763 - squot32(local_tid_46763,
                                                        wave_sizze_46765) *
                              wave_sizze_46765) & (2 * offset_46809 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46789 = ((volatile __local
                                            bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763 +
                                                                       offset_46809)];
                                x_46790 = ((volatile __local
                                            int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763 +
                                                                          offset_46809)];
                                x_46791 = ((volatile __local
                                            float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763 +
                                                                        offset_46809)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46792;
                                int32_t defunc_1_op_res_46793;
                                
                                if (x_46786) {
                                    defunc_1_op_res_46792 = x_46786;
                                    defunc_1_op_res_46793 = x_46787;
                                } else {
                                    bool x_46794 = x_46789 && x_46789;
                                    bool x_46795 = !x_46789;
                                    bool y_46796 = x_46786 && x_46795;
                                    bool defunc_1_op_res_f_res_46797 =
                                         x_46794 || y_46796;
                                    int32_t defunc_1_op_res_f_res_46798;
                                    
                                    if (x_46789) {
                                        defunc_1_op_res_f_res_46798 = x_46790;
                                    } else {
                                        defunc_1_op_res_f_res_46798 = x_46787;
                                    }
                                    defunc_1_op_res_46792 =
                                        defunc_1_op_res_f_res_46797;
                                    defunc_1_op_res_46793 =
                                        defunc_1_op_res_f_res_46798;
                                }
                                
                                float defunc_1_op_res_46799 = x_46788 + x_46791;
                                
                                x_46786 = defunc_1_op_res_46792;
                                x_46787 = defunc_1_op_res_46793;
                                x_46788 = defunc_1_op_res_46799;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763)] =
                                    x_46786;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763)] =
                                    x_46787;
                                ((volatile __local
                                  float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763)] =
                                    x_46788;
                            }
                        }
                        offset_46809 *= 2;
                    }
                    while (slt32(skip_waves_46810,
                                 squot32(sext_i64_i32(segred_group_sizze_38486) +
                                         wave_sizze_46765 - 1,
                                         wave_sizze_46765))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46809 = skip_waves_46810 * wave_sizze_46765;
                        if (slt32(local_tid_46763 + offset_46809,
                                  sext_i64_i32(segred_group_sizze_38486)) &&
                            ((local_tid_46763 - squot32(local_tid_46763,
                                                        wave_sizze_46765) *
                              wave_sizze_46765) == 0 &&
                             (squot32(local_tid_46763, wave_sizze_46765) & (2 *
                                                                            skip_waves_46810 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46789 = ((__local
                                            bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763 +
                                                                       offset_46809)];
                                x_46790 = ((__local
                                            int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763 +
                                                                          offset_46809)];
                                x_46791 = ((__local
                                            float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763 +
                                                                        offset_46809)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46792;
                                int32_t defunc_1_op_res_46793;
                                
                                if (x_46786) {
                                    defunc_1_op_res_46792 = x_46786;
                                    defunc_1_op_res_46793 = x_46787;
                                } else {
                                    bool x_46794 = x_46789 && x_46789;
                                    bool x_46795 = !x_46789;
                                    bool y_46796 = x_46786 && x_46795;
                                    bool defunc_1_op_res_f_res_46797 =
                                         x_46794 || y_46796;
                                    int32_t defunc_1_op_res_f_res_46798;
                                    
                                    if (x_46789) {
                                        defunc_1_op_res_f_res_46798 = x_46790;
                                    } else {
                                        defunc_1_op_res_f_res_46798 = x_46787;
                                    }
                                    defunc_1_op_res_46792 =
                                        defunc_1_op_res_f_res_46797;
                                    defunc_1_op_res_46793 =
                                        defunc_1_op_res_f_res_46798;
                                }
                                
                                float defunc_1_op_res_46799 = x_46788 + x_46791;
                                
                                x_46786 = defunc_1_op_res_46792;
                                x_46787 = defunc_1_op_res_46793;
                                x_46788 = defunc_1_op_res_46799;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_46767)[sext_i32_i64(local_tid_46763)] =
                                    x_46786;
                                ((__local
                                  int32_t *) red_arr_mem_46769)[sext_i32_i64(local_tid_46763)] =
                                    x_46787;
                                ((__local
                                  float *) red_arr_mem_46771)[sext_i32_i64(local_tid_46763)] =
                                    x_46788;
                            }
                        }
                        skip_waves_46810 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46763 == 0) {
                            ((__global bool *) mem_45346)[gtid_38291] = x_46786;
                            ((__global int32_t *) mem_45348)[gtid_38291] =
                                x_46787;
                            ((__global float *) mem_45350)[gtid_38291] =
                                x_46788;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38486
}
__kernel void mainMagnitudezisegred_nonseg_37091(__global int *global_failure,
                                                 __local volatile
                                                 int64_t *red_arr_mem_46506_backing_aligned_0,
                                                 __local volatile
                                                 int64_t *sync_arr_mem_46504_backing_aligned_1,
                                                 int64_t m_28478,
                                                 int64_t num_groups_37086,
                                                 int64_t num_threads_46498,
                                                 __global
                                                 unsigned char *defunc_3_map_res_mem_45244,
                                                 __global
                                                 unsigned char *mem_45249,
                                                 __global
                                                 unsigned char *mainMagnitudezicounter_mem_46494,
                                                 __global
                                                 unsigned char *group_res_arr_mem_46496)
{
    #define segred_group_sizze_37084 (mainMagnitudezisegred_group_sizze_37083)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46506_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46506_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_46504_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_46504_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46499;
    int32_t local_tid_46500;
    int64_t group_sizze_46503;
    int32_t wave_sizze_46502;
    int32_t group_tid_46501;
    
    global_tid_46499 = get_global_id(0);
    local_tid_46500 = get_local_id(0);
    group_sizze_46503 = get_local_size(0);
    wave_sizze_46502 = LOCKSTEP_WIDTH;
    group_tid_46501 = get_group_id(0);
    
    int32_t phys_tid_37091;
    
    phys_tid_37091 = global_tid_46499;
    
    __local char *sync_arr_mem_46504;
    
    sync_arr_mem_46504 = (__local char *) sync_arr_mem_46504_backing_0;
    
    __local char *red_arr_mem_46506;
    
    red_arr_mem_46506 = (__local char *) red_arr_mem_46506_backing_1;
    
    int64_t dummy_37089;
    
    dummy_37089 = (int64_t) 0;
    
    int64_t gtid_37090;
    
    gtid_37090 = (int64_t) 0;
    
    int32_t x_acc_46508;
    int64_t chunk_sizze_46509;
    
    chunk_sizze_46509 = smin64(sdiv_up64(m_28478,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_37084 *
                                         num_groups_37086))),
                               sdiv_up64(m_28478 - sext_i32_i64(phys_tid_37091),
                                         num_threads_46498));
    
    int32_t x_28876;
    int32_t x_28877;
    
    // neutral-initialise the accumulators
    {
        x_acc_46508 = 0;
    }
    for (int64_t i_46513 = 0; i_46513 < chunk_sizze_46509; i_46513++) {
        gtid_37090 = sext_i32_i64(phys_tid_37091) + num_threads_46498 * i_46513;
        // apply map function
        {
            int32_t x_28879 = ((__global
                                int32_t *) defunc_3_map_res_mem_45244)[gtid_37090];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28876 = x_acc_46508;
            }
            // load new values
            {
                x_28877 = x_28879;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28878 = smax32(x_28876, x_28877);
                
                // store in accumulator
                {
                    x_acc_46508 = defunc_1_op_res_28878;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28876 = x_acc_46508;
        ((__local int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500)] =
            x_28876;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_46514;
    int32_t skip_waves_46515;
    
    skip_waves_46515 = 1;
    
    int32_t x_46510;
    int32_t x_46511;
    
    offset_46514 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_46500, sext_i64_i32(segred_group_sizze_37084))) {
            x_46510 = ((__local
                        int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500 +
                                                      offset_46514)];
        }
    }
    offset_46514 = 1;
    while (slt32(offset_46514, wave_sizze_46502)) {
        if (slt32(local_tid_46500 + offset_46514,
                  sext_i64_i32(segred_group_sizze_37084)) && ((local_tid_46500 -
                                                               squot32(local_tid_46500,
                                                                       wave_sizze_46502) *
                                                               wave_sizze_46502) &
                                                              (2 *
                                                               offset_46514 -
                                                               1)) == 0) {
            // read array element
            {
                x_46511 = ((volatile __local
                            int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500 +
                                                          offset_46514)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_46512 = smax32(x_46510, x_46511);
                
                x_46510 = defunc_1_op_res_46512;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500)] =
                    x_46510;
            }
        }
        offset_46514 *= 2;
    }
    while (slt32(skip_waves_46515,
                 squot32(sext_i64_i32(segred_group_sizze_37084) +
                         wave_sizze_46502 - 1, wave_sizze_46502))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_46514 = skip_waves_46515 * wave_sizze_46502;
        if (slt32(local_tid_46500 + offset_46514,
                  sext_i64_i32(segred_group_sizze_37084)) && ((local_tid_46500 -
                                                               squot32(local_tid_46500,
                                                                       wave_sizze_46502) *
                                                               wave_sizze_46502) ==
                                                              0 &&
                                                              (squot32(local_tid_46500,
                                                                       wave_sizze_46502) &
                                                               (2 *
                                                                skip_waves_46515 -
                                                                1)) == 0)) {
            // read array element
            {
                x_46511 = ((__local
                            int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500 +
                                                          offset_46514)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_46512 = smax32(x_46510, x_46511);
                
                x_46510 = defunc_1_op_res_46512;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500)] =
                    x_46510;
            }
        }
        skip_waves_46515 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_46500) == (int64_t) 0) {
            x_acc_46508 = x_46510;
        }
    }
    
    int32_t old_counter_46516;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_46500 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_46496)[sext_i32_i64(group_tid_46501) *
                                                  segred_group_sizze_37084] =
                x_acc_46508;
            mem_fence_global();
            old_counter_46516 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_46494)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_46504)[(int64_t) 0] =
                old_counter_46516 == num_groups_37086 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_46517;
    
    is_last_group_46517 = ((__local bool *) sync_arr_mem_46504)[(int64_t) 0];
    if (is_last_group_46517) {
        if (local_tid_46500 == 0) {
            old_counter_46516 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_46494)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_37086));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_46518 = sdiv_up64(num_groups_37086,
                                                      segred_group_sizze_37084);
            
            x_28876 = 0;
            for (int64_t i_46519 = 0; i_46519 < read_per_thread_46518;
                 i_46519++) {
                int64_t group_res_id_46520 = sext_i32_i64(local_tid_46500) *
                        read_per_thread_46518 + i_46519;
                int64_t index_of_group_res_46521 = group_res_id_46520;
                
                if (slt64(group_res_id_46520, num_groups_37086)) {
                    x_28877 = ((__global
                                int32_t *) group_res_arr_mem_46496)[index_of_group_res_46521 *
                                                                    segred_group_sizze_37084];
                    
                    int32_t defunc_1_op_res_28878;
                    
                    defunc_1_op_res_28878 = smax32(x_28876, x_28877);
                    x_28876 = defunc_1_op_res_28878;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500)] =
            x_28876;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_46522;
            int32_t skip_waves_46523;
            
            skip_waves_46523 = 1;
            
            int32_t x_46510;
            int32_t x_46511;
            
            offset_46522 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46500,
                          sext_i64_i32(segred_group_sizze_37084))) {
                    x_46510 = ((__local
                                int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500 +
                                                              offset_46522)];
                }
            }
            offset_46522 = 1;
            while (slt32(offset_46522, wave_sizze_46502)) {
                if (slt32(local_tid_46500 + offset_46522,
                          sext_i64_i32(segred_group_sizze_37084)) &&
                    ((local_tid_46500 - squot32(local_tid_46500,
                                                wave_sizze_46502) *
                      wave_sizze_46502) & (2 * offset_46522 - 1)) == 0) {
                    // read array element
                    {
                        x_46511 = ((volatile __local
                                    int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500 +
                                                                  offset_46522)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_46512 = smax32(x_46510,
                                                               x_46511);
                        
                        x_46510 = defunc_1_op_res_46512;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500)] =
                            x_46510;
                    }
                }
                offset_46522 *= 2;
            }
            while (slt32(skip_waves_46523,
                         squot32(sext_i64_i32(segred_group_sizze_37084) +
                                 wave_sizze_46502 - 1, wave_sizze_46502))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46522 = skip_waves_46523 * wave_sizze_46502;
                if (slt32(local_tid_46500 + offset_46522,
                          sext_i64_i32(segred_group_sizze_37084)) &&
                    ((local_tid_46500 - squot32(local_tid_46500,
                                                wave_sizze_46502) *
                      wave_sizze_46502) == 0 && (squot32(local_tid_46500,
                                                         wave_sizze_46502) &
                                                 (2 * skip_waves_46523 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46511 = ((__local
                                    int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500 +
                                                                  offset_46522)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_46512 = smax32(x_46510,
                                                               x_46511);
                        
                        x_46510 = defunc_1_op_res_46512;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_46506)[sext_i32_i64(local_tid_46500)] =
                            x_46510;
                    }
                }
                skip_waves_46523 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_46500 == 0) {
                    ((__global int32_t *) mem_45249)[(int64_t) 0] = x_46510;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37084
}
__kernel void mainMagnitudezisegred_small_34797(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45764_backing_aligned_0,
                                                int64_t N_28477,
                                                int64_t m_28478,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_34936,
                                                int64_t segment_sizze_nonzzero_45757,
                                                __global
                                                unsigned char *images_mem_44381,
                                                __global
                                                unsigned char *binop_p_mem_44390,
                                                __global
                                                unsigned char *mem_44531,
                                                __global
                                                unsigned char *mem_44536)
{
    #define segred_group_sizze_34935 (mainMagnitudezisegred_group_sizze_34791)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45764_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45764_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45759;
    int32_t local_tid_45760;
    int64_t group_sizze_45763;
    int32_t wave_sizze_45762;
    int32_t group_tid_45761;
    
    global_tid_45759 = get_global_id(0);
    local_tid_45760 = get_local_id(0);
    group_sizze_45763 = get_local_size(0);
    wave_sizze_45762 = LOCKSTEP_WIDTH;
    group_tid_45761 = get_group_id(0);
    
    int32_t phys_tid_34797;
    
    phys_tid_34797 = global_tid_45759;
    
    __local char *red_arr_mem_45764;
    
    red_arr_mem_45764 = (__local char *) red_arr_mem_45764_backing_0;
    
    int32_t phys_group_id_45766;
    
    phys_group_id_45766 = get_group_id(0);
    for (int32_t i_45767 = 0; i_45767 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478 * i32_res_28493 *
                                          i32_res_28493,
                                          squot64(segred_group_sizze_34935,
                                                  segment_sizze_nonzzero_45757))) -
                   phys_group_id_45766, sext_i64_i32(num_groups_34936));
         i_45767++) {
        int32_t virt_group_id_45768 = phys_group_id_45766 + i_45767 *
                sext_i64_i32(num_groups_34936);
        int64_t gtid_34784 = squot64(squot64(sext_i32_i64(local_tid_45760),
                                             segment_sizze_nonzzero_45757) +
                                     sext_i32_i64(virt_group_id_45768) *
                                     squot64(segred_group_sizze_34935,
                                             segment_sizze_nonzzero_45757),
                                     i32_res_28493 * i32_res_28493);
        int64_t gtid_34785 = squot64(squot64(sext_i32_i64(local_tid_45760),
                                             segment_sizze_nonzzero_45757) +
                                     sext_i32_i64(virt_group_id_45768) *
                                     squot64(segred_group_sizze_34935,
                                             segment_sizze_nonzzero_45757) -
                                     squot64(squot64(sext_i32_i64(local_tid_45760),
                                                     segment_sizze_nonzzero_45757) +
                                             sext_i32_i64(virt_group_id_45768) *
                                             squot64(segred_group_sizze_34935,
                                                     segment_sizze_nonzzero_45757),
                                             i32_res_28493 * i32_res_28493) *
                                     (i32_res_28493 * i32_res_28493),
                                     i32_res_28493);
        int64_t gtid_34786 = squot64(sext_i32_i64(local_tid_45760),
                                     segment_sizze_nonzzero_45757) +
                sext_i32_i64(virt_group_id_45768) *
                squot64(segred_group_sizze_34935,
                        segment_sizze_nonzzero_45757) -
                squot64(squot64(sext_i32_i64(local_tid_45760),
                                segment_sizze_nonzzero_45757) +
                        sext_i32_i64(virt_group_id_45768) *
                        squot64(segred_group_sizze_34935,
                                segment_sizze_nonzzero_45757), i32_res_28493 *
                        i32_res_28493) * (i32_res_28493 * i32_res_28493) -
                squot64(squot64(sext_i32_i64(local_tid_45760),
                                segment_sizze_nonzzero_45757) +
                        sext_i32_i64(virt_group_id_45768) *
                        squot64(segred_group_sizze_34935,
                                segment_sizze_nonzzero_45757) -
                        squot64(squot64(sext_i32_i64(local_tid_45760),
                                        segment_sizze_nonzzero_45757) +
                                sext_i32_i64(virt_group_id_45768) *
                                squot64(segred_group_sizze_34935,
                                        segment_sizze_nonzzero_45757),
                                i32_res_28493 * i32_res_28493) *
                        (i32_res_28493 * i32_res_28493), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_34796 = srem64(sext_i32_i64(local_tid_45760),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28487) && (((slt64(gtid_34784,
                                                              m_28478) &&
                                                        slt64(gtid_34785,
                                                              i32_res_28493)) &&
                                                       slt64(gtid_34786,
                                                             i32_res_28493)) &&
                                                      slt64(sext_i32_i64(local_tid_45760),
                                                            i32_res_28487 *
                                                            squot64(segred_group_sizze_34935,
                                                                    segment_sizze_nonzzero_45757)))) {
                float x_34945 = ((__global
                                  float *) images_mem_44381)[gtid_34784 *
                                                             N_28477 +
                                                             gtid_34796];
                float x_34946 = ((__global
                                  float *) binop_p_mem_44390)[gtid_34785 *
                                                              N_28477 +
                                                              gtid_34796];
                float x_34947 = ((__global float *) mem_44531)[gtid_34786 *
                                                               N_28477 +
                                                               gtid_34796];
                float x_34948 = x_34946 * x_34947;
                bool isnan_res_34949;
                
                isnan_res_34949 = futrts_isnan32(x_34945);
                
                float y_34950;
                
                if (isnan_res_34949) {
                    y_34950 = 0.0F;
                } else {
                    y_34950 = 1.0F;
                }
                
                float defunc_2_f_res_34951 = x_34948 * y_34950;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)] =
                        defunc_2_f_res_34951;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                float x_34939;
                float x_34940;
                float x_45769;
                float x_45770;
                bool ltid_in_bounds_45772;
                
                ltid_in_bounds_45772 = slt64(sext_i32_i64(local_tid_45760),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_34935,
                                                     segment_sizze_nonzzero_45757));
                
                int32_t skip_threads_45773;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45772) {
                        x_34940 = ((volatile __local
                                    float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)];
                        if ((local_tid_45760 - squot32(local_tid_45760, 32) *
                             32) == 0) {
                            x_34939 = x_34940;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45773 = 1;
                    while (slt32(skip_threads_45773, 32)) {
                        if (sle32(skip_threads_45773, local_tid_45760 -
                                  squot32(local_tid_45760, 32) * 32) &&
                            ltid_in_bounds_45772) {
                            // read operands
                            {
                                x_34939 = ((volatile __local
                                            float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760) -
                                                                        sext_i32_i64(skip_threads_45773)];
                            }
                            // perform operation
                            {
                                bool inactive_45774 =
                                     slt64(srem64(sext_i32_i64(local_tid_45760),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_45760) -
                                           sext_i32_i64(local_tid_45760 -
                                           skip_threads_45773));
                                
                                if (inactive_45774) {
                                    x_34939 = x_34940;
                                }
                                if (!inactive_45774) {
                                    float defunc_1_op_res_34941 = x_34939 +
                                          x_34940;
                                    
                                    x_34939 = defunc_1_op_res_34941;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45762, skip_threads_45773)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45773, local_tid_45760 -
                                  squot32(local_tid_45760, 32) * 32) &&
                            ltid_in_bounds_45772) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)] =
                                    x_34939;
                                x_34940 = x_34939;
                            }
                        }
                        if (sle32(wave_sizze_45762, skip_threads_45773)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45773 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45760 - squot32(local_tid_45760, 32) * 32) ==
                        31 && ltid_in_bounds_45772) {
                        ((volatile __local
                          float *) red_arr_mem_45764)[sext_i32_i64(squot32(local_tid_45760,
                                                                           32))] =
                            x_34939;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45775;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45760, 32) == 0 &&
                            ltid_in_bounds_45772) {
                            x_45770 = ((volatile __local
                                        float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)];
                            if ((local_tid_45760 - squot32(local_tid_45760,
                                                           32) * 32) == 0) {
                                x_45769 = x_45770;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45775 = 1;
                        while (slt32(skip_threads_45775, 32)) {
                            if (sle32(skip_threads_45775, local_tid_45760 -
                                      squot32(local_tid_45760, 32) * 32) &&
                                (squot32(local_tid_45760, 32) == 0 &&
                                 ltid_in_bounds_45772)) {
                                // read operands
                                {
                                    x_45769 = ((volatile __local
                                                float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760) -
                                                                            sext_i32_i64(skip_threads_45775)];
                                }
                                // perform operation
                                {
                                    bool inactive_45776 =
                                         slt64(srem64(sext_i32_i64(local_tid_45760 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_45760 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45760 -
                                                             skip_threads_45775) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45776) {
                                        x_45769 = x_45770;
                                    }
                                    if (!inactive_45776) {
                                        float defunc_1_op_res_45771 = x_45769 +
                                              x_45770;
                                        
                                        x_45769 = defunc_1_op_res_45771;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45762, skip_threads_45775)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45775, local_tid_45760 -
                                      squot32(local_tid_45760, 32) * 32) &&
                                (squot32(local_tid_45760, 32) == 0 &&
                                 ltid_in_bounds_45772)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)] =
                                        x_45769;
                                    x_45770 = x_45769;
                                }
                            }
                            if (sle32(wave_sizze_45762, skip_threads_45775)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45775 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45760, 32) == 0 ||
                          !ltid_in_bounds_45772)) {
                        // read operands
                        {
                            x_34940 = x_34939;
                            x_34939 = ((__local
                                        float *) red_arr_mem_45764)[sext_i32_i64(squot32(local_tid_45760,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45777 =
                                 slt64(srem64(sext_i32_i64(local_tid_45760),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_45760) -
                                       sext_i32_i64(squot32(local_tid_45760,
                                                            32) * 32 - 1));
                            
                            if (inactive_45777) {
                                x_34939 = x_34940;
                            }
                            if (!inactive_45777) {
                                float defunc_1_op_res_34941 = x_34939 + x_34940;
                                
                                x_34939 = defunc_1_op_res_34941;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)] =
                                x_34939;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45760, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45764)[sext_i32_i64(local_tid_45760)] =
                            x_34940;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45768) *
                      squot64(segred_group_sizze_34935,
                              segment_sizze_nonzzero_45757) +
                      sext_i32_i64(local_tid_45760), m_28478 * i32_res_28493 *
                      i32_res_28493) && slt64(sext_i32_i64(local_tid_45760),
                                              squot64(segred_group_sizze_34935,
                                                      segment_sizze_nonzzero_45757))) {
                ((__global
                  float *) mem_44536)[squot64(sext_i32_i64(virt_group_id_45768) *
                                              squot64(segred_group_sizze_34935,
                                                      segment_sizze_nonzzero_45757) +
                                              sext_i32_i64(local_tid_45760),
                                              i32_res_28493 * i32_res_28493) *
                                      (i32_res_28493 * i32_res_28493) +
                                      squot64(sext_i32_i64(virt_group_id_45768) *
                                              squot64(segred_group_sizze_34935,
                                                      segment_sizze_nonzzero_45757) +
                                              sext_i32_i64(local_tid_45760) -
                                              squot64(sext_i32_i64(virt_group_id_45768) *
                                                      squot64(segred_group_sizze_34935,
                                                              segment_sizze_nonzzero_45757) +
                                                      sext_i32_i64(local_tid_45760),
                                                      i32_res_28493 *
                                                      i32_res_28493) *
                                              (i32_res_28493 * i32_res_28493),
                                              i32_res_28493) * i32_res_28493 +
                                      (sext_i32_i64(virt_group_id_45768) *
                                       squot64(segred_group_sizze_34935,
                                               segment_sizze_nonzzero_45757) +
                                       sext_i32_i64(local_tid_45760) -
                                       squot64(sext_i32_i64(virt_group_id_45768) *
                                               squot64(segred_group_sizze_34935,
                                                       segment_sizze_nonzzero_45757) +
                                               sext_i32_i64(local_tid_45760),
                                               i32_res_28493 * i32_res_28493) *
                                       (i32_res_28493 * i32_res_28493) -
                                       squot64(sext_i32_i64(virt_group_id_45768) *
                                               squot64(segred_group_sizze_34935,
                                                       segment_sizze_nonzzero_45757) +
                                               sext_i32_i64(local_tid_45760) -
                                               squot64(sext_i32_i64(virt_group_id_45768) *
                                                       squot64(segred_group_sizze_34935,
                                                               segment_sizze_nonzzero_45757) +
                                                       sext_i32_i64(local_tid_45760),
                                                       i32_res_28493 *
                                                       i32_res_28493) *
                                               (i32_res_28493 * i32_res_28493),
                                               i32_res_28493) *
                                       i32_res_28493)] = ((__local
                                                           float *) red_arr_mem_45764)[(sext_i32_i64(local_tid_45760) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_45757 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34935
}
__kernel void mainMagnitudezisegred_small_36148(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45961_backing_aligned_0,
                                                int64_t N_28477,
                                                int64_t m_28478,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_36201,
                                                int64_t segment_sizze_nonzzero_45954,
                                                __global
                                                unsigned char *images_mem_44381,
                                                __global
                                                unsigned char *binop_p_mem_44390,
                                                __global
                                                unsigned char *mem_44844)
{
    #define segred_group_sizze_36200 (mainMagnitudezisegred_group_sizze_36142)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45961_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45961_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45956;
    int32_t local_tid_45957;
    int64_t group_sizze_45960;
    int32_t wave_sizze_45959;
    int32_t group_tid_45958;
    
    global_tid_45956 = get_global_id(0);
    local_tid_45957 = get_local_id(0);
    group_sizze_45960 = get_local_size(0);
    wave_sizze_45959 = LOCKSTEP_WIDTH;
    group_tid_45958 = get_group_id(0);
    
    int32_t phys_tid_36148;
    
    phys_tid_36148 = global_tid_45956;
    
    __local char *red_arr_mem_45961;
    
    red_arr_mem_45961 = (__local char *) red_arr_mem_45961_backing_0;
    
    int32_t phys_group_id_45963;
    
    phys_group_id_45963 = get_group_id(0);
    for (int32_t i_45964 = 0; i_45964 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478 * i32_res_28493,
                                          squot64(segred_group_sizze_36200,
                                                  segment_sizze_nonzzero_45954))) -
                   phys_group_id_45963, sext_i64_i32(num_groups_36201));
         i_45964++) {
        int32_t virt_group_id_45965 = phys_group_id_45963 + i_45964 *
                sext_i64_i32(num_groups_36201);
        int64_t gtid_36137 = squot64(squot64(sext_i32_i64(local_tid_45957),
                                             segment_sizze_nonzzero_45954) +
                                     sext_i32_i64(virt_group_id_45965) *
                                     squot64(segred_group_sizze_36200,
                                             segment_sizze_nonzzero_45954),
                                     i32_res_28493);
        int64_t gtid_36138 = squot64(sext_i32_i64(local_tid_45957),
                                     segment_sizze_nonzzero_45954) +
                sext_i32_i64(virt_group_id_45965) *
                squot64(segred_group_sizze_36200,
                        segment_sizze_nonzzero_45954) -
                squot64(squot64(sext_i32_i64(local_tid_45957),
                                segment_sizze_nonzzero_45954) +
                        sext_i32_i64(virt_group_id_45965) *
                        squot64(segred_group_sizze_36200,
                                segment_sizze_nonzzero_45954), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_36147 = srem64(sext_i32_i64(local_tid_45957),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28487) && ((slt64(gtid_36137,
                                                             m_28478) &&
                                                       slt64(gtid_36138,
                                                             i32_res_28493)) &&
                                                      slt64(sext_i32_i64(local_tid_45957),
                                                            i32_res_28487 *
                                                            squot64(segred_group_sizze_36200,
                                                                    segment_sizze_nonzzero_45954)))) {
                float x_36210 = ((__global
                                  float *) images_mem_44381)[gtid_36137 *
                                                             N_28477 +
                                                             gtid_36147];
                bool isnan_res_36211;
                
                isnan_res_36211 = futrts_isnan32(x_36210);
                
                float defunc_1_f_res_36212;
                
                if (isnan_res_36211) {
                    defunc_1_f_res_36212 = 0.0F;
                } else {
                    float x_36209 = ((__global
                                      float *) binop_p_mem_44390)[gtid_36138 *
                                                                  N_28477 +
                                                                  gtid_36147];
                    float defunc_1_f_res_f_res_36213 = x_36209 * x_36210;
                    
                    defunc_1_f_res_36212 = defunc_1_f_res_f_res_36213;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)] =
                        defunc_1_f_res_36212;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                float x_36204;
                float x_36205;
                float x_45966;
                float x_45967;
                bool ltid_in_bounds_45969;
                
                ltid_in_bounds_45969 = slt64(sext_i32_i64(local_tid_45957),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_36200,
                                                     segment_sizze_nonzzero_45954));
                
                int32_t skip_threads_45970;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45969) {
                        x_36205 = ((volatile __local
                                    float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)];
                        if ((local_tid_45957 - squot32(local_tid_45957, 32) *
                             32) == 0) {
                            x_36204 = x_36205;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45970 = 1;
                    while (slt32(skip_threads_45970, 32)) {
                        if (sle32(skip_threads_45970, local_tid_45957 -
                                  squot32(local_tid_45957, 32) * 32) &&
                            ltid_in_bounds_45969) {
                            // read operands
                            {
                                x_36204 = ((volatile __local
                                            float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957) -
                                                                        sext_i32_i64(skip_threads_45970)];
                            }
                            // perform operation
                            {
                                bool inactive_45971 =
                                     slt64(srem64(sext_i32_i64(local_tid_45957),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_45957) -
                                           sext_i32_i64(local_tid_45957 -
                                           skip_threads_45970));
                                
                                if (inactive_45971) {
                                    x_36204 = x_36205;
                                }
                                if (!inactive_45971) {
                                    float defunc_1_op_res_36206 = x_36204 +
                                          x_36205;
                                    
                                    x_36204 = defunc_1_op_res_36206;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45959, skip_threads_45970)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45970, local_tid_45957 -
                                  squot32(local_tid_45957, 32) * 32) &&
                            ltid_in_bounds_45969) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)] =
                                    x_36204;
                                x_36205 = x_36204;
                            }
                        }
                        if (sle32(wave_sizze_45959, skip_threads_45970)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45970 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45957 - squot32(local_tid_45957, 32) * 32) ==
                        31 && ltid_in_bounds_45969) {
                        ((volatile __local
                          float *) red_arr_mem_45961)[sext_i32_i64(squot32(local_tid_45957,
                                                                           32))] =
                            x_36204;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45972;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45957, 32) == 0 &&
                            ltid_in_bounds_45969) {
                            x_45967 = ((volatile __local
                                        float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)];
                            if ((local_tid_45957 - squot32(local_tid_45957,
                                                           32) * 32) == 0) {
                                x_45966 = x_45967;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45972 = 1;
                        while (slt32(skip_threads_45972, 32)) {
                            if (sle32(skip_threads_45972, local_tid_45957 -
                                      squot32(local_tid_45957, 32) * 32) &&
                                (squot32(local_tid_45957, 32) == 0 &&
                                 ltid_in_bounds_45969)) {
                                // read operands
                                {
                                    x_45966 = ((volatile __local
                                                float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957) -
                                                                            sext_i32_i64(skip_threads_45972)];
                                }
                                // perform operation
                                {
                                    bool inactive_45973 =
                                         slt64(srem64(sext_i32_i64(local_tid_45957 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_45957 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45957 -
                                                             skip_threads_45972) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45973) {
                                        x_45966 = x_45967;
                                    }
                                    if (!inactive_45973) {
                                        float defunc_1_op_res_45968 = x_45966 +
                                              x_45967;
                                        
                                        x_45966 = defunc_1_op_res_45968;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45959, skip_threads_45972)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45972, local_tid_45957 -
                                      squot32(local_tid_45957, 32) * 32) &&
                                (squot32(local_tid_45957, 32) == 0 &&
                                 ltid_in_bounds_45969)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)] =
                                        x_45966;
                                    x_45967 = x_45966;
                                }
                            }
                            if (sle32(wave_sizze_45959, skip_threads_45972)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45972 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45957, 32) == 0 ||
                          !ltid_in_bounds_45969)) {
                        // read operands
                        {
                            x_36205 = x_36204;
                            x_36204 = ((__local
                                        float *) red_arr_mem_45961)[sext_i32_i64(squot32(local_tid_45957,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45974 =
                                 slt64(srem64(sext_i32_i64(local_tid_45957),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_45957) -
                                       sext_i32_i64(squot32(local_tid_45957,
                                                            32) * 32 - 1));
                            
                            if (inactive_45974) {
                                x_36204 = x_36205;
                            }
                            if (!inactive_45974) {
                                float defunc_1_op_res_36206 = x_36204 + x_36205;
                                
                                x_36204 = defunc_1_op_res_36206;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)] =
                                x_36204;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45957, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45961)[sext_i32_i64(local_tid_45957)] =
                            x_36205;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45965) *
                      squot64(segred_group_sizze_36200,
                              segment_sizze_nonzzero_45954) +
                      sext_i32_i64(local_tid_45957), m_28478 * i32_res_28493) &&
                slt64(sext_i32_i64(local_tid_45957),
                      squot64(segred_group_sizze_36200,
                              segment_sizze_nonzzero_45954))) {
                ((__global
                  float *) mem_44844)[squot64(sext_i32_i64(virt_group_id_45965) *
                                              squot64(segred_group_sizze_36200,
                                                      segment_sizze_nonzzero_45954) +
                                              sext_i32_i64(local_tid_45957),
                                              i32_res_28493) * i32_res_28493 +
                                      (sext_i32_i64(virt_group_id_45965) *
                                       squot64(segred_group_sizze_36200,
                                               segment_sizze_nonzzero_45954) +
                                       sext_i32_i64(local_tid_45957) -
                                       squot64(sext_i32_i64(virt_group_id_45965) *
                                               squot64(segred_group_sizze_36200,
                                                       segment_sizze_nonzzero_45954) +
                                               sext_i32_i64(local_tid_45957),
                                               i32_res_28493) *
                                       i32_res_28493)] = ((__local
                                                           float *) red_arr_mem_45961)[(sext_i32_i64(local_tid_45957) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_45954 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36200
}
__kernel void mainMagnitudezisegred_small_36285(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_46049_backing_aligned_0,
                                                int64_t m_28478,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_36334,
                                                int64_t segment_sizze_nonzzero_46042,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44629,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44850,
                                                __global
                                                unsigned char *mem_44910)
{
    #define segred_group_sizze_36333 (mainMagnitudezisegred_group_sizze_36279)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46049_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46049_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46044;
    int32_t local_tid_46045;
    int64_t group_sizze_46048;
    int32_t wave_sizze_46047;
    int32_t group_tid_46046;
    
    global_tid_46044 = get_global_id(0);
    local_tid_46045 = get_local_id(0);
    group_sizze_46048 = get_local_size(0);
    wave_sizze_46047 = LOCKSTEP_WIDTH;
    group_tid_46046 = get_group_id(0);
    
    int32_t phys_tid_36285;
    
    phys_tid_36285 = global_tid_46044;
    
    __local char *red_arr_mem_46049;
    
    red_arr_mem_46049 = (__local char *) red_arr_mem_46049_backing_0;
    
    int32_t phys_group_id_46051;
    
    phys_group_id_46051 = get_group_id(0);
    for (int32_t i_46052 = 0; i_46052 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478 * i32_res_28493,
                                          squot64(segred_group_sizze_36333,
                                                  segment_sizze_nonzzero_46042))) -
                   phys_group_id_46051, sext_i64_i32(num_groups_36334));
         i_46052++) {
        int32_t virt_group_id_46053 = phys_group_id_46051 + i_46052 *
                sext_i64_i32(num_groups_36334);
        int64_t gtid_36274 = squot64(squot64(sext_i32_i64(local_tid_46045),
                                             segment_sizze_nonzzero_46042) +
                                     sext_i32_i64(virt_group_id_46053) *
                                     squot64(segred_group_sizze_36333,
                                             segment_sizze_nonzzero_46042),
                                     i32_res_28493);
        int64_t gtid_36275 = squot64(sext_i32_i64(local_tid_46045),
                                     segment_sizze_nonzzero_46042) +
                sext_i32_i64(virt_group_id_46053) *
                squot64(segred_group_sizze_36333,
                        segment_sizze_nonzzero_46042) -
                squot64(squot64(sext_i32_i64(local_tid_46045),
                                segment_sizze_nonzzero_46042) +
                        sext_i32_i64(virt_group_id_46053) *
                        squot64(segred_group_sizze_36333,
                                segment_sizze_nonzzero_46042), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_36284 = srem64(sext_i32_i64(local_tid_46045),
                                    i32_res_28493);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28493) && ((slt64(gtid_36274,
                                                             m_28478) &&
                                                       slt64(gtid_36275,
                                                             i32_res_28493)) &&
                                                      slt64(sext_i32_i64(local_tid_46045),
                                                            i32_res_28493 *
                                                            squot64(segred_group_sizze_36333,
                                                                    segment_sizze_nonzzero_46042)))) {
                float x_36343 = ((__global
                                  float *) defunc_3_map_res_mem_44850)[gtid_36274 *
                                                                       i32_res_28493 +
                                                                       gtid_36284];
                float x_36344 = ((__global
                                  float *) defunc_3_map_res_mem_44629)[gtid_36274 *
                                                                       (i32_res_28493 *
                                                                        i32_res_28493) +
                                                                       gtid_36275 *
                                                                       i32_res_28493 +
                                                                       gtid_36284];
                float defunc_1_f_res_36345 = x_36343 * x_36344;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)] =
                        defunc_1_f_res_36345;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28493)) {
            // perform segmented scan to imitate reduction
            {
                float x_36337;
                float x_36338;
                float x_46054;
                float x_46055;
                bool ltid_in_bounds_46057;
                
                ltid_in_bounds_46057 = slt64(sext_i32_i64(local_tid_46045),
                                             i32_res_28493 *
                                             squot64(segred_group_sizze_36333,
                                                     segment_sizze_nonzzero_46042));
                
                int32_t skip_threads_46058;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46057) {
                        x_36338 = ((volatile __local
                                    float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)];
                        if ((local_tid_46045 - squot32(local_tid_46045, 32) *
                             32) == 0) {
                            x_36337 = x_36338;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46058 = 1;
                    while (slt32(skip_threads_46058, 32)) {
                        if (sle32(skip_threads_46058, local_tid_46045 -
                                  squot32(local_tid_46045, 32) * 32) &&
                            ltid_in_bounds_46057) {
                            // read operands
                            {
                                x_36337 = ((volatile __local
                                            float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045) -
                                                                        sext_i32_i64(skip_threads_46058)];
                            }
                            // perform operation
                            {
                                bool inactive_46059 =
                                     slt64(srem64(sext_i32_i64(local_tid_46045),
                                                  i32_res_28493),
                                           sext_i32_i64(local_tid_46045) -
                                           sext_i32_i64(local_tid_46045 -
                                           skip_threads_46058));
                                
                                if (inactive_46059) {
                                    x_36337 = x_36338;
                                }
                                if (!inactive_46059) {
                                    float defunc_1_op_res_36339 = x_36337 +
                                          x_36338;
                                    
                                    x_36337 = defunc_1_op_res_36339;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46047, skip_threads_46058)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46058, local_tid_46045 -
                                  squot32(local_tid_46045, 32) * 32) &&
                            ltid_in_bounds_46057) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)] =
                                    x_36337;
                                x_36338 = x_36337;
                            }
                        }
                        if (sle32(wave_sizze_46047, skip_threads_46058)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46058 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46045 - squot32(local_tid_46045, 32) * 32) ==
                        31 && ltid_in_bounds_46057) {
                        ((volatile __local
                          float *) red_arr_mem_46049)[sext_i32_i64(squot32(local_tid_46045,
                                                                           32))] =
                            x_36337;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46060;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46045, 32) == 0 &&
                            ltid_in_bounds_46057) {
                            x_46055 = ((volatile __local
                                        float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)];
                            if ((local_tid_46045 - squot32(local_tid_46045,
                                                           32) * 32) == 0) {
                                x_46054 = x_46055;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46060 = 1;
                        while (slt32(skip_threads_46060, 32)) {
                            if (sle32(skip_threads_46060, local_tid_46045 -
                                      squot32(local_tid_46045, 32) * 32) &&
                                (squot32(local_tid_46045, 32) == 0 &&
                                 ltid_in_bounds_46057)) {
                                // read operands
                                {
                                    x_46054 = ((volatile __local
                                                float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045) -
                                                                            sext_i32_i64(skip_threads_46060)];
                                }
                                // perform operation
                                {
                                    bool inactive_46061 =
                                         slt64(srem64(sext_i32_i64(local_tid_46045 *
                                                      32 + 32 - 1),
                                                      i32_res_28493),
                                               sext_i32_i64(local_tid_46045 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46045 -
                                                             skip_threads_46060) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46061) {
                                        x_46054 = x_46055;
                                    }
                                    if (!inactive_46061) {
                                        float defunc_1_op_res_46056 = x_46054 +
                                              x_46055;
                                        
                                        x_46054 = defunc_1_op_res_46056;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46047, skip_threads_46060)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46060, local_tid_46045 -
                                      squot32(local_tid_46045, 32) * 32) &&
                                (squot32(local_tid_46045, 32) == 0 &&
                                 ltid_in_bounds_46057)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)] =
                                        x_46054;
                                    x_46055 = x_46054;
                                }
                            }
                            if (sle32(wave_sizze_46047, skip_threads_46060)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46060 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46045, 32) == 0 ||
                          !ltid_in_bounds_46057)) {
                        // read operands
                        {
                            x_36338 = x_36337;
                            x_36337 = ((__local
                                        float *) red_arr_mem_46049)[sext_i32_i64(squot32(local_tid_46045,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46062 =
                                 slt64(srem64(sext_i32_i64(local_tid_46045),
                                              i32_res_28493),
                                       sext_i32_i64(local_tid_46045) -
                                       sext_i32_i64(squot32(local_tid_46045,
                                                            32) * 32 - 1));
                            
                            if (inactive_46062) {
                                x_36337 = x_36338;
                            }
                            if (!inactive_46062) {
                                float defunc_1_op_res_36339 = x_36337 + x_36338;
                                
                                x_36337 = defunc_1_op_res_36339;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)] =
                                x_36337;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46045, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46049)[sext_i32_i64(local_tid_46045)] =
                            x_36338;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46053) *
                      squot64(segred_group_sizze_36333,
                              segment_sizze_nonzzero_46042) +
                      sext_i32_i64(local_tid_46045), m_28478 * i32_res_28493) &&
                slt64(sext_i32_i64(local_tid_46045),
                      squot64(segred_group_sizze_36333,
                              segment_sizze_nonzzero_46042))) {
                ((__global
                  float *) mem_44910)[squot64(sext_i32_i64(virt_group_id_46053) *
                                              squot64(segred_group_sizze_36333,
                                                      segment_sizze_nonzzero_46042) +
                                              sext_i32_i64(local_tid_46045),
                                              i32_res_28493) * i32_res_28493 +
                                      (sext_i32_i64(virt_group_id_46053) *
                                       squot64(segred_group_sizze_36333,
                                               segment_sizze_nonzzero_46042) +
                                       sext_i32_i64(local_tid_46045) -
                                       squot64(sext_i32_i64(virt_group_id_46053) *
                                               squot64(segred_group_sizze_36333,
                                                       segment_sizze_nonzzero_46042) +
                                               sext_i32_i64(local_tid_46045),
                                               i32_res_28493) *
                                       i32_res_28493)] = ((__local
                                                           float *) red_arr_mem_46049)[(sext_i32_i64(local_tid_46045) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_46042 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36333
}
__kernel void mainMagnitudezisegred_small_36415(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_46181_backing_aligned_0,
                                                int64_t N_28477,
                                                int64_t m_28478,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_36462,
                                                int64_t segment_sizze_nonzzero_46174,
                                                __global
                                                unsigned char *mem_44397,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_44916,
                                                __global
                                                unsigned char *mem_45134)
{
    #define segred_group_sizze_36461 (mainMagnitudezisegred_group_sizze_36409)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46181_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46181_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46176;
    int32_t local_tid_46177;
    int64_t group_sizze_46180;
    int32_t wave_sizze_46179;
    int32_t group_tid_46178;
    
    global_tid_46176 = get_global_id(0);
    local_tid_46177 = get_local_id(0);
    group_sizze_46180 = get_local_size(0);
    wave_sizze_46179 = LOCKSTEP_WIDTH;
    group_tid_46178 = get_group_id(0);
    
    int32_t phys_tid_36415;
    
    phys_tid_36415 = global_tid_46176;
    
    __local char *red_arr_mem_46181;
    
    red_arr_mem_46181 = (__local char *) red_arr_mem_46181_backing_0;
    
    int32_t phys_group_id_46183;
    
    phys_group_id_46183 = get_group_id(0);
    for (int32_t i_46184 = 0; i_46184 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478 * N_28477,
                                          squot64(segred_group_sizze_36461,
                                                  segment_sizze_nonzzero_46174))) -
                   phys_group_id_46183, sext_i64_i32(num_groups_36462));
         i_46184++) {
        int32_t virt_group_id_46185 = phys_group_id_46183 + i_46184 *
                sext_i64_i32(num_groups_36462);
        int64_t gtid_36404 = squot64(squot64(sext_i32_i64(local_tid_46177),
                                             segment_sizze_nonzzero_46174) +
                                     sext_i32_i64(virt_group_id_46185) *
                                     squot64(segred_group_sizze_36461,
                                             segment_sizze_nonzzero_46174),
                                     N_28477);
        int64_t gtid_36405 = squot64(sext_i32_i64(local_tid_46177),
                                     segment_sizze_nonzzero_46174) +
                sext_i32_i64(virt_group_id_46185) *
                squot64(segred_group_sizze_36461,
                        segment_sizze_nonzzero_46174) -
                squot64(squot64(sext_i32_i64(local_tid_46177),
                                segment_sizze_nonzzero_46174) +
                        sext_i32_i64(virt_group_id_46185) *
                        squot64(segred_group_sizze_36461,
                                segment_sizze_nonzzero_46174), N_28477) *
                N_28477;
        int64_t gtid_36414 = srem64(sext_i32_i64(local_tid_46177),
                                    i32_res_28493);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28493) && ((slt64(gtid_36404,
                                                             m_28478) &&
                                                       slt64(gtid_36405,
                                                             N_28477)) &&
                                                      slt64(sext_i32_i64(local_tid_46177),
                                                            i32_res_28493 *
                                                            squot64(segred_group_sizze_36461,
                                                                    segment_sizze_nonzzero_46174)))) {
                float x_36470 = ((__global
                                  float *) defunc_4_map_res_mem_44916)[gtid_36404 *
                                                                       i32_res_28493 +
                                                                       gtid_36414];
                float x_36471 = ((__global float *) mem_44397)[gtid_36405 *
                                                               i32_res_28493 +
                                                               gtid_36414];
                float defunc_1_f_res_36472 = x_36470 * x_36471;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)] =
                        defunc_1_f_res_36472;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28493)) {
            // perform segmented scan to imitate reduction
            {
                float x_36465;
                float x_36466;
                float x_46186;
                float x_46187;
                bool ltid_in_bounds_46189;
                
                ltid_in_bounds_46189 = slt64(sext_i32_i64(local_tid_46177),
                                             i32_res_28493 *
                                             squot64(segred_group_sizze_36461,
                                                     segment_sizze_nonzzero_46174));
                
                int32_t skip_threads_46190;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46189) {
                        x_36466 = ((volatile __local
                                    float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)];
                        if ((local_tid_46177 - squot32(local_tid_46177, 32) *
                             32) == 0) {
                            x_36465 = x_36466;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46190 = 1;
                    while (slt32(skip_threads_46190, 32)) {
                        if (sle32(skip_threads_46190, local_tid_46177 -
                                  squot32(local_tid_46177, 32) * 32) &&
                            ltid_in_bounds_46189) {
                            // read operands
                            {
                                x_36465 = ((volatile __local
                                            float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177) -
                                                                        sext_i32_i64(skip_threads_46190)];
                            }
                            // perform operation
                            {
                                bool inactive_46191 =
                                     slt64(srem64(sext_i32_i64(local_tid_46177),
                                                  i32_res_28493),
                                           sext_i32_i64(local_tid_46177) -
                                           sext_i32_i64(local_tid_46177 -
                                           skip_threads_46190));
                                
                                if (inactive_46191) {
                                    x_36465 = x_36466;
                                }
                                if (!inactive_46191) {
                                    float defunc_1_op_res_36467 = x_36465 +
                                          x_36466;
                                    
                                    x_36465 = defunc_1_op_res_36467;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46179, skip_threads_46190)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46190, local_tid_46177 -
                                  squot32(local_tid_46177, 32) * 32) &&
                            ltid_in_bounds_46189) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)] =
                                    x_36465;
                                x_36466 = x_36465;
                            }
                        }
                        if (sle32(wave_sizze_46179, skip_threads_46190)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46190 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46177 - squot32(local_tid_46177, 32) * 32) ==
                        31 && ltid_in_bounds_46189) {
                        ((volatile __local
                          float *) red_arr_mem_46181)[sext_i32_i64(squot32(local_tid_46177,
                                                                           32))] =
                            x_36465;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46192;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46177, 32) == 0 &&
                            ltid_in_bounds_46189) {
                            x_46187 = ((volatile __local
                                        float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)];
                            if ((local_tid_46177 - squot32(local_tid_46177,
                                                           32) * 32) == 0) {
                                x_46186 = x_46187;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46192 = 1;
                        while (slt32(skip_threads_46192, 32)) {
                            if (sle32(skip_threads_46192, local_tid_46177 -
                                      squot32(local_tid_46177, 32) * 32) &&
                                (squot32(local_tid_46177, 32) == 0 &&
                                 ltid_in_bounds_46189)) {
                                // read operands
                                {
                                    x_46186 = ((volatile __local
                                                float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177) -
                                                                            sext_i32_i64(skip_threads_46192)];
                                }
                                // perform operation
                                {
                                    bool inactive_46193 =
                                         slt64(srem64(sext_i32_i64(local_tid_46177 *
                                                      32 + 32 - 1),
                                                      i32_res_28493),
                                               sext_i32_i64(local_tid_46177 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46177 -
                                                             skip_threads_46192) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46193) {
                                        x_46186 = x_46187;
                                    }
                                    if (!inactive_46193) {
                                        float defunc_1_op_res_46188 = x_46186 +
                                              x_46187;
                                        
                                        x_46186 = defunc_1_op_res_46188;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46179, skip_threads_46192)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46192, local_tid_46177 -
                                      squot32(local_tid_46177, 32) * 32) &&
                                (squot32(local_tid_46177, 32) == 0 &&
                                 ltid_in_bounds_46189)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)] =
                                        x_46186;
                                    x_46187 = x_46186;
                                }
                            }
                            if (sle32(wave_sizze_46179, skip_threads_46192)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46192 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46177, 32) == 0 ||
                          !ltid_in_bounds_46189)) {
                        // read operands
                        {
                            x_36466 = x_36465;
                            x_36465 = ((__local
                                        float *) red_arr_mem_46181)[sext_i32_i64(squot32(local_tid_46177,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46194 =
                                 slt64(srem64(sext_i32_i64(local_tid_46177),
                                              i32_res_28493),
                                       sext_i32_i64(local_tid_46177) -
                                       sext_i32_i64(squot32(local_tid_46177,
                                                            32) * 32 - 1));
                            
                            if (inactive_46194) {
                                x_36465 = x_36466;
                            }
                            if (!inactive_46194) {
                                float defunc_1_op_res_36467 = x_36465 + x_36466;
                                
                                x_36465 = defunc_1_op_res_36467;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)] =
                                x_36465;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46177, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46181)[sext_i32_i64(local_tid_46177)] =
                            x_36466;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46185) *
                      squot64(segred_group_sizze_36461,
                              segment_sizze_nonzzero_46174) +
                      sext_i32_i64(local_tid_46177), m_28478 * N_28477) &&
                slt64(sext_i32_i64(local_tid_46177),
                      squot64(segred_group_sizze_36461,
                              segment_sizze_nonzzero_46174))) {
                ((__global
                  float *) mem_45134)[squot64(sext_i32_i64(virt_group_id_46185) *
                                              squot64(segred_group_sizze_36461,
                                                      segment_sizze_nonzzero_46174) +
                                              sext_i32_i64(local_tid_46177),
                                              N_28477) * N_28477 +
                                      (sext_i32_i64(virt_group_id_46185) *
                                       squot64(segred_group_sizze_36461,
                                               segment_sizze_nonzzero_46174) +
                                       sext_i32_i64(local_tid_46177) -
                                       squot64(sext_i32_i64(virt_group_id_46185) *
                                               squot64(segred_group_sizze_36461,
                                                       segment_sizze_nonzzero_46174) +
                                               sext_i32_i64(local_tid_46177),
                                               N_28477) * N_28477)] = ((__local
                                                                        float *) red_arr_mem_46181)[(sext_i32_i64(local_tid_46177) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_46174 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36461
}
__kernel void mainMagnitudezisegred_small_36993(__global int *global_failure,
                                                int failure_is_an_option,
                                                __global
                                                int64_t *global_failure_args,
                                                __local volatile
                                                int64_t *red_arr_mem_46433_backing_aligned_0,
                                                int64_t N_28477,
                                                int64_t m_28478,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_37044,
                                                int64_t segment_sizze_nonzzero_46426,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_45178,
                                                __global
                                                unsigned char *mem_45232,
                                                __global
                                                unsigned char *mem_45235)
{
    #define segred_group_sizze_37043 (mainMagnitudezisegred_group_sizze_36987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46433_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46433_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46428;
    int32_t local_tid_46429;
    int64_t group_sizze_46432;
    int32_t wave_sizze_46431;
    int32_t group_tid_46430;
    
    global_tid_46428 = get_global_id(0);
    local_tid_46429 = get_local_id(0);
    group_sizze_46432 = get_local_size(0);
    wave_sizze_46431 = LOCKSTEP_WIDTH;
    group_tid_46430 = get_group_id(0);
    
    int32_t phys_tid_36993;
    
    phys_tid_36993 = global_tid_46428;
    
    __local char *red_arr_mem_46433;
    
    red_arr_mem_46433 = (__local char *) red_arr_mem_46433_backing_0;
    
    int32_t phys_group_id_46435;
    
    phys_group_id_46435 = get_group_id(0);
    for (int32_t i_46436 = 0; i_46436 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478,
                                          squot64(segred_group_sizze_37043,
                                                  segment_sizze_nonzzero_46426))) -
                   phys_group_id_46435, sext_i64_i32(num_groups_37044));
         i_46436++) {
        int32_t virt_group_id_46437 = phys_group_id_46435 + i_46436 *
                sext_i64_i32(num_groups_37044);
        int64_t gtid_36984 = squot64(sext_i32_i64(local_tid_46429),
                                     segment_sizze_nonzzero_46426) +
                sext_i32_i64(virt_group_id_46437) *
                squot64(segred_group_sizze_37043, segment_sizze_nonzzero_46426);
        int64_t gtid_36992 = srem64(sext_i32_i64(local_tid_46429),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28487) && (slt64(gtid_36984,
                                                            m_28478) &&
                                                      slt64(sext_i32_i64(local_tid_46429),
                                                            i32_res_28487 *
                                                            squot64(segred_group_sizze_37043,
                                                                    segment_sizze_nonzzero_46426)))) {
                int32_t defunc_0_f_res_37051 = ((__global
                                                 int32_t *) mem_45232)[gtid_36984];
                int32_t index_primexp_42385 = sext_i64_i32(gtid_36992);
                bool cond_37053 = slt32(index_primexp_42385,
                                        defunc_0_f_res_37051);
                float defunc_0_f_res_37054;
                
                if (cond_37053) {
                    int64_t i_37055 = sext_i32_i64(index_primexp_42385);
                    bool x_37056 = sle64((int64_t) 0, i_37055);
                    bool y_37057 = slt64(i_37055, N_28477);
                    bool bounds_check_37058 = x_37056 && y_37057;
                    bool index_certs_37059;
                    
                    if (!bounds_check_37058) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          97) == -1) {
                                global_failure_args[0] = i_37055;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_37060 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_36984 *
                                                                                              N_28477 +
                                                                                              i_37055];
                    
                    defunc_0_f_res_37054 = defunc_0_f_res_t_res_37060;
                } else {
                    defunc_0_f_res_37054 = 0.0F;
                }
                
                float defunc_0_f_res_37061 = defunc_0_f_res_37054 *
                      defunc_0_f_res_37054;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)] =
                        defunc_0_f_res_37061;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)] =
                    0.0F;
            }
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                float x_37047;
                float x_37048;
                float x_46438;
                float x_46439;
                bool ltid_in_bounds_46441;
                
                ltid_in_bounds_46441 = slt64(sext_i32_i64(local_tid_46429),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_37043,
                                                     segment_sizze_nonzzero_46426));
                
                int32_t skip_threads_46442;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46441) {
                        x_37048 = ((volatile __local
                                    float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)];
                        if ((local_tid_46429 - squot32(local_tid_46429, 32) *
                             32) == 0) {
                            x_37047 = x_37048;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46442 = 1;
                    while (slt32(skip_threads_46442, 32)) {
                        if (sle32(skip_threads_46442, local_tid_46429 -
                                  squot32(local_tid_46429, 32) * 32) &&
                            ltid_in_bounds_46441) {
                            // read operands
                            {
                                x_37047 = ((volatile __local
                                            float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429) -
                                                                        sext_i32_i64(skip_threads_46442)];
                            }
                            // perform operation
                            {
                                bool inactive_46443 =
                                     slt64(srem64(sext_i32_i64(local_tid_46429),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_46429) -
                                           sext_i32_i64(local_tid_46429 -
                                           skip_threads_46442));
                                
                                if (inactive_46443) {
                                    x_37047 = x_37048;
                                }
                                if (!inactive_46443) {
                                    float defunc_1_op_res_37049 = x_37047 +
                                          x_37048;
                                    
                                    x_37047 = defunc_1_op_res_37049;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46431, skip_threads_46442)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46442, local_tid_46429 -
                                  squot32(local_tid_46429, 32) * 32) &&
                            ltid_in_bounds_46441) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)] =
                                    x_37047;
                                x_37048 = x_37047;
                            }
                        }
                        if (sle32(wave_sizze_46431, skip_threads_46442)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46442 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46429 - squot32(local_tid_46429, 32) * 32) ==
                        31 && ltid_in_bounds_46441) {
                        ((volatile __local
                          float *) red_arr_mem_46433)[sext_i32_i64(squot32(local_tid_46429,
                                                                           32))] =
                            x_37047;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46444;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46429, 32) == 0 &&
                            ltid_in_bounds_46441) {
                            x_46439 = ((volatile __local
                                        float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)];
                            if ((local_tid_46429 - squot32(local_tid_46429,
                                                           32) * 32) == 0) {
                                x_46438 = x_46439;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46444 = 1;
                        while (slt32(skip_threads_46444, 32)) {
                            if (sle32(skip_threads_46444, local_tid_46429 -
                                      squot32(local_tid_46429, 32) * 32) &&
                                (squot32(local_tid_46429, 32) == 0 &&
                                 ltid_in_bounds_46441)) {
                                // read operands
                                {
                                    x_46438 = ((volatile __local
                                                float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429) -
                                                                            sext_i32_i64(skip_threads_46444)];
                                }
                                // perform operation
                                {
                                    bool inactive_46445 =
                                         slt64(srem64(sext_i32_i64(local_tid_46429 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_46429 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46429 -
                                                             skip_threads_46444) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46445) {
                                        x_46438 = x_46439;
                                    }
                                    if (!inactive_46445) {
                                        float defunc_1_op_res_46440 = x_46438 +
                                              x_46439;
                                        
                                        x_46438 = defunc_1_op_res_46440;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46431, skip_threads_46444)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46444, local_tid_46429 -
                                      squot32(local_tid_46429, 32) * 32) &&
                                (squot32(local_tid_46429, 32) == 0 &&
                                 ltid_in_bounds_46441)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)] =
                                        x_46438;
                                    x_46439 = x_46438;
                                }
                            }
                            if (sle32(wave_sizze_46431, skip_threads_46444)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46444 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46429, 32) == 0 ||
                          !ltid_in_bounds_46441)) {
                        // read operands
                        {
                            x_37048 = x_37047;
                            x_37047 = ((__local
                                        float *) red_arr_mem_46433)[sext_i32_i64(squot32(local_tid_46429,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46446 =
                                 slt64(srem64(sext_i32_i64(local_tid_46429),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_46429) -
                                       sext_i32_i64(squot32(local_tid_46429,
                                                            32) * 32 - 1));
                            
                            if (inactive_46446) {
                                x_37047 = x_37048;
                            }
                            if (!inactive_46446) {
                                float defunc_1_op_res_37049 = x_37047 + x_37048;
                                
                                x_37047 = defunc_1_op_res_37049;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)] =
                                x_37047;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46429, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46433)[sext_i32_i64(local_tid_46429)] =
                            x_37048;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46437) *
                      squot64(segred_group_sizze_37043,
                              segment_sizze_nonzzero_46426) +
                      sext_i32_i64(local_tid_46429), m_28478) &&
                slt64(sext_i32_i64(local_tid_46429),
                      squot64(segred_group_sizze_37043,
                              segment_sizze_nonzzero_46426))) {
                ((__global
                  float *) mem_45235)[sext_i32_i64(virt_group_id_46437) *
                                      squot64(segred_group_sizze_37043,
                                              segment_sizze_nonzzero_46426) +
                                      sext_i32_i64(local_tid_46429)] = ((__local
                                                                         float *) red_arr_mem_46433)[(sext_i32_i64(local_tid_46429) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46426 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37043
}
__kernel void mainMagnitudezisegred_small_37018(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_46373_backing_aligned_0,
                                                int64_t N_28477,
                                                int64_t m_28478,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_37030,
                                                int64_t segment_sizze_nonzzero_46366,
                                                __global
                                                unsigned char *images_mem_44381,
                                                __global
                                                unsigned char *mem_45232)
{
    #define segred_group_sizze_37029 (mainMagnitudezisegred_group_sizze_37012)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46373_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46373_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46368;
    int32_t local_tid_46369;
    int64_t group_sizze_46372;
    int32_t wave_sizze_46371;
    int32_t group_tid_46370;
    
    global_tid_46368 = get_global_id(0);
    local_tid_46369 = get_local_id(0);
    group_sizze_46372 = get_local_size(0);
    wave_sizze_46371 = LOCKSTEP_WIDTH;
    group_tid_46370 = get_group_id(0);
    
    int32_t phys_tid_37018;
    
    phys_tid_37018 = global_tid_46368;
    
    __local char *red_arr_mem_46373;
    
    red_arr_mem_46373 = (__local char *) red_arr_mem_46373_backing_0;
    
    int32_t phys_group_id_46375;
    
    phys_group_id_46375 = get_group_id(0);
    for (int32_t i_46376 = 0; i_46376 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478,
                                          squot64(segred_group_sizze_37029,
                                                  segment_sizze_nonzzero_46366))) -
                   phys_group_id_46375, sext_i64_i32(num_groups_37030));
         i_46376++) {
        int32_t virt_group_id_46377 = phys_group_id_46375 + i_46376 *
                sext_i64_i32(num_groups_37030);
        int64_t gtid_37009 = squot64(sext_i32_i64(local_tid_46369),
                                     segment_sizze_nonzzero_46366) +
                sext_i32_i64(virt_group_id_46377) *
                squot64(segred_group_sizze_37029, segment_sizze_nonzzero_46366);
        int64_t gtid_37017 = srem64(sext_i32_i64(local_tid_46369),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28487) && (slt64(gtid_37009,
                                                            m_28478) &&
                                                      slt64(sext_i32_i64(local_tid_46369),
                                                            i32_res_28487 *
                                                            squot64(segred_group_sizze_37029,
                                                                    segment_sizze_nonzzero_46366)))) {
                float x_37037 = ((__global
                                  float *) images_mem_44381)[gtid_37009 *
                                                             N_28477 +
                                                             gtid_37017];
                bool isnan_res_37038;
                
                isnan_res_37038 = futrts_isnan32(x_37037);
                
                bool cond_37039 = !isnan_res_37038;
                int32_t defunc_0_f_res_37040 = btoi_bool_i32(cond_37039);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)] =
                        defunc_0_f_res_37040;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_37033;
                int32_t x_37034;
                int32_t x_46378;
                int32_t x_46379;
                bool ltid_in_bounds_46381;
                
                ltid_in_bounds_46381 = slt64(sext_i32_i64(local_tid_46369),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_37029,
                                                     segment_sizze_nonzzero_46366));
                
                int32_t skip_threads_46382;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46381) {
                        x_37034 = ((volatile __local
                                    int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)];
                        if ((local_tid_46369 - squot32(local_tid_46369, 32) *
                             32) == 0) {
                            x_37033 = x_37034;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46382 = 1;
                    while (slt32(skip_threads_46382, 32)) {
                        if (sle32(skip_threads_46382, local_tid_46369 -
                                  squot32(local_tid_46369, 32) * 32) &&
                            ltid_in_bounds_46381) {
                            // read operands
                            {
                                x_37033 = ((volatile __local
                                            int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369) -
                                                                          sext_i32_i64(skip_threads_46382)];
                            }
                            // perform operation
                            {
                                bool inactive_46383 =
                                     slt64(srem64(sext_i32_i64(local_tid_46369),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_46369) -
                                           sext_i32_i64(local_tid_46369 -
                                           skip_threads_46382));
                                
                                if (inactive_46383) {
                                    x_37033 = x_37034;
                                }
                                if (!inactive_46383) {
                                    int32_t defunc_1_op_res_37035 =
                                            add32(x_37033, x_37034);
                                    
                                    x_37033 = defunc_1_op_res_37035;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46371, skip_threads_46382)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46382, local_tid_46369 -
                                  squot32(local_tid_46369, 32) * 32) &&
                            ltid_in_bounds_46381) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)] =
                                    x_37033;
                                x_37034 = x_37033;
                            }
                        }
                        if (sle32(wave_sizze_46371, skip_threads_46382)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46382 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46369 - squot32(local_tid_46369, 32) * 32) ==
                        31 && ltid_in_bounds_46381) {
                        ((volatile __local
                          int32_t *) red_arr_mem_46373)[sext_i32_i64(squot32(local_tid_46369,
                                                                             32))] =
                            x_37033;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46384;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46369, 32) == 0 &&
                            ltid_in_bounds_46381) {
                            x_46379 = ((volatile __local
                                        int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)];
                            if ((local_tid_46369 - squot32(local_tid_46369,
                                                           32) * 32) == 0) {
                                x_46378 = x_46379;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46384 = 1;
                        while (slt32(skip_threads_46384, 32)) {
                            if (sle32(skip_threads_46384, local_tid_46369 -
                                      squot32(local_tid_46369, 32) * 32) &&
                                (squot32(local_tid_46369, 32) == 0 &&
                                 ltid_in_bounds_46381)) {
                                // read operands
                                {
                                    x_46378 = ((volatile __local
                                                int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369) -
                                                                              sext_i32_i64(skip_threads_46384)];
                                }
                                // perform operation
                                {
                                    bool inactive_46385 =
                                         slt64(srem64(sext_i32_i64(local_tid_46369 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_46369 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46369 -
                                                             skip_threads_46384) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46385) {
                                        x_46378 = x_46379;
                                    }
                                    if (!inactive_46385) {
                                        int32_t defunc_1_op_res_46380 =
                                                add32(x_46378, x_46379);
                                        
                                        x_46378 = defunc_1_op_res_46380;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46371, skip_threads_46384)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46384, local_tid_46369 -
                                      squot32(local_tid_46369, 32) * 32) &&
                                (squot32(local_tid_46369, 32) == 0 &&
                                 ltid_in_bounds_46381)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)] =
                                        x_46378;
                                    x_46379 = x_46378;
                                }
                            }
                            if (sle32(wave_sizze_46371, skip_threads_46384)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46384 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46369, 32) == 0 ||
                          !ltid_in_bounds_46381)) {
                        // read operands
                        {
                            x_37034 = x_37033;
                            x_37033 = ((__local
                                        int32_t *) red_arr_mem_46373)[sext_i32_i64(squot32(local_tid_46369,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46386 =
                                 slt64(srem64(sext_i32_i64(local_tid_46369),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_46369) -
                                       sext_i32_i64(squot32(local_tid_46369,
                                                            32) * 32 - 1));
                            
                            if (inactive_46386) {
                                x_37033 = x_37034;
                            }
                            if (!inactive_46386) {
                                int32_t defunc_1_op_res_37035 = add32(x_37033,
                                                                      x_37034);
                                
                                x_37033 = defunc_1_op_res_37035;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)] =
                                x_37033;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46369, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_46373)[sext_i32_i64(local_tid_46369)] =
                            x_37034;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46377) *
                      squot64(segred_group_sizze_37029,
                              segment_sizze_nonzzero_46366) +
                      sext_i32_i64(local_tid_46369), m_28478) &&
                slt64(sext_i32_i64(local_tid_46369),
                      squot64(segred_group_sizze_37029,
                              segment_sizze_nonzzero_46366))) {
                ((__global
                  int32_t *) mem_45232)[sext_i32_i64(virt_group_id_46377) *
                                        squot64(segred_group_sizze_37029,
                                                segment_sizze_nonzzero_46366) +
                                        sext_i32_i64(local_tid_46369)] =
                    ((__local
                      int32_t *) red_arr_mem_46373)[(sext_i32_i64(local_tid_46369) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_46366 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37029
}
__kernel void mainMagnitudezisegred_small_37181(__global int *global_failure,
                                                int failure_is_an_option,
                                                __global
                                                int64_t *global_failure_args,
                                                __local volatile
                                                int64_t *red_arr_mem_46542_backing_aligned_0,
                                                int64_t N_28477,
                                                int64_t m_28478,
                                                int64_t i32_res_28880,
                                                int64_t num_groups_37203,
                                                int64_t segment_sizze_nonzzero_46535,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_45178,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_45244,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_45245,
                                                __global
                                                unsigned char *mem_45278)
{
    #define segred_group_sizze_37202 (mainMagnitudezisegred_group_sizze_37175)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46542_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46542_backing_aligned_0;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_46537;
    int32_t local_tid_46538;
    int64_t group_sizze_46541;
    int32_t wave_sizze_46540;
    int32_t group_tid_46539;
    
    global_tid_46537 = get_global_id(0);
    local_tid_46538 = get_local_id(0);
    group_sizze_46541 = get_local_size(0);
    wave_sizze_46540 = LOCKSTEP_WIDTH;
    group_tid_46539 = get_group_id(0);
    
    int32_t phys_tid_37181;
    
    phys_tid_37181 = global_tid_46537;
    
    __local char *red_arr_mem_46542;
    
    red_arr_mem_46542 = (__local char *) red_arr_mem_46542_backing_0;
    
    int32_t phys_group_id_46544;
    
    phys_group_id_46544 = get_group_id(0);
    for (int32_t i_46545 = 0; i_46545 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478,
                                          squot64(segred_group_sizze_37202,
                                                  segment_sizze_nonzzero_46535))) -
                   phys_group_id_46544, sext_i64_i32(num_groups_37203));
         i_46545++) {
        int32_t virt_group_id_46546 = phys_group_id_46544 + i_46545 *
                sext_i64_i32(num_groups_37203);
        int64_t gtid_37172 = squot64(sext_i32_i64(local_tid_46538),
                                     segment_sizze_nonzzero_46535) +
                sext_i32_i64(virt_group_id_46546) *
                squot64(segred_group_sizze_37202, segment_sizze_nonzzero_46535);
        int64_t gtid_37180 = srem64(sext_i32_i64(local_tid_46538),
                                    i32_res_28880);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28880) && (slt64(gtid_37172,
                                                            m_28478) &&
                                                      slt64(sext_i32_i64(local_tid_46538),
                                                            i32_res_28880 *
                                                            squot64(segred_group_sizze_37202,
                                                                    segment_sizze_nonzzero_46535)))) {
                int32_t x_37211 = ((__global
                                    int32_t *) defunc_3_map_res_mem_45244)[gtid_37172];
                int32_t index_primexp_42390 = sext_i64_i32(gtid_37180);
                bool cond_37213 = slt32(index_primexp_42390, x_37211);
                float defunc_0_f_res_37214;
                
                if (cond_37213) {
                    int32_t x_37210 = ((__global
                                        int32_t *) defunc_3_map_res_mem_45245)[gtid_37172];
                    int32_t x_37215 = add32(x_37210, index_primexp_42390);
                    int32_t x_37216 = sub32(x_37215, x_37211);
                    int32_t i_37217 = add32(1, x_37216);
                    int64_t i_37218 = sext_i32_i64(i_37217);
                    bool x_37219 = sle64((int64_t) 0, i_37218);
                    bool y_37220 = slt64(i_37218, N_28477);
                    bool bounds_check_37221 = x_37219 && y_37220;
                    bool index_certs_37222;
                    
                    if (!bounds_check_37221) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          101) == -1) {
                                global_failure_args[0] = i_37218;
                                global_failure_args[1] = N_28477;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_37223 = ((__global
                                                         float *) defunc_4_map_res_mem_45178)[gtid_37172 *
                                                                                              N_28477 +
                                                                                              i_37218];
                    
                    defunc_0_f_res_37214 = defunc_0_f_res_t_res_37223;
                } else {
                    defunc_0_f_res_37214 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)] =
                        defunc_0_f_res_37214;
                }
            } else {
                ((__local
                  float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)] =
                    0.0F;
            }
        }
        
      error_0:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28880)) {
            // perform segmented scan to imitate reduction
            {
                float x_37206;
                float x_37207;
                float x_46547;
                float x_46548;
                bool ltid_in_bounds_46550;
                
                ltid_in_bounds_46550 = slt64(sext_i32_i64(local_tid_46538),
                                             i32_res_28880 *
                                             squot64(segred_group_sizze_37202,
                                                     segment_sizze_nonzzero_46535));
                
                int32_t skip_threads_46551;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46550) {
                        x_37207 = ((volatile __local
                                    float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)];
                        if ((local_tid_46538 - squot32(local_tid_46538, 32) *
                             32) == 0) {
                            x_37206 = x_37207;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46551 = 1;
                    while (slt32(skip_threads_46551, 32)) {
                        if (sle32(skip_threads_46551, local_tid_46538 -
                                  squot32(local_tid_46538, 32) * 32) &&
                            ltid_in_bounds_46550) {
                            // read operands
                            {
                                x_37206 = ((volatile __local
                                            float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538) -
                                                                        sext_i32_i64(skip_threads_46551)];
                            }
                            // perform operation
                            {
                                bool inactive_46552 =
                                     slt64(srem64(sext_i32_i64(local_tid_46538),
                                                  i32_res_28880),
                                           sext_i32_i64(local_tid_46538) -
                                           sext_i32_i64(local_tid_46538 -
                                           skip_threads_46551));
                                
                                if (inactive_46552) {
                                    x_37206 = x_37207;
                                }
                                if (!inactive_46552) {
                                    float defunc_1_op_res_37208 = x_37206 +
                                          x_37207;
                                    
                                    x_37206 = defunc_1_op_res_37208;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46540, skip_threads_46551)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46551, local_tid_46538 -
                                  squot32(local_tid_46538, 32) * 32) &&
                            ltid_in_bounds_46550) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)] =
                                    x_37206;
                                x_37207 = x_37206;
                            }
                        }
                        if (sle32(wave_sizze_46540, skip_threads_46551)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46551 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46538 - squot32(local_tid_46538, 32) * 32) ==
                        31 && ltid_in_bounds_46550) {
                        ((volatile __local
                          float *) red_arr_mem_46542)[sext_i32_i64(squot32(local_tid_46538,
                                                                           32))] =
                            x_37206;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46553;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46538, 32) == 0 &&
                            ltid_in_bounds_46550) {
                            x_46548 = ((volatile __local
                                        float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)];
                            if ((local_tid_46538 - squot32(local_tid_46538,
                                                           32) * 32) == 0) {
                                x_46547 = x_46548;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46553 = 1;
                        while (slt32(skip_threads_46553, 32)) {
                            if (sle32(skip_threads_46553, local_tid_46538 -
                                      squot32(local_tid_46538, 32) * 32) &&
                                (squot32(local_tid_46538, 32) == 0 &&
                                 ltid_in_bounds_46550)) {
                                // read operands
                                {
                                    x_46547 = ((volatile __local
                                                float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538) -
                                                                            sext_i32_i64(skip_threads_46553)];
                                }
                                // perform operation
                                {
                                    bool inactive_46554 =
                                         slt64(srem64(sext_i32_i64(local_tid_46538 *
                                                      32 + 32 - 1),
                                                      i32_res_28880),
                                               sext_i32_i64(local_tid_46538 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46538 -
                                                             skip_threads_46553) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46554) {
                                        x_46547 = x_46548;
                                    }
                                    if (!inactive_46554) {
                                        float defunc_1_op_res_46549 = x_46547 +
                                              x_46548;
                                        
                                        x_46547 = defunc_1_op_res_46549;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46540, skip_threads_46553)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46553, local_tid_46538 -
                                      squot32(local_tid_46538, 32) * 32) &&
                                (squot32(local_tid_46538, 32) == 0 &&
                                 ltid_in_bounds_46550)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)] =
                                        x_46547;
                                    x_46548 = x_46547;
                                }
                            }
                            if (sle32(wave_sizze_46540, skip_threads_46553)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46553 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46538, 32) == 0 ||
                          !ltid_in_bounds_46550)) {
                        // read operands
                        {
                            x_37207 = x_37206;
                            x_37206 = ((__local
                                        float *) red_arr_mem_46542)[sext_i32_i64(squot32(local_tid_46538,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46555 =
                                 slt64(srem64(sext_i32_i64(local_tid_46538),
                                              i32_res_28880),
                                       sext_i32_i64(local_tid_46538) -
                                       sext_i32_i64(squot32(local_tid_46538,
                                                            32) * 32 - 1));
                            
                            if (inactive_46555) {
                                x_37206 = x_37207;
                            }
                            if (!inactive_46555) {
                                float defunc_1_op_res_37208 = x_37206 + x_37207;
                                
                                x_37206 = defunc_1_op_res_37208;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)] =
                                x_37206;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46538, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_46542)[sext_i32_i64(local_tid_46538)] =
                            x_37207;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46546) *
                      squot64(segred_group_sizze_37202,
                              segment_sizze_nonzzero_46535) +
                      sext_i32_i64(local_tid_46538), m_28478) &&
                slt64(sext_i32_i64(local_tid_46538),
                      squot64(segred_group_sizze_37202,
                              segment_sizze_nonzzero_46535))) {
                ((__global
                  float *) mem_45278)[sext_i32_i64(virt_group_id_46546) *
                                      squot64(segred_group_sizze_37202,
                                              segment_sizze_nonzzero_46535) +
                                      sext_i32_i64(local_tid_46538)] = ((__local
                                                                         float *) red_arr_mem_46542)[(sext_i32_i64(local_tid_46538) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46535 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37202
}
__kernel void mainMagnitudezisegred_small_38300(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_46724_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_46722_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_46720_backing_aligned_2,
                                                int64_t m_28478,
                                                int64_t iota32_arg_28909,
                                                int64_t num_groups_38487,
                                                int64_t segment_sizze_nonzzero_46713,
                                                __global
                                                unsigned char *mem_45284,
                                                __global
                                                unsigned char *mem_45337,
                                                __global
                                                unsigned char *mem_45339,
                                                __global
                                                unsigned char *mem_45343,
                                                __global
                                                unsigned char *mem_45346,
                                                __global
                                                unsigned char *mem_45348,
                                                __global
                                                unsigned char *mem_45350)
{
    #define segred_group_sizze_38486 (mainMagnitudezisegred_group_sizze_38294)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46724_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46724_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46722_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46722_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46720_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46720_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46715;
    int32_t local_tid_46716;
    int64_t group_sizze_46719;
    int32_t wave_sizze_46718;
    int32_t group_tid_46717;
    
    global_tid_46715 = get_global_id(0);
    local_tid_46716 = get_local_id(0);
    group_sizze_46719 = get_local_size(0);
    wave_sizze_46718 = LOCKSTEP_WIDTH;
    group_tid_46717 = get_group_id(0);
    
    int32_t phys_tid_38300;
    
    phys_tid_38300 = global_tid_46715;
    
    __local char *red_arr_mem_46720;
    
    red_arr_mem_46720 = (__local char *) red_arr_mem_46720_backing_0;
    
    __local char *red_arr_mem_46722;
    
    red_arr_mem_46722 = (__local char *) red_arr_mem_46722_backing_1;
    
    __local char *red_arr_mem_46724;
    
    red_arr_mem_46724 = (__local char *) red_arr_mem_46724_backing_2;
    
    int32_t phys_group_id_46726;
    
    phys_group_id_46726 = get_group_id(0);
    for (int32_t i_46727 = 0; i_46727 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28478,
                                          squot64(segred_group_sizze_38486,
                                                  segment_sizze_nonzzero_46713))) -
                   phys_group_id_46726, sext_i64_i32(num_groups_38487));
         i_46727++) {
        int32_t virt_group_id_46728 = phys_group_id_46726 + i_46727 *
                sext_i64_i32(num_groups_38487);
        int64_t gtid_38291 = squot64(sext_i32_i64(local_tid_46716),
                                     segment_sizze_nonzzero_46713) +
                sext_i32_i64(virt_group_id_46728) *
                squot64(segred_group_sizze_38486, segment_sizze_nonzzero_46713);
        int64_t gtid_38299 = srem64(sext_i32_i64(local_tid_46716),
                                    iota32_arg_28909);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_28909) && (slt64(gtid_38291,
                                                               m_28478) &&
                                                         slt64(sext_i32_i64(local_tid_46716),
                                                               iota32_arg_28909 *
                                                               squot64(segred_group_sizze_38486,
                                                                       segment_sizze_nonzzero_46713)))) {
                int32_t y_38506 = ((__global int32_t *) mem_45339)[gtid_38291];
                float y_38507 = ((__global float *) mem_45337)[gtid_38291];
                float x_38511 = ((__global float *) mem_45343)[gtid_38291 *
                                                               iota32_arg_28909 +
                                                               gtid_38299];
                float x_38512 = ((__global float *) mem_45284)[gtid_38299];
                int32_t index_primexp_42409 = sext_i64_i32(gtid_38299);
                float defunc_0_f_res_38515 = x_38511 / y_38507;
                bool cond_38516 = slt32(index_primexp_42409, y_38506);
                bool isnan_res_38517;
                
                isnan_res_38517 = futrts_isnan32(defunc_0_f_res_38515);
                
                bool cond_t_res_38518 = !isnan_res_38517;
                bool x_38519 = cond_38516 && cond_t_res_38518;
                float abs_res_38520 = (float) fabs(defunc_0_f_res_38515);
                bool defunc_2_f_res_t_res_38521 = x_38512 < abs_res_38520;
                bool x_38522 = x_38519 && defunc_2_f_res_t_res_38521;
                float defunc_1_f_res_38523;
                
                if (cond_38516) {
                    defunc_1_f_res_38523 = defunc_0_f_res_38515;
                } else {
                    defunc_1_f_res_38523 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)] =
                        x_38522;
                    ((__local
                      int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)] =
                        index_primexp_42409;
                    ((__local
                      float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)] =
                        defunc_1_f_res_38523;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)] = 0;
                ((__local
                  int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)] =
                    -1;
                ((__local
                  float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_28909)) {
            // perform segmented scan to imitate reduction
            {
                bool x_38492;
                int32_t x_38493;
                float x_38494;
                bool x_38495;
                int32_t x_38496;
                float x_38497;
                bool x_46729;
                int32_t x_46730;
                float x_46731;
                bool x_46732;
                int32_t x_46733;
                float x_46734;
                bool ltid_in_bounds_46743;
                
                ltid_in_bounds_46743 = slt64(sext_i32_i64(local_tid_46716),
                                             iota32_arg_28909 *
                                             squot64(segred_group_sizze_38486,
                                                     segment_sizze_nonzzero_46713));
                
                int32_t skip_threads_46744;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46743) {
                        x_38495 = ((volatile __local
                                    bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)];
                        x_38496 = ((volatile __local
                                    int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)];
                        x_38497 = ((volatile __local
                                    float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)];
                        if ((local_tid_46716 - squot32(local_tid_46716, 32) *
                             32) == 0) {
                            x_38492 = x_38495;
                            x_38493 = x_38496;
                            x_38494 = x_38497;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46744 = 1;
                    while (slt32(skip_threads_46744, 32)) {
                        if (sle32(skip_threads_46744, local_tid_46716 -
                                  squot32(local_tid_46716, 32) * 32) &&
                            ltid_in_bounds_46743) {
                            // read operands
                            {
                                x_38492 = ((volatile __local
                                            bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716) -
                                                                       sext_i32_i64(skip_threads_46744)];
                                x_38493 = ((volatile __local
                                            int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716) -
                                                                          sext_i32_i64(skip_threads_46744)];
                                x_38494 = ((volatile __local
                                            float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716) -
                                                                        sext_i32_i64(skip_threads_46744)];
                            }
                            // perform operation
                            {
                                bool inactive_46745 =
                                     slt64(srem64(sext_i32_i64(local_tid_46716),
                                                  iota32_arg_28909),
                                           sext_i32_i64(local_tid_46716) -
                                           sext_i32_i64(local_tid_46716 -
                                           skip_threads_46744));
                                
                                if (inactive_46745) {
                                    x_38492 = x_38495;
                                    x_38493 = x_38496;
                                    x_38494 = x_38497;
                                }
                                if (!inactive_46745) {
                                    bool defunc_1_op_res_38498;
                                    int32_t defunc_1_op_res_38499;
                                    
                                    if (x_38492) {
                                        defunc_1_op_res_38498 = x_38492;
                                        defunc_1_op_res_38499 = x_38493;
                                    } else {
                                        bool x_38500 = x_38495 && x_38495;
                                        bool x_38501 = !x_38495;
                                        bool y_38502 = x_38492 && x_38501;
                                        bool defunc_1_op_res_f_res_38503 =
                                             x_38500 || y_38502;
                                        int32_t defunc_1_op_res_f_res_38504;
                                        
                                        if (x_38495) {
                                            defunc_1_op_res_f_res_38504 =
                                                x_38496;
                                        } else {
                                            defunc_1_op_res_f_res_38504 =
                                                x_38493;
                                        }
                                        defunc_1_op_res_38498 =
                                            defunc_1_op_res_f_res_38503;
                                        defunc_1_op_res_38499 =
                                            defunc_1_op_res_f_res_38504;
                                    }
                                    
                                    float defunc_1_op_res_38505 = x_38494 +
                                          x_38497;
                                    
                                    x_38492 = defunc_1_op_res_38498;
                                    x_38493 = defunc_1_op_res_38499;
                                    x_38494 = defunc_1_op_res_38505;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46718, skip_threads_46744)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46744, local_tid_46716 -
                                  squot32(local_tid_46716, 32) * 32) &&
                            ltid_in_bounds_46743) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)] =
                                    x_38492;
                                x_38495 = x_38492;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)] =
                                    x_38493;
                                x_38496 = x_38493;
                                ((volatile __local
                                  float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)] =
                                    x_38494;
                                x_38497 = x_38494;
                            }
                        }
                        if (sle32(wave_sizze_46718, skip_threads_46744)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46744 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46716 - squot32(local_tid_46716, 32) * 32) ==
                        31 && ltid_in_bounds_46743) {
                        ((volatile __local
                          bool *) red_arr_mem_46720)[sext_i32_i64(squot32(local_tid_46716,
                                                                          32))] =
                            x_38492;
                        ((volatile __local
                          int32_t *) red_arr_mem_46722)[sext_i32_i64(squot32(local_tid_46716,
                                                                             32))] =
                            x_38493;
                        ((volatile __local
                          float *) red_arr_mem_46724)[sext_i32_i64(squot32(local_tid_46716,
                                                                           32))] =
                            x_38494;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46746;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46716, 32) == 0 &&
                            ltid_in_bounds_46743) {
                            x_46732 = ((volatile __local
                                        bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)];
                            x_46733 = ((volatile __local
                                        int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)];
                            x_46734 = ((volatile __local
                                        float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)];
                            if ((local_tid_46716 - squot32(local_tid_46716,
                                                           32) * 32) == 0) {
                                x_46729 = x_46732;
                                x_46730 = x_46733;
                                x_46731 = x_46734;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46746 = 1;
                        while (slt32(skip_threads_46746, 32)) {
                            if (sle32(skip_threads_46746, local_tid_46716 -
                                      squot32(local_tid_46716, 32) * 32) &&
                                (squot32(local_tid_46716, 32) == 0 &&
                                 ltid_in_bounds_46743)) {
                                // read operands
                                {
                                    x_46729 = ((volatile __local
                                                bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716) -
                                                                           sext_i32_i64(skip_threads_46746)];
                                    x_46730 = ((volatile __local
                                                int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716) -
                                                                              sext_i32_i64(skip_threads_46746)];
                                    x_46731 = ((volatile __local
                                                float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716) -
                                                                            sext_i32_i64(skip_threads_46746)];
                                }
                                // perform operation
                                {
                                    bool inactive_46747 =
                                         slt64(srem64(sext_i32_i64(local_tid_46716 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28909),
                                               sext_i32_i64(local_tid_46716 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46716 -
                                                             skip_threads_46746) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46747) {
                                        x_46729 = x_46732;
                                        x_46730 = x_46733;
                                        x_46731 = x_46734;
                                    }
                                    if (!inactive_46747) {
                                        bool defunc_1_op_res_46735;
                                        int32_t defunc_1_op_res_46736;
                                        
                                        if (x_46729) {
                                            defunc_1_op_res_46735 = x_46729;
                                            defunc_1_op_res_46736 = x_46730;
                                        } else {
                                            bool x_46737 = x_46732 && x_46732;
                                            bool x_46738 = !x_46732;
                                            bool y_46739 = x_46729 && x_46738;
                                            bool defunc_1_op_res_f_res_46740 =
                                                 x_46737 || y_46739;
                                            int32_t defunc_1_op_res_f_res_46741;
                                            
                                            if (x_46732) {
                                                defunc_1_op_res_f_res_46741 =
                                                    x_46733;
                                            } else {
                                                defunc_1_op_res_f_res_46741 =
                                                    x_46730;
                                            }
                                            defunc_1_op_res_46735 =
                                                defunc_1_op_res_f_res_46740;
                                            defunc_1_op_res_46736 =
                                                defunc_1_op_res_f_res_46741;
                                        }
                                        
                                        float defunc_1_op_res_46742 = x_46731 +
                                              x_46734;
                                        
                                        x_46729 = defunc_1_op_res_46735;
                                        x_46730 = defunc_1_op_res_46736;
                                        x_46731 = defunc_1_op_res_46742;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46718, skip_threads_46746)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46746, local_tid_46716 -
                                      squot32(local_tid_46716, 32) * 32) &&
                                (squot32(local_tid_46716, 32) == 0 &&
                                 ltid_in_bounds_46743)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)] =
                                        x_46729;
                                    x_46732 = x_46729;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)] =
                                        x_46730;
                                    x_46733 = x_46730;
                                    ((volatile __local
                                      float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)] =
                                        x_46731;
                                    x_46734 = x_46731;
                                }
                            }
                            if (sle32(wave_sizze_46718, skip_threads_46746)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46746 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46716, 32) == 0 ||
                          !ltid_in_bounds_46743)) {
                        // read operands
                        {
                            x_38495 = x_38492;
                            x_38496 = x_38493;
                            x_38497 = x_38494;
                            x_38492 = ((__local
                                        bool *) red_arr_mem_46720)[sext_i32_i64(squot32(local_tid_46716,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_38493 = ((__local
                                        int32_t *) red_arr_mem_46722)[sext_i32_i64(squot32(local_tid_46716,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_38494 = ((__local
                                        float *) red_arr_mem_46724)[sext_i32_i64(squot32(local_tid_46716,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_46748 =
                                 slt64(srem64(sext_i32_i64(local_tid_46716),
                                              iota32_arg_28909),
                                       sext_i32_i64(local_tid_46716) -
                                       sext_i32_i64(squot32(local_tid_46716,
                                                            32) * 32 - 1));
                            
                            if (inactive_46748) {
                                x_38492 = x_38495;
                                x_38493 = x_38496;
                                x_38494 = x_38497;
                            }
                            if (!inactive_46748) {
                                bool defunc_1_op_res_38498;
                                int32_t defunc_1_op_res_38499;
                                
                                if (x_38492) {
                                    defunc_1_op_res_38498 = x_38492;
                                    defunc_1_op_res_38499 = x_38493;
                                } else {
                                    bool x_38500 = x_38495 && x_38495;
                                    bool x_38501 = !x_38495;
                                    bool y_38502 = x_38492 && x_38501;
                                    bool defunc_1_op_res_f_res_38503 =
                                         x_38500 || y_38502;
                                    int32_t defunc_1_op_res_f_res_38504;
                                    
                                    if (x_38495) {
                                        defunc_1_op_res_f_res_38504 = x_38496;
                                    } else {
                                        defunc_1_op_res_f_res_38504 = x_38493;
                                    }
                                    defunc_1_op_res_38498 =
                                        defunc_1_op_res_f_res_38503;
                                    defunc_1_op_res_38499 =
                                        defunc_1_op_res_f_res_38504;
                                }
                                
                                float defunc_1_op_res_38505 = x_38494 + x_38497;
                                
                                x_38492 = defunc_1_op_res_38498;
                                x_38493 = defunc_1_op_res_38499;
                                x_38494 = defunc_1_op_res_38505;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)] =
                                x_38492;
                            ((__local
                              int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)] =
                                x_38493;
                            ((__local
                              float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)] =
                                x_38494;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46716, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_46720)[sext_i32_i64(local_tid_46716)] =
                            x_38495;
                        ((__local
                          int32_t *) red_arr_mem_46722)[sext_i32_i64(local_tid_46716)] =
                            x_38496;
                        ((__local
                          float *) red_arr_mem_46724)[sext_i32_i64(local_tid_46716)] =
                            x_38497;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46728) *
                      squot64(segred_group_sizze_38486,
                              segment_sizze_nonzzero_46713) +
                      sext_i32_i64(local_tid_46716), m_28478) &&
                slt64(sext_i32_i64(local_tid_46716),
                      squot64(segred_group_sizze_38486,
                              segment_sizze_nonzzero_46713))) {
                ((__global
                  bool *) mem_45346)[sext_i32_i64(virt_group_id_46728) *
                                     squot64(segred_group_sizze_38486,
                                             segment_sizze_nonzzero_46713) +
                                     sext_i32_i64(local_tid_46716)] = ((__local
                                                                        bool *) red_arr_mem_46720)[(sext_i32_i64(local_tid_46716) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_46713 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_45348)[sext_i32_i64(virt_group_id_46728) *
                                        squot64(segred_group_sizze_38486,
                                                segment_sizze_nonzzero_46713) +
                                        sext_i32_i64(local_tid_46716)] =
                    ((__local
                      int32_t *) red_arr_mem_46722)[(sext_i32_i64(local_tid_46716) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_46713 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_45350)[sext_i32_i64(virt_group_id_46728) *
                                      squot64(segred_group_sizze_38486,
                                              segment_sizze_nonzzero_46713) +
                                      sext_i32_i64(local_tid_46716)] = ((__local
                                                                         float *) red_arr_mem_46724)[(sext_i32_i64(local_tid_46716) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_46713 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38486
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
# Start of server.py

import sys
import time

class Server:
    def __init__(self, ctx):
        self._ctx = ctx
        self._vars = {}

    class Failure(BaseException):
        def __init__(self, msg):
            self.msg = msg

    def _get_arg(self, args, i):
        if i < len(args):
            return args[i]
        else:
            raise self.Failure('Insufficient command args')

    def _get_entry_point(self, entry):
        if entry in self._ctx.entry_points:
            return self._ctx.entry_points[entry]
        else:
            raise self.Failure('Unknown entry point: %s' % entry)

    def _check_var(self, vname):
        if not vname in self._vars:
            raise self.Failure('Unknown variable: %s' % vname)

    def _get_var(self, vname):
        self._check_var(vname)
        return self._vars[vname]

    def _cmd_inputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[0]:
            print(t)

    def _cmd_outputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[1]:
            print(t)

    def _cmd_dummy(self, args):
        pass

    def _cmd_free(self, args):
        for vname in args:
            self._check_var(vname)
            del self._vars[vname]

    def _cmd_call(self, args):
        entry = self._get_entry_point(self._get_arg(args, 0))
        num_ins = len(entry[0])
        num_outs = len(entry[1])

        if len(args) != 1 + num_outs + num_ins:
            raise self.Failure('Invalid argument count, expected %d')

        out_vnames = args[1:num_outs+1]

        for out_vname in out_vnames:
            if out_vname in self._vars:
                raise self.Failure('Variable already exists: %s' % out_vname)

        in_vnames = args[1+num_outs:]
        ins = [ self._get_var(in_vname) for in_vname in in_vnames ]

        try:
            (runtime, vals) = getattr(self._ctx, args[0])(*ins)
        except Exception as e:
            raise self.Failure(str(e))

        print('runtime: %d' % runtime)

        if num_outs == 1:
            self._vars[out_vnames[0]] = vals
        else:
            for (out_vname, val) in zip(out_vnames, vals):
                self._vars[out_vname] = val

    def _cmd_store(self, args):
        fname = self._get_arg(args, 0)

        with open(fname, 'wb') as f:
            for i in range(1, len(args)):
                vname = args[i]
                value = self._get_var(vname)
                # In case we are using the PyOpenCL backend, we first
                # need to convert OpenCL arrays to ordinary NumPy
                # arrays.  We do this in a nasty way.
                if isinstance(value, np.number) or isinstance(value, np.bool) or isinstance(value, np.bool_) or isinstance(value, np.ndarray):
                    # Ordinary NumPy value.
                    f.write(construct_binary_value(self._vars[vname]))
                else:
                    # Assuming PyOpenCL array.
                    f.write(construct_binary_value(self._vars[vname].get()))

    def _cmd_restore(self, args):
        if len(args) % 2 == 0:
            raise self.Failure('Invalid argument count')

        fname = args[0]
        args = args[1:]

        with open(fname, 'rb') as f:
            reader = ReaderInput(f)
            while args != []:
                vname = args[0]
                typename = args[1]
                args = args[2:]

                if vname in self._vars:
                    raise self.Failure('Variable already exists: %s' % vname)

                try:
                    self._vars[vname] = read_value(typename, reader)
                except ValueError:
                    raise self.Failure('Failed to restore variable %s.\n'
                                       'Possibly malformed data in %s.\n'
                                       % (vname, fname))

            skip_spaces(reader)
            if reader.get_char() != b'':
                raise self.Failure('Expected EOF after reading values')

    _commands = { 'inputs': _cmd_inputs,
                  'outputs': _cmd_outputs,
                  'call': _cmd_call,
                  'restore': _cmd_restore,
                  'store': _cmd_store,
                  'free': _cmd_free,
                  'clear': _cmd_dummy,
                  'pause_profiling': _cmd_dummy,
                  'unpause_profiling': _cmd_dummy,
                  'report': _cmd_dummy
                 }

    def _process_line(self, line):
        words = line.split()
        if words == []:
            raise self.Failure('Empty line')
        else:
            cmd = words[0]
            args = words[1:]
            if cmd in self._commands:
                self._commands[cmd](self, args)
            else:
                raise self.Failure('Unknown command: %s' % cmd)

    def run(self):
        while True:
            line = sys.stdin.readline()
            if line == '':
                return
            try:
                self._process_line(line)
            except self.Failure as e:
                print('%%% FAILURE')
                print(e.msg)
            print('%%% OK', flush=True)


# End of server.py
class bfastfinal:
  entry_points = {"convertToFloat": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]i32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "mainMagnitude": (["i32", "i32", "i32", "f32", "f32", "f32",
                                     "[]i32", "[][]f32"], ["[]i32", "[]i32",
                                                           "[]f32", "[]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 4
    self.failure_msgs=["Index [{}, {}] out of bounds for array of shape [{}][{}].\n-> #0  helpers.fut:75:45-50\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:59:16-27\n   #1  helpers.fut:80:16-34\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}, {}] out of bounds for array of shape [{}][{}].\n-> #0  helpers.fut:75:45-50\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:106:37-57\n   #1  bfastfinal.fut:106:15-109:36\n   #2  bfastfinal.fut:189:5-58\n   #3  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n",
     "Index [{}, {}] out of bounds for array of shape [{}][{}].\n-> #0  helpers.fut:75:45-50\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:59:16-27\n   #1  helpers.fut:80:16-34\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}, {}] out of bounds for array of shape [{}][{}].\n-> #0  helpers.fut:75:45-50\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:106:37-57\n   #1  bfastfinal.fut:106:15-109:36\n   #2  bfastfinal.fut:174:3-56\n   #3  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:116:54-68\n   #1  bfastfinal.fut:116:13-119:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:114:20-131:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:117:29-43\n   #1  bfastfinal.fut:116:13-119:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:114:20-131:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:116:13-121:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:114:20-131:9\n   #6  bfastfinal.fut:174:3-56\n   #7  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:116:13-121:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:114:20-131:9\n   #6  bfastfinal.fut:174:3-56\n   #7  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:129:39-43\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-130:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:129:47-51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-130:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:130:38-42\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-130:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:161:29-83\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:161:29-83\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:161:29-83\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n",
     "Index [{}, {}] out of bounds for array of shape [{}][{}].\n-> #0  helpers.fut:75:45-50\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:59:16-27\n   #1  helpers.fut:80:16-34\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}, {}] out of bounds for array of shape [{}][{}].\n-> #0  helpers.fut:75:45-50\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:61:50-71\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:62:37-48\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:38-65\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:64:69-95\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:86:51-60\n   #1  bfastfinal.fut:86:25-83\n   #2  /prelude/soacs.fut:67:19-23\n   #3  /prelude/soacs.fut:67:3-37\n   #4  bfastfinal.fut:83:5-91:22\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:100:43-65\n   #1  bfastfinal.fut:99:27-102:47\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:97:17-104:24\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:106:37-57\n   #1  bfastfinal.fut:106:15-109:36\n   #2  bfastfinal.fut:181:5-58\n   #3  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:116:54-68\n   #1  bfastfinal.fut:116:13-119:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:114:20-131:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:117:29-43\n   #1  bfastfinal.fut:116:13-119:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:114:20-131:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:116:13-121:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:114:20-131:9\n   #6  bfastfinal.fut:181:5-58\n   #7  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:116:13-121:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:114:20-131:9\n   #6  bfastfinal.fut:181:5-58\n   #7  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:129:39-43\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-130:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:129:47-51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-130:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:130:38-42\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-130:43\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:38-52\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:141:56-74\n   #1  bfastfinal.fut:139:22-142:45\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:12:27-44\n   #1  bfastfinal.fut:158:35-74\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:136:38-164:9\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_reg_tile_size=default_reg_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_46321": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_46330": {"class": "group_size",
                                                                                   "value": None},
                                        "convertToFloat.segmap_group_size_29820": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_42673": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_43414": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_42674": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_43415": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_42670": {"class": "tile_size", "value": None},
                                        "main.Tk_43411": {"class": "tile_size", "value": None},
                                        "main.Tx_42525": {"class": "tile_size", "value": None},
                                        "main.Tx_42671": {"class": "tile_size", "value": None},
                                        "main.Tx_43412": {"class": "tile_size", "value": None},
                                        "main.Ty_42526": {"class": "tile_size", "value": None},
                                        "main.Ty_42672": {"class": "tile_size", "value": None},
                                        "main.Ty_43413": {"class": "tile_size", "value": None},
                                        "main.group_size_45852": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38664": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38842": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38970": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39002": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39049": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39642": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39871": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39941": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40040": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40158": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40398": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40539": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40671": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40952": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41027": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41176": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41290": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41445": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41591": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_42003": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_42157": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_39004": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39051": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40400": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40541": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40673": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_42159": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_39109": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40460": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40597": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40727": {"class": "group_size", "value": None},
                                        "main.segred_group_size_41305": {"class": "group_size", "value": None},
                                        "main.segred_group_size_41330": {"class": "group_size", "value": None},
                                        "main.segred_group_size_41401": {"class": "group_size", "value": None},
                                        "main.segred_group_size_41493": {"class": "group_size", "value": None},
                                        "main.segred_group_size_42054": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_39111": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40462": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40599": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40729": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_41307": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_41332": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_41403": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_41495": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_42056": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_41036": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_42108": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_41038": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_42110": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_43137": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_42673": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_43414": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_42674": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_43415": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_42670": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_43411": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_42525": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_42671": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_43412": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_42526": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_42672": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_43413": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_45864": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29978": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30156": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30284": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30316": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30363": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30956": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31185": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31255": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31354": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31472": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31712": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31853": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31985": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32266": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32341": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32490": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32604": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32759": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32904": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33190": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33312": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33369": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33547": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33896": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33952": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34028": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34078": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_30318": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30365": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31714": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31855": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31987": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33549": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_30423": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31774": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31911": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32041": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32619": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32644": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32715": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32807": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33988": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_30425": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31776": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31913": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32043": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32621": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32646": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32717": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32809": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33990": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_32350": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_34039": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_32352": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_34041": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_38": {"class": "threshold (!mainDetailed.suff_outer_par_37)",
                                                                           "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_37": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_43137": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Rx_42673": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Rx_43414": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_42674": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_43415": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Tk_42670": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tk_43411": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_42525": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_42671": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_43412": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_42526": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_42672": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_43413": {"class": "tile_size", "value": None},
                                        "mainMagnitude.group_size_45853": {"class": "group_size", "value": None},
                                        "mainMagnitude.segmap_group_size_34346": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34524": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34652": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34684": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34731": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35324": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35553": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35623": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35722": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35840": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36080": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36221": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36353": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36634": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36709": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36858": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36972": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37127": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37273": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37530": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37652": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37709": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_38243": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_38397": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34686": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34733": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_36082": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_36223": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_36355": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_38399": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34791": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36142": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36279": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36409": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36987": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_37012": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_37083": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_37175": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_38294": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34793": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36144": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36281": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36411": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36989": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_37014": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_37085": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_37177": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_38296": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segscan_group_size_36718": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_group_size_38348": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_36720": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_38350": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_13": {"class": "threshold (!mainMagnitude.suff_intra_par_11)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_29": {"class": "threshold (!mainMagnitude.suff_outer_par_28)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_17": {"class": "threshold (!mainMagnitude.suff_outer_par_16)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_19": {"class": "threshold (!mainMagnitude.suff_outer_par_18)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_21": {"class": "threshold (!mainMagnitude.suff_outer_par_20)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_7": {"class": "threshold (!mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.suff_outer_par_8": {"class": "threshold (!mainMagnitude.suff_outer_par_7 !mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.tile_size_43137": {"class": "tile_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_46318_var = program.builtinzhreplicate_f32zireplicate_46318
    self.builtinzhreplicate_i32zireplicate_46327_var = program.builtinzhreplicate_i32zireplicate_46327
    self.convertToFloatzisegmap_29816_var = program.convertToFloatzisegmap_29816
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_45849_var = program.mainzicopy_45849
    self.mainziscan_stage1_41042_var = program.mainziscan_stage1_41042
    self.mainziscan_stage1_42114_var = program.mainziscan_stage1_42114
    self.mainziscan_stage2_41042_var = program.mainziscan_stage2_41042
    self.mainziscan_stage2_42114_var = program.mainziscan_stage2_42114
    self.mainziscan_stage3_41042_var = program.mainziscan_stage3_41042
    self.mainziscan_stage3_42114_var = program.mainziscan_stage3_42114
    self.mainzisegmap_38661_var = program.mainzisegmap_38661
    self.mainzisegmap_38839_var = program.mainzisegmap_38839
    self.mainzisegmap_38967_var = program.mainzisegmap_38967
    self.mainzisegmap_39000_var = program.mainzisegmap_39000
    self.mainzisegmap_39046_var = program.mainzisegmap_39046
    self.mainzisegmap_39638_var = program.mainzisegmap_39638
    self.mainzisegmap_39868_var = program.mainzisegmap_39868
    self.mainzisegmap_39938_var = program.mainzisegmap_39938
    self.mainzisegmap_40038_var = program.mainzisegmap_40038
    self.mainzisegmap_40155_var = program.mainzisegmap_40155
    self.mainzisegmap_40396_var = program.mainzisegmap_40396
    self.mainzisegmap_40537_var = program.mainzisegmap_40537
    self.mainzisegmap_40669_var = program.mainzisegmap_40669
    self.mainzisegmap_40949_var = program.mainzisegmap_40949
    self.mainzisegmap_41025_var = program.mainzisegmap_41025
    self.mainzisegmap_41288_var = program.mainzisegmap_41288
    self.mainzisegmap_41589_var = program.mainzisegmap_41589
    self.mainzisegmap_42001_var = program.mainzisegmap_42001
    self.mainzisegmap_42155_var = program.mainzisegmap_42155
    self.mainzisegmap_intragroup_39374_var = program.mainzisegmap_intragroup_39374
    self.mainzisegmap_intragroup_39701_var = program.mainzisegmap_intragroup_39701
    self.mainzisegmap_intragroup_40832_var = program.mainzisegmap_intragroup_40832
    self.mainzisegmap_intragroup_41172_var = program.mainzisegmap_intragroup_41172
    self.mainzisegmap_intragroup_41640_var = program.mainzisegmap_intragroup_41640
    self.mainzisegmap_intragroup_42541_var = program.mainzisegmap_intragroup_42541
    self.mainzisegmap_intragroup_42694_var = program.mainzisegmap_intragroup_42694
    self.mainzisegmap_intragroup_43143_var = program.mainzisegmap_intragroup_43143
    self.mainzisegmap_intragroup_43435_var = program.mainzisegmap_intragroup_43435
    self.mainzisegmap_intragroup_43869_var = program.mainzisegmap_intragroup_43869
    self.mainzisegmap_intragroup_44075_var = program.mainzisegmap_intragroup_44075
    self.mainzisegred_large_39115_var = program.mainzisegred_large_39115
    self.mainzisegred_large_40466_var = program.mainzisegred_large_40466
    self.mainzisegred_large_40603_var = program.mainzisegred_large_40603
    self.mainzisegred_large_40733_var = program.mainzisegred_large_40733
    self.mainzisegred_large_41311_var = program.mainzisegred_large_41311
    self.mainzisegred_large_41336_var = program.mainzisegred_large_41336
    self.mainzisegred_large_41499_var = program.mainzisegred_large_41499
    self.mainzisegred_large_42060_var = program.mainzisegred_large_42060
    self.mainzisegred_nonseg_41409_var = program.mainzisegred_nonseg_41409
    self.mainzisegred_small_39115_var = program.mainzisegred_small_39115
    self.mainzisegred_small_40466_var = program.mainzisegred_small_40466
    self.mainzisegred_small_40603_var = program.mainzisegred_small_40603
    self.mainzisegred_small_40733_var = program.mainzisegred_small_40733
    self.mainzisegred_small_41311_var = program.mainzisegred_small_41311
    self.mainzisegred_small_41336_var = program.mainzisegred_small_41336
    self.mainzisegred_small_41499_var = program.mainzisegred_small_41499
    self.mainzisegred_small_42060_var = program.mainzisegred_small_42060
    self.mainDetailedzicopy_45861_var = program.mainDetailedzicopy_45861
    self.mainDetailedziscan_stage1_32356_var = program.mainDetailedziscan_stage1_32356
    self.mainDetailedziscan_stage1_34045_var = program.mainDetailedziscan_stage1_34045
    self.mainDetailedziscan_stage2_32356_var = program.mainDetailedziscan_stage2_32356
    self.mainDetailedziscan_stage2_34045_var = program.mainDetailedziscan_stage2_34045
    self.mainDetailedziscan_stage3_32356_var = program.mainDetailedziscan_stage3_32356
    self.mainDetailedziscan_stage3_34045_var = program.mainDetailedziscan_stage3_34045
    self.mainDetailedzisegmap_29975_var = program.mainDetailedzisegmap_29975
    self.mainDetailedzisegmap_30153_var = program.mainDetailedzisegmap_30153
    self.mainDetailedzisegmap_30281_var = program.mainDetailedzisegmap_30281
    self.mainDetailedzisegmap_30314_var = program.mainDetailedzisegmap_30314
    self.mainDetailedzisegmap_30360_var = program.mainDetailedzisegmap_30360
    self.mainDetailedzisegmap_30952_var = program.mainDetailedzisegmap_30952
    self.mainDetailedzisegmap_31182_var = program.mainDetailedzisegmap_31182
    self.mainDetailedzisegmap_31252_var = program.mainDetailedzisegmap_31252
    self.mainDetailedzisegmap_31352_var = program.mainDetailedzisegmap_31352
    self.mainDetailedzisegmap_31469_var = program.mainDetailedzisegmap_31469
    self.mainDetailedzisegmap_31710_var = program.mainDetailedzisegmap_31710
    self.mainDetailedzisegmap_31851_var = program.mainDetailedzisegmap_31851
    self.mainDetailedzisegmap_31983_var = program.mainDetailedzisegmap_31983
    self.mainDetailedzisegmap_32263_var = program.mainDetailedzisegmap_32263
    self.mainDetailedzisegmap_32339_var = program.mainDetailedzisegmap_32339
    self.mainDetailedzisegmap_32602_var = program.mainDetailedzisegmap_32602
    self.mainDetailedzisegmap_32902_var = program.mainDetailedzisegmap_32902
    self.mainDetailedzisegmap_33188_var = program.mainDetailedzisegmap_33188
    self.mainDetailedzisegmap_33309_var = program.mainDetailedzisegmap_33309
    self.mainDetailedzisegmap_33367_var = program.mainDetailedzisegmap_33367
    self.mainDetailedzisegmap_33545_var = program.mainDetailedzisegmap_33545
    self.mainDetailedzisegmap_33893_var = program.mainDetailedzisegmap_33893
    self.mainDetailedzisegmap_33950_var = program.mainDetailedzisegmap_33950
    self.mainDetailedzisegmap_34026_var = program.mainDetailedzisegmap_34026
    self.mainDetailedzisegmap_34076_var = program.mainDetailedzisegmap_34076
    self.mainDetailedzisegmap_intragroup_30688_var = program.mainDetailedzisegmap_intragroup_30688
    self.mainDetailedzisegmap_intragroup_31015_var = program.mainDetailedzisegmap_intragroup_31015
    self.mainDetailedzisegmap_intragroup_32146_var = program.mainDetailedzisegmap_intragroup_32146
    self.mainDetailedzisegmap_intragroup_32486_var = program.mainDetailedzisegmap_intragroup_32486
    self.mainDetailedzisegmap_intragroup_33543_var = program.mainDetailedzisegmap_intragroup_33543
    self.mainDetailedzisegmap_intragroup_42541_var = program.mainDetailedzisegmap_intragroup_42541
    self.mainDetailedzisegmap_intragroup_42694_var = program.mainDetailedzisegmap_intragroup_42694
    self.mainDetailedzisegmap_intragroup_43143_var = program.mainDetailedzisegmap_intragroup_43143
    self.mainDetailedzisegmap_intragroup_43435_var = program.mainDetailedzisegmap_intragroup_43435
    self.mainDetailedzisegmap_intragroup_43869_var = program.mainDetailedzisegmap_intragroup_43869
    self.mainDetailedzisegmap_intragroup_44075_var = program.mainDetailedzisegmap_intragroup_44075
    self.mainDetailedzisegred_large_30429_var = program.mainDetailedzisegred_large_30429
    self.mainDetailedzisegred_large_31780_var = program.mainDetailedzisegred_large_31780
    self.mainDetailedzisegred_large_31917_var = program.mainDetailedzisegred_large_31917
    self.mainDetailedzisegred_large_32047_var = program.mainDetailedzisegred_large_32047
    self.mainDetailedzisegred_large_32625_var = program.mainDetailedzisegred_large_32625
    self.mainDetailedzisegred_large_32650_var = program.mainDetailedzisegred_large_32650
    self.mainDetailedzisegred_large_32813_var = program.mainDetailedzisegred_large_32813
    self.mainDetailedzisegred_large_33994_var = program.mainDetailedzisegred_large_33994
    self.mainDetailedzisegred_nonseg_32723_var = program.mainDetailedzisegred_nonseg_32723
    self.mainDetailedzisegred_small_30429_var = program.mainDetailedzisegred_small_30429
    self.mainDetailedzisegred_small_31780_var = program.mainDetailedzisegred_small_31780
    self.mainDetailedzisegred_small_31917_var = program.mainDetailedzisegred_small_31917
    self.mainDetailedzisegred_small_32047_var = program.mainDetailedzisegred_small_32047
    self.mainDetailedzisegred_small_32625_var = program.mainDetailedzisegred_small_32625
    self.mainDetailedzisegred_small_32650_var = program.mainDetailedzisegred_small_32650
    self.mainDetailedzisegred_small_32813_var = program.mainDetailedzisegred_small_32813
    self.mainDetailedzisegred_small_33994_var = program.mainDetailedzisegred_small_33994
    self.mainMagnitudezicopy_45850_var = program.mainMagnitudezicopy_45850
    self.mainMagnitudeziscan_stage1_36724_var = program.mainMagnitudeziscan_stage1_36724
    self.mainMagnitudeziscan_stage1_38354_var = program.mainMagnitudeziscan_stage1_38354
    self.mainMagnitudeziscan_stage2_36724_var = program.mainMagnitudeziscan_stage2_36724
    self.mainMagnitudeziscan_stage2_38354_var = program.mainMagnitudeziscan_stage2_38354
    self.mainMagnitudeziscan_stage3_36724_var = program.mainMagnitudeziscan_stage3_36724
    self.mainMagnitudeziscan_stage3_38354_var = program.mainMagnitudeziscan_stage3_38354
    self.mainMagnitudezisegmap_34343_var = program.mainMagnitudezisegmap_34343
    self.mainMagnitudezisegmap_34521_var = program.mainMagnitudezisegmap_34521
    self.mainMagnitudezisegmap_34649_var = program.mainMagnitudezisegmap_34649
    self.mainMagnitudezisegmap_34682_var = program.mainMagnitudezisegmap_34682
    self.mainMagnitudezisegmap_34728_var = program.mainMagnitudezisegmap_34728
    self.mainMagnitudezisegmap_35320_var = program.mainMagnitudezisegmap_35320
    self.mainMagnitudezisegmap_35550_var = program.mainMagnitudezisegmap_35550
    self.mainMagnitudezisegmap_35620_var = program.mainMagnitudezisegmap_35620
    self.mainMagnitudezisegmap_35720_var = program.mainMagnitudezisegmap_35720
    self.mainMagnitudezisegmap_35837_var = program.mainMagnitudezisegmap_35837
    self.mainMagnitudezisegmap_36078_var = program.mainMagnitudezisegmap_36078
    self.mainMagnitudezisegmap_36219_var = program.mainMagnitudezisegmap_36219
    self.mainMagnitudezisegmap_36351_var = program.mainMagnitudezisegmap_36351
    self.mainMagnitudezisegmap_36631_var = program.mainMagnitudezisegmap_36631
    self.mainMagnitudezisegmap_36707_var = program.mainMagnitudezisegmap_36707
    self.mainMagnitudezisegmap_36970_var = program.mainMagnitudezisegmap_36970
    self.mainMagnitudezisegmap_37271_var = program.mainMagnitudezisegmap_37271
    self.mainMagnitudezisegmap_37528_var = program.mainMagnitudezisegmap_37528
    self.mainMagnitudezisegmap_37649_var = program.mainMagnitudezisegmap_37649
    self.mainMagnitudezisegmap_37707_var = program.mainMagnitudezisegmap_37707
    self.mainMagnitudezisegmap_38241_var = program.mainMagnitudezisegmap_38241
    self.mainMagnitudezisegmap_38395_var = program.mainMagnitudezisegmap_38395
    self.mainMagnitudezisegmap_intragroup_35056_var = program.mainMagnitudezisegmap_intragroup_35056
    self.mainMagnitudezisegmap_intragroup_35383_var = program.mainMagnitudezisegmap_intragroup_35383
    self.mainMagnitudezisegmap_intragroup_36514_var = program.mainMagnitudezisegmap_intragroup_36514
    self.mainMagnitudezisegmap_intragroup_36854_var = program.mainMagnitudezisegmap_intragroup_36854
    self.mainMagnitudezisegmap_intragroup_37880_var = program.mainMagnitudezisegmap_intragroup_37880
    self.mainMagnitudezisegmap_intragroup_42541_var = program.mainMagnitudezisegmap_intragroup_42541
    self.mainMagnitudezisegmap_intragroup_42694_var = program.mainMagnitudezisegmap_intragroup_42694
    self.mainMagnitudezisegmap_intragroup_43143_var = program.mainMagnitudezisegmap_intragroup_43143
    self.mainMagnitudezisegmap_intragroup_43435_var = program.mainMagnitudezisegmap_intragroup_43435
    self.mainMagnitudezisegmap_intragroup_43869_var = program.mainMagnitudezisegmap_intragroup_43869
    self.mainMagnitudezisegmap_intragroup_44075_var = program.mainMagnitudezisegmap_intragroup_44075
    self.mainMagnitudezisegred_large_34797_var = program.mainMagnitudezisegred_large_34797
    self.mainMagnitudezisegred_large_36148_var = program.mainMagnitudezisegred_large_36148
    self.mainMagnitudezisegred_large_36285_var = program.mainMagnitudezisegred_large_36285
    self.mainMagnitudezisegred_large_36415_var = program.mainMagnitudezisegred_large_36415
    self.mainMagnitudezisegred_large_36993_var = program.mainMagnitudezisegred_large_36993
    self.mainMagnitudezisegred_large_37018_var = program.mainMagnitudezisegred_large_37018
    self.mainMagnitudezisegred_large_37181_var = program.mainMagnitudezisegred_large_37181
    self.mainMagnitudezisegred_large_38300_var = program.mainMagnitudezisegred_large_38300
    self.mainMagnitudezisegred_nonseg_37091_var = program.mainMagnitudezisegred_nonseg_37091
    self.mainMagnitudezisegred_small_34797_var = program.mainMagnitudezisegred_small_34797
    self.mainMagnitudezisegred_small_36148_var = program.mainMagnitudezisegred_small_36148
    self.mainMagnitudezisegred_small_36285_var = program.mainMagnitudezisegred_small_36285
    self.mainMagnitudezisegred_small_36415_var = program.mainMagnitudezisegred_small_36415
    self.mainMagnitudezisegred_small_36993_var = program.mainMagnitudezisegred_small_36993
    self.mainMagnitudezisegred_small_37018_var = program.mainMagnitudezisegred_small_37018
    self.mainMagnitudezisegred_small_37181_var = program.mainMagnitudezisegred_small_37181
    self.mainMagnitudezisegred_small_38300_var = program.mainMagnitudezisegred_small_38300
    self.constants = {}
    mainzicounter_mem_45784 = np.zeros(10240, dtype=np.int32)
    static_mem_46860 = opencl_alloc(self, 40960, "static_mem_46860")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46860,
                      normaliseArray(mainzicounter_mem_45784),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45784 = static_mem_46860
    mainzicounter_mem_45981 = np.zeros(10240, dtype=np.int32)
    static_mem_46863 = opencl_alloc(self, 40960, "static_mem_46863")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46863,
                      normaliseArray(mainzicounter_mem_45981),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45981 = static_mem_46863
    mainzicounter_mem_46069 = np.zeros(10240, dtype=np.int32)
    static_mem_46864 = opencl_alloc(self, 40960, "static_mem_46864")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46864,
                      normaliseArray(mainzicounter_mem_46069),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46069 = static_mem_46864
    mainzicounter_mem_46201 = np.zeros(10240, dtype=np.int32)
    static_mem_46865 = opencl_alloc(self, 40960, "static_mem_46865")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46865,
                      normaliseArray(mainzicounter_mem_46201),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46201 = static_mem_46865
    mainzicounter_mem_46393 = np.zeros(10240, dtype=np.int32)
    static_mem_46866 = opencl_alloc(self, 40960, "static_mem_46866")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46866,
                      normaliseArray(mainzicounter_mem_46393),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46393 = static_mem_46866
    mainzicounter_mem_46453 = np.zeros(10240, dtype=np.int32)
    static_mem_46867 = opencl_alloc(self, 40960, "static_mem_46867")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46867,
                      normaliseArray(mainzicounter_mem_46453),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46453 = static_mem_46867
    mainzicounter_mem_46493 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_46868 = opencl_alloc(self, 40, "static_mem_46868")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_46868,
                      normaliseArray(mainzicounter_mem_46493),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46493 = static_mem_46868
    mainzicounter_mem_46562 = np.zeros(10240, dtype=np.int32)
    static_mem_46870 = opencl_alloc(self, 40960, "static_mem_46870")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46870,
                      normaliseArray(mainzicounter_mem_46562),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46562 = static_mem_46870
    mainzicounter_mem_46739 = np.zeros(10240, dtype=np.int32)
    static_mem_46872 = opencl_alloc(self, 40960, "static_mem_46872")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46872,
                      normaliseArray(mainzicounter_mem_46739),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46739 = static_mem_46872
    mainDetailedzicounter_mem_45796 = np.zeros(10240, dtype=np.int32)
    static_mem_46873 = opencl_alloc(self, 40960, "static_mem_46873")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46873,
                      normaliseArray(mainDetailedzicounter_mem_45796),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45796 = static_mem_46873
    mainDetailedzicounter_mem_45993 = np.zeros(10240, dtype=np.int32)
    static_mem_46876 = opencl_alloc(self, 40960, "static_mem_46876")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46876,
                      normaliseArray(mainDetailedzicounter_mem_45993),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45993 = static_mem_46876
    mainDetailedzicounter_mem_46081 = np.zeros(10240, dtype=np.int32)
    static_mem_46877 = opencl_alloc(self, 40960, "static_mem_46877")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46877,
                      normaliseArray(mainDetailedzicounter_mem_46081),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46081 = static_mem_46877
    mainDetailedzicounter_mem_46213 = np.zeros(10240, dtype=np.int32)
    static_mem_46878 = opencl_alloc(self, 40960, "static_mem_46878")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46878,
                      normaliseArray(mainDetailedzicounter_mem_46213),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46213 = static_mem_46878
    mainDetailedzicounter_mem_46405 = np.zeros(10240, dtype=np.int32)
    static_mem_46879 = opencl_alloc(self, 40960, "static_mem_46879")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46879,
                      normaliseArray(mainDetailedzicounter_mem_46405),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46405 = static_mem_46879
    mainDetailedzicounter_mem_46465 = np.zeros(10240, dtype=np.int32)
    static_mem_46880 = opencl_alloc(self, 40960, "static_mem_46880")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46880,
                      normaliseArray(mainDetailedzicounter_mem_46465),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46465 = static_mem_46880
    mainDetailedzicounter_mem_46505 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_46881 = opencl_alloc(self, 40, "static_mem_46881")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_46881,
                      normaliseArray(mainDetailedzicounter_mem_46505),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46505 = static_mem_46881
    mainDetailedzicounter_mem_46574 = np.zeros(10240, dtype=np.int32)
    static_mem_46883 = opencl_alloc(self, 40960, "static_mem_46883")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46883,
                      normaliseArray(mainDetailedzicounter_mem_46574),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46574 = static_mem_46883
    mainDetailedzicounter_mem_46797 = np.zeros(10240, dtype=np.int32)
    static_mem_46885 = opencl_alloc(self, 40960, "static_mem_46885")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46885,
                      normaliseArray(mainDetailedzicounter_mem_46797),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46797 = static_mem_46885
    mainMagnitudezicounter_mem_45785 = np.zeros(10240, dtype=np.int32)
    static_mem_46886 = opencl_alloc(self, 40960, "static_mem_46886")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46886,
                      normaliseArray(mainMagnitudezicounter_mem_45785),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45785 = static_mem_46886
    mainMagnitudezicounter_mem_45982 = np.zeros(10240, dtype=np.int32)
    static_mem_46889 = opencl_alloc(self, 40960, "static_mem_46889")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46889,
                      normaliseArray(mainMagnitudezicounter_mem_45982),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45982 = static_mem_46889
    mainMagnitudezicounter_mem_46070 = np.zeros(10240, dtype=np.int32)
    static_mem_46890 = opencl_alloc(self, 40960, "static_mem_46890")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46890,
                      normaliseArray(mainMagnitudezicounter_mem_46070),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46070 = static_mem_46890
    mainMagnitudezicounter_mem_46202 = np.zeros(10240, dtype=np.int32)
    static_mem_46891 = opencl_alloc(self, 40960, "static_mem_46891")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46891,
                      normaliseArray(mainMagnitudezicounter_mem_46202),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46202 = static_mem_46891
    mainMagnitudezicounter_mem_46394 = np.zeros(10240, dtype=np.int32)
    static_mem_46892 = opencl_alloc(self, 40960, "static_mem_46892")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46892,
                      normaliseArray(mainMagnitudezicounter_mem_46394),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46394 = static_mem_46892
    mainMagnitudezicounter_mem_46454 = np.zeros(10240, dtype=np.int32)
    static_mem_46893 = opencl_alloc(self, 40960, "static_mem_46893")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46893,
                      normaliseArray(mainMagnitudezicounter_mem_46454),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46454 = static_mem_46893
    mainMagnitudezicounter_mem_46494 = np.array([np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0)],
                                                dtype=np.int32)
    static_mem_46894 = opencl_alloc(self, 40, "static_mem_46894")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_46894,
                      normaliseArray(mainMagnitudezicounter_mem_46494),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46494 = static_mem_46894
    mainMagnitudezicounter_mem_46563 = np.zeros(10240, dtype=np.int32)
    static_mem_46896 = opencl_alloc(self, 40960, "static_mem_46896")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46896,
                      normaliseArray(mainMagnitudezicounter_mem_46563),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46563 = static_mem_46896
    mainMagnitudezicounter_mem_46760 = np.zeros(10240, dtype=np.int32)
    static_mem_46898 = opencl_alloc(self, 40960, "static_mem_46898")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46898,
                      normaliseArray(mainMagnitudezicounter_mem_46760),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_46760 = static_mem_46898
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_46314, num_elems_46315,
                                     val_46316):
    group_sizze_46321 = self.sizes["builtin#replicate_f32.group_size_46321"]
    num_groups_46322 = sdiv_up64(num_elems_46315, group_sizze_46321)
    if ((1 * (np.long(num_groups_46322) * np.long(group_sizze_46321))) != 0):
      self.builtinzhreplicate_f32zireplicate_46318_var.set_args(np.int32(num_elems_46315),
                                                                np.float32(val_46316),
                                                                mem_46314)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_46318_var,
                                 ((np.long(num_groups_46322) * np.long(group_sizze_46321)),),
                                 (np.long(group_sizze_46321),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_46323, num_elems_46324,
                                     val_46325):
    group_sizze_46330 = self.sizes["builtin#replicate_i32.group_size_46330"]
    num_groups_46331 = sdiv_up64(num_elems_46324, group_sizze_46330)
    if ((1 * (np.long(num_groups_46331) * np.long(group_sizze_46330))) != 0):
      self.builtinzhreplicate_i32zireplicate_46327_var.set_args(np.int32(num_elems_46324),
                                                                np.int32(val_46325),
                                                                mem_46323)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_46327_var,
                                 ((np.long(num_groups_46331) * np.long(group_sizze_46330)),),
                                 (np.long(group_sizze_46330),))
      if synchronous:
        sync(self)
    return ()
  def futhark_convertToFloat(self, images_mem_44380, m_27757, n_27758, p_27759,
                             nan_value_27760):
    y_29875 = (n_27758 * p_27759)
    nest_sizze_29876 = (m_27757 * y_29875)
    segmap_group_sizze_29877 = self.sizes["convertToFloat.segmap_group_size_29820"]
    segmap_usable_groups_29878 = sdiv_up64(nest_sizze_29876,
                                           segmap_group_sizze_29877)
    binop_x_44383 = (m_27757 * n_27758)
    binop_x_44384 = (p_27759 * binop_x_44383)
    bytes_44382 = (np.int64(4) * binop_x_44384)
    mem_44385 = opencl_alloc(self, bytes_44382, "mem_44385")
    if ((1 * (np.long(segmap_usable_groups_29878) * np.long(segmap_group_sizze_29877))) != 0):
      self.convertToFloatzisegmap_29816_var.set_args(self.global_failure,
                                                     np.int64(m_27757),
                                                     np.int64(n_27758),
                                                     np.int64(p_27759),
                                                     np.int16(nan_value_27760),
                                                     images_mem_44380,
                                                     mem_44385)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.convertToFloatzisegmap_29816_var,
                                 ((np.long(segmap_usable_groups_29878) * np.long(segmap_group_sizze_29877)),),
                                 (np.long(segmap_group_sizze_29877),))
      if synchronous:
        sync(self)
    out_mem_45676 = mem_44385
    return out_mem_45676
  def futhark_main(self, mappingindices_mem_44380, images_mem_44381, N_29165,
                   m_29166, trend_29167, k_29168, n_29169, freq_29170,
                   hfrac_29171, lam_29172):
    i32_res_29175 = sext_i32_i64(n_29169)
    x_29176 = (np.int32(2) * k_29168)
    k2p2_29177 = (np.int32(2) + x_29176)
    cond_29178 = slt32(np.int32(0), trend_29167)
    if cond_29178:
      k2p2zq_29179 = k2p2_29177
    else:
      k2p2zq_f_res_29180 = (k2p2_29177 - np.int32(1))
      k2p2zq_29179 = k2p2zq_f_res_29180
    i32_res_29181 = sext_i32_i64(k2p2zq_29179)
    binop_x_44384 = (N_29165 * i32_res_29181)
    bytes_44383 = (np.int64(4) * binop_x_44384)
    if cond_29178:
      bounds_invalid_upwards_29183 = slt64(i32_res_29181, np.int64(0))
      valid_29184 = not(bounds_invalid_upwards_29183)
      range_valid_c_29185 = True
      assert valid_29184, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_29181,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_38734 = self.sizes["main.segmap_group_size_38664"]
      segmap_usable_groups_38735 = sdiv_up64(binop_x_44384,
                                             segmap_group_sizze_38734)
      mem_44385 = opencl_alloc(self, bytes_44383, "mem_44385")
      if ((1 * (np.long(segmap_usable_groups_38735) * np.long(segmap_group_sizze_38734))) != 0):
        self.mainzisegmap_38661_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.float32(freq_29170),
                                             np.int64(i32_res_29181),
                                             mappingindices_mem_44380,
                                             mem_44385)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38661_var,
                                   ((np.long(segmap_usable_groups_38735) * np.long(segmap_group_sizze_38734)),),
                                   (np.long(segmap_group_sizze_38734),))
        if synchronous:
          sync(self)
      binop_p_mem_44390 = mem_44385
    else:
      bounds_invalid_upwards_29209 = slt64(i32_res_29181, np.int64(0))
      valid_29210 = not(bounds_invalid_upwards_29209)
      range_valid_c_29211 = True
      assert valid_29210, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:50:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_29181,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_38908 = self.sizes["main.segmap_group_size_38842"]
      segmap_usable_groups_38909 = sdiv_up64(binop_x_44384,
                                             segmap_group_sizze_38908)
      mem_44389 = opencl_alloc(self, bytes_44383, "mem_44389")
      if ((1 * (np.long(segmap_usable_groups_38909) * np.long(segmap_group_sizze_38908))) != 0):
        self.mainzisegmap_38839_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.float32(freq_29170),
                                             np.int64(i32_res_29181),
                                             mappingindices_mem_44380,
                                             mem_44389)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38839_var,
                                   ((np.long(segmap_usable_groups_38909) * np.long(segmap_group_sizze_38908)),),
                                   (np.long(segmap_group_sizze_38908),))
        if synchronous:
          sync(self)
      binop_p_mem_44390 = mem_44389
    x_29234 = (N_29165 * N_29165)
    y_29235 = (np.int64(2) * N_29165)
    x_29236 = (x_29234 + y_29235)
    x_29237 = (np.int64(1) + x_29236)
    y_29238 = (np.int64(1) + N_29165)
    zzero_29239 = (y_29238 == np.int64(0))
    nonzzero_29240 = not(zzero_29239)
    nonzzero_cert_29241 = True
    assert nonzzero_29240, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:189:5-58\n   #2  bfastfinal.fut:184:1-190:25\n" % ("division by zero",))
    x_29242 = sdiv64(x_29237, y_29238)
    x_29243 = (x_29242 - N_29165)
    binop_p_29244 = (x_29243 - np.int64(1))
    defunc_0_f_res_29245 = sext_i64_i32(binop_p_29244)
    i32_res_29246 = sitofp_i32_f32(defunc_0_f_res_29245)
    segmap_group_sizze_38991 = self.sizes["main.segmap_group_size_38970"]
    segmap_usable_groups_38992 = sdiv_up64(binop_x_44384,
                                           segmap_group_sizze_38991)
    mem_44393 = opencl_alloc(self, bytes_44383, "mem_44393")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_44393, np.int64(0),
                                                binop_p_mem_44390, np.int64(0),
                                                np.int64(1), N_29165,
                                                i32_res_29181)
    mem_44397 = opencl_alloc(self, bytes_44383, "mem_44397")
    if ((1 * (np.long(segmap_usable_groups_38992) * np.long(segmap_group_sizze_38991))) != 0):
      self.mainzisegmap_38967_var.set_args(self.global_failure,
                                           np.int64(N_29165),
                                           np.int64(i32_res_29181),
                                           np.float32(i32_res_29246), mem_44393,
                                           mem_44397)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38967_var,
                                 ((np.long(segmap_usable_groups_38992) * np.long(segmap_group_sizze_38991)),),
                                 (np.long(segmap_group_sizze_38991),))
      if synchronous:
        sync(self)
    eq_x_y_29254 = (np.int64(0) == i32_res_29181)
    p_and_eq_x_y_29255 = (cond_29178 and eq_x_y_29254)
    not_p_29256 = not(cond_29178)
    p_and_eq_x_y_29257 = (eq_x_y_29254 and not_p_29256)
    empty_slice_29258 = (p_and_eq_x_y_29255 or p_and_eq_x_y_29257)
    m_29259 = (i32_res_29181 - np.int64(1))
    zzero_leq_i_p_m_t_s_29260 = sle64(np.int64(0), m_29259)
    i_p_m_t_s_leq_w_29261 = slt64(m_29259, i32_res_29181)
    i_lte_j_29262 = sle64(np.int64(0), i32_res_29181)
    y_29263 = (zzero_leq_i_p_m_t_s_29260 and i_p_m_t_s_leq_w_29261)
    y_29264 = (i_lte_j_29262 and y_29263)
    ok_or_empty_29265 = (empty_slice_29258 or y_29264)
    empty_slice_29266 = (i32_res_29175 == np.int64(0))
    m_29267 = (i32_res_29175 - np.int64(1))
    zzero_leq_i_p_m_t_s_29268 = sle64(np.int64(0), m_29267)
    i_p_m_t_s_leq_w_29269 = slt64(m_29267, N_29165)
    i_lte_j_29270 = sle64(np.int64(0), i32_res_29175)
    y_29271 = (zzero_leq_i_p_m_t_s_29268 and i_p_m_t_s_leq_w_29269)
    y_29272 = (i_lte_j_29270 and y_29271)
    ok_or_empty_29273 = (empty_slice_29266 or y_29272)
    index_ok_29274 = (ok_or_empty_29265 and ok_or_empty_29273)
    index_certs_29275 = True
    assert index_ok_29274, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:189:5-58\n   #2  bfastfinal.fut:184:1-190:25\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_29175,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_29181,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_29165,
                                                                                                                                                                               "]."))
    empty_slice_29277 = (i32_res_29181 == np.int64(0))
    ok_or_empty_29278 = (y_29264 or empty_slice_29277)
    index_ok_29279 = (ok_or_empty_29273 and ok_or_empty_29278)
    index_certs_29280 = True
    assert index_ok_29279, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:189:5-58\n   #2  bfastfinal.fut:184:1-190:25\n" % ("Index [:",
                                                                                                                                                                               i32_res_29175,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_29165,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_29181,
                                                                                                                                                                               "]."))
    empty_slice_29282 = (m_29166 == np.int64(0))
    m_29283 = (m_29166 - np.int64(1))
    zzero_leq_i_p_m_t_s_29284 = sle64(np.int64(0), m_29283)
    i_p_m_t_s_leq_w_29285 = slt64(m_29283, m_29166)
    i_lte_j_29286 = sle64(np.int64(0), m_29166)
    y_29287 = (zzero_leq_i_p_m_t_s_29284 and i_p_m_t_s_leq_w_29285)
    y_29288 = (i_lte_j_29286 and y_29287)
    ok_or_empty_29289 = (empty_slice_29282 or y_29288)
    index_ok_29290 = (ok_or_empty_29273 and ok_or_empty_29289)
    index_certs_29291 = True
    assert index_ok_29290, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:189:5-58\n   #2  bfastfinal.fut:184:1-190:25\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_29175,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_29166,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_29165,
                                                                                                                                                                               "]."))
    suff_outer_par_38998 = (self.sizes["main.suff_outer_par_6"] <= m_29166)
    segmap_group_sizze_39024 = self.sizes["main.segmap_group_size_39002"]
    max_num_groups_45694 = self.sizes["main.segmap_num_groups_39004"]
    num_groups_39025 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29166,
                                                            segmap_group_sizze_39024),
                                                  sext_i32_i64(max_num_groups_45694))))
    nest_sizze_39200 = (m_29166 * i32_res_29181)
    segmap_group_sizze_39201 = self.sizes["main.segmap_group_size_39049"]
    max_num_groups_45695 = self.sizes["main.segmap_num_groups_39051"]
    num_groups_39202 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39200,
                                                            segmap_group_sizze_39201),
                                                  sext_i32_i64(max_num_groups_45695))))
    suff_outer_par_39206 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_39200)
    y_39230 = (i32_res_29181 * i32_res_29181)
    comparatee_39231 = (m_29166 * y_39230)
    suff_outer_par_39232 = (self.sizes["main.suff_outer_par_8"] <= comparatee_39231)
    nest_sizze_39252 = (i32_res_29175 * comparatee_39231)
    segred_group_sizze_39253 = self.sizes["main.segred_group_size_39109"]
    max_num_groups_45696 = self.sizes["main.segred_num_groups_39111"]
    num_groups_39254 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39252,
                                                            segred_group_sizze_39253),
                                                  sext_i32_i64(max_num_groups_45696))))
    Tx_42527 = self.sizes["main.Tx_42525"]
    Ty_42528 = self.sizes["main.Ty_42526"]
    Ty_42529 = smin64(i32_res_29181, Ty_42528)
    Tx_42530 = smin64(i32_res_29181, Tx_42527)
    gridDim_zz_42533 = sdiv_up64(m_29166, np.int64(30))
    group_sizze_tile3d_42536 = (Ty_42529 * Tx_42530)
    binop_x_44399 = (N_29165 * m_29166)
    bytes_44398 = (np.int64(4) * binop_x_44399)
    bytes_44443 = (np.int64(4) * comparatee_39231)
    bytes_44402 = (np.int64(4) * y_39230)
    binop_x_44546 = (i32_res_29181 * nest_sizze_39200)
    bytes_44544 = (np.int64(4) * binop_x_44546)
    bytes_44448 = (np.int64(4) * i32_res_29181)
    binop_x_44477 = (np.int64(30) * group_sizze_tile3d_42536)
    bytes_44475 = (np.int64(4) * binop_x_44477)
    binop_x_45447 = (np.int64(4) * Ty_42529)
    binop_x_45448 = (Tx_42530 * binop_x_45447)
    sizze_45449 = (np.int64(30) * binop_x_45448)
    num_threads_45633 = (segmap_group_sizze_39024 * num_groups_39025)
    total_sizze_45634 = (bytes_44402 * num_threads_45633)
    num_threads_45635 = (segmap_group_sizze_39201 * num_groups_39202)
    total_sizze_45636 = (bytes_44448 * num_threads_45635)
    local_memory_capacity_45818 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45818)) and suff_outer_par_38998):
      mem_44400 = opencl_alloc(self, bytes_44398, "mem_44400")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44400, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_29165, m_29166)
      mem_44446 = opencl_alloc(self, bytes_44443, "mem_44446")
      mem_44404 = opencl_alloc(self, total_sizze_45634, "mem_44404")
      if ((1 * (np.long(num_groups_39025) * np.long(segmap_group_sizze_39024))) != 0):
        self.mainzisegmap_39000_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.int64(m_29166),
                                             np.int32(n_29169),
                                             np.int32(k2p2zq_29179),
                                             np.int64(i32_res_29181),
                                             np.int64(num_groups_39025),
                                             binop_p_mem_44390, mem_44397,
                                             mem_44400, mem_44404, mem_44446)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39000_var,
                                   ((np.long(num_groups_39025) * np.long(segmap_group_sizze_39024)),),
                                   (np.long(segmap_group_sizze_39024),))
        if synchronous:
          sync(self)
      mem_44400 = None
      mem_44404 = None
      mem_44547 = opencl_alloc(self, bytes_44544, "mem_44547")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44547, np.int64(0),
                                                  mem_44446, np.int64(0),
                                                  np.int64(1), m_29166,
                                                  (i32_res_29181 * i32_res_29181))
      mem_44446 = None
      defunc_3_map_res_mem_44549 = mem_44547
    else:
      local_memory_capacity_45817 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_45817)) and suff_outer_par_39206):
        mem_44465 = opencl_alloc(self, bytes_44544, "mem_44465")
        mem_44449 = opencl_alloc(self, total_sizze_45636, "mem_44449")
        if ((1 * (np.long(num_groups_39202) * np.long(segmap_group_sizze_39201))) != 0):
          self.mainzisegmap_39046_var.set_args(self.global_failure,
                                               np.int64(N_29165),
                                               np.int64(m_29166),
                                               np.int32(n_29169),
                                               np.int32(k2p2zq_29179),
                                               np.int64(i32_res_29181),
                                               np.int64(num_groups_39202),
                                               images_mem_44381, mem_44393,
                                               mem_44397, mem_44449, mem_44465)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39046_var,
                                     ((np.long(num_groups_39202) * np.long(segmap_group_sizze_39201)),),
                                     (np.long(segmap_group_sizze_39201),))
          if synchronous:
            sync(self)
        mem_44449 = None
        mem_44541 = opencl_alloc(self, bytes_44544, "mem_44541")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44541, np.int64(0),
                                                    mem_44465, np.int64(0),
                                                    np.int64(1),
                                                    (m_29166 * i32_res_29181),
                                                    i32_res_29181)
        mem_44465 = None
        defunc_3_map_res_mem_44543 = mem_44541
      else:
        local_memory_capacity_45816 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_45816)) and suff_outer_par_39232):
          mem_44468 = opencl_alloc(self, bytes_44398, "mem_44468")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_44468, np.int64(0),
                                                      images_mem_44381,
                                                      np.int64(0), np.int64(1),
                                                      N_29165, m_29166)
          gridDim_x_42531 = sdiv_up64(i32_res_29181, Tx_42530)
          gridDim_y_42532 = sdiv_up64(i32_res_29181, Ty_42529)
          binop_x_42534 = (gridDim_y_42532 * gridDim_zz_42533)
          grid_sizze_tile3d_42535 = (gridDim_x_42531 * binop_x_42534)
          count_shmem_42537 = sdiv_up64(np.int64(30), group_sizze_tile3d_42536)
          mem_44528 = opencl_alloc(self, bytes_44544, "mem_44528")
          if ((1 * (np.long(grid_sizze_tile3d_42535) * np.long(group_sizze_tile3d_42536))) != 0):
            self.mainzisegmap_intragroup_42541_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_29166),
                                                            np.int32(n_29169),
                                                            np.int64(i32_res_29181),
                                                            np.int64(Ty_42529),
                                                            np.int64(Tx_42530),
                                                            np.int64(gridDim_x_42531),
                                                            np.int64(gridDim_y_42532),
                                                            np.int64(group_sizze_tile3d_42536),
                                                            np.int64(count_shmem_42537),
                                                            mem_44393,
                                                            mem_44397,
                                                            mem_44468,
                                                            mem_44528)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_42541_var,
                                       ((np.long(grid_sizze_tile3d_42535) * np.long(group_sizze_tile3d_42536)),),
                                       (np.long(group_sizze_tile3d_42536),))
            if synchronous:
              sync(self)
          mem_44468 = None
          defunc_3_map_res_mem_44537 = mem_44528
        else:
          mem_44531 = opencl_alloc(self, bytes_44383, "mem_44531")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_44531, np.int64(0),
                                                      mem_44397, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_29181, N_29165)
          mem_44536 = opencl_alloc(self, bytes_44544, "mem_44536")
          if slt64((i32_res_29175 * np.int64(2)), segred_group_sizze_39253):
            segment_sizze_nonzzero_45756 = smax64(np.int64(1), i32_res_29175)
            num_threads_45757 = (num_groups_39254 * segred_group_sizze_39253)
            if ((1 * (np.long(num_groups_39254) * np.long(segred_group_sizze_39253))) != 0):
              self.mainzisegred_small_39115_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39253))),
                                                         np.int64(N_29165),
                                                         np.int64(m_29166),
                                                         np.int64(i32_res_29175),
                                                         np.int64(i32_res_29181),
                                                         np.int64(num_groups_39254),
                                                         np.int64(segment_sizze_nonzzero_45756),
                                                         images_mem_44381,
                                                         binop_p_mem_44390,
                                                         mem_44531, mem_44536)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_39115_var,
                                         ((np.long(num_groups_39254) * np.long(segred_group_sizze_39253)),),
                                         (np.long(segred_group_sizze_39253),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_45777 = sdiv_up64(num_groups_39254,
                                                 smax64(np.int64(1),
                                                        ((m_29166 * i32_res_29181) * i32_res_29181)))
            elements_per_thread_45778 = sdiv_up64(i32_res_29175,
                                                  (segred_group_sizze_39253 * groups_per_segment_45777))
            virt_num_groups_45779 = (groups_per_segment_45777 * ((m_29166 * i32_res_29181) * i32_res_29181))
            num_threads_45780 = (num_groups_39254 * segred_group_sizze_39253)
            threads_per_segment_45781 = (groups_per_segment_45777 * segred_group_sizze_39253)
            group_res_arr_mem_45782 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_39253 * virt_num_groups_45779)),
                                                   "group_res_arr_mem_45782")
            mainzicounter_mem_45784 = self.mainzicounter_mem_45784
            if ((1 * (np.long(num_groups_39254) * np.long(segred_group_sizze_39253))) != 0):
              self.mainzisegred_large_39115_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39253))),
                                                         np.int64(N_29165),
                                                         np.int64(i32_res_29175),
                                                         np.int64(i32_res_29181),
                                                         np.int64(num_groups_39254),
                                                         np.int64(groups_per_segment_45777),
                                                         np.int64(elements_per_thread_45778),
                                                         np.int64(virt_num_groups_45779),
                                                         np.int64(threads_per_segment_45781),
                                                         images_mem_44381,
                                                         binop_p_mem_44390,
                                                         mem_44531, mem_44536,
                                                         group_res_arr_mem_45782,
                                                         mainzicounter_mem_45784)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_39115_var,
                                         ((np.long(num_groups_39254) * np.long(segred_group_sizze_39253)),),
                                         (np.long(segred_group_sizze_39253),))
              if synchronous:
                sync(self)
          mem_44531 = None
          defunc_3_map_res_mem_44537 = mem_44536
        defunc_3_map_res_mem_44543 = defunc_3_map_res_mem_44537
      defunc_3_map_res_mem_44549 = defunc_3_map_res_mem_44543
    m_29312 = (np.int32(2) * k2p2zq_29179)
    x_29313 = (np.int64(2) * i32_res_29181)
    nm_29314 = (i32_res_29181 * x_29313)
    bounds_invalid_upwards_29315 = slt64(nm_29314, np.int64(0))
    valid_29316 = not(bounds_invalid_upwards_29315)
    range_valid_c_29317 = True
    assert valid_29316, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:79:21-29\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n" % ("Range ",
                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                  nm_29314,
                                                                                                                                                                                                                                                                  " is invalid."))
    zzero_29322 = (m_29312 == np.int32(0))
    nonzzero_29323 = not(zzero_29322)
    nonzzero_cert_29324 = True
    assert nonzzero_29323, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:74:41-47\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n" % ("division by zero",))
    loop_nonempty_29325 = slt32(np.int32(0), k2p2zq_29179)
    loop_not_taken_29326 = not(loop_nonempty_29325)
    protect_assert_disj_29327 = (nonzzero_29323 or loop_not_taken_29326)
    nonzzero_cert_29328 = True
    assert protect_assert_disj_29327, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:60:43-49\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:189:5-58\n   #5  bfastfinal.fut:184:1-190:25\n" % ("division by zero",))
    i32_res_29329 = sext_i32_i64(m_29312)
    x_29330 = (i32_res_29181 * i32_res_29329)
    dim_ok_29331 = (x_29330 == nm_29314)
    dim_ok_cert_29332 = True
    assert dim_ok_29331, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:16-43\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n" % ("new shape has different number of elements than old shape",))
    j_m_i_29333 = (x_29313 - i32_res_29181)
    empty_slice_29334 = (j_m_i_29333 == np.int64(0))
    m_29335 = (j_m_i_29333 - np.int64(1))
    i_p_m_t_s_29336 = (i32_res_29181 + m_29335)
    zzero_leq_i_p_m_t_s_29337 = sle64(np.int64(0), i_p_m_t_s_29336)
    i_p_m_t_s_leq_w_29338 = slt64(i_p_m_t_s_29336, i32_res_29329)
    i_lte_j_29339 = sle64(i32_res_29181, x_29313)
    y_29340 = (i_lte_j_29262 and i_p_m_t_s_leq_w_29338)
    y_29341 = (zzero_leq_i_p_m_t_s_29337 and y_29340)
    y_29342 = (i_lte_j_29339 and y_29341)
    forwards_ok_29343 = (i_lte_j_29262 and y_29342)
    ok_or_empty_29344 = (empty_slice_29334 or forwards_ok_29343)
    index_ok_29345 = (ok_or_empty_29278 and ok_or_empty_29344)
    index_certs_29346 = True
    assert index_ok_29345, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:83:8-30\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:189:5-58\n   #3  bfastfinal.fut:184:1-190:25\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_29181,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_29181,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   x_29313,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_29181,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_29329,
                                                                                                                                                                                                                   "]."))
    dim_match_29347 = (i32_res_29181 == j_m_i_29333)
    empty_or_match_cert_29348 = True
    assert dim_match_29347, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:83:8-45\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:189:5-58\n   #3  bfastfinal.fut:184:1-190:25\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                            i32_res_29181,
                                                                                                                                                                                                            ", ",
                                                                                                                                                                                                            j_m_i_29333,
                                                                                                                                                                                                            ") cannot match shape of type `[",
                                                                                                                                                                                                            i32_res_29181,
                                                                                                                                                                                                            "][",
                                                                                                                                                                                                            i32_res_29181,
                                                                                                                                                                                                            "]f32`."))
    max_group_sizze_39548 = self.max_group_size
    fits_39549 = sle64(nm_29314, max_group_sizze_39548)
    suff_intra_par_39547 = (self.sizes["main.suff_intra_par_11"] <= nm_29314)
    intra_suff_and_fits_39550 = (suff_intra_par_39547 and fits_39549)
    nest_sizze_40214 = (m_29166 * nm_29314)
    segmap_group_sizze_40215 = self.sizes["main.segmap_group_size_40158"]
    suff_intra_par_40254 = (self.sizes["main.suff_intra_par_13"] <= nm_29314)
    intra_suff_and_fits_40255 = (fits_39549 and suff_intra_par_40254)
    segmap_group_sizze_40307 = self.sizes["main.segmap_group_size_40040"]
    segmap_group_sizze_40323 = self.sizes["main.segmap_group_size_39941"]
    segmap_group_sizze_40373 = self.sizes["main.segmap_group_size_39871"]
    y_40383 = (i32_res_29181 * j_m_i_29333)
    nest_sizze_40384 = (m_29166 * y_40383)
    segmap_group_sizze_40385 = self.sizes["main.segmap_group_size_39642"]
    segmap_usable_groups_40308 = sdiv_up_safe64(m_29166,
                                                segmap_group_sizze_40307)
    segmap_usable_groups_40324 = sdiv_up_safe64(nest_sizze_40214,
                                                segmap_group_sizze_40323)
    segmap_usable_groups_40374 = sdiv_up_safe64(nest_sizze_40214,
                                                segmap_group_sizze_40373)
    bytes_44552 = (np.int64(4) * nm_29314)
    bytes_44575 = (np.int64(4) * nest_sizze_40214)
    binop_x_44626 = (j_m_i_29333 * nest_sizze_39200)
    bytes_44624 = (np.int64(4) * binop_x_44626)
    local_memory_capacity_45819 = self.max_local_memory
    if intra_suff_and_fits_39550:
      defunc_3_map_res_ixfn_44628 = i32_res_29181
    else:
      defunc_3_map_res_ixfn_44628 = j_m_i_29333
    local_memory_capacity_45882 = self.max_local_memory
    if (sle64(((bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_45882)) and intra_suff_and_fits_39550):
      mem_44573 = opencl_alloc(self, bytes_44544, "mem_44573")
      if ((1 * (np.long(m_29166) * np.long(nm_29314))) != 0):
        self.mainzisegmap_intragroup_39374_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long(bytes_44552)),
                                                        cl.LocalMemory(np.long(bytes_44552)),
                                                        np.int32(k2p2zq_29179),
                                                        np.int64(i32_res_29181),
                                                        np.int32(m_29312),
                                                        np.int64(nm_29314),
                                                        np.int64(i32_res_29329),
                                                        defunc_3_map_res_mem_44549,
                                                        mem_44573)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39374_var,
                                   ((np.long(m_29166) * np.long(nm_29314)),),
                                   (np.long(nm_29314),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_44629 = mem_44573
    else:
      segmap_usable_groups_40216 = sdiv_up64(nest_sizze_40214,
                                             segmap_group_sizze_40215)
      mem_44577 = opencl_alloc(self, bytes_44575, "mem_44577")
      if ((1 * (np.long(segmap_usable_groups_40216) * np.long(segmap_group_sizze_40215))) != 0):
        self.mainzisegmap_40155_var.set_args(self.global_failure,
                                             self.failure_is_an_option,
                                             self.global_failure_args,
                                             np.int64(m_29166),
                                             np.int32(k2p2zq_29179),
                                             np.int64(i32_res_29181),
                                             np.int32(m_29312),
                                             np.int64(nm_29314),
                                             defunc_3_map_res_mem_44549,
                                             mem_44577)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40155_var,
                                   ((np.long(segmap_usable_groups_40216) * np.long(segmap_group_sizze_40215)),),
                                   (np.long(segmap_group_sizze_40215),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      ctx_param_ext_44578 = m_29166
      ctx_param_ext_44579 = nm_29314
      ctx_param_ext_44580 = np.int64(0)
      ctx_param_ext_44581 = nm_29314
      ctx_param_ext_44582 = m_29166
      ctx_param_ext_44583 = np.int64(1)
      ctx_param_ext_44584 = nm_29314
      mem_param_44585 = mem_44577
      i_40240 = np.int32(0)
      one_46862 = np.int32(1)
      for counter_46861 in range(k2p2zq_29179):
        i32_res_40242 = sext_i32_i64(i_40240)
        x_40243 = sle64(np.int64(0), i32_res_40242)
        y_40244 = slt64(i32_res_40242, nm_29314)
        bounds_check_40245 = (x_40243 and y_40244)
        index_certs_40246 = True
        assert bounds_check_40245, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:59:16-27\n   #1  helpers.fut:80:16-34\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n" % ("Index [",
                                                                                                                                                                                                                                         i32_res_40242,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_29314,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_45842 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44607 = m_29166
        else:
          gauss_jordan_res_ixfn_44607 = ctx_param_ext_44582
        local_memory_capacity_45843 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44608 = nm_29314
        else:
          gauss_jordan_res_ixfn_44608 = ctx_param_ext_44584
        local_memory_capacity_45844 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44609 = m_29166
        else:
          gauss_jordan_res_ixfn_44609 = ctx_param_ext_44578
        local_memory_capacity_45845 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44610 = nm_29314
        else:
          gauss_jordan_res_ixfn_44610 = ctx_param_ext_44579
        local_memory_capacity_45846 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44611 = nm_29314
        else:
          gauss_jordan_res_ixfn_44611 = ctx_param_ext_44581
        local_memory_capacity_45847 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44612 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_44612 = ctx_param_ext_44583
        local_memory_capacity_45848 = self.max_local_memory
        if intra_suff_and_fits_40255:
          gauss_jordan_res_ixfn_44613 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_44613 = ctx_param_ext_44580
        local_memory_capacity_45876 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_45876)) and sle64((bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_45876))) and intra_suff_and_fits_40255):
          mem_44590 = opencl_alloc(self, bytes_44575, "mem_44590")
          group_sizze_45852 = self.sizes["main.group_size_45852"]
          num_groups_45853 = sdiv_up64((m_29166 * nm_29314), group_sizze_45852)
          if ((1 * (np.long(num_groups_45853) * np.long(group_sizze_45852))) != 0):
            self.mainzicopy_45849_var.set_args(np.int64(m_29166),
                                               np.int64(nm_29314),
                                               np.int64(ctx_param_ext_44580),
                                               np.int64(ctx_param_ext_44581),
                                               np.int64(ctx_param_ext_44583),
                                               mem_param_44585, mem_44590)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_45849_var,
                                       ((np.long(num_groups_45853) * np.long(group_sizze_45852)),),
                                       (np.long(group_sizze_45852),))
            if synchronous:
              sync(self)
          mem_44598 = opencl_alloc(self, bytes_44575, "mem_44598")
          if ((1 * (np.long(m_29166) * np.long(nm_29314))) != 0):
            self.mainzisegmap_intragroup_39701_var.set_args(self.global_failure,
                                                            self.failure_is_an_option,
                                                            self.global_failure_args,
                                                            cl.LocalMemory(np.long(bytes_44552)),
                                                            np.int64(m_29166),
                                                            np.int32(k2p2zq_29179),
                                                            np.int32(m_29312),
                                                            np.int64(nm_29314),
                                                            np.int32(i_40240),
                                                            np.int64(i32_res_40242),
                                                            np.int64(ctx_param_ext_44580),
                                                            np.int64(ctx_param_ext_44581),
                                                            np.int64(ctx_param_ext_44583),
                                                            mem_param_44585,
                                                            mem_44590,
                                                            mem_44598)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_39701_var,
                                       ((np.long(m_29166) * np.long(nm_29314)),),
                                       (np.long(nm_29314),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          mem_44590 = None
          gauss_jordan_res_mem_44614 = mem_44598
        else:
          mem_44601 = opencl_alloc(self, m_29166, "mem_44601")
          if ((1 * (np.long(segmap_usable_groups_40308) * np.long(segmap_group_sizze_40307))) != 0):
            self.mainzisegmap_40038_var.set_args(self.global_failure,
                                                 np.int64(m_29166),
                                                 np.int64(i32_res_40242),
                                                 np.int64(ctx_param_ext_44580),
                                                 np.int64(ctx_param_ext_44581),
                                                 np.int64(ctx_param_ext_44583),
                                                 mem_param_44585, mem_44601)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40038_var,
                                       ((np.long(segmap_usable_groups_40308) * np.long(segmap_group_sizze_40307)),),
                                       (np.long(segmap_group_sizze_40307),))
            if synchronous:
              sync(self)
          mem_44605 = opencl_alloc(self, bytes_44575, "mem_44605")
          if ((1 * (np.long(segmap_usable_groups_40324) * np.long(segmap_group_sizze_40323))) != 0):
            self.mainzisegmap_39938_var.set_args(self.global_failure,
                                                 self.failure_is_an_option,
                                                 self.global_failure_args,
                                                 np.int64(m_29166),
                                                 np.int32(k2p2zq_29179),
                                                 np.int32(m_29312),
                                                 np.int64(nm_29314),
                                                 np.int32(i_40240),
                                                 np.int64(i32_res_40242),
                                                 np.int64(ctx_param_ext_44580),
                                                 np.int64(ctx_param_ext_44581),
                                                 np.int64(ctx_param_ext_44583),
                                                 mem_param_44585, mem_44601,
                                                 mem_44605)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39938_var,
                                       ((np.long(segmap_usable_groups_40324) * np.long(segmap_group_sizze_40323)),),
                                       (np.long(segmap_group_sizze_40323),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          mem_44601 = None
          if ((1 * (np.long(segmap_usable_groups_40374) * np.long(segmap_group_sizze_40373))) != 0):
            self.mainzisegmap_39868_var.set_args(self.global_failure,
                                                 np.int64(m_29166),
                                                 np.int64(nm_29314),
                                                 np.int64(ctx_param_ext_44580),
                                                 np.int64(ctx_param_ext_44581),
                                                 np.int64(ctx_param_ext_44583),
                                                 mem_param_44585, mem_44605)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39868_var,
                                       ((np.long(segmap_usable_groups_40374) * np.long(segmap_group_sizze_40373)),),
                                       (np.long(segmap_group_sizze_40373),))
            if synchronous:
              sync(self)
          mem_44605 = None
          gauss_jordan_res_mem_44614 = mem_param_44585
        ctx_param_ext_tmp_45833 = gauss_jordan_res_ixfn_44609
        ctx_param_ext_tmp_45834 = gauss_jordan_res_ixfn_44610
        ctx_param_ext_tmp_45835 = gauss_jordan_res_ixfn_44613
        ctx_param_ext_tmp_45836 = gauss_jordan_res_ixfn_44611
        ctx_param_ext_tmp_45837 = gauss_jordan_res_ixfn_44607
        ctx_param_ext_tmp_45838 = gauss_jordan_res_ixfn_44612
        ctx_param_ext_tmp_45839 = gauss_jordan_res_ixfn_44608
        mem_param_tmp_45840 = gauss_jordan_res_mem_44614
        ctx_param_ext_44578 = ctx_param_ext_tmp_45833
        ctx_param_ext_44579 = ctx_param_ext_tmp_45834
        ctx_param_ext_44580 = ctx_param_ext_tmp_45835
        ctx_param_ext_44581 = ctx_param_ext_tmp_45836
        ctx_param_ext_44582 = ctx_param_ext_tmp_45837
        ctx_param_ext_44583 = ctx_param_ext_tmp_45838
        ctx_param_ext_44584 = ctx_param_ext_tmp_45839
        mem_param_44585 = mem_param_tmp_45840
        i_40240 += one_46862
      gauss_jordan_res_r_ixfn_44615 = ctx_param_ext_44578
      gauss_jordan_res_r_ixfn_44616 = ctx_param_ext_44579
      gauss_jordan_res_r_ixfn_44617 = ctx_param_ext_44580
      gauss_jordan_res_r_ixfn_44618 = ctx_param_ext_44581
      gauss_jordan_res_r_ixfn_44619 = ctx_param_ext_44582
      gauss_jordan_res_r_ixfn_44620 = ctx_param_ext_44583
      gauss_jordan_res_r_ixfn_44621 = ctx_param_ext_44584
      gauss_jordan_res_r_mem_44622 = mem_param_44585
      mem_44577 = None
      segmap_usable_groups_40386 = sdiv_up64(nest_sizze_40384,
                                             segmap_group_sizze_40385)
      mem_44627 = opencl_alloc(self, bytes_44624, "mem_44627")
      if ((1 * (np.long(segmap_usable_groups_40386) * np.long(segmap_group_sizze_40385))) != 0):
        self.mainzisegmap_39638_var.set_args(self.global_failure,
                                             np.int64(m_29166),
                                             np.int64(i32_res_29181),
                                             np.int64(nm_29314),
                                             np.int64(i32_res_29329),
                                             np.int64(x_29330),
                                             np.int64(j_m_i_29333),
                                             np.int64(gauss_jordan_res_r_ixfn_44617),
                                             np.int64(gauss_jordan_res_r_ixfn_44618),
                                             np.int64(gauss_jordan_res_r_ixfn_44620),
                                             gauss_jordan_res_r_mem_44622,
                                             mem_44627)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39638_var,
                                   ((np.long(segmap_usable_groups_40386) * np.long(segmap_group_sizze_40385)),),
                                   (np.long(segmap_group_sizze_40385),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_44622 = None
      defunc_3_map_res_mem_44629 = mem_44627
    defunc_3_map_res_mem_44549 = None
    suff_outer_par_40394 = (self.sizes["main.suff_outer_par_16"] <= m_29166)
    segmap_group_sizze_40416 = self.sizes["main.segmap_group_size_40398"]
    max_num_groups_45883 = self.sizes["main.segmap_num_groups_40400"]
    num_groups_40417 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29166,
                                                            segmap_group_sizze_40416),
                                                  sext_i32_i64(max_num_groups_45883))))
    suff_outer_par_40501 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_39200)
    nest_sizze_40517 = (i32_res_29175 * nest_sizze_39200)
    segred_group_sizze_40518 = self.sizes["main.segred_group_size_40460"]
    max_num_groups_45884 = self.sizes["main.segred_num_groups_40462"]
    num_groups_40519 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40517,
                                                            segred_group_sizze_40518),
                                                  sext_i32_i64(max_num_groups_45884))))
    Ty_42675 = self.sizes["main.Ty_42672"]
    Ry_42676 = self.sizes["main.Ry_42674"]
    Tx_42677 = self.sizes["main.Tx_42671"]
    Rx_42678 = self.sizes["main.Rx_42673"]
    Tk_42679 = self.sizes["main.Tk_42670"]
    TxRx_42682 = (Tx_42677 * Rx_42678)
    TyRy_42683 = (Ty_42675 * Ry_42676)
    a_loc_szz_42685 = (Tk_42679 * TyRy_42683)
    binop_x_42686 = (Tx_42677 * Tk_42679)
    b_loc_szz_42687 = (Rx_42678 * binop_x_42686)
    group_sizze_42691 = (Ty_42675 * Tx_42677)
    bytes_44648 = (np.int64(4) * nest_sizze_39200)
    binop_x_44662 = (Ry_42676 * group_sizze_42691)
    binop_x_44663 = (Rx_42678 * binop_x_44662)
    bytes_44660 = (np.int64(4) * binop_x_44663)
    binop_x_44654 = (Ry_42676 * Rx_42678)
    bytes_44653 = (np.int64(4) * binop_x_44654)
    bytes_44665 = (np.int64(4) * a_loc_szz_42685)
    bytes_44667 = (np.int64(4) * b_loc_szz_42687)
    bytes_44736 = (np.int64(4) * binop_x_44662)
    binop_x_44742 = (Rx_42678 * group_sizze_42691)
    bytes_44740 = (np.int64(4) * binop_x_44742)
    bytes_44728 = (np.int64(4) * Ry_42676)
    bytes_44730 = (np.int64(4) * Rx_42678)
    binop_x_45464 = (np.int64(4) * Ty_42675)
    binop_x_45465 = (Tx_42677 * binop_x_45464)
    binop_x_45466 = (Ry_42676 * binop_x_45465)
    sizze_45467 = (Rx_42678 * binop_x_45466)
    num_threads_45646 = (segmap_group_sizze_40416 * num_groups_40417)
    total_sizze_45647 = (bytes_44448 * num_threads_45646)
    local_memory_capacity_46014 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46014)) and suff_outer_par_40394):
      mem_44632 = opencl_alloc(self, bytes_44398, "mem_44632")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44632, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_29165, m_29166)
      mem_44650 = opencl_alloc(self, bytes_44648, "mem_44650")
      mem_44635 = opencl_alloc(self, total_sizze_45647, "mem_44635")
      if ((1 * (np.long(num_groups_40417) * np.long(segmap_group_sizze_40416))) != 0):
        self.mainzisegmap_40396_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.int64(m_29166),
                                             np.int32(n_29169),
                                             np.int32(k2p2zq_29179),
                                             np.int64(i32_res_29181),
                                             np.int64(num_groups_40417),
                                             binop_p_mem_44390, mem_44632,
                                             mem_44635, mem_44650)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40396_var,
                                   ((np.long(num_groups_40417) * np.long(segmap_group_sizze_40416)),),
                                   (np.long(segmap_group_sizze_40416),))
        if synchronous:
          sync(self)
      mem_44632 = None
      mem_44635 = None
      mem_44848 = opencl_alloc(self, bytes_44648, "mem_44848")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44848, np.int64(0),
                                                  mem_44650, np.int64(0),
                                                  np.int64(1), m_29166,
                                                  i32_res_29181)
      mem_44650 = None
      defunc_3_map_res_mem_44850 = mem_44848
    else:
      local_memory_capacity_46013 = self.max_local_memory
      if (sle64(((bytes_44665 + srem64((np.int64(8) - srem64(bytes_44665,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44667 + srem64((np.int64(8) - srem64(bytes_44667,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46013)) and suff_outer_par_40501):
        tk_div_tx_42680 = sdiv_up64(Tk_42679, Tx_42677)
        tk_div_ty_42681 = sdiv_up64(Tk_42679, Ty_42675)
        gridDim_x_42688 = sdiv_up64(i32_res_29181, TxRx_42682)
        gridDim_y_42689 = sdiv_up64(m_29166, TyRy_42683)
        grid_sizze_42690 = (gridDim_x_42688 * gridDim_y_42689)
        full_tiles_42719 = squot64(i32_res_29175, Tk_42679)
        kk_42926 = (Tk_42679 * full_tiles_42719)
        mem_44840 = opencl_alloc(self, bytes_44648, "mem_44840")
        if ((1 * (np.long(grid_sizze_42690) * np.long(group_sizze_42691))) != 0):
          self.mainzisegmap_intragroup_42694_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_44667)),
                                                          cl.LocalMemory(np.long(bytes_44665)),
                                                          np.int64(N_29165),
                                                          np.int64(m_29166),
                                                          np.int64(i32_res_29175),
                                                          np.int64(i32_res_29181),
                                                          np.int64(gridDim_x_42688),
                                                          np.int64(full_tiles_42719),
                                                          np.int64(kk_42926),
                                                          images_mem_44381,
                                                          mem_44393, mem_44840)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42694_var,
                                     ((np.long(grid_sizze_42690) * np.long(group_sizze_42691)),),
                                     (np.long(group_sizze_42691),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44845 = mem_44840
      else:
        mem_44844 = opencl_alloc(self, bytes_44648, "mem_44844")
        if slt64((i32_res_29175 * np.int64(2)), segred_group_sizze_40518):
          segment_sizze_nonzzero_45953 = smax64(np.int64(1), i32_res_29175)
          num_threads_45954 = (num_groups_40519 * segred_group_sizze_40518)
          if ((1 * (np.long(num_groups_40519) * np.long(segred_group_sizze_40518))) != 0):
            self.mainzisegred_small_40466_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40518))),
                                                       np.int64(N_29165),
                                                       np.int64(m_29166),
                                                       np.int64(i32_res_29175),
                                                       np.int64(i32_res_29181),
                                                       np.int64(num_groups_40519),
                                                       np.int64(segment_sizze_nonzzero_45953),
                                                       images_mem_44381,
                                                       binop_p_mem_44390,
                                                       mem_44844)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40466_var,
                                       ((np.long(num_groups_40519) * np.long(segred_group_sizze_40518)),),
                                       (np.long(segred_group_sizze_40518),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45974 = sdiv_up64(num_groups_40519,
                                               smax64(np.int64(1),
                                                      (m_29166 * i32_res_29181)))
          elements_per_thread_45975 = sdiv_up64(i32_res_29175,
                                                (segred_group_sizze_40518 * groups_per_segment_45974))
          virt_num_groups_45976 = (groups_per_segment_45974 * (m_29166 * i32_res_29181))
          num_threads_45977 = (num_groups_40519 * segred_group_sizze_40518)
          threads_per_segment_45978 = (groups_per_segment_45974 * segred_group_sizze_40518)
          group_res_arr_mem_45979 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40518 * virt_num_groups_45976)),
                                                 "group_res_arr_mem_45979")
          mainzicounter_mem_45981 = self.mainzicounter_mem_45981
          if ((1 * (np.long(num_groups_40519) * np.long(segred_group_sizze_40518))) != 0):
            self.mainzisegred_large_40466_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40518))),
                                                       np.int64(N_29165),
                                                       np.int64(i32_res_29175),
                                                       np.int64(i32_res_29181),
                                                       np.int64(num_groups_40519),
                                                       np.int64(groups_per_segment_45974),
                                                       np.int64(elements_per_thread_45975),
                                                       np.int64(virt_num_groups_45976),
                                                       np.int64(threads_per_segment_45978),
                                                       images_mem_44381,
                                                       binop_p_mem_44390,
                                                       mem_44844,
                                                       group_res_arr_mem_45979,
                                                       mainzicounter_mem_45981)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40466_var,
                                       ((np.long(num_groups_40519) * np.long(segred_group_sizze_40518)),),
                                       (np.long(segred_group_sizze_40518),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44845 = mem_44844
      defunc_3_map_res_mem_44850 = defunc_3_map_res_mem_44845
    binop_p_mem_44390 = None
    mem_44393 = None
    suff_outer_par_40535 = (self.sizes["main.suff_outer_par_18"] <= m_29166)
    segmap_group_sizze_40556 = self.sizes["main.segmap_group_size_40539"]
    max_num_groups_46015 = self.sizes["main.segmap_num_groups_40541"]
    num_groups_40557 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29166,
                                                            segmap_group_sizze_40556),
                                                  sext_i32_i64(max_num_groups_46015))))
    suff_outer_par_40636 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_39200)
    segred_group_sizze_40651 = self.sizes["main.segred_group_size_40597"]
    max_num_groups_46016 = self.sizes["main.segred_num_groups_40599"]
    num_groups_40652 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_44546,
                                                            segred_group_sizze_40651),
                                                  sext_i32_i64(max_num_groups_46016))))
    tile_sizze_43138 = self.sizes["main.tile_size_43137"]
    group_sizze_43139 = (tile_sizze_43138 * tile_sizze_43138)
    bytes_44882 = (np.int64(4) * group_sizze_43139)
    binop_x_45480 = (np.int64(4) * tile_sizze_43138)
    sizze_45481 = (tile_sizze_43138 * binop_x_45480)
    num_threads_45650 = (segmap_group_sizze_40556 * num_groups_40557)
    total_sizze_45651 = (bytes_44448 * num_threads_45650)
    local_memory_capacity_46102 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46102)) and suff_outer_par_40535):
      mem_44854 = opencl_alloc(self, bytes_44443, "mem_44854")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44854, np.int64(0),
                                                  defunc_3_map_res_mem_44629,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_29181 * i32_res_29181),
                                                  m_29166)
      mem_44857 = opencl_alloc(self, bytes_44648, "mem_44857")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44857, np.int64(0),
                                                  defunc_3_map_res_mem_44850,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_29181, m_29166)
      mem_44875 = opencl_alloc(self, bytes_44648, "mem_44875")
      mem_44860 = opencl_alloc(self, total_sizze_45651, "mem_44860")
      if ((1 * (np.long(num_groups_40557) * np.long(segmap_group_sizze_40556))) != 0):
        self.mainzisegmap_40537_var.set_args(self.global_failure,
                                             np.int64(m_29166),
                                             np.int32(k2p2zq_29179),
                                             np.int64(i32_res_29181),
                                             np.int64(num_groups_40557),
                                             mem_44854, mem_44857, mem_44860,
                                             mem_44875)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40537_var,
                                   ((np.long(num_groups_40557) * np.long(segmap_group_sizze_40556)),),
                                   (np.long(segmap_group_sizze_40556),))
        if synchronous:
          sync(self)
      mem_44854 = None
      mem_44857 = None
      mem_44860 = None
      mem_44914 = opencl_alloc(self, bytes_44648, "mem_44914")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44914, np.int64(0),
                                                  mem_44875, np.int64(0),
                                                  np.int64(1), m_29166,
                                                  i32_res_29181)
      mem_44875 = None
      defunc_4_map_res_mem_44916 = mem_44914
    else:
      local_memory_capacity_46101 = self.max_local_memory
      if (sle64(((bytes_44882 + srem64((np.int64(8) - srem64(bytes_44882,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44882 + srem64((np.int64(8) - srem64(bytes_44882,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46101)) and suff_outer_par_40636):
        mem_44879 = opencl_alloc(self, bytes_44544, "mem_44879")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44879, np.int64(0),
                                                    defunc_3_map_res_mem_44629,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_29181,
                                                    (m_29166 * i32_res_29181))
        num_groups_x_43140 = sdiv_up64(m_29166, tile_sizze_43138)
        num_groups_y_43141 = sdiv_up64(i32_res_29181, tile_sizze_43138)
        num_groups_top_43142 = (num_groups_x_43140 * num_groups_y_43141)
        num_whole_tiles_43159 = squot64(i32_res_29181, tile_sizze_43138)
        residual_input_43286 = srem64(i32_res_29181, tile_sizze_43138)
        cond_43287 = (residual_input_43286 == np.int64(0))
        mem_44906 = opencl_alloc(self, bytes_44648, "mem_44906")
        if ((1 * (np.long(num_groups_top_43142) * np.long(group_sizze_43139))) != 0):
          self.mainzisegmap_intragroup_43143_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_44882)),
                                                          cl.LocalMemory(np.long(bytes_44882)),
                                                          np.int64(m_29166),
                                                          np.int64(i32_res_29181),
                                                          np.int64(num_groups_y_43141),
                                                          np.int64(num_whole_tiles_43159),
                                                          np.int64(residual_input_43286),
                                                          np.byte(cond_43287),
                                                          defunc_3_map_res_mem_44850,
                                                          mem_44879, mem_44906)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_43143_var,
                                     ((np.long(num_groups_top_43142) * np.long(group_sizze_43139)),),
                                     (np.long(group_sizze_43139),))
          if synchronous:
            sync(self)
        mem_44879 = None
        defunc_4_map_res_mem_44911 = mem_44906
      else:
        mem_44910 = opencl_alloc(self, bytes_44648, "mem_44910")
        if slt64((i32_res_29181 * np.int64(2)), segred_group_sizze_40651):
          segment_sizze_nonzzero_46041 = smax64(np.int64(1), i32_res_29181)
          num_threads_46042 = (num_groups_40652 * segred_group_sizze_40651)
          if ((1 * (np.long(num_groups_40652) * np.long(segred_group_sizze_40651))) != 0):
            self.mainzisegred_small_40603_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40651))),
                                                       np.int64(m_29166),
                                                       np.int64(i32_res_29181),
                                                       np.int64(num_groups_40652),
                                                       np.int64(segment_sizze_nonzzero_46041),
                                                       defunc_3_map_res_mem_44629,
                                                       defunc_3_map_res_mem_44850,
                                                       mem_44910)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40603_var,
                                       ((np.long(num_groups_40652) * np.long(segred_group_sizze_40651)),),
                                       (np.long(segred_group_sizze_40651),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46062 = sdiv_up64(num_groups_40652,
                                               smax64(np.int64(1),
                                                      (m_29166 * i32_res_29181)))
          elements_per_thread_46063 = sdiv_up64(i32_res_29181,
                                                (segred_group_sizze_40651 * groups_per_segment_46062))
          virt_num_groups_46064 = (groups_per_segment_46062 * (m_29166 * i32_res_29181))
          num_threads_46065 = (num_groups_40652 * segred_group_sizze_40651)
          threads_per_segment_46066 = (groups_per_segment_46062 * segred_group_sizze_40651)
          group_res_arr_mem_46067 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40651 * virt_num_groups_46064)),
                                                 "group_res_arr_mem_46067")
          mainzicounter_mem_46069 = self.mainzicounter_mem_46069
          if ((1 * (np.long(num_groups_40652) * np.long(segred_group_sizze_40651))) != 0):
            self.mainzisegred_large_40603_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40651))),
                                                       np.int64(i32_res_29181),
                                                       np.int64(num_groups_40652),
                                                       np.int64(groups_per_segment_46062),
                                                       np.int64(elements_per_thread_46063),
                                                       np.int64(virt_num_groups_46064),
                                                       np.int64(threads_per_segment_46066),
                                                       defunc_3_map_res_mem_44629,
                                                       defunc_3_map_res_mem_44850,
                                                       mem_44910,
                                                       group_res_arr_mem_46067,
                                                       mainzicounter_mem_46069)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40603_var,
                                       ((np.long(num_groups_40652) * np.long(segred_group_sizze_40651)),),
                                       (np.long(segred_group_sizze_40651),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_44911 = mem_44910
      defunc_4_map_res_mem_44916 = defunc_4_map_res_mem_44911
    defunc_3_map_res_mem_44629 = None
    defunc_3_map_res_mem_44850 = None
    suff_outer_par_40667 = (self.sizes["main.suff_outer_par_20"] <= m_29166)
    segmap_group_sizze_40687 = self.sizes["main.segmap_group_size_40671"]
    max_num_groups_46103 = self.sizes["main.segmap_num_groups_40673"]
    num_groups_40688 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29166,
                                                            segmap_group_sizze_40687),
                                                  sext_i32_i64(max_num_groups_46103))))
    suff_outer_par_40764 = (self.sizes["main.suff_outer_par_21"] <= binop_x_44399)
    nest_sizze_40778 = (i32_res_29181 * binop_x_44399)
    segred_group_sizze_40779 = self.sizes["main.segred_group_size_40727"]
    max_num_groups_46104 = self.sizes["main.segred_num_groups_40729"]
    num_groups_40780 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40778,
                                                            segred_group_sizze_40779),
                                                  sext_i32_i64(max_num_groups_46104))))
    Ty_43416 = self.sizes["main.Ty_43413"]
    Ry_43417 = self.sizes["main.Ry_43415"]
    Tx_43418 = self.sizes["main.Tx_43412"]
    Rx_43419 = self.sizes["main.Rx_43414"]
    Tk_43420 = self.sizes["main.Tk_43411"]
    TxRx_43423 = (Tx_43418 * Rx_43419)
    TyRy_43424 = (Ty_43416 * Ry_43417)
    a_loc_szz_43426 = (Tk_43420 * TyRy_43424)
    binop_x_43427 = (Tx_43418 * Tk_43420)
    b_loc_szz_43428 = (Rx_43419 * binop_x_43427)
    group_sizze_43432 = (Ty_43416 * Tx_43418)
    bytes_44921 = (np.int64(4) * N_29165)
    binop_x_44952 = (Ry_43417 * group_sizze_43432)
    binop_x_44953 = (Rx_43419 * binop_x_44952)
    bytes_44950 = (np.int64(4) * binop_x_44953)
    binop_x_44944 = (Ry_43417 * Rx_43419)
    bytes_44943 = (np.int64(4) * binop_x_44944)
    bytes_44955 = (np.int64(4) * a_loc_szz_43426)
    bytes_44957 = (np.int64(4) * b_loc_szz_43428)
    bytes_45026 = (np.int64(4) * binop_x_44952)
    binop_x_45032 = (Rx_43419 * group_sizze_43432)
    bytes_45030 = (np.int64(4) * binop_x_45032)
    bytes_45018 = (np.int64(4) * Ry_43417)
    bytes_45020 = (np.int64(4) * Rx_43419)
    binop_x_45494 = (np.int64(4) * Ty_43416)
    binop_x_45495 = (Tx_43418 * binop_x_45494)
    binop_x_45496 = (Ry_43417 * binop_x_45495)
    sizze_45497 = (Rx_43419 * binop_x_45496)
    num_threads_45654 = (segmap_group_sizze_40687 * num_groups_40688)
    total_sizze_45655 = (bytes_44921 * num_threads_45654)
    local_memory_capacity_46234 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46234)) and suff_outer_par_40667):
      mem_44919 = opencl_alloc(self, bytes_44648, "mem_44919")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44919, np.int64(0),
                                                  defunc_4_map_res_mem_44916,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_29181, m_29166)
      mem_44937 = opencl_alloc(self, bytes_44398, "mem_44937")
      mem_44922 = opencl_alloc(self, total_sizze_45655, "mem_44922")
      if ((1 * (np.long(num_groups_40688) * np.long(segmap_group_sizze_40687))) != 0):
        self.mainzisegmap_40669_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.int64(m_29166),
                                             np.int32(k2p2zq_29179),
                                             np.int64(i32_res_29181),
                                             np.int64(num_groups_40688),
                                             mem_44397, mem_44919, mem_44922,
                                             mem_44937)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40669_var,
                                   ((np.long(num_groups_40688) * np.long(segmap_group_sizze_40687)),),
                                   (np.long(segmap_group_sizze_40687),))
        if synchronous:
          sync(self)
      mem_44919 = None
      mem_44922 = None
      mem_45138 = opencl_alloc(self, bytes_44398, "mem_45138")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45138, np.int64(0),
                                                  mem_44937, np.int64(0),
                                                  np.int64(1), m_29166, N_29165)
      mem_44937 = None
      defunc_3_map_res_mem_45140 = mem_45138
    else:
      local_memory_capacity_46233 = self.max_local_memory
      if (sle64(((bytes_44955 + srem64((np.int64(8) - srem64(bytes_44955,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44957 + srem64((np.int64(8) - srem64(bytes_44957,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46233)) and suff_outer_par_40764):
        mem_44940 = opencl_alloc(self, bytes_44383, "mem_44940")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44940, np.int64(0),
                                                    mem_44397, np.int64(0),
                                                    np.int64(1), i32_res_29181,
                                                    N_29165)
        tk_div_tx_43421 = sdiv_up64(Tk_43420, Tx_43418)
        tk_div_ty_43422 = sdiv_up64(Tk_43420, Ty_43416)
        gridDim_x_43429 = sdiv_up64(N_29165, TxRx_43423)
        gridDim_y_43430 = sdiv_up64(m_29166, TyRy_43424)
        grid_sizze_43431 = (gridDim_x_43429 * gridDim_y_43430)
        full_tiles_43460 = squot64(i32_res_29181, Tk_43420)
        kk_43663 = (Tk_43420 * full_tiles_43460)
        mem_45130 = opencl_alloc(self, bytes_44398, "mem_45130")
        if ((1 * (np.long(grid_sizze_43431) * np.long(group_sizze_43432))) != 0):
          self.mainzisegmap_intragroup_43435_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_44957)),
                                                          cl.LocalMemory(np.long(bytes_44955)),
                                                          np.int64(N_29165),
                                                          np.int64(m_29166),
                                                          np.int64(i32_res_29181),
                                                          np.int64(gridDim_x_43429),
                                                          np.int64(full_tiles_43460),
                                                          np.int64(kk_43663),
                                                          defunc_4_map_res_mem_44916,
                                                          mem_44940, mem_45130)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_43435_var,
                                     ((np.long(grid_sizze_43431) * np.long(group_sizze_43432)),),
                                     (np.long(group_sizze_43432),))
          if synchronous:
            sync(self)
        mem_44940 = None
        defunc_3_map_res_mem_45135 = mem_45130
      else:
        mem_45134 = opencl_alloc(self, bytes_44398, "mem_45134")
        if slt64((i32_res_29181 * np.int64(2)), segred_group_sizze_40779):
          segment_sizze_nonzzero_46173 = smax64(np.int64(1), i32_res_29181)
          num_threads_46174 = (num_groups_40780 * segred_group_sizze_40779)
          if ((1 * (np.long(num_groups_40780) * np.long(segred_group_sizze_40779))) != 0):
            self.mainzisegred_small_40733_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40779))),
                                                       np.int64(N_29165),
                                                       np.int64(m_29166),
                                                       np.int64(i32_res_29181),
                                                       np.int64(num_groups_40780),
                                                       np.int64(segment_sizze_nonzzero_46173),
                                                       mem_44397,
                                                       defunc_4_map_res_mem_44916,
                                                       mem_45134)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40733_var,
                                       ((np.long(num_groups_40780) * np.long(segred_group_sizze_40779)),),
                                       (np.long(segred_group_sizze_40779),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46194 = sdiv_up64(num_groups_40780,
                                               smax64(np.int64(1),
                                                      (m_29166 * N_29165)))
          elements_per_thread_46195 = sdiv_up64(i32_res_29181,
                                                (segred_group_sizze_40779 * groups_per_segment_46194))
          virt_num_groups_46196 = (groups_per_segment_46194 * (m_29166 * N_29165))
          num_threads_46197 = (num_groups_40780 * segred_group_sizze_40779)
          threads_per_segment_46198 = (groups_per_segment_46194 * segred_group_sizze_40779)
          group_res_arr_mem_46199 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40779 * virt_num_groups_46196)),
                                                 "group_res_arr_mem_46199")
          mainzicounter_mem_46201 = self.mainzicounter_mem_46201
          if ((1 * (np.long(num_groups_40780) * np.long(segred_group_sizze_40779))) != 0):
            self.mainzisegred_large_40733_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40779))),
                                                       np.int64(N_29165),
                                                       np.int64(i32_res_29181),
                                                       np.int64(num_groups_40780),
                                                       np.int64(groups_per_segment_46194),
                                                       np.int64(elements_per_thread_46195),
                                                       np.int64(virt_num_groups_46196),
                                                       np.int64(threads_per_segment_46198),
                                                       mem_44397,
                                                       defunc_4_map_res_mem_44916,
                                                       mem_45134,
                                                       group_res_arr_mem_46199,
                                                       mainzicounter_mem_46201)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40733_var,
                                       ((np.long(num_groups_40780) * np.long(segred_group_sizze_40779)),),
                                       (np.long(segred_group_sizze_40779),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_45135 = mem_45134
      defunc_3_map_res_mem_45140 = defunc_3_map_res_mem_45135
    mem_44397 = None
    defunc_4_map_res_mem_44916 = None
    i_29469 = (N_29165 - np.int64(1))
    x_29470 = sle64(np.int64(0), i_29469)
    y_29471 = slt64(i_29469, N_29165)
    bounds_check_29472 = (x_29470 and y_29471)
    index_certs_29473 = True
    assert bounds_check_29472, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:16-75\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-77:25\n   #6  bfastfinal.fut:189:5-58\n   #7  bfastfinal.fut:184:1-190:25\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_29469,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_29165,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_40909 = sle64(N_29165, max_group_sizze_39548)
    suff_intra_par_40907 = (self.sizes["main.suff_intra_par_24"] <= N_29165)
    intra_suff_and_fits_40910 = (suff_intra_par_40907 and fits_40909)
    segscan_group_sizze_41059 = self.sizes["main.segscan_group_size_41036"]
    max_num_groups_46235 = self.sizes["main.segscan_num_groups_41038"]
    num_groups_41060 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_44399,
                                                            segscan_group_sizze_41059),
                                                  sext_i32_i64(max_num_groups_46235))))
    segmap_group_sizze_41079 = self.sizes["main.segmap_group_size_41027"]
    segmap_group_sizze_41115 = self.sizes["main.segmap_group_size_40952"]
    bytes_45152 = (np.int64(4) * m_29166)
    bytes_45143 = (np.int64(8) * N_29165)
    bytes_45161 = (np.int64(8) * binop_x_44399)
    local_memory_capacity_46337 = self.max_local_memory
    if (sle64(((((bytes_45143 + srem64((np.int64(8) - srem64(bytes_45143,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46337)) and intra_suff_and_fits_40910):
      mem_45153 = opencl_alloc(self, bytes_45152, "mem_45153")
      mem_45156 = opencl_alloc(self, bytes_44398, "mem_45156")
      mem_45159 = opencl_alloc(self, bytes_44398, "mem_45159")
      if ((1 * (np.long(m_29166) * np.long(N_29165))) != 0):
        self.mainzisegmap_intragroup_40832_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44921)),
                                                        cl.LocalMemory(np.long(bytes_44921)),
                                                        cl.LocalMemory(np.long(bytes_44921)),
                                                        cl.LocalMemory(np.long(bytes_45143)),
                                                        np.int64(N_29165),
                                                        np.int64(i_29469),
                                                        images_mem_44381,
                                                        defunc_3_map_res_mem_45140,
                                                        mem_45153, mem_45156,
                                                        mem_45159)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_40832_var,
                                   ((np.long(m_29166) * np.long(N_29165)),),
                                   (np.long(N_29165),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_45177 = mem_45153
      defunc_4_map_res_mem_45178 = mem_45156
      defunc_4_map_res_mem_45179 = mem_45159
    else:
      mem_45163 = opencl_alloc(self, bytes_45161, "mem_45163")
      mem_45166 = opencl_alloc(self, bytes_44398, "mem_45166")
      if slt64(np.int64(0), (m_29166 * N_29165)):
        stage1_max_num_groups_46253 = self.max_group_size
        stage1_num_groups_46254 = smin64(stage1_max_num_groups_46253,
                                         num_groups_41060)
        num_threads_46255 = sext_i64_i32((stage1_num_groups_46254 * segscan_group_sizze_41059))
        if ((1 * (np.long(stage1_num_groups_46254) * np.long(segscan_group_sizze_41059))) != 0):
          self.mainziscan_stage1_41042_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_41059)))),
                                                    np.int64(N_29165),
                                                    np.int64(m_29166),
                                                    np.int32(num_threads_46255),
                                                    images_mem_44381,
                                                    defunc_3_map_res_mem_45140,
                                                    mem_45163, mem_45166)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_41042_var,
                                     ((np.long(stage1_num_groups_46254) * np.long(segscan_group_sizze_41059)),),
                                     (np.long(segscan_group_sizze_41059),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46254))) != 0):
          self.mainziscan_stage2_41042_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_46254)))),
                                                    np.int64(N_29165),
                                                    np.int64(m_29166),
                                                    np.int64(stage1_num_groups_46254),
                                                    np.int32(num_threads_46255),
                                                    mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_41042_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_46254)),),
                                     (np.long(stage1_num_groups_46254),))
          if synchronous:
            sync(self)
        required_groups_46297 = sext_i64_i32(sdiv_up64((m_29166 * N_29165),
                                                       segscan_group_sizze_41059))
        if ((1 * (np.long(num_groups_41060) * np.long(segscan_group_sizze_41059))) != 0):
          self.mainziscan_stage3_41042_var.set_args(self.global_failure,
                                                    np.int64(N_29165),
                                                    np.int64(m_29166),
                                                    np.int64(num_groups_41060),
                                                    np.int32(num_threads_46255),
                                                    np.int32(required_groups_46297),
                                                    mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_41042_var,
                                     ((np.long(num_groups_41060) * np.long(segscan_group_sizze_41059)),),
                                     (np.long(segscan_group_sizze_41059),))
          if synchronous:
            sync(self)
      segmap_usable_groups_41080 = sdiv_up64(m_29166, segmap_group_sizze_41079)
      mem_45169 = opencl_alloc(self, bytes_45152, "mem_45169")
      if ((1 * (np.long(segmap_usable_groups_41080) * np.long(segmap_group_sizze_41079))) != 0):
        self.mainzisegmap_41025_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.int64(m_29166),
                                             np.int64(i_29469), mem_45163,
                                             mem_45169)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_41025_var,
                                   ((np.long(segmap_usable_groups_41080) * np.long(segmap_group_sizze_41079)),),
                                   (np.long(segmap_group_sizze_41079),))
        if synchronous:
          sync(self)
      mem_45172 = opencl_alloc(self, bytes_44398, "mem_45172")
      self.futhark_builtinzhreplicate_f32(mem_45172, (m_29166 * N_29165),
                                          np.nan)
      mem_45175 = opencl_alloc(self, bytes_44398, "mem_45175")
      self.futhark_builtinzhreplicate_i32(mem_45175, (m_29166 * N_29165),
                                          np.int32(0))
      segmap_usable_groups_41116 = sdiv_up64(binop_x_44399,
                                             segmap_group_sizze_41115)
      if ((1 * (np.long(segmap_usable_groups_41116) * np.long(segmap_group_sizze_41115))) != 0):
        self.mainzisegmap_40949_var.set_args(self.global_failure,
                                             np.int64(N_29165),
                                             np.int64(m_29166), mem_45163,
                                             mem_45166, mem_45172, mem_45175)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40949_var,
                                   ((np.long(segmap_usable_groups_41116) * np.long(segmap_group_sizze_41115)),),
                                   (np.long(segmap_group_sizze_41115),))
        if synchronous:
          sync(self)
      mem_45163 = None
      mem_45166 = None
      defunc_4_map_res_mem_45177 = mem_45169
      defunc_4_map_res_mem_45178 = mem_45172
      defunc_4_map_res_mem_45179 = mem_45175
    defunc_3_map_res_mem_45140 = None
    suff_outer_par_41164 = (self.sizes["main.suff_outer_par_28"] <= m_29166)
    fits_41250 = sle64(i32_res_29175, max_group_sizze_39548)
    suff_intra_par_41248 = (self.sizes["main.suff_intra_par_29"] <= i32_res_29175)
    intra_suff_and_fits_41251 = (suff_intra_par_41248 and fits_41250)
    segmap_group_sizze_41211 = self.sizes["main.segmap_group_size_41176"]
    nest_sizze_41346 = (m_29166 * i32_res_29175)
    segred_group_sizze_41347 = self.sizes["main.segred_group_size_41330"]
    max_num_groups_46338 = self.sizes["main.segred_num_groups_41332"]
    num_groups_41348 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41346,
                                                            segred_group_sizze_41347),
                                                  sext_i32_i64(max_num_groups_46338))))
    segred_group_sizze_41361 = self.sizes["main.segred_group_size_41305"]
    max_num_groups_46339 = self.sizes["main.segred_num_groups_41307"]
    num_groups_41362 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41346,
                                                            segred_group_sizze_41361),
                                                  sext_i32_i64(max_num_groups_46339))))
    segmap_group_sizze_41381 = self.sizes["main.segmap_group_size_41290"]
    bytes_45188 = (np.int64(4) * segmap_group_sizze_41211)
    local_memory_capacity_46491 = self.max_local_memory
    if (sle64(((bytes_45188 + srem64((np.int64(8) - srem64(bytes_45188,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_45188 + srem64((np.int64(8) - srem64(bytes_45188,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46491)) and suff_outer_par_41164):
      segmap_usable_groups_41212 = sdiv_up64(m_29166, segmap_group_sizze_41211)
      mem_45182 = opencl_alloc(self, bytes_44398, "mem_45182")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45182, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_29165, m_29166)
      mem_45185 = opencl_alloc(self, bytes_44398, "mem_45185")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45185, np.int64(0),
                                                  defunc_4_map_res_mem_45178,
                                                  np.int64(0), np.int64(1),
                                                  N_29165, m_29166)
      num_whole_tiles_43891 = squot64(i32_res_29175, segmap_group_sizze_41211)
      residual_input_43992 = srem64(i32_res_29175, segmap_group_sizze_41211)
      cond_43993 = (residual_input_43992 == np.int64(0))
      mem_45216 = opencl_alloc(self, bytes_45152, "mem_45216")
      mem_45218 = opencl_alloc(self, bytes_45152, "mem_45218")
      mem_45220 = opencl_alloc(self, bytes_45152, "mem_45220")
      if ((1 * (np.long(segmap_usable_groups_41212) * np.long(segmap_group_sizze_41211))) != 0):
        self.mainzisegmap_intragroup_43869_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long(bytes_45188)),
                                                        cl.LocalMemory(np.long(bytes_45188)),
                                                        np.int64(N_29165),
                                                        np.int64(m_29166),
                                                        np.int32(n_29169),
                                                        np.float32(hfrac_29171),
                                                        np.int64(i32_res_29175),
                                                        np.int32(k2p2_29177),
                                                        np.int64(num_whole_tiles_43891),
                                                        np.int64(residual_input_43992),
                                                        np.byte(cond_43993),
                                                        mem_45182, mem_45185,
                                                        mem_45216, mem_45218,
                                                        mem_45220)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_43869_var,
                                   ((np.long(segmap_usable_groups_41212) * np.long(segmap_group_sizze_41211)),),
                                   (np.long(segmap_group_sizze_41211),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_45182 = None
      mem_45185 = None
      defunc_3_map_res_mem_45244 = mem_45216
      defunc_3_map_res_mem_45245 = mem_45218
      defunc_3_map_res_mem_45246 = mem_45220
    else:
      local_memory_capacity_46490 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_29175) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_29175),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_29175) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_29175),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46490)) and intra_suff_and_fits_41251):
        mem_45225 = opencl_alloc(self, bytes_45152, "mem_45225")
        mem_45227 = opencl_alloc(self, bytes_45152, "mem_45227")
        mem_45229 = opencl_alloc(self, bytes_45152, "mem_45229")
        if ((1 * (np.long(m_29166) * np.long(i32_res_29175))) != 0):
          self.mainzisegmap_intragroup_41172_var.set_args(self.global_failure,
                                                          self.failure_is_an_option,
                                                          self.global_failure_args,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_29175))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_29175))),
                                                          np.int64(N_29165),
                                                          np.float32(hfrac_29171),
                                                          np.int64(i32_res_29175),
                                                          np.int32(k2p2_29177),
                                                          images_mem_44381,
                                                          defunc_4_map_res_mem_45178,
                                                          mem_45225, mem_45227,
                                                          mem_45229)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41172_var,
                                     ((np.long(m_29166) * np.long(i32_res_29175)),),
                                     (np.long(i32_res_29175),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_3_map_res_mem_45241 = mem_45225
        defunc_3_map_res_mem_45242 = mem_45227
        defunc_3_map_res_mem_45243 = mem_45229
      else:
        mem_45232 = opencl_alloc(self, bytes_45152, "mem_45232")
        if slt64((i32_res_29175 * np.int64(2)), segred_group_sizze_41347):
          segment_sizze_nonzzero_46365 = smax64(np.int64(1), i32_res_29175)
          num_threads_46366 = (num_groups_41348 * segred_group_sizze_41347)
          if ((1 * (np.long(num_groups_41348) * np.long(segred_group_sizze_41347))) != 0):
            self.mainzisegred_small_41336_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41347))),
                                                       np.int64(N_29165),
                                                       np.int64(m_29166),
                                                       np.int64(i32_res_29175),
                                                       np.int64(num_groups_41348),
                                                       np.int64(segment_sizze_nonzzero_46365),
                                                       images_mem_44381,
                                                       mem_45232)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_41336_var,
                                       ((np.long(num_groups_41348) * np.long(segred_group_sizze_41347)),),
                                       (np.long(segred_group_sizze_41347),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46386 = sdiv_up64(num_groups_41348,
                                               smax64(np.int64(1), m_29166))
          elements_per_thread_46387 = sdiv_up64(i32_res_29175,
                                                (segred_group_sizze_41347 * groups_per_segment_46386))
          virt_num_groups_46388 = (groups_per_segment_46386 * m_29166)
          num_threads_46389 = (num_groups_41348 * segred_group_sizze_41347)
          threads_per_segment_46390 = (groups_per_segment_46386 * segred_group_sizze_41347)
          group_res_arr_mem_46391 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_41347 * virt_num_groups_46388)),
                                                 "group_res_arr_mem_46391")
          mainzicounter_mem_46393 = self.mainzicounter_mem_46393
          if ((1 * (np.long(num_groups_41348) * np.long(segred_group_sizze_41347))) != 0):
            self.mainzisegred_large_41336_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41347))),
                                                       np.int64(N_29165),
                                                       np.int64(i32_res_29175),
                                                       np.int64(num_groups_41348),
                                                       np.int64(groups_per_segment_46386),
                                                       np.int64(elements_per_thread_46387),
                                                       np.int64(virt_num_groups_46388),
                                                       np.int64(threads_per_segment_46390),
                                                       images_mem_44381,
                                                       mem_45232,
                                                       group_res_arr_mem_46391,
                                                       mainzicounter_mem_46393)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_41336_var,
                                       ((np.long(num_groups_41348) * np.long(segred_group_sizze_41347)),),
                                       (np.long(segred_group_sizze_41347),))
            if synchronous:
              sync(self)
        mem_45235 = opencl_alloc(self, bytes_45152, "mem_45235")
        if slt64((i32_res_29175 * np.int64(2)), segred_group_sizze_41361):
          segment_sizze_nonzzero_46425 = smax64(np.int64(1), i32_res_29175)
          num_threads_46426 = (num_groups_41362 * segred_group_sizze_41361)
          if ((1 * (np.long(num_groups_41362) * np.long(segred_group_sizze_41361))) != 0):
            self.mainzisegred_small_41311_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41361))),
                                                       np.int64(N_29165),
                                                       np.int64(m_29166),
                                                       np.int64(i32_res_29175),
                                                       np.int64(num_groups_41362),
                                                       np.int64(segment_sizze_nonzzero_46425),
                                                       defunc_4_map_res_mem_45178,
                                                       mem_45232, mem_45235)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_41311_var,
                                       ((np.long(num_groups_41362) * np.long(segred_group_sizze_41361)),),
                                       (np.long(segred_group_sizze_41361),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
        else:
          groups_per_segment_46446 = sdiv_up64(num_groups_41362,
                                               smax64(np.int64(1), m_29166))
          elements_per_thread_46447 = sdiv_up64(i32_res_29175,
                                                (segred_group_sizze_41361 * groups_per_segment_46446))
          virt_num_groups_46448 = (groups_per_segment_46446 * m_29166)
          num_threads_46449 = (num_groups_41362 * segred_group_sizze_41361)
          threads_per_segment_46450 = (groups_per_segment_46446 * segred_group_sizze_41361)
          group_res_arr_mem_46451 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_41361 * virt_num_groups_46448)),
                                                 "group_res_arr_mem_46451")
          mainzicounter_mem_46453 = self.mainzicounter_mem_46453
          if ((1 * (np.long(num_groups_41362) * np.long(segred_group_sizze_41361))) != 0):
            self.mainzisegred_large_41311_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41361))),
                                                       np.int64(N_29165),
                                                       np.int64(i32_res_29175),
                                                       np.int64(num_groups_41362),
                                                       np.int64(groups_per_segment_46446),
                                                       np.int64(elements_per_thread_46447),
                                                       np.int64(virt_num_groups_46448),
                                                       np.int64(threads_per_segment_46450),
                                                       defunc_4_map_res_mem_45178,
                                                       mem_45232, mem_45235,
                                                       group_res_arr_mem_46451,
                                                       mainzicounter_mem_46453)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_41311_var,
                                       ((np.long(num_groups_41362) * np.long(segred_group_sizze_41361)),),
                                       (np.long(segred_group_sizze_41361),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
        segmap_usable_groups_41382 = sdiv_up64(m_29166,
                                               segmap_group_sizze_41381)
        mem_45238 = opencl_alloc(self, bytes_45152, "mem_45238")
        mem_45240 = opencl_alloc(self, bytes_45152, "mem_45240")
        if ((1 * (np.long(segmap_usable_groups_41382) * np.long(segmap_group_sizze_41381))) != 0):
          self.mainzisegmap_41288_var.set_args(self.global_failure,
                                               np.int64(m_29166),
                                               np.float32(hfrac_29171),
                                               np.int32(k2p2_29177), mem_45232,
                                               mem_45235, mem_45238, mem_45240)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_41288_var,
                                     ((np.long(segmap_usable_groups_41382) * np.long(segmap_group_sizze_41381)),),
                                     (np.long(segmap_group_sizze_41381),))
          if synchronous:
            sync(self)
        mem_45235 = None
        defunc_3_map_res_mem_45241 = mem_45238
        defunc_3_map_res_mem_45242 = mem_45232
        defunc_3_map_res_mem_45243 = mem_45240
      defunc_3_map_res_mem_45244 = defunc_3_map_res_mem_45241
      defunc_3_map_res_mem_45245 = defunc_3_map_res_mem_45242
      defunc_3_map_res_mem_45246 = defunc_3_map_res_mem_45243
    segred_group_sizze_41402 = self.sizes["main.segred_group_size_41401"]
    max_num_groups_46492 = self.sizes["main.segred_num_groups_41403"]
    num_groups_41404 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29166,
                                                            segred_group_sizze_41402),
                                                  sext_i32_i64(max_num_groups_46492))))
    mem_45249 = opencl_alloc(self, np.int64(4), "mem_45249")
    mainzicounter_mem_46493 = self.mainzicounter_mem_46493
    group_res_arr_mem_46495 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_41402 * num_groups_41404)),
                                           "group_res_arr_mem_46495")
    num_threads_46497 = (num_groups_41404 * segred_group_sizze_41402)
    if ((1 * (np.long(num_groups_41404) * np.long(segred_group_sizze_41402))) != 0):
      self.mainzisegred_nonseg_41409_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41402))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_29166),
                                                  np.int64(num_groups_41404),
                                                  np.int64(num_threads_46497),
                                                  defunc_3_map_res_mem_45244,
                                                  mem_45249,
                                                  mainzicounter_mem_46493,
                                                  group_res_arr_mem_46495)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_41409_var,
                                 ((np.long(num_groups_41404) * np.long(segred_group_sizze_41402)),),
                                 (np.long(segred_group_sizze_41402),))
      if synchronous:
        sync(self)
    read_res_46869 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46869, mem_45249,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_29563 = read_res_46869[0]
    mem_45249 = None
    i32_res_29568 = sext_i32_i64(defunc_2_reduce_comm_res_29563)
    bounds_invalid_upwards_29569 = slt64(i32_res_29568, np.int64(0))
    valid_29570 = not(bounds_invalid_upwards_29569)
    range_valid_c_29571 = True
    assert valid_29570, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:102:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:97:17-104:24\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_29568,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_41441 = (self.sizes["main.suff_outer_par_31"] <= m_29166)
    segmap_group_sizze_41468 = self.sizes["main.segmap_group_size_41445"]
    nest_sizze_41519 = (m_29166 * i32_res_29568)
    segred_group_sizze_41520 = self.sizes["main.segred_group_size_41493"]
    max_num_groups_46523 = self.sizes["main.segred_num_groups_41495"]
    num_groups_41521 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41519,
                                                            segred_group_sizze_41520),
                                                  sext_i32_i64(max_num_groups_46523))))
    bytes_45252 = (np.int64(4) * segmap_group_sizze_41468)
    local_memory_capacity_46594 = self.max_local_memory
    if (sle64(((bytes_45252 + srem64((np.int64(8) - srem64(bytes_45252,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_45252 + srem64((np.int64(8) - srem64(bytes_45252,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46594)) and suff_outer_par_41441):
      segmap_usable_groups_41469 = sdiv_up64(m_29166, segmap_group_sizze_41468)
      num_whole_tiles_44095 = squot64(i32_res_29568, segmap_group_sizze_41468)
      residual_input_44206 = srem64(i32_res_29568, segmap_group_sizze_41468)
      cond_44207 = (residual_input_44206 == np.int64(0))
      mem_45275 = opencl_alloc(self, bytes_45152, "mem_45275")
      if ((1 * (np.long(segmap_usable_groups_41469) * np.long(segmap_group_sizze_41468))) != 0):
        self.mainzisegmap_intragroup_44075_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long(bytes_45252)),
                                                        cl.LocalMemory(np.long(bytes_45252)),
                                                        np.int64(N_29165),
                                                        np.int64(m_29166),
                                                        np.int64(i32_res_29568),
                                                        np.int64(num_whole_tiles_44095),
                                                        np.int64(residual_input_44206),
                                                        np.byte(cond_44207),
                                                        defunc_4_map_res_mem_45178,
                                                        defunc_3_map_res_mem_45244,
                                                        defunc_3_map_res_mem_45245,
                                                        mem_45275)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_44075_var,
                                   ((np.long(segmap_usable_groups_41469) * np.long(segmap_group_sizze_41468)),),
                                   (np.long(segmap_group_sizze_41468),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45279 = mem_45275
    else:
      mem_45278 = opencl_alloc(self, bytes_45152, "mem_45278")
      if slt64((i32_res_29568 * np.int64(2)), segred_group_sizze_41520):
        segment_sizze_nonzzero_46534 = smax64(np.int64(1), i32_res_29568)
        num_threads_46535 = (num_groups_41521 * segred_group_sizze_41520)
        if ((1 * (np.long(num_groups_41521) * np.long(segred_group_sizze_41520))) != 0):
          self.mainzisegred_small_41499_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41520))),
                                                     np.int64(N_29165),
                                                     np.int64(m_29166),
                                                     np.int64(i32_res_29568),
                                                     np.int64(num_groups_41521),
                                                     np.int64(segment_sizze_nonzzero_46534),
                                                     defunc_4_map_res_mem_45178,
                                                     defunc_3_map_res_mem_45244,
                                                     defunc_3_map_res_mem_45245,
                                                     mem_45278)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_41499_var,
                                     ((np.long(num_groups_41521) * np.long(segred_group_sizze_41520)),),
                                     (np.long(segred_group_sizze_41520),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
      else:
        groups_per_segment_46555 = sdiv_up64(num_groups_41521,
                                             smax64(np.int64(1), m_29166))
        elements_per_thread_46556 = sdiv_up64(i32_res_29568,
                                              (segred_group_sizze_41520 * groups_per_segment_46555))
        virt_num_groups_46557 = (groups_per_segment_46555 * m_29166)
        num_threads_46558 = (num_groups_41521 * segred_group_sizze_41520)
        threads_per_segment_46559 = (groups_per_segment_46555 * segred_group_sizze_41520)
        group_res_arr_mem_46560 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_41520 * virt_num_groups_46557)),
                                               "group_res_arr_mem_46560")
        mainzicounter_mem_46562 = self.mainzicounter_mem_46562
        if ((1 * (np.long(num_groups_41521) * np.long(segred_group_sizze_41520))) != 0):
          self.mainzisegred_large_41499_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41520))),
                                                     np.int64(N_29165),
                                                     np.int64(i32_res_29568),
                                                     np.int64(num_groups_41521),
                                                     np.int64(groups_per_segment_46555),
                                                     np.int64(elements_per_thread_46556),
                                                     np.int64(virt_num_groups_46557),
                                                     np.int64(threads_per_segment_46559),
                                                     defunc_4_map_res_mem_45178,
                                                     defunc_3_map_res_mem_45244,
                                                     defunc_3_map_res_mem_45245,
                                                     mem_45278,
                                                     group_res_arr_mem_46560,
                                                     mainzicounter_mem_46562)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_41499_var,
                                     ((np.long(num_groups_41521) * np.long(segred_group_sizze_41520)),),
                                     (np.long(segred_group_sizze_41520),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45279 = mem_45278
    iota32_arg_29597 = (N_29165 - i32_res_29175)
    bounds_invalid_upwards_29598 = slt64(iota32_arg_29597, np.int64(0))
    valid_29599 = not(bounds_invalid_upwards_29598)
    range_valid_c_29600 = True
    assert valid_29599, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:109:22-35\n   #3  bfastfinal.fut:189:5-58\n   #4  bfastfinal.fut:184:1-190:25\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29597,
                                                                                                                                                                                                                                      " is invalid."))
    i_29602 = (n_29169 - np.int32(1))
    i_29603 = sext_i32_i64(i_29602)
    x_29604 = sle64(np.int64(0), i_29603)
    y_29605 = slt64(i_29603, N_29165)
    bounds_check_29606 = (x_29604 and y_29605)
    index_certs_29607 = True
    assert bounds_check_29606, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:107:64-84\n   #1  bfastfinal.fut:106:15-109:36\n   #2  bfastfinal.fut:189:5-58\n   #3  bfastfinal.fut:184:1-190:25\n" % ("Index [",
                                                                                                                                                                                                                 i_29603,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_29165,
                                                                                                                                                                                                                 "]."))
    read_res_46871 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46871, mappingindices_mem_44380,
                    device_offset=(np.long(i_29603) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29608 = read_res_46871[0]
    i32_res_29609 = sitofp_i32_f32(r32_arg_29608)
    range_valid_c_29610 = True
    assert valid_29599, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:189:5-58\n   #6  bfastfinal.fut:184:1-190:25\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29597,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_41611 = self.sizes["main.segmap_group_size_41591"]
    segmap_usable_groups_41612 = sdiv_up64(iota32_arg_29597,
                                           segmap_group_sizze_41611)
    bytes_45281 = (np.int64(4) * iota32_arg_29597)
    mem_45282 = opencl_alloc(self, bytes_45281, "mem_45282")
    mem_45284 = opencl_alloc(self, bytes_45281, "mem_45284")
    if ((1 * (np.long(segmap_usable_groups_41612) * np.long(segmap_group_sizze_41611))) != 0):
      self.mainzisegmap_41589_var.set_args(self.global_failure,
                                           self.failure_is_an_option,
                                           self.global_failure_args,
                                           np.int64(N_29165), np.int32(n_29169),
                                           np.float32(lam_29172),
                                           np.int64(iota32_arg_29597),
                                           np.float32(i32_res_29609),
                                           mappingindices_mem_44380, mem_45282,
                                           mem_45284)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_41589_var,
                                 ((np.long(segmap_usable_groups_41612) * np.long(segmap_group_sizze_41611)),),
                                 (np.long(segmap_group_sizze_41611),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_45282 = None
    fits_41879 = sle64(iota32_arg_29597, max_group_sizze_39548)
    suff_intra_par_41877 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_29597)
    intra_suff_and_fits_41880 = (suff_intra_par_41877 and fits_41879)
    segmap_group_sizze_42177 = self.sizes["main.segmap_group_size_42157"]
    max_num_groups_46600 = self.sizes["main.segmap_num_groups_42159"]
    num_groups_42178 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29166,
                                                            segmap_group_sizze_42177),
                                                  sext_i32_i64(max_num_groups_46600))))
    nest_sizze_42199 = (m_29166 * iota32_arg_29597)
    segscan_group_sizze_42200 = self.sizes["main.segscan_group_size_42108"]
    max_num_groups_46601 = self.sizes["main.segscan_num_groups_42110"]
    num_groups_42201 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_42199,
                                                            segscan_group_sizze_42200),
                                                  sext_i32_i64(max_num_groups_46601))))
    segred_group_sizze_42246 = self.sizes["main.segred_group_size_42054"]
    max_num_groups_46602 = self.sizes["main.segred_num_groups_42056"]
    num_groups_42247 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_42199,
                                                            segred_group_sizze_42246),
                                                  sext_i32_i64(max_num_groups_46602))))
    segmap_group_sizze_42285 = self.sizes["main.segmap_group_size_42003"]
    bytes_45300 = (np.int64(4) * nest_sizze_42199)
    local_memory_capacity_46795 = self.max_local_memory
    if (sle64(((((bytes_45281 + srem64((np.int64(8) - srem64(bytes_45281,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_29597) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_29597),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_29597) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29597),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_29597) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29597),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46795)) and intra_suff_and_fits_41880):
      mem_45291 = opencl_alloc(self, bytes_45152, "mem_45291")
      mem_45293 = opencl_alloc(self, bytes_45152, "mem_45293")
      if ((1 * (np.long(m_29166) * np.long(iota32_arg_29597))) != 0):
        self.mainzisegmap_intragroup_41640_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29597))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29597))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29597))),
                                                        cl.LocalMemory(np.long(bytes_45281)),
                                                        np.int64(N_29165),
                                                        np.int32(n_29169),
                                                        np.int64(iota32_arg_29597),
                                                        defunc_4_map_res_mem_45177,
                                                        defunc_4_map_res_mem_45178,
                                                        defunc_4_map_res_mem_45179,
                                                        defunc_3_map_res_mem_45244,
                                                        defunc_3_map_res_mem_45245,
                                                        defunc_3_map_res_mem_45246,
                                                        defunc_0_f_res_mem_45279,
                                                        mem_45284, mem_45291,
                                                        mem_45293)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_41640_var,
                                   ((np.long(m_29166) * np.long(iota32_arg_29597)),),
                                   (np.long(iota32_arg_29597),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45315 = mem_45291
      defunc_0_f_res_mem_45316 = mem_45293
    else:
      mem_45296 = opencl_alloc(self, bytes_45152, "mem_45296")
      mem_45298 = opencl_alloc(self, bytes_45152, "mem_45298")
      if ((1 * (np.long(num_groups_42178) * np.long(segmap_group_sizze_42177))) != 0):
        self.mainzisegmap_42155_var.set_args(self.global_failure,
                                             np.int64(m_29166),
                                             np.int64(num_groups_42178),
                                             defunc_4_map_res_mem_45177,
                                             defunc_3_map_res_mem_45245,
                                             defunc_3_map_res_mem_45246,
                                             mem_45296, mem_45298)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_42155_var,
                                   ((np.long(num_groups_42178) * np.long(segmap_group_sizze_42177)),),
                                   (np.long(segmap_group_sizze_42177),))
        if synchronous:
          sync(self)
      mem_45302 = opencl_alloc(self, bytes_45300, "mem_45302")
      if slt64(np.int64(0), (m_29166 * iota32_arg_29597)):
        stage1_max_num_groups_46636 = self.max_group_size
        stage1_num_groups_46637 = smin64(stage1_max_num_groups_46636,
                                         num_groups_42201)
        num_threads_46638 = sext_i64_i32((stage1_num_groups_46637 * segscan_group_sizze_42200))
        if ((1 * (np.long(stage1_num_groups_46637) * np.long(segscan_group_sizze_42200))) != 0):
          self.mainziscan_stage1_42114_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_42200)))),
                                                    np.int64(N_29165),
                                                    np.int64(m_29166),
                                                    np.int64(iota32_arg_29597),
                                                    np.int32(num_threads_46638),
                                                    defunc_4_map_res_mem_45178,
                                                    defunc_3_map_res_mem_45244,
                                                    defunc_3_map_res_mem_45245,
                                                    defunc_0_f_res_mem_45279,
                                                    mem_45298, mem_45302)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_42114_var,
                                     ((np.long(stage1_num_groups_46637) * np.long(segscan_group_sizze_42200)),),
                                     (np.long(segscan_group_sizze_42200),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46637))) != 0):
          self.mainziscan_stage2_42114_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_46637)))),
                                                    np.int64(m_29166),
                                                    np.int64(iota32_arg_29597),
                                                    np.int64(stage1_num_groups_46637),
                                                    np.int32(num_threads_46638),
                                                    mem_45302)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_42114_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_46637)),),
                                     (np.long(stage1_num_groups_46637),))
          if synchronous:
            sync(self)
        required_groups_46680 = sext_i64_i32(sdiv_up64((m_29166 * iota32_arg_29597),
                                                       segscan_group_sizze_42200))
        if ((1 * (np.long(num_groups_42201) * np.long(segscan_group_sizze_42200))) != 0):
          self.mainziscan_stage3_42114_var.set_args(self.global_failure,
                                                    np.int64(m_29166),
                                                    np.int64(iota32_arg_29597),
                                                    np.int64(num_groups_42201),
                                                    np.int32(num_threads_46638),
                                                    np.int32(required_groups_46680),
                                                    mem_45302)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_42114_var,
                                     ((np.long(num_groups_42201) * np.long(segscan_group_sizze_42200)),),
                                     (np.long(segscan_group_sizze_42200),))
          if synchronous:
            sync(self)
      mem_45305 = opencl_alloc(self, m_29166, "mem_45305")
      mem_45307 = opencl_alloc(self, bytes_45152, "mem_45307")
      mem_45309 = opencl_alloc(self, bytes_45152, "mem_45309")
      if slt64((iota32_arg_29597 * np.int64(2)), segred_group_sizze_42246):
        segment_sizze_nonzzero_46692 = smax64(np.int64(1), iota32_arg_29597)
        num_threads_46693 = (num_groups_42247 * segred_group_sizze_42246)
        if ((1 * (np.long(num_groups_42247) * np.long(segred_group_sizze_42246))) != 0):
          self.mainzisegred_small_42060_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_42246))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_42246))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_42246))),
                                                     np.int64(m_29166),
                                                     np.int64(iota32_arg_29597),
                                                     np.int64(num_groups_42247),
                                                     np.int64(segment_sizze_nonzzero_46692),
                                                     mem_45284, mem_45296,
                                                     mem_45298, mem_45302,
                                                     mem_45305, mem_45307,
                                                     mem_45309)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_42060_var,
                                     ((np.long(num_groups_42247) * np.long(segred_group_sizze_42246)),),
                                     (np.long(segred_group_sizze_42246),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_46728 = sdiv_up64(num_groups_42247,
                                             smax64(np.int64(1), m_29166))
        elements_per_thread_46729 = sdiv_up64(iota32_arg_29597,
                                              (segred_group_sizze_42246 * groups_per_segment_46728))
        virt_num_groups_46730 = (groups_per_segment_46728 * m_29166)
        num_threads_46731 = (num_groups_42247 * segred_group_sizze_42246)
        threads_per_segment_46732 = (groups_per_segment_46728 * segred_group_sizze_42246)
        group_res_arr_mem_46733 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_42246 * virt_num_groups_46730)),
                                               "group_res_arr_mem_46733")
        group_res_arr_mem_46735 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_42246 * virt_num_groups_46730)),
                                               "group_res_arr_mem_46735")
        group_res_arr_mem_46737 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_42246 * virt_num_groups_46730)),
                                               "group_res_arr_mem_46737")
        mainzicounter_mem_46739 = self.mainzicounter_mem_46739
        if ((1 * (np.long(num_groups_42247) * np.long(segred_group_sizze_42246))) != 0):
          self.mainzisegred_large_42060_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_42246))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_42246))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_42246))),
                                                     np.int64(iota32_arg_29597),
                                                     np.int64(num_groups_42247),
                                                     np.int64(groups_per_segment_46728),
                                                     np.int64(elements_per_thread_46729),
                                                     np.int64(virt_num_groups_46730),
                                                     mem_45284, mem_45296,
                                                     mem_45298, mem_45302,
                                                     mem_45305, mem_45307,
                                                     mem_45309,
                                                     group_res_arr_mem_46733,
                                                     group_res_arr_mem_46735,
                                                     group_res_arr_mem_46737,
                                                     mainzicounter_mem_46739)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_42060_var,
                                     ((np.long(num_groups_42247) * np.long(segred_group_sizze_42246)),),
                                     (np.long(segred_group_sizze_42246),))
          if synchronous:
            sync(self)
      mem_45296 = None
      mem_45302 = None
      segmap_usable_groups_42286 = sdiv_up64(m_29166, segmap_group_sizze_42285)
      mem_45312 = opencl_alloc(self, bytes_45152, "mem_45312")
      mem_45314 = opencl_alloc(self, bytes_45152, "mem_45314")
      if ((1 * (np.long(segmap_usable_groups_42286) * np.long(segmap_group_sizze_42285))) != 0):
        self.mainzisegmap_42001_var.set_args(self.global_failure,
                                             self.failure_is_an_option,
                                             self.global_failure_args,
                                             np.int64(N_29165),
                                             np.int64(m_29166),
                                             np.int32(n_29169),
                                             defunc_4_map_res_mem_45179,
                                             defunc_3_map_res_mem_45245,
                                             mem_45298, mem_45305, mem_45307,
                                             mem_45309, mem_45312, mem_45314)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_42001_var,
                                   ((np.long(segmap_usable_groups_42286) * np.long(segmap_group_sizze_42285)),),
                                   (np.long(segmap_group_sizze_42285),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_45298 = None
      mem_45305 = None
      mem_45307 = None
      mem_45309 = None
      defunc_0_f_res_mem_45315 = mem_45312
      defunc_0_f_res_mem_45316 = mem_45314
    defunc_4_map_res_mem_45178 = None
    defunc_4_map_res_mem_45179 = None
    defunc_3_map_res_mem_45244 = None
    defunc_3_map_res_mem_45245 = None
    defunc_3_map_res_mem_45246 = None
    defunc_0_f_res_mem_45279 = None
    mem_45284 = None
    out_mem_45676 = defunc_4_map_res_mem_45177
    out_mem_45677 = defunc_0_f_res_mem_45315
    out_mem_45678 = defunc_0_f_res_mem_45316
    return (out_mem_45676, out_mem_45677, out_mem_45678)
  def futhark_mainDetailed(self, mappingindices_mem_44380, images_mem_44381,
                           N_27771, m_27772, trend_27773, k_27774, n_27775,
                           freq_27776, hfrac_27777, lam_27778):
    i32_res_27781 = sext_i32_i64(n_27775)
    x_27782 = (np.int32(2) * k_27774)
    k2p2_27783 = (np.int32(2) + x_27782)
    cond_27784 = slt32(np.int32(0), trend_27773)
    if cond_27784:
      k2p2zq_27785 = k2p2_27783
    else:
      k2p2zq_f_res_27786 = (k2p2_27783 - np.int32(1))
      k2p2zq_27785 = k2p2zq_f_res_27786
    i32_res_27787 = sext_i32_i64(k2p2zq_27785)
    binop_x_44384 = (N_27771 * i32_res_27787)
    bytes_44383 = (np.int64(4) * binop_x_44384)
    if cond_27784:
      bounds_invalid_upwards_27789 = slt64(i32_res_27787, np.int64(0))
      valid_27790 = not(bounds_invalid_upwards_27789)
      range_valid_c_27791 = True
      assert valid_27790, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27787,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_30048 = self.sizes["mainDetailed.segmap_group_size_29978"]
      segmap_usable_groups_30049 = sdiv_up64(binop_x_44384,
                                             segmap_group_sizze_30048)
      mem_44385 = opencl_alloc(self, bytes_44383, "mem_44385")
      if ((1 * (np.long(segmap_usable_groups_30049) * np.long(segmap_group_sizze_30048))) != 0):
        self.mainDetailedzisegmap_29975_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.float32(freq_27776),
                                                     np.int64(i32_res_27787),
                                                     mappingindices_mem_44380,
                                                     mem_44385)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29975_var,
                                   ((np.long(segmap_usable_groups_30049) * np.long(segmap_group_sizze_30048)),),
                                   (np.long(segmap_group_sizze_30048),))
        if synchronous:
          sync(self)
      binop_p_mem_44390 = mem_44385
    else:
      bounds_invalid_upwards_27815 = slt64(i32_res_27787, np.int64(0))
      valid_27816 = not(bounds_invalid_upwards_27815)
      range_valid_c_27817 = True
      assert valid_27816, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:50:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27787,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_30222 = self.sizes["mainDetailed.segmap_group_size_30156"]
      segmap_usable_groups_30223 = sdiv_up64(binop_x_44384,
                                             segmap_group_sizze_30222)
      mem_44389 = opencl_alloc(self, bytes_44383, "mem_44389")
      if ((1 * (np.long(segmap_usable_groups_30223) * np.long(segmap_group_sizze_30222))) != 0):
        self.mainDetailedzisegmap_30153_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.float32(freq_27776),
                                                     np.int64(i32_res_27787),
                                                     mappingindices_mem_44380,
                                                     mem_44389)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30153_var,
                                   ((np.long(segmap_usable_groups_30223) * np.long(segmap_group_sizze_30222)),),
                                   (np.long(segmap_group_sizze_30222),))
        if synchronous:
          sync(self)
      binop_p_mem_44390 = mem_44389
    x_27840 = (N_27771 * N_27771)
    y_27841 = (np.int64(2) * N_27771)
    x_27842 = (x_27840 + y_27841)
    x_27843 = (np.int64(1) + x_27842)
    y_27844 = (np.int64(1) + N_27771)
    zzero_27845 = (y_27844 == np.int64(0))
    nonzzero_27846 = not(zzero_27845)
    nonzzero_cert_27847 = True
    assert nonzzero_27846, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:174:3-56\n   #2  bfastfinal.fut:170:1-174:56\n" % ("division by zero",))
    x_27848 = sdiv64(x_27843, y_27844)
    x_27849 = (x_27848 - N_27771)
    binop_p_27850 = (x_27849 - np.int64(1))
    defunc_0_f_res_27851 = sext_i64_i32(binop_p_27850)
    i32_res_27852 = sitofp_i32_f32(defunc_0_f_res_27851)
    segmap_group_sizze_30305 = self.sizes["mainDetailed.segmap_group_size_30284"]
    segmap_usable_groups_30306 = sdiv_up64(binop_x_44384,
                                           segmap_group_sizze_30305)
    mem_44393 = opencl_alloc(self, bytes_44383, "mem_44393")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_44393, np.int64(0),
                                                binop_p_mem_44390, np.int64(0),
                                                np.int64(1), N_27771,
                                                i32_res_27787)
    mem_44397 = opencl_alloc(self, bytes_44383, "mem_44397")
    if ((1 * (np.long(segmap_usable_groups_30306) * np.long(segmap_group_sizze_30305))) != 0):
      self.mainDetailedzisegmap_30281_var.set_args(self.global_failure,
                                                   np.int64(N_27771),
                                                   np.int64(i32_res_27787),
                                                   np.float32(i32_res_27852),
                                                   mem_44393, mem_44397)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_30281_var,
                                 ((np.long(segmap_usable_groups_30306) * np.long(segmap_group_sizze_30305)),),
                                 (np.long(segmap_group_sizze_30305),))
      if synchronous:
        sync(self)
    eq_x_y_27860 = (np.int64(0) == i32_res_27787)
    p_and_eq_x_y_27861 = (cond_27784 and eq_x_y_27860)
    not_p_27862 = not(cond_27784)
    p_and_eq_x_y_27863 = (eq_x_y_27860 and not_p_27862)
    empty_slice_27864 = (p_and_eq_x_y_27861 or p_and_eq_x_y_27863)
    m_27865 = (i32_res_27787 - np.int64(1))
    zzero_leq_i_p_m_t_s_27866 = sle64(np.int64(0), m_27865)
    i_p_m_t_s_leq_w_27867 = slt64(m_27865, i32_res_27787)
    i_lte_j_27868 = sle64(np.int64(0), i32_res_27787)
    y_27869 = (zzero_leq_i_p_m_t_s_27866 and i_p_m_t_s_leq_w_27867)
    y_27870 = (i_lte_j_27868 and y_27869)
    ok_or_empty_27871 = (empty_slice_27864 or y_27870)
    empty_slice_27872 = (i32_res_27781 == np.int64(0))
    m_27873 = (i32_res_27781 - np.int64(1))
    zzero_leq_i_p_m_t_s_27874 = sle64(np.int64(0), m_27873)
    i_p_m_t_s_leq_w_27875 = slt64(m_27873, N_27771)
    i_lte_j_27876 = sle64(np.int64(0), i32_res_27781)
    y_27877 = (zzero_leq_i_p_m_t_s_27874 and i_p_m_t_s_leq_w_27875)
    y_27878 = (i_lte_j_27876 and y_27877)
    ok_or_empty_27879 = (empty_slice_27872 or y_27878)
    index_ok_27880 = (ok_or_empty_27871 and ok_or_empty_27879)
    index_certs_27881 = True
    assert index_ok_27880, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:174:3-56\n   #2  bfastfinal.fut:170:1-174:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27781,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27787,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27771,
                                                                                                                                                                               "]."))
    empty_slice_27883 = (i32_res_27787 == np.int64(0))
    ok_or_empty_27884 = (y_27870 or empty_slice_27883)
    index_ok_27885 = (ok_or_empty_27879 and ok_or_empty_27884)
    index_certs_27886 = True
    assert index_ok_27885, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:174:3-56\n   #2  bfastfinal.fut:170:1-174:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27781,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27771,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27787,
                                                                                                                                                                               "]."))
    empty_slice_27888 = (m_27772 == np.int64(0))
    m_27889 = (m_27772 - np.int64(1))
    zzero_leq_i_p_m_t_s_27890 = sle64(np.int64(0), m_27889)
    i_p_m_t_s_leq_w_27891 = slt64(m_27889, m_27772)
    i_lte_j_27892 = sle64(np.int64(0), m_27772)
    y_27893 = (zzero_leq_i_p_m_t_s_27890 and i_p_m_t_s_leq_w_27891)
    y_27894 = (i_lte_j_27892 and y_27893)
    ok_or_empty_27895 = (empty_slice_27888 or y_27894)
    index_ok_27896 = (ok_or_empty_27879 and ok_or_empty_27895)
    index_certs_27897 = True
    assert index_ok_27896, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:174:3-56\n   #2  bfastfinal.fut:170:1-174:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27781,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27772,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27771,
                                                                                                                                                                               "]."))
    suff_outer_par_30312 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27772)
    segmap_group_sizze_30338 = self.sizes["mainDetailed.segmap_group_size_30316"]
    max_num_groups_45706 = self.sizes["mainDetailed.segmap_num_groups_30318"]
    num_groups_30339 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27772,
                                                            segmap_group_sizze_30338),
                                                  sext_i32_i64(max_num_groups_45706))))
    nest_sizze_30514 = (m_27772 * i32_res_27787)
    segmap_group_sizze_30515 = self.sizes["mainDetailed.segmap_group_size_30363"]
    max_num_groups_45707 = self.sizes["mainDetailed.segmap_num_groups_30365"]
    num_groups_30516 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30514,
                                                            segmap_group_sizze_30515),
                                                  sext_i32_i64(max_num_groups_45707))))
    suff_outer_par_30520 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_30514)
    y_30544 = (i32_res_27787 * i32_res_27787)
    comparatee_30545 = (m_27772 * y_30544)
    suff_outer_par_30546 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_30545)
    nest_sizze_30566 = (i32_res_27781 * comparatee_30545)
    segred_group_sizze_30567 = self.sizes["mainDetailed.segred_group_size_30423"]
    max_num_groups_45708 = self.sizes["mainDetailed.segred_num_groups_30425"]
    num_groups_30568 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30566,
                                                            segred_group_sizze_30567),
                                                  sext_i32_i64(max_num_groups_45708))))
    Tx_42527 = self.sizes["mainDetailed.Tx_42525"]
    Ty_42528 = self.sizes["mainDetailed.Ty_42526"]
    Ty_42529 = smin64(i32_res_27787, Ty_42528)
    Tx_42530 = smin64(i32_res_27787, Tx_42527)
    gridDim_zz_42533 = sdiv_up64(m_27772, np.int64(30))
    group_sizze_tile3d_42536 = (Ty_42529 * Tx_42530)
    binop_x_44399 = (N_27771 * m_27772)
    bytes_44398 = (np.int64(4) * binop_x_44399)
    bytes_44443 = (np.int64(4) * comparatee_30545)
    bytes_44402 = (np.int64(4) * y_30544)
    binop_x_44546 = (i32_res_27787 * nest_sizze_30514)
    bytes_44544 = (np.int64(4) * binop_x_44546)
    bytes_44448 = (np.int64(4) * i32_res_27787)
    binop_x_44477 = (np.int64(30) * group_sizze_tile3d_42536)
    bytes_44475 = (np.int64(4) * binop_x_44477)
    binop_x_45447 = (np.int64(4) * Ty_42529)
    binop_x_45448 = (Tx_42530 * binop_x_45447)
    sizze_45449 = (np.int64(30) * binop_x_45448)
    num_threads_45527 = (segmap_group_sizze_30338 * num_groups_30339)
    total_sizze_45528 = (bytes_44402 * num_threads_45527)
    num_threads_45529 = (segmap_group_sizze_30515 * num_groups_30516)
    total_sizze_45530 = (bytes_44448 * num_threads_45529)
    local_memory_capacity_45830 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45830)) and suff_outer_par_30312):
      mem_44400 = opencl_alloc(self, bytes_44398, "mem_44400")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44400, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_27771, m_27772)
      mem_44446 = opencl_alloc(self, bytes_44443, "mem_44446")
      mem_44404 = opencl_alloc(self, total_sizze_45528, "mem_44404")
      if ((1 * (np.long(num_groups_30339) * np.long(segmap_group_sizze_30338))) != 0):
        self.mainDetailedzisegmap_30314_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.int64(m_27772),
                                                     np.int32(n_27775),
                                                     np.int32(k2p2zq_27785),
                                                     np.int64(i32_res_27787),
                                                     np.int64(num_groups_30339),
                                                     binop_p_mem_44390,
                                                     mem_44397, mem_44400,
                                                     mem_44404, mem_44446)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30314_var,
                                   ((np.long(num_groups_30339) * np.long(segmap_group_sizze_30338)),),
                                   (np.long(segmap_group_sizze_30338),))
        if synchronous:
          sync(self)
      mem_44400 = None
      mem_44404 = None
      mem_44547 = opencl_alloc(self, bytes_44544, "mem_44547")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44547, np.int64(0),
                                                  mem_44446, np.int64(0),
                                                  np.int64(1), m_27772,
                                                  (i32_res_27787 * i32_res_27787))
      mem_44446 = None
      defunc_3_map_res_mem_44549 = mem_44547
    else:
      local_memory_capacity_45829 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_45829)) and suff_outer_par_30520):
        mem_44465 = opencl_alloc(self, bytes_44544, "mem_44465")
        mem_44449 = opencl_alloc(self, total_sizze_45530, "mem_44449")
        if ((1 * (np.long(num_groups_30516) * np.long(segmap_group_sizze_30515))) != 0):
          self.mainDetailedzisegmap_30360_var.set_args(self.global_failure,
                                                       np.int64(N_27771),
                                                       np.int64(m_27772),
                                                       np.int32(n_27775),
                                                       np.int32(k2p2zq_27785),
                                                       np.int64(i32_res_27787),
                                                       np.int64(num_groups_30516),
                                                       images_mem_44381,
                                                       mem_44393, mem_44397,
                                                       mem_44449, mem_44465)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_30360_var,
                                     ((np.long(num_groups_30516) * np.long(segmap_group_sizze_30515)),),
                                     (np.long(segmap_group_sizze_30515),))
          if synchronous:
            sync(self)
        mem_44449 = None
        mem_44541 = opencl_alloc(self, bytes_44544, "mem_44541")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44541, np.int64(0),
                                                    mem_44465, np.int64(0),
                                                    np.int64(1),
                                                    (m_27772 * i32_res_27787),
                                                    i32_res_27787)
        mem_44465 = None
        defunc_3_map_res_mem_44543 = mem_44541
      else:
        local_memory_capacity_45828 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_45828)) and suff_outer_par_30546):
          mem_44468 = opencl_alloc(self, bytes_44398, "mem_44468")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_44468, np.int64(0),
                                                      images_mem_44381,
                                                      np.int64(0), np.int64(1),
                                                      N_27771, m_27772)
          gridDim_x_42531 = sdiv_up64(i32_res_27787, Tx_42530)
          gridDim_y_42532 = sdiv_up64(i32_res_27787, Ty_42529)
          binop_x_42534 = (gridDim_y_42532 * gridDim_zz_42533)
          grid_sizze_tile3d_42535 = (gridDim_x_42531 * binop_x_42534)
          count_shmem_42537 = sdiv_up64(np.int64(30), group_sizze_tile3d_42536)
          mem_44528 = opencl_alloc(self, bytes_44544, "mem_44528")
          if ((1 * (np.long(grid_sizze_tile3d_42535) * np.long(group_sizze_tile3d_42536))) != 0):
            self.mainDetailedzisegmap_intragroup_42541_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27772),
                                                                    np.int32(n_27775),
                                                                    np.int64(i32_res_27787),
                                                                    np.int64(Ty_42529),
                                                                    np.int64(Tx_42530),
                                                                    np.int64(gridDim_x_42531),
                                                                    np.int64(gridDim_y_42532),
                                                                    np.int64(group_sizze_tile3d_42536),
                                                                    np.int64(count_shmem_42537),
                                                                    mem_44393,
                                                                    mem_44397,
                                                                    mem_44468,
                                                                    mem_44528)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_42541_var,
                                       ((np.long(grid_sizze_tile3d_42535) * np.long(group_sizze_tile3d_42536)),),
                                       (np.long(group_sizze_tile3d_42536),))
            if synchronous:
              sync(self)
          mem_44468 = None
          defunc_3_map_res_mem_44537 = mem_44528
        else:
          mem_44531 = opencl_alloc(self, bytes_44383, "mem_44531")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_44531, np.int64(0),
                                                      mem_44397, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27787, N_27771)
          mem_44536 = opencl_alloc(self, bytes_44544, "mem_44536")
          if slt64((i32_res_27781 * np.int64(2)), segred_group_sizze_30567):
            segment_sizze_nonzzero_45768 = smax64(np.int64(1), i32_res_27781)
            num_threads_45769 = (num_groups_30568 * segred_group_sizze_30567)
            if ((1 * (np.long(num_groups_30568) * np.long(segred_group_sizze_30567))) != 0):
              self.mainDetailedzisegred_small_30429_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30567))),
                                                                 np.int64(N_27771),
                                                                 np.int64(m_27772),
                                                                 np.int64(i32_res_27781),
                                                                 np.int64(i32_res_27787),
                                                                 np.int64(num_groups_30568),
                                                                 np.int64(segment_sizze_nonzzero_45768),
                                                                 images_mem_44381,
                                                                 binop_p_mem_44390,
                                                                 mem_44531,
                                                                 mem_44536)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_30429_var,
                                         ((np.long(num_groups_30568) * np.long(segred_group_sizze_30567)),),
                                         (np.long(segred_group_sizze_30567),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_45789 = sdiv_up64(num_groups_30568,
                                                 smax64(np.int64(1),
                                                        ((m_27772 * i32_res_27787) * i32_res_27787)))
            elements_per_thread_45790 = sdiv_up64(i32_res_27781,
                                                  (segred_group_sizze_30567 * groups_per_segment_45789))
            virt_num_groups_45791 = (groups_per_segment_45789 * ((m_27772 * i32_res_27787) * i32_res_27787))
            num_threads_45792 = (num_groups_30568 * segred_group_sizze_30567)
            threads_per_segment_45793 = (groups_per_segment_45789 * segred_group_sizze_30567)
            group_res_arr_mem_45794 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_30567 * virt_num_groups_45791)),
                                                   "group_res_arr_mem_45794")
            mainDetailedzicounter_mem_45796 = self.mainDetailedzicounter_mem_45796
            if ((1 * (np.long(num_groups_30568) * np.long(segred_group_sizze_30567))) != 0):
              self.mainDetailedzisegred_large_30429_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30567))),
                                                                 np.int64(N_27771),
                                                                 np.int64(i32_res_27781),
                                                                 np.int64(i32_res_27787),
                                                                 np.int64(num_groups_30568),
                                                                 np.int64(groups_per_segment_45789),
                                                                 np.int64(elements_per_thread_45790),
                                                                 np.int64(virt_num_groups_45791),
                                                                 np.int64(threads_per_segment_45793),
                                                                 images_mem_44381,
                                                                 binop_p_mem_44390,
                                                                 mem_44531,
                                                                 mem_44536,
                                                                 group_res_arr_mem_45794,
                                                                 mainDetailedzicounter_mem_45796)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_30429_var,
                                         ((np.long(num_groups_30568) * np.long(segred_group_sizze_30567)),),
                                         (np.long(segred_group_sizze_30567),))
              if synchronous:
                sync(self)
          mem_44531 = None
          defunc_3_map_res_mem_44537 = mem_44536
        defunc_3_map_res_mem_44543 = defunc_3_map_res_mem_44537
      defunc_3_map_res_mem_44549 = defunc_3_map_res_mem_44543
    m_27918 = (np.int32(2) * k2p2zq_27785)
    x_27919 = (np.int64(2) * i32_res_27787)
    nm_27920 = (i32_res_27787 * x_27919)
    bounds_invalid_upwards_27921 = slt64(nm_27920, np.int64(0))
    valid_27922 = not(bounds_invalid_upwards_27921)
    range_valid_c_27923 = True
    assert valid_27922, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:79:21-29\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                  nm_27920,
                                                                                                                                                                                                                                                                  " is invalid."))
    zzero_27928 = (m_27918 == np.int32(0))
    nonzzero_27929 = not(zzero_27928)
    nonzzero_cert_27930 = True
    assert nonzzero_27929, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:74:41-47\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("division by zero",))
    loop_nonempty_27931 = slt32(np.int32(0), k2p2zq_27785)
    loop_not_taken_27932 = not(loop_nonempty_27931)
    protect_assert_disj_27933 = (nonzzero_27929 or loop_not_taken_27932)
    nonzzero_cert_27934 = True
    assert protect_assert_disj_27933, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:60:43-49\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n" % ("division by zero",))
    i32_res_27935 = sext_i32_i64(m_27918)
    x_27936 = (i32_res_27787 * i32_res_27935)
    dim_ok_27937 = (x_27936 == nm_27920)
    dim_ok_cert_27938 = True
    assert dim_ok_27937, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:16-43\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27939 = (x_27919 - i32_res_27787)
    empty_slice_27940 = (j_m_i_27939 == np.int64(0))
    m_27941 = (j_m_i_27939 - np.int64(1))
    i_p_m_t_s_27942 = (i32_res_27787 + m_27941)
    zzero_leq_i_p_m_t_s_27943 = sle64(np.int64(0), i_p_m_t_s_27942)
    i_p_m_t_s_leq_w_27944 = slt64(i_p_m_t_s_27942, i32_res_27935)
    i_lte_j_27945 = sle64(i32_res_27787, x_27919)
    y_27946 = (i_lte_j_27868 and i_p_m_t_s_leq_w_27944)
    y_27947 = (zzero_leq_i_p_m_t_s_27943 and y_27946)
    y_27948 = (i_lte_j_27945 and y_27947)
    forwards_ok_27949 = (i_lte_j_27868 and y_27948)
    ok_or_empty_27950 = (empty_slice_27940 or forwards_ok_27949)
    index_ok_27951 = (ok_or_empty_27884 and ok_or_empty_27950)
    index_certs_27952 = True
    assert index_ok_27951, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:83:8-30\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:174:3-56\n   #3  bfastfinal.fut:170:1-174:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27787,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27787,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   x_27919,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27787,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27935,
                                                                                                                                                                                                                   "]."))
    dim_match_27953 = (i32_res_27787 == j_m_i_27939)
    empty_or_match_cert_27954 = True
    assert dim_match_27953, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:83:8-45\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:174:3-56\n   #3  bfastfinal.fut:170:1-174:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                            i32_res_27787,
                                                                                                                                                                                                            ", ",
                                                                                                                                                                                                            j_m_i_27939,
                                                                                                                                                                                                            ") cannot match shape of type `[",
                                                                                                                                                                                                            i32_res_27787,
                                                                                                                                                                                                            "][",
                                                                                                                                                                                                            i32_res_27787,
                                                                                                                                                                                                            "]f32`."))
    max_group_sizze_30862 = self.max_group_size
    fits_30863 = sle64(nm_27920, max_group_sizze_30862)
    suff_intra_par_30861 = (self.sizes["mainDetailed.suff_intra_par_11"] <= nm_27920)
    intra_suff_and_fits_30864 = (suff_intra_par_30861 and fits_30863)
    nest_sizze_31528 = (m_27772 * nm_27920)
    segmap_group_sizze_31529 = self.sizes["mainDetailed.segmap_group_size_31472"]
    suff_intra_par_31568 = (self.sizes["mainDetailed.suff_intra_par_13"] <= nm_27920)
    intra_suff_and_fits_31569 = (fits_30863 and suff_intra_par_31568)
    segmap_group_sizze_31621 = self.sizes["mainDetailed.segmap_group_size_31354"]
    segmap_group_sizze_31637 = self.sizes["mainDetailed.segmap_group_size_31255"]
    segmap_group_sizze_31687 = self.sizes["mainDetailed.segmap_group_size_31185"]
    y_31697 = (i32_res_27787 * j_m_i_27939)
    nest_sizze_31698 = (m_27772 * y_31697)
    segmap_group_sizze_31699 = self.sizes["mainDetailed.segmap_group_size_30956"]
    segmap_usable_groups_31622 = sdiv_up_safe64(m_27772,
                                                segmap_group_sizze_31621)
    segmap_usable_groups_31638 = sdiv_up_safe64(nest_sizze_31528,
                                                segmap_group_sizze_31637)
    segmap_usable_groups_31688 = sdiv_up_safe64(nest_sizze_31528,
                                                segmap_group_sizze_31687)
    bytes_44552 = (np.int64(4) * nm_27920)
    bytes_44575 = (np.int64(4) * nest_sizze_31528)
    binop_x_44626 = (j_m_i_27939 * nest_sizze_30514)
    bytes_44624 = (np.int64(4) * binop_x_44626)
    local_memory_capacity_45831 = self.max_local_memory
    if intra_suff_and_fits_30864:
      defunc_3_map_res_ixfn_44628 = i32_res_27787
    else:
      defunc_3_map_res_ixfn_44628 = j_m_i_27939
    local_memory_capacity_45894 = self.max_local_memory
    if (sle64(((bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_45894)) and intra_suff_and_fits_30864):
      mem_44573 = opencl_alloc(self, bytes_44544, "mem_44573")
      if ((1 * (np.long(m_27772) * np.long(nm_27920))) != 0):
        self.mainDetailedzisegmap_intragroup_30688_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_44552)),
                                                                cl.LocalMemory(np.long(bytes_44552)),
                                                                np.int32(k2p2zq_27785),
                                                                np.int64(i32_res_27787),
                                                                np.int32(m_27918),
                                                                np.int64(nm_27920),
                                                                np.int64(i32_res_27935),
                                                                defunc_3_map_res_mem_44549,
                                                                mem_44573)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30688_var,
                                   ((np.long(m_27772) * np.long(nm_27920)),),
                                   (np.long(nm_27920),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_44629 = mem_44573
    else:
      segmap_usable_groups_31530 = sdiv_up64(nest_sizze_31528,
                                             segmap_group_sizze_31529)
      mem_44577 = opencl_alloc(self, bytes_44575, "mem_44577")
      if ((1 * (np.long(segmap_usable_groups_31530) * np.long(segmap_group_sizze_31529))) != 0):
        self.mainDetailedzisegmap_31469_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(m_27772),
                                                     np.int32(k2p2zq_27785),
                                                     np.int64(i32_res_27787),
                                                     np.int32(m_27918),
                                                     np.int64(nm_27920),
                                                     defunc_3_map_res_mem_44549,
                                                     mem_44577)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31469_var,
                                   ((np.long(segmap_usable_groups_31530) * np.long(segmap_group_sizze_31529)),),
                                   (np.long(segmap_group_sizze_31529),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      ctx_param_ext_44578 = m_27772
      ctx_param_ext_44579 = nm_27920
      ctx_param_ext_44580 = np.int64(0)
      ctx_param_ext_44581 = nm_27920
      ctx_param_ext_44582 = m_27772
      ctx_param_ext_44583 = np.int64(1)
      ctx_param_ext_44584 = nm_27920
      mem_param_44585 = mem_44577
      i_31554 = np.int32(0)
      one_46875 = np.int32(1)
      for counter_46874 in range(k2p2zq_27785):
        i32_res_31556 = sext_i32_i64(i_31554)
        x_31557 = sle64(np.int64(0), i32_res_31556)
        y_31558 = slt64(i32_res_31556, nm_27920)
        bounds_check_31559 = (x_31557 and y_31558)
        index_certs_31560 = True
        assert bounds_check_31559, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:59:16-27\n   #1  helpers.fut:80:16-34\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("Index [",
                                                                                                                                                                                                                                         i32_res_31556,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_27920,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_45854 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44607 = m_27772
        else:
          gauss_jordan_res_ixfn_44607 = ctx_param_ext_44582
        local_memory_capacity_45855 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44608 = nm_27920
        else:
          gauss_jordan_res_ixfn_44608 = ctx_param_ext_44584
        local_memory_capacity_45856 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44609 = m_27772
        else:
          gauss_jordan_res_ixfn_44609 = ctx_param_ext_44578
        local_memory_capacity_45857 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44610 = nm_27920
        else:
          gauss_jordan_res_ixfn_44610 = ctx_param_ext_44579
        local_memory_capacity_45858 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44611 = nm_27920
        else:
          gauss_jordan_res_ixfn_44611 = ctx_param_ext_44581
        local_memory_capacity_45859 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44612 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_44612 = ctx_param_ext_44583
        local_memory_capacity_45860 = self.max_local_memory
        if intra_suff_and_fits_31569:
          gauss_jordan_res_ixfn_44613 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_44613 = ctx_param_ext_44580
        local_memory_capacity_45888 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_45888)) and sle64((bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_45888))) and intra_suff_and_fits_31569):
          mem_44590 = opencl_alloc(self, bytes_44575, "mem_44590")
          group_sizze_45864 = self.sizes["mainDetailed.group_size_45864"]
          num_groups_45865 = sdiv_up64((m_27772 * nm_27920), group_sizze_45864)
          if ((1 * (np.long(num_groups_45865) * np.long(group_sizze_45864))) != 0):
            self.mainDetailedzicopy_45861_var.set_args(np.int64(m_27772),
                                                       np.int64(nm_27920),
                                                       np.int64(ctx_param_ext_44580),
                                                       np.int64(ctx_param_ext_44581),
                                                       np.int64(ctx_param_ext_44583),
                                                       mem_param_44585,
                                                       mem_44590)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_45861_var,
                                       ((np.long(num_groups_45865) * np.long(group_sizze_45864)),),
                                       (np.long(group_sizze_45864),))
            if synchronous:
              sync(self)
          mem_44598 = opencl_alloc(self, bytes_44575, "mem_44598")
          if ((1 * (np.long(m_27772) * np.long(nm_27920))) != 0):
            self.mainDetailedzisegmap_intragroup_31015_var.set_args(self.global_failure,
                                                                    self.failure_is_an_option,
                                                                    self.global_failure_args,
                                                                    cl.LocalMemory(np.long(bytes_44552)),
                                                                    np.int64(m_27772),
                                                                    np.int32(k2p2zq_27785),
                                                                    np.int32(m_27918),
                                                                    np.int64(nm_27920),
                                                                    np.int32(i_31554),
                                                                    np.int64(i32_res_31556),
                                                                    np.int64(ctx_param_ext_44580),
                                                                    np.int64(ctx_param_ext_44581),
                                                                    np.int64(ctx_param_ext_44583),
                                                                    mem_param_44585,
                                                                    mem_44590,
                                                                    mem_44598)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_31015_var,
                                       ((np.long(m_27772) * np.long(nm_27920)),),
                                       (np.long(nm_27920),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          mem_44590 = None
          gauss_jordan_res_mem_44614 = mem_44598
        else:
          mem_44601 = opencl_alloc(self, m_27772, "mem_44601")
          if ((1 * (np.long(segmap_usable_groups_31622) * np.long(segmap_group_sizze_31621))) != 0):
            self.mainDetailedzisegmap_31352_var.set_args(self.global_failure,
                                                         np.int64(m_27772),
                                                         np.int64(i32_res_31556),
                                                         np.int64(ctx_param_ext_44580),
                                                         np.int64(ctx_param_ext_44581),
                                                         np.int64(ctx_param_ext_44583),
                                                         mem_param_44585,
                                                         mem_44601)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31352_var,
                                       ((np.long(segmap_usable_groups_31622) * np.long(segmap_group_sizze_31621)),),
                                       (np.long(segmap_group_sizze_31621),))
            if synchronous:
              sync(self)
          mem_44605 = opencl_alloc(self, bytes_44575, "mem_44605")
          if ((1 * (np.long(segmap_usable_groups_31638) * np.long(segmap_group_sizze_31637))) != 0):
            self.mainDetailedzisegmap_31252_var.set_args(self.global_failure,
                                                         self.failure_is_an_option,
                                                         self.global_failure_args,
                                                         np.int64(m_27772),
                                                         np.int32(k2p2zq_27785),
                                                         np.int32(m_27918),
                                                         np.int64(nm_27920),
                                                         np.int32(i_31554),
                                                         np.int64(i32_res_31556),
                                                         np.int64(ctx_param_ext_44580),
                                                         np.int64(ctx_param_ext_44581),
                                                         np.int64(ctx_param_ext_44583),
                                                         mem_param_44585,
                                                         mem_44601, mem_44605)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31252_var,
                                       ((np.long(segmap_usable_groups_31638) * np.long(segmap_group_sizze_31637)),),
                                       (np.long(segmap_group_sizze_31637),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          mem_44601 = None
          if ((1 * (np.long(segmap_usable_groups_31688) * np.long(segmap_group_sizze_31687))) != 0):
            self.mainDetailedzisegmap_31182_var.set_args(self.global_failure,
                                                         np.int64(m_27772),
                                                         np.int64(nm_27920),
                                                         np.int64(ctx_param_ext_44580),
                                                         np.int64(ctx_param_ext_44581),
                                                         np.int64(ctx_param_ext_44583),
                                                         mem_param_44585,
                                                         mem_44605)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31182_var,
                                       ((np.long(segmap_usable_groups_31688) * np.long(segmap_group_sizze_31687)),),
                                       (np.long(segmap_group_sizze_31687),))
            if synchronous:
              sync(self)
          mem_44605 = None
          gauss_jordan_res_mem_44614 = mem_param_44585
        ctx_param_ext_tmp_45845 = gauss_jordan_res_ixfn_44609
        ctx_param_ext_tmp_45846 = gauss_jordan_res_ixfn_44610
        ctx_param_ext_tmp_45847 = gauss_jordan_res_ixfn_44613
        ctx_param_ext_tmp_45848 = gauss_jordan_res_ixfn_44611
        ctx_param_ext_tmp_45849 = gauss_jordan_res_ixfn_44607
        ctx_param_ext_tmp_45850 = gauss_jordan_res_ixfn_44612
        ctx_param_ext_tmp_45851 = gauss_jordan_res_ixfn_44608
        mem_param_tmp_45852 = gauss_jordan_res_mem_44614
        ctx_param_ext_44578 = ctx_param_ext_tmp_45845
        ctx_param_ext_44579 = ctx_param_ext_tmp_45846
        ctx_param_ext_44580 = ctx_param_ext_tmp_45847
        ctx_param_ext_44581 = ctx_param_ext_tmp_45848
        ctx_param_ext_44582 = ctx_param_ext_tmp_45849
        ctx_param_ext_44583 = ctx_param_ext_tmp_45850
        ctx_param_ext_44584 = ctx_param_ext_tmp_45851
        mem_param_44585 = mem_param_tmp_45852
        i_31554 += one_46875
      gauss_jordan_res_r_ixfn_44615 = ctx_param_ext_44578
      gauss_jordan_res_r_ixfn_44616 = ctx_param_ext_44579
      gauss_jordan_res_r_ixfn_44617 = ctx_param_ext_44580
      gauss_jordan_res_r_ixfn_44618 = ctx_param_ext_44581
      gauss_jordan_res_r_ixfn_44619 = ctx_param_ext_44582
      gauss_jordan_res_r_ixfn_44620 = ctx_param_ext_44583
      gauss_jordan_res_r_ixfn_44621 = ctx_param_ext_44584
      gauss_jordan_res_r_mem_44622 = mem_param_44585
      mem_44577 = None
      segmap_usable_groups_31700 = sdiv_up64(nest_sizze_31698,
                                             segmap_group_sizze_31699)
      mem_44627 = opencl_alloc(self, bytes_44624, "mem_44627")
      if ((1 * (np.long(segmap_usable_groups_31700) * np.long(segmap_group_sizze_31699))) != 0):
        self.mainDetailedzisegmap_30952_var.set_args(self.global_failure,
                                                     np.int64(m_27772),
                                                     np.int64(i32_res_27787),
                                                     np.int64(nm_27920),
                                                     np.int64(i32_res_27935),
                                                     np.int64(x_27936),
                                                     np.int64(j_m_i_27939),
                                                     np.int64(gauss_jordan_res_r_ixfn_44617),
                                                     np.int64(gauss_jordan_res_r_ixfn_44618),
                                                     np.int64(gauss_jordan_res_r_ixfn_44620),
                                                     gauss_jordan_res_r_mem_44622,
                                                     mem_44627)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30952_var,
                                   ((np.long(segmap_usable_groups_31700) * np.long(segmap_group_sizze_31699)),),
                                   (np.long(segmap_group_sizze_31699),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_44622 = None
      defunc_3_map_res_mem_44629 = mem_44627
    defunc_3_map_res_mem_44549 = None
    suff_outer_par_31708 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27772)
    segmap_group_sizze_31730 = self.sizes["mainDetailed.segmap_group_size_31712"]
    max_num_groups_45895 = self.sizes["mainDetailed.segmap_num_groups_31714"]
    num_groups_31731 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27772,
                                                            segmap_group_sizze_31730),
                                                  sext_i32_i64(max_num_groups_45895))))
    suff_outer_par_31815 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_30514)
    nest_sizze_31831 = (i32_res_27781 * nest_sizze_30514)
    segred_group_sizze_31832 = self.sizes["mainDetailed.segred_group_size_31774"]
    max_num_groups_45896 = self.sizes["mainDetailed.segred_num_groups_31776"]
    num_groups_31833 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31831,
                                                            segred_group_sizze_31832),
                                                  sext_i32_i64(max_num_groups_45896))))
    Ty_42675 = self.sizes["mainDetailed.Ty_42672"]
    Ry_42676 = self.sizes["mainDetailed.Ry_42674"]
    Tx_42677 = self.sizes["mainDetailed.Tx_42671"]
    Rx_42678 = self.sizes["mainDetailed.Rx_42673"]
    Tk_42679 = self.sizes["mainDetailed.Tk_42670"]
    TxRx_42682 = (Tx_42677 * Rx_42678)
    TyRy_42683 = (Ty_42675 * Ry_42676)
    a_loc_szz_42685 = (Tk_42679 * TyRy_42683)
    binop_x_42686 = (Tx_42677 * Tk_42679)
    b_loc_szz_42687 = (Rx_42678 * binop_x_42686)
    group_sizze_42691 = (Ty_42675 * Tx_42677)
    bytes_44648 = (np.int64(4) * nest_sizze_30514)
    binop_x_44662 = (Ry_42676 * group_sizze_42691)
    binop_x_44663 = (Rx_42678 * binop_x_44662)
    bytes_44660 = (np.int64(4) * binop_x_44663)
    binop_x_44654 = (Ry_42676 * Rx_42678)
    bytes_44653 = (np.int64(4) * binop_x_44654)
    bytes_44665 = (np.int64(4) * a_loc_szz_42685)
    bytes_44667 = (np.int64(4) * b_loc_szz_42687)
    bytes_44736 = (np.int64(4) * binop_x_44662)
    binop_x_44742 = (Rx_42678 * group_sizze_42691)
    bytes_44740 = (np.int64(4) * binop_x_44742)
    bytes_44728 = (np.int64(4) * Ry_42676)
    bytes_44730 = (np.int64(4) * Rx_42678)
    binop_x_45464 = (np.int64(4) * Ty_42675)
    binop_x_45465 = (Tx_42677 * binop_x_45464)
    binop_x_45466 = (Ry_42676 * binop_x_45465)
    sizze_45467 = (Rx_42678 * binop_x_45466)
    num_threads_45540 = (segmap_group_sizze_31730 * num_groups_31731)
    total_sizze_45541 = (bytes_44448 * num_threads_45540)
    local_memory_capacity_46026 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46026)) and suff_outer_par_31708):
      mem_44632 = opencl_alloc(self, bytes_44398, "mem_44632")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44632, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_27771, m_27772)
      mem_44650 = opencl_alloc(self, bytes_44648, "mem_44650")
      mem_44635 = opencl_alloc(self, total_sizze_45541, "mem_44635")
      if ((1 * (np.long(num_groups_31731) * np.long(segmap_group_sizze_31730))) != 0):
        self.mainDetailedzisegmap_31710_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.int64(m_27772),
                                                     np.int32(n_27775),
                                                     np.int32(k2p2zq_27785),
                                                     np.int64(i32_res_27787),
                                                     np.int64(num_groups_31731),
                                                     binop_p_mem_44390,
                                                     mem_44632, mem_44635,
                                                     mem_44650)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31710_var,
                                   ((np.long(num_groups_31731) * np.long(segmap_group_sizze_31730)),),
                                   (np.long(segmap_group_sizze_31730),))
        if synchronous:
          sync(self)
      mem_44632 = None
      mem_44635 = None
      mem_44848 = opencl_alloc(self, bytes_44648, "mem_44848")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44848, np.int64(0),
                                                  mem_44650, np.int64(0),
                                                  np.int64(1), m_27772,
                                                  i32_res_27787)
      mem_44650 = None
      defunc_3_map_res_mem_44850 = mem_44848
    else:
      local_memory_capacity_46025 = self.max_local_memory
      if (sle64(((bytes_44665 + srem64((np.int64(8) - srem64(bytes_44665,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44667 + srem64((np.int64(8) - srem64(bytes_44667,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46025)) and suff_outer_par_31815):
        tk_div_tx_42680 = sdiv_up64(Tk_42679, Tx_42677)
        tk_div_ty_42681 = sdiv_up64(Tk_42679, Ty_42675)
        gridDim_x_42688 = sdiv_up64(i32_res_27787, TxRx_42682)
        gridDim_y_42689 = sdiv_up64(m_27772, TyRy_42683)
        grid_sizze_42690 = (gridDim_x_42688 * gridDim_y_42689)
        full_tiles_42719 = squot64(i32_res_27781, Tk_42679)
        kk_42926 = (Tk_42679 * full_tiles_42719)
        mem_44840 = opencl_alloc(self, bytes_44648, "mem_44840")
        if ((1 * (np.long(grid_sizze_42690) * np.long(group_sizze_42691))) != 0):
          self.mainDetailedzisegmap_intragroup_42694_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_44667)),
                                                                  cl.LocalMemory(np.long(bytes_44665)),
                                                                  np.int64(N_27771),
                                                                  np.int64(m_27772),
                                                                  np.int64(i32_res_27781),
                                                                  np.int64(i32_res_27787),
                                                                  np.int64(gridDim_x_42688),
                                                                  np.int64(full_tiles_42719),
                                                                  np.int64(kk_42926),
                                                                  images_mem_44381,
                                                                  mem_44393,
                                                                  mem_44840)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42694_var,
                                     ((np.long(grid_sizze_42690) * np.long(group_sizze_42691)),),
                                     (np.long(group_sizze_42691),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44845 = mem_44840
      else:
        mem_44844 = opencl_alloc(self, bytes_44648, "mem_44844")
        if slt64((i32_res_27781 * np.int64(2)), segred_group_sizze_31832):
          segment_sizze_nonzzero_45965 = smax64(np.int64(1), i32_res_27781)
          num_threads_45966 = (num_groups_31833 * segred_group_sizze_31832)
          if ((1 * (np.long(num_groups_31833) * np.long(segred_group_sizze_31832))) != 0):
            self.mainDetailedzisegred_small_31780_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31832))),
                                                               np.int64(N_27771),
                                                               np.int64(m_27772),
                                                               np.int64(i32_res_27781),
                                                               np.int64(i32_res_27787),
                                                               np.int64(num_groups_31833),
                                                               np.int64(segment_sizze_nonzzero_45965),
                                                               images_mem_44381,
                                                               binop_p_mem_44390,
                                                               mem_44844)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31780_var,
                                       ((np.long(num_groups_31833) * np.long(segred_group_sizze_31832)),),
                                       (np.long(segred_group_sizze_31832),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45986 = sdiv_up64(num_groups_31833,
                                               smax64(np.int64(1),
                                                      (m_27772 * i32_res_27787)))
          elements_per_thread_45987 = sdiv_up64(i32_res_27781,
                                                (segred_group_sizze_31832 * groups_per_segment_45986))
          virt_num_groups_45988 = (groups_per_segment_45986 * (m_27772 * i32_res_27787))
          num_threads_45989 = (num_groups_31833 * segred_group_sizze_31832)
          threads_per_segment_45990 = (groups_per_segment_45986 * segred_group_sizze_31832)
          group_res_arr_mem_45991 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31832 * virt_num_groups_45988)),
                                                 "group_res_arr_mem_45991")
          mainDetailedzicounter_mem_45993 = self.mainDetailedzicounter_mem_45993
          if ((1 * (np.long(num_groups_31833) * np.long(segred_group_sizze_31832))) != 0):
            self.mainDetailedzisegred_large_31780_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31832))),
                                                               np.int64(N_27771),
                                                               np.int64(i32_res_27781),
                                                               np.int64(i32_res_27787),
                                                               np.int64(num_groups_31833),
                                                               np.int64(groups_per_segment_45986),
                                                               np.int64(elements_per_thread_45987),
                                                               np.int64(virt_num_groups_45988),
                                                               np.int64(threads_per_segment_45990),
                                                               images_mem_44381,
                                                               binop_p_mem_44390,
                                                               mem_44844,
                                                               group_res_arr_mem_45991,
                                                               mainDetailedzicounter_mem_45993)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31780_var,
                                       ((np.long(num_groups_31833) * np.long(segred_group_sizze_31832)),),
                                       (np.long(segred_group_sizze_31832),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44845 = mem_44844
      defunc_3_map_res_mem_44850 = defunc_3_map_res_mem_44845
    binop_p_mem_44390 = None
    mem_44393 = None
    suff_outer_par_31849 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27772)
    segmap_group_sizze_31870 = self.sizes["mainDetailed.segmap_group_size_31853"]
    max_num_groups_46027 = self.sizes["mainDetailed.segmap_num_groups_31855"]
    num_groups_31871 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27772,
                                                            segmap_group_sizze_31870),
                                                  sext_i32_i64(max_num_groups_46027))))
    suff_outer_par_31950 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_30514)
    segred_group_sizze_31965 = self.sizes["mainDetailed.segred_group_size_31911"]
    max_num_groups_46028 = self.sizes["mainDetailed.segred_num_groups_31913"]
    num_groups_31966 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_44546,
                                                            segred_group_sizze_31965),
                                                  sext_i32_i64(max_num_groups_46028))))
    tile_sizze_43138 = self.sizes["mainDetailed.tile_size_43137"]
    group_sizze_43139 = (tile_sizze_43138 * tile_sizze_43138)
    bytes_44882 = (np.int64(4) * group_sizze_43139)
    binop_x_45480 = (np.int64(4) * tile_sizze_43138)
    sizze_45481 = (tile_sizze_43138 * binop_x_45480)
    num_threads_45544 = (segmap_group_sizze_31870 * num_groups_31871)
    total_sizze_45545 = (bytes_44448 * num_threads_45544)
    local_memory_capacity_46114 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46114)) and suff_outer_par_31849):
      mem_44854 = opencl_alloc(self, bytes_44443, "mem_44854")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44854, np.int64(0),
                                                  defunc_3_map_res_mem_44629,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27787 * i32_res_27787),
                                                  m_27772)
      mem_44857 = opencl_alloc(self, bytes_44648, "mem_44857")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44857, np.int64(0),
                                                  defunc_3_map_res_mem_44850,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27787, m_27772)
      mem_44875 = opencl_alloc(self, bytes_44648, "mem_44875")
      mem_44860 = opencl_alloc(self, total_sizze_45545, "mem_44860")
      if ((1 * (np.long(num_groups_31871) * np.long(segmap_group_sizze_31870))) != 0):
        self.mainDetailedzisegmap_31851_var.set_args(self.global_failure,
                                                     np.int64(m_27772),
                                                     np.int32(k2p2zq_27785),
                                                     np.int64(i32_res_27787),
                                                     np.int64(num_groups_31871),
                                                     mem_44854, mem_44857,
                                                     mem_44860, mem_44875)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31851_var,
                                   ((np.long(num_groups_31871) * np.long(segmap_group_sizze_31870)),),
                                   (np.long(segmap_group_sizze_31870),))
        if synchronous:
          sync(self)
      mem_44854 = None
      mem_44857 = None
      mem_44860 = None
      mem_44914 = opencl_alloc(self, bytes_44648, "mem_44914")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44914, np.int64(0),
                                                  mem_44875, np.int64(0),
                                                  np.int64(1), m_27772,
                                                  i32_res_27787)
      mem_44875 = None
      defunc_4_map_res_mem_44916 = mem_44914
    else:
      local_memory_capacity_46113 = self.max_local_memory
      if (sle64(((bytes_44882 + srem64((np.int64(8) - srem64(bytes_44882,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44882 + srem64((np.int64(8) - srem64(bytes_44882,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46113)) and suff_outer_par_31950):
        mem_44879 = opencl_alloc(self, bytes_44544, "mem_44879")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44879, np.int64(0),
                                                    defunc_3_map_res_mem_44629,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27787,
                                                    (m_27772 * i32_res_27787))
        num_groups_x_43140 = sdiv_up64(m_27772, tile_sizze_43138)
        num_groups_y_43141 = sdiv_up64(i32_res_27787, tile_sizze_43138)
        num_groups_top_43142 = (num_groups_x_43140 * num_groups_y_43141)
        num_whole_tiles_43159 = squot64(i32_res_27787, tile_sizze_43138)
        residual_input_43286 = srem64(i32_res_27787, tile_sizze_43138)
        cond_43287 = (residual_input_43286 == np.int64(0))
        mem_44906 = opencl_alloc(self, bytes_44648, "mem_44906")
        if ((1 * (np.long(num_groups_top_43142) * np.long(group_sizze_43139))) != 0):
          self.mainDetailedzisegmap_intragroup_43143_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_44882)),
                                                                  cl.LocalMemory(np.long(bytes_44882)),
                                                                  np.int64(m_27772),
                                                                  np.int64(i32_res_27787),
                                                                  np.int64(num_groups_y_43141),
                                                                  np.int64(num_whole_tiles_43159),
                                                                  np.int64(residual_input_43286),
                                                                  np.byte(cond_43287),
                                                                  defunc_3_map_res_mem_44850,
                                                                  mem_44879,
                                                                  mem_44906)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_43143_var,
                                     ((np.long(num_groups_top_43142) * np.long(group_sizze_43139)),),
                                     (np.long(group_sizze_43139),))
          if synchronous:
            sync(self)
        mem_44879 = None
        defunc_4_map_res_mem_44911 = mem_44906
      else:
        mem_44910 = opencl_alloc(self, bytes_44648, "mem_44910")
        if slt64((i32_res_27787 * np.int64(2)), segred_group_sizze_31965):
          segment_sizze_nonzzero_46053 = smax64(np.int64(1), i32_res_27787)
          num_threads_46054 = (num_groups_31966 * segred_group_sizze_31965)
          if ((1 * (np.long(num_groups_31966) * np.long(segred_group_sizze_31965))) != 0):
            self.mainDetailedzisegred_small_31917_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31965))),
                                                               np.int64(m_27772),
                                                               np.int64(i32_res_27787),
                                                               np.int64(num_groups_31966),
                                                               np.int64(segment_sizze_nonzzero_46053),
                                                               defunc_3_map_res_mem_44629,
                                                               defunc_3_map_res_mem_44850,
                                                               mem_44910)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31917_var,
                                       ((np.long(num_groups_31966) * np.long(segred_group_sizze_31965)),),
                                       (np.long(segred_group_sizze_31965),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46074 = sdiv_up64(num_groups_31966,
                                               smax64(np.int64(1),
                                                      (m_27772 * i32_res_27787)))
          elements_per_thread_46075 = sdiv_up64(i32_res_27787,
                                                (segred_group_sizze_31965 * groups_per_segment_46074))
          virt_num_groups_46076 = (groups_per_segment_46074 * (m_27772 * i32_res_27787))
          num_threads_46077 = (num_groups_31966 * segred_group_sizze_31965)
          threads_per_segment_46078 = (groups_per_segment_46074 * segred_group_sizze_31965)
          group_res_arr_mem_46079 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31965 * virt_num_groups_46076)),
                                                 "group_res_arr_mem_46079")
          mainDetailedzicounter_mem_46081 = self.mainDetailedzicounter_mem_46081
          if ((1 * (np.long(num_groups_31966) * np.long(segred_group_sizze_31965))) != 0):
            self.mainDetailedzisegred_large_31917_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31965))),
                                                               np.int64(i32_res_27787),
                                                               np.int64(num_groups_31966),
                                                               np.int64(groups_per_segment_46074),
                                                               np.int64(elements_per_thread_46075),
                                                               np.int64(virt_num_groups_46076),
                                                               np.int64(threads_per_segment_46078),
                                                               defunc_3_map_res_mem_44629,
                                                               defunc_3_map_res_mem_44850,
                                                               mem_44910,
                                                               group_res_arr_mem_46079,
                                                               mainDetailedzicounter_mem_46081)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31917_var,
                                       ((np.long(num_groups_31966) * np.long(segred_group_sizze_31965)),),
                                       (np.long(segred_group_sizze_31965),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_44911 = mem_44910
      defunc_4_map_res_mem_44916 = defunc_4_map_res_mem_44911
    defunc_3_map_res_mem_44629 = None
    defunc_3_map_res_mem_44850 = None
    suff_outer_par_31981 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27772)
    segmap_group_sizze_32001 = self.sizes["mainDetailed.segmap_group_size_31985"]
    max_num_groups_46115 = self.sizes["mainDetailed.segmap_num_groups_31987"]
    num_groups_32002 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27772,
                                                            segmap_group_sizze_32001),
                                                  sext_i32_i64(max_num_groups_46115))))
    suff_outer_par_32078 = (self.sizes["mainDetailed.suff_outer_par_21"] <= binop_x_44399)
    nest_sizze_32092 = (i32_res_27787 * binop_x_44399)
    segred_group_sizze_32093 = self.sizes["mainDetailed.segred_group_size_32041"]
    max_num_groups_46116 = self.sizes["mainDetailed.segred_num_groups_32043"]
    num_groups_32094 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32092,
                                                            segred_group_sizze_32093),
                                                  sext_i32_i64(max_num_groups_46116))))
    Ty_43416 = self.sizes["mainDetailed.Ty_43413"]
    Ry_43417 = self.sizes["mainDetailed.Ry_43415"]
    Tx_43418 = self.sizes["mainDetailed.Tx_43412"]
    Rx_43419 = self.sizes["mainDetailed.Rx_43414"]
    Tk_43420 = self.sizes["mainDetailed.Tk_43411"]
    TxRx_43423 = (Tx_43418 * Rx_43419)
    TyRy_43424 = (Ty_43416 * Ry_43417)
    a_loc_szz_43426 = (Tk_43420 * TyRy_43424)
    binop_x_43427 = (Tx_43418 * Tk_43420)
    b_loc_szz_43428 = (Rx_43419 * binop_x_43427)
    group_sizze_43432 = (Ty_43416 * Tx_43418)
    bytes_44921 = (np.int64(4) * N_27771)
    binop_x_44952 = (Ry_43417 * group_sizze_43432)
    binop_x_44953 = (Rx_43419 * binop_x_44952)
    bytes_44950 = (np.int64(4) * binop_x_44953)
    binop_x_44944 = (Ry_43417 * Rx_43419)
    bytes_44943 = (np.int64(4) * binop_x_44944)
    bytes_44955 = (np.int64(4) * a_loc_szz_43426)
    bytes_44957 = (np.int64(4) * b_loc_szz_43428)
    bytes_45026 = (np.int64(4) * binop_x_44952)
    binop_x_45032 = (Rx_43419 * group_sizze_43432)
    bytes_45030 = (np.int64(4) * binop_x_45032)
    bytes_45018 = (np.int64(4) * Ry_43417)
    bytes_45020 = (np.int64(4) * Rx_43419)
    binop_x_45494 = (np.int64(4) * Ty_43416)
    binop_x_45495 = (Tx_43418 * binop_x_45494)
    binop_x_45496 = (Ry_43417 * binop_x_45495)
    sizze_45497 = (Rx_43419 * binop_x_45496)
    num_threads_45548 = (segmap_group_sizze_32001 * num_groups_32002)
    total_sizze_45549 = (bytes_44921 * num_threads_45548)
    local_memory_capacity_46246 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46246)) and suff_outer_par_31981):
      mem_44919 = opencl_alloc(self, bytes_44648, "mem_44919")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44919, np.int64(0),
                                                  defunc_4_map_res_mem_44916,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27787, m_27772)
      mem_44937 = opencl_alloc(self, bytes_44398, "mem_44937")
      mem_44922 = opencl_alloc(self, total_sizze_45549, "mem_44922")
      if ((1 * (np.long(num_groups_32002) * np.long(segmap_group_sizze_32001))) != 0):
        self.mainDetailedzisegmap_31983_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.int64(m_27772),
                                                     np.int32(k2p2zq_27785),
                                                     np.int64(i32_res_27787),
                                                     np.int64(num_groups_32002),
                                                     mem_44397, mem_44919,
                                                     mem_44922, mem_44937)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31983_var,
                                   ((np.long(num_groups_32002) * np.long(segmap_group_sizze_32001)),),
                                   (np.long(segmap_group_sizze_32001),))
        if synchronous:
          sync(self)
      mem_44919 = None
      mem_44922 = None
      mem_45138 = opencl_alloc(self, bytes_44398, "mem_45138")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45138, np.int64(0),
                                                  mem_44937, np.int64(0),
                                                  np.int64(1), m_27772, N_27771)
      mem_44937 = None
      defunc_3_map_res_mem_45140 = mem_45138
    else:
      local_memory_capacity_46245 = self.max_local_memory
      if (sle64(((bytes_44955 + srem64((np.int64(8) - srem64(bytes_44955,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44957 + srem64((np.int64(8) - srem64(bytes_44957,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46245)) and suff_outer_par_32078):
        mem_44940 = opencl_alloc(self, bytes_44383, "mem_44940")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44940, np.int64(0),
                                                    mem_44397, np.int64(0),
                                                    np.int64(1), i32_res_27787,
                                                    N_27771)
        tk_div_tx_43421 = sdiv_up64(Tk_43420, Tx_43418)
        tk_div_ty_43422 = sdiv_up64(Tk_43420, Ty_43416)
        gridDim_x_43429 = sdiv_up64(N_27771, TxRx_43423)
        gridDim_y_43430 = sdiv_up64(m_27772, TyRy_43424)
        grid_sizze_43431 = (gridDim_x_43429 * gridDim_y_43430)
        full_tiles_43460 = squot64(i32_res_27787, Tk_43420)
        kk_43663 = (Tk_43420 * full_tiles_43460)
        mem_45130 = opencl_alloc(self, bytes_44398, "mem_45130")
        if ((1 * (np.long(grid_sizze_43431) * np.long(group_sizze_43432))) != 0):
          self.mainDetailedzisegmap_intragroup_43435_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_44957)),
                                                                  cl.LocalMemory(np.long(bytes_44955)),
                                                                  np.int64(N_27771),
                                                                  np.int64(m_27772),
                                                                  np.int64(i32_res_27787),
                                                                  np.int64(gridDim_x_43429),
                                                                  np.int64(full_tiles_43460),
                                                                  np.int64(kk_43663),
                                                                  defunc_4_map_res_mem_44916,
                                                                  mem_44940,
                                                                  mem_45130)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_43435_var,
                                     ((np.long(grid_sizze_43431) * np.long(group_sizze_43432)),),
                                     (np.long(group_sizze_43432),))
          if synchronous:
            sync(self)
        mem_44940 = None
        defunc_3_map_res_mem_45135 = mem_45130
      else:
        mem_45134 = opencl_alloc(self, bytes_44398, "mem_45134")
        if slt64((i32_res_27787 * np.int64(2)), segred_group_sizze_32093):
          segment_sizze_nonzzero_46185 = smax64(np.int64(1), i32_res_27787)
          num_threads_46186 = (num_groups_32094 * segred_group_sizze_32093)
          if ((1 * (np.long(num_groups_32094) * np.long(segred_group_sizze_32093))) != 0):
            self.mainDetailedzisegred_small_32047_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32093))),
                                                               np.int64(N_27771),
                                                               np.int64(m_27772),
                                                               np.int64(i32_res_27787),
                                                               np.int64(num_groups_32094),
                                                               np.int64(segment_sizze_nonzzero_46185),
                                                               mem_44397,
                                                               defunc_4_map_res_mem_44916,
                                                               mem_45134)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32047_var,
                                       ((np.long(num_groups_32094) * np.long(segred_group_sizze_32093)),),
                                       (np.long(segred_group_sizze_32093),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46206 = sdiv_up64(num_groups_32094,
                                               smax64(np.int64(1),
                                                      (m_27772 * N_27771)))
          elements_per_thread_46207 = sdiv_up64(i32_res_27787,
                                                (segred_group_sizze_32093 * groups_per_segment_46206))
          virt_num_groups_46208 = (groups_per_segment_46206 * (m_27772 * N_27771))
          num_threads_46209 = (num_groups_32094 * segred_group_sizze_32093)
          threads_per_segment_46210 = (groups_per_segment_46206 * segred_group_sizze_32093)
          group_res_arr_mem_46211 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32093 * virt_num_groups_46208)),
                                                 "group_res_arr_mem_46211")
          mainDetailedzicounter_mem_46213 = self.mainDetailedzicounter_mem_46213
          if ((1 * (np.long(num_groups_32094) * np.long(segred_group_sizze_32093))) != 0):
            self.mainDetailedzisegred_large_32047_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32093))),
                                                               np.int64(N_27771),
                                                               np.int64(i32_res_27787),
                                                               np.int64(num_groups_32094),
                                                               np.int64(groups_per_segment_46206),
                                                               np.int64(elements_per_thread_46207),
                                                               np.int64(virt_num_groups_46208),
                                                               np.int64(threads_per_segment_46210),
                                                               mem_44397,
                                                               defunc_4_map_res_mem_44916,
                                                               mem_45134,
                                                               group_res_arr_mem_46211,
                                                               mainDetailedzicounter_mem_46213)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32047_var,
                                       ((np.long(num_groups_32094) * np.long(segred_group_sizze_32093)),),
                                       (np.long(segred_group_sizze_32093),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_45135 = mem_45134
      defunc_3_map_res_mem_45140 = defunc_3_map_res_mem_45135
    mem_44397 = None
    defunc_4_map_res_mem_44916 = None
    i_28075 = (N_27771 - np.int64(1))
    x_28076 = sle64(np.int64(0), i_28075)
    y_28077 = slt64(i_28075, N_27771)
    bounds_check_28078 = (x_28076 and y_28077)
    index_certs_28079 = True
    assert bounds_check_28078, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:16-75\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-77:25\n   #6  bfastfinal.fut:174:3-56\n   #7  bfastfinal.fut:170:1-174:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28075,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27771,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_32223 = sle64(N_27771, max_group_sizze_30862)
    suff_intra_par_32221 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27771)
    intra_suff_and_fits_32224 = (suff_intra_par_32221 and fits_32223)
    segscan_group_sizze_32373 = self.sizes["mainDetailed.segscan_group_size_32350"]
    max_num_groups_46247 = self.sizes["mainDetailed.segscan_num_groups_32352"]
    num_groups_32374 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_44399,
                                                            segscan_group_sizze_32373),
                                                  sext_i32_i64(max_num_groups_46247))))
    segmap_group_sizze_32393 = self.sizes["mainDetailed.segmap_group_size_32341"]
    segmap_group_sizze_32429 = self.sizes["mainDetailed.segmap_group_size_32266"]
    bytes_45152 = (np.int64(4) * m_27772)
    bytes_45143 = (np.int64(8) * N_27771)
    bytes_45161 = (np.int64(8) * binop_x_44399)
    local_memory_capacity_46349 = self.max_local_memory
    if (sle64(((((bytes_45143 + srem64((np.int64(8) - srem64(bytes_45143,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46349)) and intra_suff_and_fits_32224):
      mem_45153 = opencl_alloc(self, bytes_45152, "mem_45153")
      mem_45156 = opencl_alloc(self, bytes_44398, "mem_45156")
      mem_45159 = opencl_alloc(self, bytes_44398, "mem_45159")
      if ((1 * (np.long(m_27772) * np.long(N_27771))) != 0):
        self.mainDetailedzisegmap_intragroup_32146_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44921)),
                                                                cl.LocalMemory(np.long(bytes_44921)),
                                                                cl.LocalMemory(np.long(bytes_44921)),
                                                                cl.LocalMemory(np.long(bytes_45143)),
                                                                np.int64(N_27771),
                                                                np.int64(i_28075),
                                                                images_mem_44381,
                                                                defunc_3_map_res_mem_45140,
                                                                mem_45153,
                                                                mem_45156,
                                                                mem_45159)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_32146_var,
                                   ((np.long(m_27772) * np.long(N_27771)),),
                                   (np.long(N_27771),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_45177 = mem_45153
      defunc_4_map_res_mem_45178 = mem_45156
      defunc_4_map_res_mem_45179 = mem_45159
    else:
      mem_45163 = opencl_alloc(self, bytes_45161, "mem_45163")
      mem_45166 = opencl_alloc(self, bytes_44398, "mem_45166")
      if slt64(np.int64(0), (m_27772 * N_27771)):
        stage1_max_num_groups_46265 = self.max_group_size
        stage1_num_groups_46266 = smin64(stage1_max_num_groups_46265,
                                         num_groups_32374)
        num_threads_46267 = sext_i64_i32((stage1_num_groups_46266 * segscan_group_sizze_32373))
        if ((1 * (np.long(stage1_num_groups_46266) * np.long(segscan_group_sizze_32373))) != 0):
          self.mainDetailedziscan_stage1_32356_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_32373)))),
                                                            np.int64(N_27771),
                                                            np.int64(m_27772),
                                                            np.int32(num_threads_46267),
                                                            images_mem_44381,
                                                            defunc_3_map_res_mem_45140,
                                                            mem_45163,
                                                            mem_45166)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_32356_var,
                                     ((np.long(stage1_num_groups_46266) * np.long(segscan_group_sizze_32373)),),
                                     (np.long(segscan_group_sizze_32373),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46266))) != 0):
          self.mainDetailedziscan_stage2_32356_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_46266)))),
                                                            np.int64(N_27771),
                                                            np.int64(m_27772),
                                                            np.int64(stage1_num_groups_46266),
                                                            np.int32(num_threads_46267),
                                                            mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_32356_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_46266)),),
                                     (np.long(stage1_num_groups_46266),))
          if synchronous:
            sync(self)
        required_groups_46309 = sext_i64_i32(sdiv_up64((m_27772 * N_27771),
                                                       segscan_group_sizze_32373))
        if ((1 * (np.long(num_groups_32374) * np.long(segscan_group_sizze_32373))) != 0):
          self.mainDetailedziscan_stage3_32356_var.set_args(self.global_failure,
                                                            np.int64(N_27771),
                                                            np.int64(m_27772),
                                                            np.int64(num_groups_32374),
                                                            np.int32(num_threads_46267),
                                                            np.int32(required_groups_46309),
                                                            mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_32356_var,
                                     ((np.long(num_groups_32374) * np.long(segscan_group_sizze_32373)),),
                                     (np.long(segscan_group_sizze_32373),))
          if synchronous:
            sync(self)
      segmap_usable_groups_32394 = sdiv_up64(m_27772, segmap_group_sizze_32393)
      mem_45169 = opencl_alloc(self, bytes_45152, "mem_45169")
      if ((1 * (np.long(segmap_usable_groups_32394) * np.long(segmap_group_sizze_32393))) != 0):
        self.mainDetailedzisegmap_32339_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.int64(m_27772),
                                                     np.int64(i_28075),
                                                     mem_45163, mem_45169)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32339_var,
                                   ((np.long(segmap_usable_groups_32394) * np.long(segmap_group_sizze_32393)),),
                                   (np.long(segmap_group_sizze_32393),))
        if synchronous:
          sync(self)
      mem_45172 = opencl_alloc(self, bytes_44398, "mem_45172")
      self.futhark_builtinzhreplicate_f32(mem_45172, (m_27772 * N_27771),
                                          np.nan)
      mem_45175 = opencl_alloc(self, bytes_44398, "mem_45175")
      self.futhark_builtinzhreplicate_i32(mem_45175, (m_27772 * N_27771),
                                          np.int32(0))
      segmap_usable_groups_32430 = sdiv_up64(binop_x_44399,
                                             segmap_group_sizze_32429)
      if ((1 * (np.long(segmap_usable_groups_32430) * np.long(segmap_group_sizze_32429))) != 0):
        self.mainDetailedzisegmap_32263_var.set_args(self.global_failure,
                                                     np.int64(N_27771),
                                                     np.int64(m_27772),
                                                     mem_45163, mem_45166,
                                                     mem_45172, mem_45175)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32263_var,
                                   ((np.long(segmap_usable_groups_32430) * np.long(segmap_group_sizze_32429)),),
                                   (np.long(segmap_group_sizze_32429),))
        if synchronous:
          sync(self)
      mem_45163 = None
      mem_45166 = None
      defunc_4_map_res_mem_45177 = mem_45169
      defunc_4_map_res_mem_45178 = mem_45172
      defunc_4_map_res_mem_45179 = mem_45175
    suff_outer_par_32478 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27772)
    fits_32564 = sle64(i32_res_27781, max_group_sizze_30862)
    suff_intra_par_32562 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27781)
    intra_suff_and_fits_32565 = (suff_intra_par_32562 and fits_32564)
    segmap_group_sizze_32525 = self.sizes["mainDetailed.segmap_group_size_32490"]
    nest_sizze_32660 = (m_27772 * i32_res_27781)
    segred_group_sizze_32661 = self.sizes["mainDetailed.segred_group_size_32644"]
    max_num_groups_46350 = self.sizes["mainDetailed.segred_num_groups_32646"]
    num_groups_32662 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32660,
                                                            segred_group_sizze_32661),
                                                  sext_i32_i64(max_num_groups_46350))))
    segred_group_sizze_32675 = self.sizes["mainDetailed.segred_group_size_32619"]
    max_num_groups_46351 = self.sizes["mainDetailed.segred_num_groups_32621"]
    num_groups_32676 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32660,
                                                            segred_group_sizze_32675),
                                                  sext_i32_i64(max_num_groups_46351))))
    segmap_group_sizze_32695 = self.sizes["mainDetailed.segmap_group_size_32604"]
    bytes_45188 = (np.int64(4) * segmap_group_sizze_32525)
    local_memory_capacity_46503 = self.max_local_memory
    if (sle64(((bytes_45188 + srem64((np.int64(8) - srem64(bytes_45188,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_45188 + srem64((np.int64(8) - srem64(bytes_45188,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46503)) and suff_outer_par_32478):
      segmap_usable_groups_32526 = sdiv_up64(m_27772, segmap_group_sizze_32525)
      mem_45182 = opencl_alloc(self, bytes_44398, "mem_45182")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45182, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_27771, m_27772)
      mem_45185 = opencl_alloc(self, bytes_44398, "mem_45185")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45185, np.int64(0),
                                                  defunc_4_map_res_mem_45178,
                                                  np.int64(0), np.int64(1),
                                                  N_27771, m_27772)
      num_whole_tiles_43891 = squot64(i32_res_27781, segmap_group_sizze_32525)
      residual_input_43992 = srem64(i32_res_27781, segmap_group_sizze_32525)
      cond_43993 = (residual_input_43992 == np.int64(0))
      mem_45216 = opencl_alloc(self, bytes_45152, "mem_45216")
      mem_45218 = opencl_alloc(self, bytes_45152, "mem_45218")
      mem_45220 = opencl_alloc(self, bytes_45152, "mem_45220")
      if ((1 * (np.long(segmap_usable_groups_32526) * np.long(segmap_group_sizze_32525))) != 0):
        self.mainDetailedzisegmap_intragroup_43869_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_45188)),
                                                                cl.LocalMemory(np.long(bytes_45188)),
                                                                np.int64(N_27771),
                                                                np.int64(m_27772),
                                                                np.int32(n_27775),
                                                                np.float32(hfrac_27777),
                                                                np.int64(i32_res_27781),
                                                                np.int32(k2p2_27783),
                                                                np.int64(num_whole_tiles_43891),
                                                                np.int64(residual_input_43992),
                                                                np.byte(cond_43993),
                                                                mem_45182,
                                                                mem_45185,
                                                                mem_45216,
                                                                mem_45218,
                                                                mem_45220)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_43869_var,
                                   ((np.long(segmap_usable_groups_32526) * np.long(segmap_group_sizze_32525)),),
                                   (np.long(segmap_group_sizze_32525),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_45182 = None
      mem_45185 = None
      defunc_3_map_res_mem_45244 = mem_45216
      defunc_3_map_res_mem_45245 = mem_45218
      defunc_3_map_res_mem_45246 = mem_45220
    else:
      local_memory_capacity_46502 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_27781) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27781),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_27781) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27781),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46502)) and intra_suff_and_fits_32565):
        mem_45225 = opencl_alloc(self, bytes_45152, "mem_45225")
        mem_45227 = opencl_alloc(self, bytes_45152, "mem_45227")
        mem_45229 = opencl_alloc(self, bytes_45152, "mem_45229")
        if ((1 * (np.long(m_27772) * np.long(i32_res_27781))) != 0):
          self.mainDetailedzisegmap_intragroup_32486_var.set_args(self.global_failure,
                                                                  self.failure_is_an_option,
                                                                  self.global_failure_args,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27781))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27781))),
                                                                  np.int64(N_27771),
                                                                  np.float32(hfrac_27777),
                                                                  np.int64(i32_res_27781),
                                                                  np.int32(k2p2_27783),
                                                                  images_mem_44381,
                                                                  defunc_4_map_res_mem_45178,
                                                                  mem_45225,
                                                                  mem_45227,
                                                                  mem_45229)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_32486_var,
                                     ((np.long(m_27772) * np.long(i32_res_27781)),),
                                     (np.long(i32_res_27781),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_3_map_res_mem_45241 = mem_45225
        defunc_3_map_res_mem_45242 = mem_45227
        defunc_3_map_res_mem_45243 = mem_45229
      else:
        mem_45232 = opencl_alloc(self, bytes_45152, "mem_45232")
        if slt64((i32_res_27781 * np.int64(2)), segred_group_sizze_32661):
          segment_sizze_nonzzero_46377 = smax64(np.int64(1), i32_res_27781)
          num_threads_46378 = (num_groups_32662 * segred_group_sizze_32661)
          if ((1 * (np.long(num_groups_32662) * np.long(segred_group_sizze_32661))) != 0):
            self.mainDetailedzisegred_small_32650_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32661))),
                                                               np.int64(N_27771),
                                                               np.int64(m_27772),
                                                               np.int64(i32_res_27781),
                                                               np.int64(num_groups_32662),
                                                               np.int64(segment_sizze_nonzzero_46377),
                                                               images_mem_44381,
                                                               mem_45232)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32650_var,
                                       ((np.long(num_groups_32662) * np.long(segred_group_sizze_32661)),),
                                       (np.long(segred_group_sizze_32661),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46398 = sdiv_up64(num_groups_32662,
                                               smax64(np.int64(1), m_27772))
          elements_per_thread_46399 = sdiv_up64(i32_res_27781,
                                                (segred_group_sizze_32661 * groups_per_segment_46398))
          virt_num_groups_46400 = (groups_per_segment_46398 * m_27772)
          num_threads_46401 = (num_groups_32662 * segred_group_sizze_32661)
          threads_per_segment_46402 = (groups_per_segment_46398 * segred_group_sizze_32661)
          group_res_arr_mem_46403 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32661 * virt_num_groups_46400)),
                                                 "group_res_arr_mem_46403")
          mainDetailedzicounter_mem_46405 = self.mainDetailedzicounter_mem_46405
          if ((1 * (np.long(num_groups_32662) * np.long(segred_group_sizze_32661))) != 0):
            self.mainDetailedzisegred_large_32650_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32661))),
                                                               np.int64(N_27771),
                                                               np.int64(i32_res_27781),
                                                               np.int64(num_groups_32662),
                                                               np.int64(groups_per_segment_46398),
                                                               np.int64(elements_per_thread_46399),
                                                               np.int64(virt_num_groups_46400),
                                                               np.int64(threads_per_segment_46402),
                                                               images_mem_44381,
                                                               mem_45232,
                                                               group_res_arr_mem_46403,
                                                               mainDetailedzicounter_mem_46405)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32650_var,
                                       ((np.long(num_groups_32662) * np.long(segred_group_sizze_32661)),),
                                       (np.long(segred_group_sizze_32661),))
            if synchronous:
              sync(self)
        mem_45235 = opencl_alloc(self, bytes_45152, "mem_45235")
        if slt64((i32_res_27781 * np.int64(2)), segred_group_sizze_32675):
          segment_sizze_nonzzero_46437 = smax64(np.int64(1), i32_res_27781)
          num_threads_46438 = (num_groups_32676 * segred_group_sizze_32675)
          if ((1 * (np.long(num_groups_32676) * np.long(segred_group_sizze_32675))) != 0):
            self.mainDetailedzisegred_small_32625_var.set_args(self.global_failure,
                                                               self.failure_is_an_option,
                                                               self.global_failure_args,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32675))),
                                                               np.int64(N_27771),
                                                               np.int64(m_27772),
                                                               np.int64(i32_res_27781),
                                                               np.int64(num_groups_32676),
                                                               np.int64(segment_sizze_nonzzero_46437),
                                                               defunc_4_map_res_mem_45178,
                                                               mem_45232,
                                                               mem_45235)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32625_var,
                                       ((np.long(num_groups_32676) * np.long(segred_group_sizze_32675)),),
                                       (np.long(segred_group_sizze_32675),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
        else:
          groups_per_segment_46458 = sdiv_up64(num_groups_32676,
                                               smax64(np.int64(1), m_27772))
          elements_per_thread_46459 = sdiv_up64(i32_res_27781,
                                                (segred_group_sizze_32675 * groups_per_segment_46458))
          virt_num_groups_46460 = (groups_per_segment_46458 * m_27772)
          num_threads_46461 = (num_groups_32676 * segred_group_sizze_32675)
          threads_per_segment_46462 = (groups_per_segment_46458 * segred_group_sizze_32675)
          group_res_arr_mem_46463 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32675 * virt_num_groups_46460)),
                                                 "group_res_arr_mem_46463")
          mainDetailedzicounter_mem_46465 = self.mainDetailedzicounter_mem_46465
          if ((1 * (np.long(num_groups_32676) * np.long(segred_group_sizze_32675))) != 0):
            self.mainDetailedzisegred_large_32625_var.set_args(self.global_failure,
                                                               self.failure_is_an_option,
                                                               self.global_failure_args,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32675))),
                                                               np.int64(N_27771),
                                                               np.int64(i32_res_27781),
                                                               np.int64(num_groups_32676),
                                                               np.int64(groups_per_segment_46458),
                                                               np.int64(elements_per_thread_46459),
                                                               np.int64(virt_num_groups_46460),
                                                               np.int64(threads_per_segment_46462),
                                                               defunc_4_map_res_mem_45178,
                                                               mem_45232,
                                                               mem_45235,
                                                               group_res_arr_mem_46463,
                                                               mainDetailedzicounter_mem_46465)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32625_var,
                                       ((np.long(num_groups_32676) * np.long(segred_group_sizze_32675)),),
                                       (np.long(segred_group_sizze_32675),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
        segmap_usable_groups_32696 = sdiv_up64(m_27772,
                                               segmap_group_sizze_32695)
        mem_45238 = opencl_alloc(self, bytes_45152, "mem_45238")
        mem_45240 = opencl_alloc(self, bytes_45152, "mem_45240")
        if ((1 * (np.long(segmap_usable_groups_32696) * np.long(segmap_group_sizze_32695))) != 0):
          self.mainDetailedzisegmap_32602_var.set_args(self.global_failure,
                                                       np.int64(m_27772),
                                                       np.float32(hfrac_27777),
                                                       np.int32(k2p2_27783),
                                                       mem_45232, mem_45235,
                                                       mem_45238, mem_45240)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32602_var,
                                     ((np.long(segmap_usable_groups_32696) * np.long(segmap_group_sizze_32695)),),
                                     (np.long(segmap_group_sizze_32695),))
          if synchronous:
            sync(self)
        mem_45235 = None
        defunc_3_map_res_mem_45241 = mem_45238
        defunc_3_map_res_mem_45242 = mem_45232
        defunc_3_map_res_mem_45243 = mem_45240
      defunc_3_map_res_mem_45244 = defunc_3_map_res_mem_45241
      defunc_3_map_res_mem_45245 = defunc_3_map_res_mem_45242
      defunc_3_map_res_mem_45246 = defunc_3_map_res_mem_45243
    segred_group_sizze_32716 = self.sizes["mainDetailed.segred_group_size_32715"]
    max_num_groups_46504 = self.sizes["mainDetailed.segred_num_groups_32717"]
    num_groups_32718 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27772,
                                                            segred_group_sizze_32716),
                                                  sext_i32_i64(max_num_groups_46504))))
    mem_45249 = opencl_alloc(self, np.int64(4), "mem_45249")
    mainDetailedzicounter_mem_46505 = self.mainDetailedzicounter_mem_46505
    group_res_arr_mem_46507 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_32716 * num_groups_32718)),
                                           "group_res_arr_mem_46507")
    num_threads_46509 = (num_groups_32718 * segred_group_sizze_32716)
    if ((1 * (np.long(num_groups_32718) * np.long(segred_group_sizze_32716))) != 0):
      self.mainDetailedzisegred_nonseg_32723_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32716))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27772),
                                                          np.int64(num_groups_32718),
                                                          np.int64(num_threads_46509),
                                                          defunc_3_map_res_mem_45244,
                                                          mem_45249,
                                                          mainDetailedzicounter_mem_46505,
                                                          group_res_arr_mem_46507)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_32723_var,
                                 ((np.long(num_groups_32718) * np.long(segred_group_sizze_32716)),),
                                 (np.long(segred_group_sizze_32716),))
      if synchronous:
        sync(self)
    read_res_46882 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46882, mem_45249,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28169 = read_res_46882[0]
    mem_45249 = None
    i32_res_28174 = sext_i32_i64(defunc_2_reduce_comm_res_28169)
    bounds_invalid_upwards_28175 = slt64(i32_res_28174, np.int64(0))
    valid_28176 = not(bounds_invalid_upwards_28175)
    range_valid_c_28177 = True
    assert valid_28176, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:102:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:97:17-104:24\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_28174,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_32755 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27772)
    segmap_group_sizze_32782 = self.sizes["mainDetailed.segmap_group_size_32759"]
    nest_sizze_32833 = (m_27772 * i32_res_28174)
    segred_group_sizze_32834 = self.sizes["mainDetailed.segred_group_size_32807"]
    max_num_groups_46535 = self.sizes["mainDetailed.segred_num_groups_32809"]
    num_groups_32835 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32833,
                                                            segred_group_sizze_32834),
                                                  sext_i32_i64(max_num_groups_46535))))
    bytes_45252 = (np.int64(4) * segmap_group_sizze_32782)
    local_memory_capacity_46606 = self.max_local_memory
    if (sle64(((bytes_45252 + srem64((np.int64(8) - srem64(bytes_45252,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_45252 + srem64((np.int64(8) - srem64(bytes_45252,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46606)) and suff_outer_par_32755):
      segmap_usable_groups_32783 = sdiv_up64(m_27772, segmap_group_sizze_32782)
      num_whole_tiles_44095 = squot64(i32_res_28174, segmap_group_sizze_32782)
      residual_input_44206 = srem64(i32_res_28174, segmap_group_sizze_32782)
      cond_44207 = (residual_input_44206 == np.int64(0))
      mem_45275 = opencl_alloc(self, bytes_45152, "mem_45275")
      if ((1 * (np.long(segmap_usable_groups_32783) * np.long(segmap_group_sizze_32782))) != 0):
        self.mainDetailedzisegmap_intragroup_44075_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_45252)),
                                                                cl.LocalMemory(np.long(bytes_45252)),
                                                                np.int64(N_27771),
                                                                np.int64(m_27772),
                                                                np.int64(i32_res_28174),
                                                                np.int64(num_whole_tiles_44095),
                                                                np.int64(residual_input_44206),
                                                                np.byte(cond_44207),
                                                                defunc_4_map_res_mem_45178,
                                                                defunc_3_map_res_mem_45244,
                                                                defunc_3_map_res_mem_45245,
                                                                mem_45275)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_44075_var,
                                   ((np.long(segmap_usable_groups_32783) * np.long(segmap_group_sizze_32782)),),
                                   (np.long(segmap_group_sizze_32782),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45279 = mem_45275
    else:
      mem_45278 = opencl_alloc(self, bytes_45152, "mem_45278")
      if slt64((i32_res_28174 * np.int64(2)), segred_group_sizze_32834):
        segment_sizze_nonzzero_46546 = smax64(np.int64(1), i32_res_28174)
        num_threads_46547 = (num_groups_32835 * segred_group_sizze_32834)
        if ((1 * (np.long(num_groups_32835) * np.long(segred_group_sizze_32834))) != 0):
          self.mainDetailedzisegred_small_32813_var.set_args(self.global_failure,
                                                             self.failure_is_an_option,
                                                             self.global_failure_args,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32834))),
                                                             np.int64(N_27771),
                                                             np.int64(m_27772),
                                                             np.int64(i32_res_28174),
                                                             np.int64(num_groups_32835),
                                                             np.int64(segment_sizze_nonzzero_46546),
                                                             defunc_4_map_res_mem_45178,
                                                             defunc_3_map_res_mem_45244,
                                                             defunc_3_map_res_mem_45245,
                                                             mem_45278)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_32813_var,
                                     ((np.long(num_groups_32835) * np.long(segred_group_sizze_32834)),),
                                     (np.long(segred_group_sizze_32834),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
      else:
        groups_per_segment_46567 = sdiv_up64(num_groups_32835,
                                             smax64(np.int64(1), m_27772))
        elements_per_thread_46568 = sdiv_up64(i32_res_28174,
                                              (segred_group_sizze_32834 * groups_per_segment_46567))
        virt_num_groups_46569 = (groups_per_segment_46567 * m_27772)
        num_threads_46570 = (num_groups_32835 * segred_group_sizze_32834)
        threads_per_segment_46571 = (groups_per_segment_46567 * segred_group_sizze_32834)
        group_res_arr_mem_46572 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_32834 * virt_num_groups_46569)),
                                               "group_res_arr_mem_46572")
        mainDetailedzicounter_mem_46574 = self.mainDetailedzicounter_mem_46574
        if ((1 * (np.long(num_groups_32835) * np.long(segred_group_sizze_32834))) != 0):
          self.mainDetailedzisegred_large_32813_var.set_args(self.global_failure,
                                                             self.failure_is_an_option,
                                                             self.global_failure_args,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32834))),
                                                             np.int64(N_27771),
                                                             np.int64(i32_res_28174),
                                                             np.int64(num_groups_32835),
                                                             np.int64(groups_per_segment_46567),
                                                             np.int64(elements_per_thread_46568),
                                                             np.int64(virt_num_groups_46569),
                                                             np.int64(threads_per_segment_46571),
                                                             defunc_4_map_res_mem_45178,
                                                             defunc_3_map_res_mem_45244,
                                                             defunc_3_map_res_mem_45245,
                                                             mem_45278,
                                                             group_res_arr_mem_46572,
                                                             mainDetailedzicounter_mem_46574)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_32813_var,
                                     ((np.long(num_groups_32835) * np.long(segred_group_sizze_32834)),),
                                     (np.long(segred_group_sizze_32834),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45279 = mem_45278
    iota32_arg_28203 = (N_27771 - i32_res_27781)
    bounds_invalid_upwards_28204 = slt64(iota32_arg_28203, np.int64(0))
    valid_28205 = not(bounds_invalid_upwards_28204)
    range_valid_c_28206 = True
    assert valid_28205, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:109:22-35\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28203,
                                                                                                                                                                                                                                      " is invalid."))
    i_28208 = (n_27775 - np.int32(1))
    i_28209 = sext_i32_i64(i_28208)
    x_28210 = sle64(np.int64(0), i_28209)
    y_28211 = slt64(i_28209, N_27771)
    bounds_check_28212 = (x_28210 and y_28211)
    index_certs_28213 = True
    assert bounds_check_28212, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:107:64-84\n   #1  bfastfinal.fut:106:15-109:36\n   #2  bfastfinal.fut:174:3-56\n   #3  bfastfinal.fut:170:1-174:56\n" % ("Index [",
                                                                                                                                                                                                                 i_28209,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27771,
                                                                                                                                                                                                                 "]."))
    read_res_46884 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46884, mappingindices_mem_44380,
                    device_offset=(np.long(i_28209) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28214 = read_res_46884[0]
    i32_res_28215 = sitofp_i32_f32(r32_arg_28214)
    segmap_group_sizze_32924 = self.sizes["mainDetailed.segmap_group_size_32904"]
    segmap_usable_groups_32925 = sdiv_up64(iota32_arg_28203,
                                           segmap_group_sizze_32924)
    bytes_45281 = (np.int64(4) * iota32_arg_28203)
    mem_45282 = opencl_alloc(self, bytes_45281, "mem_45282")
    if ((1 * (np.long(segmap_usable_groups_32925) * np.long(segmap_group_sizze_32924))) != 0):
      self.mainDetailedzisegmap_32902_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(N_27771),
                                                   np.int32(n_27775),
                                                   np.float32(lam_27778),
                                                   np.int64(iota32_arg_28203),
                                                   np.float32(i32_res_28215),
                                                   mappingindices_mem_44380,
                                                   mem_45282)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32902_var,
                                 ((np.long(segmap_usable_groups_32925) * np.long(segmap_group_sizze_32924)),),
                                 (np.long(segmap_group_sizze_32924),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    iota32_arg_28233 = (N_27771 - i32_res_27781)
    bounds_invalid_upwards_28234 = slt64(iota32_arg_28233, np.int64(0))
    valid_28235 = not(bounds_invalid_upwards_28234)
    range_valid_c_28236 = True
    assert valid_28235, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28233,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    max_res_28241 = smax64(np.int64(1), iota32_arg_28233)
    bounds_invalid_upwards_28242 = slt64(max_res_28241, np.int64(1))
    distance_28243 = (max_res_28241 - np.int64(1))
    valid_28244 = not(bounds_invalid_upwards_28242)
    range_valid_c_28245 = True
    assert valid_28244, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:174:3-56\n   #6  bfastfinal.fut:170:1-174:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28241,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    dim_match_28246 = (iota32_arg_28203 == iota32_arg_28233)
    empty_or_match_cert_28247 = True
    assert dim_match_28246, ("Error: %s\n\nBacktrace:\n-> #0  unknown location\n   #1  bfastfinal.fut:116:13-121:42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:114:20-131:9\n   #4  bfastfinal.fut:174:3-56\n   #5  bfastfinal.fut:170:1-174:56\n" % ("Function return value does not match shape of declared return type.",))
    segmap_group_sizze_33376 = self.sizes["mainDetailed.segmap_group_size_33369"]
    segmap_usable_groups_33377 = sdiv_up64(m_27772, segmap_group_sizze_33376)
    mem_45285 = opencl_alloc(self, bytes_45152, "mem_45285")
    if ((1 * (np.long(segmap_usable_groups_33377) * np.long(segmap_group_sizze_33376))) != 0):
      self.mainDetailedzisegmap_33367_var.set_args(self.global_failure,
                                                   np.int64(m_27772),
                                                   defunc_4_map_res_mem_45177,
                                                   defunc_3_map_res_mem_45245,
                                                   mem_45285)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_33367_var,
                                 ((np.long(segmap_usable_groups_33377) * np.long(segmap_group_sizze_33376)),),
                                 (np.long(segmap_group_sizze_33376),))
      if synchronous:
        sync(self)
    nest_sizze_33390 = (m_27772 * iota32_arg_28233)
    segmap_group_sizze_33391 = self.sizes["mainDetailed.segmap_group_size_33312"]
    segmap_usable_groups_33392 = sdiv_up64(nest_sizze_33390,
                                           segmap_group_sizze_33391)
    bytes_45287 = (np.int64(4) * nest_sizze_33390)
    mem_45289 = opencl_alloc(self, bytes_45287, "mem_45289")
    if ((1 * (np.long(segmap_usable_groups_33392) * np.long(segmap_group_sizze_33391))) != 0):
      self.mainDetailedzisegmap_33309_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(N_27771),
                                                   np.int64(m_27772),
                                                   np.int64(iota32_arg_28233),
                                                   defunc_4_map_res_mem_45178,
                                                   defunc_3_map_res_mem_45245,
                                                   mem_45285, mem_45289)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_33309_var,
                                 ((np.long(segmap_usable_groups_33392) * np.long(segmap_group_sizze_33391)),),
                                 (np.long(segmap_group_sizze_33391),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_33420 = self.sizes["mainDetailed.segmap_group_size_33190"]
    segmap_usable_groups_33421 = sdiv_up64(m_27772, segmap_group_sizze_33420)
    mem_45292 = opencl_alloc(self, bytes_45287, "mem_45292")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_45292, np.int64(0),
                                                mem_45289, np.int64(0),
                                                np.int64(1), iota32_arg_28233,
                                                m_27772)
    mem_45289 = None
    mem_45323 = opencl_alloc(self, bytes_45152, "mem_45323")
    bytes_45302 = (np.int64(4) * iota32_arg_28233)
    num_threads_45567 = (segmap_group_sizze_33420 * segmap_usable_groups_33421)
    total_sizze_45568 = (bytes_45302 * num_threads_45567)
    mem_45303 = opencl_alloc(self, total_sizze_45568, "mem_45303")
    if ((1 * (np.long(segmap_usable_groups_33421) * np.long(segmap_group_sizze_33420))) != 0):
      self.mainDetailedzisegmap_33188_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(m_27772),
                                                   np.int64(iota32_arg_28203),
                                                   np.int64(iota32_arg_28233),
                                                   np.int64(distance_28243),
                                                   np.int64(segmap_usable_groups_33421),
                                                   defunc_4_map_res_mem_45177,
                                                   defunc_3_map_res_mem_45245,
                                                   mem_45285, mem_45292,
                                                   mem_45303, mem_45323)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_33188_var,
                                 ((np.long(segmap_usable_groups_33421) * np.long(segmap_group_sizze_33420)),),
                                 (np.long(segmap_group_sizze_33420),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_45285 = None
    mem_45292 = None
    mem_45303 = None
    empty_or_match_cert_28353 = True
    assert dim_match_28246, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:146:17-149:51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:136:38-164:9\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("function arguments of wrong shape",))
    dim_match_28354 = (iota32_arg_28233 == iota32_arg_28203)
    empty_or_match_cert_28355 = True
    assert dim_match_28354, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:162:24-88\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:136:38-164:9\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("function arguments of wrong shape",))
    empty_or_match_cert_28356 = True
    assert dim_match_28246, ("Error: %s\n\nBacktrace:\n-> #0  unknown location\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:136:38-164:9\n   #3  bfastfinal.fut:174:3-56\n   #4  bfastfinal.fut:170:1-174:56\n" % ("Function return value does not match shape of declared return type.",))
    suff_outer_par_33532 = (self.sizes["mainDetailed.suff_outer_par_37"] <= m_27772)
    intra_avail_par_33542 = smin64(iota32_arg_28203, iota32_arg_28233)
    computed_group_sizze_33535 = smax64(iota32_arg_28203, iota32_arg_28233)
    fits_33775 = sle64(computed_group_sizze_33535, max_group_sizze_30862)
    suff_intra_par_33773 = (self.sizes["mainDetailed.suff_intra_par_38"] <= intra_avail_par_33542)
    intra_suff_and_fits_33776 = (suff_intra_par_33773 and fits_33775)
    segmap_group_sizze_33659 = self.sizes["mainDetailed.segmap_group_size_33547"]
    max_num_groups_46632 = self.sizes["mainDetailed.segmap_num_groups_33549"]
    num_groups_33660 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27772,
                                                            segmap_group_sizze_33659),
                                                  sext_i32_i64(max_num_groups_46632))))
    segmap_group_sizze_34085 = self.sizes["mainDetailed.segmap_group_size_34078"]
    segscan_group_sizze_34093 = self.sizes["mainDetailed.segscan_group_size_34039"]
    max_num_groups_46633 = self.sizes["mainDetailed.segscan_num_groups_34041"]
    num_groups_34094 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33390,
                                                            segscan_group_sizze_34093),
                                                  sext_i32_i64(max_num_groups_46633))))
    segmap_group_sizze_34127 = self.sizes["mainDetailed.segmap_group_size_34028"]
    nest_sizze_34137 = (m_27772 * iota32_arg_28203)
    segred_group_sizze_34138 = self.sizes["mainDetailed.segred_group_size_33988"]
    max_num_groups_46634 = self.sizes["mainDetailed.segred_num_groups_33990"]
    num_groups_34139 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34137,
                                                            segred_group_sizze_34138),
                                                  sext_i32_i64(max_num_groups_46634))))
    segmap_group_sizze_34175 = self.sizes["mainDetailed.segmap_group_size_33952"]
    segmap_group_sizze_34224 = self.sizes["mainDetailed.segmap_group_size_33896"]
    bytes_45367 = (np.int64(4) * nest_sizze_34137)
    local_memory_capacity_46635 = self.max_local_memory
    if intra_suff_and_fits_33776:
      defunc_0_f_res_ixfn_45426 = iota32_arg_28203
    else:
      defunc_0_f_res_ixfn_45426 = iota32_arg_28233
    num_threads_45569 = (segmap_group_sizze_33659 * num_groups_33660)
    total_sizze_45570 = (bytes_45302 * num_threads_45569)
    total_sizze_45571 = (bytes_45281 * num_threads_45569)
    total_sizze_45572 = (bytes_45302 * num_threads_45569)
    local_memory_capacity_46859 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46859)) and suff_outer_par_33532):
      mem_45369 = opencl_alloc(self, bytes_45367, "mem_45369")
      mem_45372 = opencl_alloc(self, bytes_45367, "mem_45372")
      mem_45374 = opencl_alloc(self, bytes_45152, "mem_45374")
      mem_45376 = opencl_alloc(self, bytes_45152, "mem_45376")
      mem_45326 = opencl_alloc(self, total_sizze_45570, "mem_45326")
      mem_45340 = opencl_alloc(self, total_sizze_45571, "mem_45340")
      mem_45354 = opencl_alloc(self, total_sizze_45572, "mem_45354")
      if ((1 * (np.long(num_groups_33660) * np.long(segmap_group_sizze_33659))) != 0):
        self.mainDetailedzisegmap_33545_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_27771),
                                                     np.int64(m_27772),
                                                     np.int32(n_27775),
                                                     np.int64(iota32_arg_28203),
                                                     np.int64(iota32_arg_28233),
                                                     np.int64(num_groups_33660),
                                                     defunc_4_map_res_mem_45177,
                                                     defunc_4_map_res_mem_45178,
                                                     defunc_4_map_res_mem_45179,
                                                     defunc_3_map_res_mem_45244,
                                                     defunc_3_map_res_mem_45245,
                                                     defunc_3_map_res_mem_45246,
                                                     defunc_0_f_res_mem_45279,
                                                     mem_45282, mem_45326,
                                                     mem_45340, mem_45354,
                                                     mem_45369, mem_45372,
                                                     mem_45374, mem_45376)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33545_var,
                                   ((np.long(num_groups_33660) * np.long(segmap_group_sizze_33659)),),
                                   (np.long(segmap_group_sizze_33659),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_45326 = None
      mem_45340 = None
      mem_45354 = None
      mem_45433 = opencl_alloc(self, bytes_45367, "mem_45433")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45433, np.int64(0),
                                                  mem_45369, np.int64(0),
                                                  np.int64(1), m_27772,
                                                  iota32_arg_28203)
      mem_45369 = None
      mem_45437 = opencl_alloc(self, bytes_45367, "mem_45437")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45437, np.int64(0),
                                                  mem_45372, np.int64(0),
                                                  np.int64(1), m_27772,
                                                  iota32_arg_28203)
      mem_45372 = None
      defunc_0_f_res_mem_45443 = mem_45433
      defunc_0_f_res_mem_45444 = mem_45437
      defunc_0_f_res_mem_45445 = mem_45374
      defunc_0_f_res_mem_45446 = mem_45376
    else:
      local_memory_capacity_46858 = self.max_local_memory
      if (sle64(((((((bytes_45302 + srem64((np.int64(8) - srem64(bytes_45302,
                                                                 np.int64(8))),
                                           np.int64(8))) + (bytes_45281 + srem64((np.int64(8) - srem64(bytes_45281,
                                                                                                       np.int64(8))),
                                                                                 np.int64(8)))) + ((np.int32(1) * iota32_arg_28203) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_28203),
                                                                                                                                                                   np.int64(8))),
                                                                                                                                             np.int64(8)))) + ((np.int32(4) * iota32_arg_28203) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28203),
                                                                                                                                                                                                                               np.int64(8))),
                                                                                                                                                                                                         np.int64(8)))) + ((np.int32(4) * iota32_arg_28203) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28203),
                                                                                                                                                                                                                                                                                           np.int64(8))),
                                                                                                                                                                                                                                                                     np.int64(8)))) + (bytes_45302 + srem64((np.int64(8) - srem64(bytes_45302,
                                                                                                                                                                                                                                                                                                                                  np.int64(8))),
                                                                                                                                                                                                                                                                                                            np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46858)) and intra_suff_and_fits_33776):
        mem_45389 = opencl_alloc(self, bytes_45367, "mem_45389")
        mem_45392 = opencl_alloc(self, bytes_45367, "mem_45392")
        mem_45394 = opencl_alloc(self, bytes_45152, "mem_45394")
        mem_45396 = opencl_alloc(self, bytes_45152, "mem_45396")
        if ((1 * (np.long(m_27772) * np.long(computed_group_sizze_33535))) != 0):
          self.mainDetailedzisegmap_intragroup_33543_var.set_args(self.global_failure,
                                                                  self.failure_is_an_option,
                                                                  self.global_failure_args,
                                                                  cl.LocalMemory(np.long(bytes_45302)),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28203))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28203))),
                                                                  cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28203))),
                                                                  cl.LocalMemory(np.long(bytes_45281)),
                                                                  cl.LocalMemory(np.long(bytes_45302)),
                                                                  np.int64(N_27771),
                                                                  np.int32(n_27775),
                                                                  np.int64(iota32_arg_28203),
                                                                  np.int64(iota32_arg_28233),
                                                                  np.int64(computed_group_sizze_33535),
                                                                  defunc_4_map_res_mem_45177,
                                                                  defunc_4_map_res_mem_45178,
                                                                  defunc_4_map_res_mem_45179,
                                                                  defunc_3_map_res_mem_45244,
                                                                  defunc_3_map_res_mem_45245,
                                                                  defunc_3_map_res_mem_45246,
                                                                  defunc_0_f_res_mem_45279,
                                                                  mem_45282,
                                                                  mem_45389,
                                                                  mem_45392,
                                                                  mem_45394,
                                                                  mem_45396)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_33543_var,
                                     ((np.long(m_27772) * np.long(computed_group_sizze_33535)),),
                                     (np.long(computed_group_sizze_33535),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_0_f_res_mem_45427 = mem_45389
        defunc_0_f_res_mem_45428 = mem_45392
        defunc_0_f_res_mem_45429 = mem_45394
        defunc_0_f_res_mem_45430 = mem_45396
      else:
        segmap_usable_groups_34086 = sdiv_up64(m_27772,
                                               segmap_group_sizze_34085)
        mem_45399 = opencl_alloc(self, bytes_45152, "mem_45399")
        if ((1 * (np.long(segmap_usable_groups_34086) * np.long(segmap_group_sizze_34085))) != 0):
          self.mainDetailedzisegmap_34076_var.set_args(self.global_failure,
                                                       np.int64(m_27772),
                                                       defunc_4_map_res_mem_45177,
                                                       defunc_3_map_res_mem_45245,
                                                       mem_45399)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_34076_var,
                                     ((np.long(segmap_usable_groups_34086) * np.long(segmap_group_sizze_34085)),),
                                     (np.long(segmap_group_sizze_34085),))
          if synchronous:
            sync(self)
        mem_45403 = opencl_alloc(self, bytes_45287, "mem_45403")
        if slt64(np.int64(0), (m_27772 * iota32_arg_28233)):
          stage1_max_num_groups_46689 = self.max_group_size
          stage1_num_groups_46690 = smin64(stage1_max_num_groups_46689,
                                           num_groups_34094)
          num_threads_46691 = sext_i64_i32((stage1_num_groups_46690 * segscan_group_sizze_34093))
          if ((1 * (np.long(stage1_num_groups_46690) * np.long(segscan_group_sizze_34093))) != 0):
            self.mainDetailedziscan_stage1_34045_var.set_args(self.global_failure,
                                                              self.failure_is_an_option,
                                                              self.global_failure_args,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * segscan_group_sizze_34093)))),
                                                              np.int64(N_27771),
                                                              np.int64(m_27772),
                                                              np.int64(iota32_arg_28233),
                                                              np.int32(num_threads_46691),
                                                              defunc_4_map_res_mem_45178,
                                                              defunc_3_map_res_mem_45244,
                                                              defunc_3_map_res_mem_45245,
                                                              defunc_0_f_res_mem_45279,
                                                              mem_45399,
                                                              mem_45403)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage1_34045_var,
                                       ((np.long(stage1_num_groups_46690) * np.long(segscan_group_sizze_34093)),),
                                       (np.long(segscan_group_sizze_34093),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46690))) != 0):
            self.mainDetailedziscan_stage2_34045_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * stage1_num_groups_46690)))),
                                                              np.int64(m_27772),
                                                              np.int64(iota32_arg_28233),
                                                              np.int64(stage1_num_groups_46690),
                                                              np.int32(num_threads_46691),
                                                              mem_45403)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage2_34045_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_46690)),),
                                       (np.long(stage1_num_groups_46690),))
            if synchronous:
              sync(self)
          required_groups_46733 = sext_i64_i32(sdiv_up64((m_27772 * iota32_arg_28233),
                                                         segscan_group_sizze_34093))
          if ((1 * (np.long(num_groups_34094) * np.long(segscan_group_sizze_34093))) != 0):
            self.mainDetailedziscan_stage3_34045_var.set_args(self.global_failure,
                                                              np.int64(m_27772),
                                                              np.int64(iota32_arg_28233),
                                                              np.int64(num_groups_34094),
                                                              np.int32(num_threads_46691),
                                                              np.int32(required_groups_46733),
                                                              mem_45403)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage3_34045_var,
                                       ((np.long(num_groups_34094) * np.long(segscan_group_sizze_34093)),),
                                       (np.long(segscan_group_sizze_34093),))
            if synchronous:
              sync(self)
        segmap_usable_groups_34128 = sdiv_up64(m_27772,
                                               segmap_group_sizze_34127)
        mem_45406 = opencl_alloc(self, bytes_45152, "mem_45406")
        if ((1 * (np.long(segmap_usable_groups_34128) * np.long(segmap_group_sizze_34127))) != 0):
          self.mainDetailedzisegmap_34026_var.set_args(self.global_failure,
                                                       np.int64(m_27772),
                                                       defunc_3_map_res_mem_45245,
                                                       defunc_3_map_res_mem_45246,
                                                       mem_45406)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_34026_var,
                                     ((np.long(segmap_usable_groups_34128) * np.long(segmap_group_sizze_34127)),),
                                     (np.long(segmap_group_sizze_34127),))
          if synchronous:
            sync(self)
        mem_45409 = opencl_alloc(self, m_27772, "mem_45409")
        mem_45411 = opencl_alloc(self, bytes_45152, "mem_45411")
        mem_45413 = opencl_alloc(self, bytes_45152, "mem_45413")
        mem_45416 = opencl_alloc(self, bytes_45367, "mem_45416")
        if slt64((iota32_arg_28203 * np.int64(2)), segred_group_sizze_34138):
          segment_sizze_nonzzero_46750 = smax64(np.int64(1), iota32_arg_28203)
          num_threads_46751 = (num_groups_34139 * segred_group_sizze_34138)
          if ((1 * (np.long(num_groups_34139) * np.long(segred_group_sizze_34138))) != 0):
            self.mainDetailedzisegred_small_33994_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34138))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34138))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_34138))),
                                                               np.int64(m_27772),
                                                               np.int64(iota32_arg_28203),
                                                               np.int64(iota32_arg_28233),
                                                               np.int64(num_groups_34139),
                                                               np.int64(segment_sizze_nonzzero_46750),
                                                               mem_45282,
                                                               mem_45399,
                                                               mem_45403,
                                                               mem_45406,
                                                               mem_45409,
                                                               mem_45411,
                                                               mem_45413,
                                                               mem_45416)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33994_var,
                                       ((np.long(num_groups_34139) * np.long(segred_group_sizze_34138)),),
                                       (np.long(segred_group_sizze_34138),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46786 = sdiv_up64(num_groups_34139,
                                               smax64(np.int64(1), m_27772))
          elements_per_thread_46787 = sdiv_up64(iota32_arg_28203,
                                                (segred_group_sizze_34138 * groups_per_segment_46786))
          virt_num_groups_46788 = (groups_per_segment_46786 * m_27772)
          num_threads_46789 = (num_groups_34139 * segred_group_sizze_34138)
          threads_per_segment_46790 = (groups_per_segment_46786 * segred_group_sizze_34138)
          group_res_arr_mem_46791 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_34138 * virt_num_groups_46788)),
                                                 "group_res_arr_mem_46791")
          group_res_arr_mem_46793 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34138 * virt_num_groups_46788)),
                                                 "group_res_arr_mem_46793")
          group_res_arr_mem_46795 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34138 * virt_num_groups_46788)),
                                                 "group_res_arr_mem_46795")
          mainDetailedzicounter_mem_46797 = self.mainDetailedzicounter_mem_46797
          if ((1 * (np.long(num_groups_34139) * np.long(segred_group_sizze_34138))) != 0):
            self.mainDetailedzisegred_large_33994_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34138))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34138))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_34138))),
                                                               np.int64(iota32_arg_28203),
                                                               np.int64(iota32_arg_28233),
                                                               np.int64(num_groups_34139),
                                                               np.int64(groups_per_segment_46786),
                                                               np.int64(elements_per_thread_46787),
                                                               np.int64(virt_num_groups_46788),
                                                               mem_45282,
                                                               mem_45399,
                                                               mem_45403,
                                                               mem_45406,
                                                               mem_45409,
                                                               mem_45411,
                                                               mem_45413,
                                                               mem_45416,
                                                               group_res_arr_mem_46791,
                                                               group_res_arr_mem_46793,
                                                               group_res_arr_mem_46795,
                                                               mainDetailedzicounter_mem_46797)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33994_var,
                                       ((np.long(num_groups_34139) * np.long(segred_group_sizze_34138)),),
                                       (np.long(segred_group_sizze_34138),))
            if synchronous:
              sync(self)
        mem_45403 = None
        mem_45406 = None
        segmap_usable_groups_34176 = sdiv_up64(m_27772,
                                               segmap_group_sizze_34175)
        mem_45419 = opencl_alloc(self, bytes_45152, "mem_45419")
        mem_45421 = opencl_alloc(self, bytes_45152, "mem_45421")
        if ((1 * (np.long(segmap_usable_groups_34176) * np.long(segmap_group_sizze_34175))) != 0):
          self.mainDetailedzisegmap_33950_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       np.int64(N_27771),
                                                       np.int64(m_27772),
                                                       np.int32(n_27775),
                                                       defunc_4_map_res_mem_45179,
                                                       defunc_3_map_res_mem_45245,
                                                       mem_45399, mem_45409,
                                                       mem_45411, mem_45413,
                                                       mem_45419, mem_45421)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33950_var,
                                     ((np.long(segmap_usable_groups_34176) * np.long(segmap_group_sizze_34175)),),
                                     (np.long(segmap_group_sizze_34175),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_45409 = None
        mem_45411 = None
        mem_45413 = None
        mem_45424 = opencl_alloc(self, bytes_45287, "mem_45424")
        self.futhark_builtinzhreplicate_f32(mem_45424,
                                            (m_27772 * iota32_arg_28233),
                                            np.nan)
        segmap_usable_groups_34225 = sdiv_up64(nest_sizze_33390,
                                               segmap_group_sizze_34224)
        if ((1 * (np.long(segmap_usable_groups_34225) * np.long(segmap_group_sizze_34224))) != 0):
          self.mainDetailedzisegmap_33893_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       np.int64(N_27771),
                                                       np.int64(m_27772),
                                                       np.int32(n_27775),
                                                       np.int64(iota32_arg_28203),
                                                       np.int64(iota32_arg_28233),
                                                       defunc_4_map_res_mem_45179,
                                                       defunc_3_map_res_mem_45245,
                                                       mem_45399, mem_45416,
                                                       mem_45424)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33893_var,
                                     ((np.long(segmap_usable_groups_34225) * np.long(segmap_group_sizze_34224)),),
                                     (np.long(segmap_group_sizze_34224),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_45399 = None
        defunc_0_f_res_mem_45427 = mem_45424
        defunc_0_f_res_mem_45428 = mem_45416
        defunc_0_f_res_mem_45429 = mem_45419
        defunc_0_f_res_mem_45430 = mem_45421
      mem_45441 = opencl_alloc(self, bytes_45367, "mem_45441")
      if (((m_27772 * iota32_arg_28203) * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_45441, defunc_0_f_res_mem_45427,
                        dest_offset=np.long(np.int64(0)),
                        src_offset=np.long(np.int64(0)),
                        byte_count=np.long(((m_27772 * iota32_arg_28203) * np.int32(4))))
      if synchronous:
        sync(self)
      defunc_0_f_res_mem_45427 = None
      defunc_0_f_res_mem_45443 = mem_45441
      defunc_0_f_res_mem_45444 = defunc_0_f_res_mem_45428
      defunc_0_f_res_mem_45445 = defunc_0_f_res_mem_45429
      defunc_0_f_res_mem_45446 = defunc_0_f_res_mem_45430
    defunc_4_map_res_mem_45179 = None
    defunc_3_map_res_mem_45244 = None
    out_arrsizze_45681 = iota32_arg_28203
    out_arrsizze_45683 = iota32_arg_28203
    out_arrsizze_45685 = iota32_arg_28203
    out_mem_45676 = defunc_0_f_res_mem_45279
    out_mem_45677 = defunc_4_map_res_mem_45177
    out_mem_45678 = defunc_3_map_res_mem_45245
    out_mem_45679 = defunc_3_map_res_mem_45246
    out_mem_45680 = defunc_0_f_res_mem_45443
    out_mem_45682 = defunc_0_f_res_mem_45444
    out_mem_45684 = mem_45282
    out_mem_45686 = defunc_0_f_res_mem_45445
    out_mem_45687 = defunc_0_f_res_mem_45446
    out_mem_45688 = mem_45323
    out_mem_45689 = defunc_4_map_res_mem_45178
    out_mem_45690 = defunc_3_map_res_mem_45140
    return (out_mem_45676, out_mem_45677, out_mem_45678, out_mem_45679,
            out_mem_45680, out_arrsizze_45681, out_mem_45682,
            out_arrsizze_45683, out_mem_45684, out_arrsizze_45685,
            out_mem_45686, out_mem_45687, out_mem_45688, out_mem_45689,
            out_mem_45690)
  def futhark_mainMagnitude(self, mappingindices_mem_44380, images_mem_44381,
                            N_28477, m_28478, trend_28479, k_28480, n_28481,
                            freq_28482, hfrac_28483, lam_28484):
    i32_res_28487 = sext_i32_i64(n_28481)
    x_28488 = (np.int32(2) * k_28480)
    k2p2_28489 = (np.int32(2) + x_28488)
    cond_28490 = slt32(np.int32(0), trend_28479)
    if cond_28490:
      k2p2zq_28491 = k2p2_28489
    else:
      k2p2zq_f_res_28492 = (k2p2_28489 - np.int32(1))
      k2p2zq_28491 = k2p2zq_f_res_28492
    i32_res_28493 = sext_i32_i64(k2p2zq_28491)
    binop_x_44384 = (N_28477 * i32_res_28493)
    bytes_44383 = (np.int64(4) * binop_x_44384)
    if cond_28490:
      bounds_invalid_upwards_28495 = slt64(i32_res_28493, np.int64(0))
      valid_28496 = not(bounds_invalid_upwards_28495)
      range_valid_c_28497 = True
      assert valid_28496, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28493,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_34416 = self.sizes["mainMagnitude.segmap_group_size_34346"]
      segmap_usable_groups_34417 = sdiv_up64(binop_x_44384,
                                             segmap_group_sizze_34416)
      mem_44385 = opencl_alloc(self, bytes_44383, "mem_44385")
      if ((1 * (np.long(segmap_usable_groups_34417) * np.long(segmap_group_sizze_34416))) != 0):
        self.mainMagnitudezisegmap_34343_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.float32(freq_28482),
                                                      np.int64(i32_res_28493),
                                                      mappingindices_mem_44380,
                                                      mem_44385)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34343_var,
                                   ((np.long(segmap_usable_groups_34417) * np.long(segmap_group_sizze_34416)),),
                                   (np.long(segmap_group_sizze_34416),))
        if synchronous:
          sync(self)
      binop_p_mem_44390 = mem_44385
    else:
      bounds_invalid_upwards_28521 = slt64(i32_res_28493, np.int64(0))
      valid_28522 = not(bounds_invalid_upwards_28521)
      range_valid_c_28523 = True
      assert valid_28522, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:50:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28493,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_34590 = self.sizes["mainMagnitude.segmap_group_size_34524"]
      segmap_usable_groups_34591 = sdiv_up64(binop_x_44384,
                                             segmap_group_sizze_34590)
      mem_44389 = opencl_alloc(self, bytes_44383, "mem_44389")
      if ((1 * (np.long(segmap_usable_groups_34591) * np.long(segmap_group_sizze_34590))) != 0):
        self.mainMagnitudezisegmap_34521_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.float32(freq_28482),
                                                      np.int64(i32_res_28493),
                                                      mappingindices_mem_44380,
                                                      mem_44389)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34521_var,
                                   ((np.long(segmap_usable_groups_34591) * np.long(segmap_group_sizze_34590)),),
                                   (np.long(segmap_group_sizze_34590),))
        if synchronous:
          sync(self)
      binop_p_mem_44390 = mem_44389
    x_28546 = (N_28477 * N_28477)
    y_28547 = (np.int64(2) * N_28477)
    x_28548 = (x_28546 + y_28547)
    x_28549 = (np.int64(1) + x_28548)
    y_28550 = (np.int64(1) + N_28477)
    zzero_28551 = (y_28550 == np.int64(0))
    nonzzero_28552 = not(zzero_28551)
    nonzzero_cert_28553 = True
    assert nonzzero_28552, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:181:5-58\n   #2  bfastfinal.fut:176:1-182:37\n" % ("division by zero",))
    x_28554 = sdiv64(x_28549, y_28550)
    x_28555 = (x_28554 - N_28477)
    binop_p_28556 = (x_28555 - np.int64(1))
    defunc_0_f_res_28557 = sext_i64_i32(binop_p_28556)
    i32_res_28558 = sitofp_i32_f32(defunc_0_f_res_28557)
    segmap_group_sizze_34673 = self.sizes["mainMagnitude.segmap_group_size_34652"]
    segmap_usable_groups_34674 = sdiv_up64(binop_x_44384,
                                           segmap_group_sizze_34673)
    mem_44393 = opencl_alloc(self, bytes_44383, "mem_44393")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_44393, np.int64(0),
                                                binop_p_mem_44390, np.int64(0),
                                                np.int64(1), N_28477,
                                                i32_res_28493)
    mem_44397 = opencl_alloc(self, bytes_44383, "mem_44397")
    if ((1 * (np.long(segmap_usable_groups_34674) * np.long(segmap_group_sizze_34673))) != 0):
      self.mainMagnitudezisegmap_34649_var.set_args(self.global_failure,
                                                    np.int64(N_28477),
                                                    np.int64(i32_res_28493),
                                                    np.float32(i32_res_28558),
                                                    mem_44393, mem_44397)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_34649_var,
                                 ((np.long(segmap_usable_groups_34674) * np.long(segmap_group_sizze_34673)),),
                                 (np.long(segmap_group_sizze_34673),))
      if synchronous:
        sync(self)
    eq_x_y_28566 = (np.int64(0) == i32_res_28493)
    p_and_eq_x_y_28567 = (cond_28490 and eq_x_y_28566)
    not_p_28568 = not(cond_28490)
    p_and_eq_x_y_28569 = (eq_x_y_28566 and not_p_28568)
    empty_slice_28570 = (p_and_eq_x_y_28567 or p_and_eq_x_y_28569)
    m_28571 = (i32_res_28493 - np.int64(1))
    zzero_leq_i_p_m_t_s_28572 = sle64(np.int64(0), m_28571)
    i_p_m_t_s_leq_w_28573 = slt64(m_28571, i32_res_28493)
    i_lte_j_28574 = sle64(np.int64(0), i32_res_28493)
    y_28575 = (zzero_leq_i_p_m_t_s_28572 and i_p_m_t_s_leq_w_28573)
    y_28576 = (i_lte_j_28574 and y_28575)
    ok_or_empty_28577 = (empty_slice_28570 or y_28576)
    empty_slice_28578 = (i32_res_28487 == np.int64(0))
    m_28579 = (i32_res_28487 - np.int64(1))
    zzero_leq_i_p_m_t_s_28580 = sle64(np.int64(0), m_28579)
    i_p_m_t_s_leq_w_28581 = slt64(m_28579, N_28477)
    i_lte_j_28582 = sle64(np.int64(0), i32_res_28487)
    y_28583 = (zzero_leq_i_p_m_t_s_28580 and i_p_m_t_s_leq_w_28581)
    y_28584 = (i_lte_j_28582 and y_28583)
    ok_or_empty_28585 = (empty_slice_28578 or y_28584)
    index_ok_28586 = (ok_or_empty_28577 and ok_or_empty_28585)
    index_certs_28587 = True
    assert index_ok_28586, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:181:5-58\n   #2  bfastfinal.fut:176:1-182:37\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28487,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28493,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28477,
                                                                                                                                                                               "]."))
    empty_slice_28589 = (i32_res_28493 == np.int64(0))
    ok_or_empty_28590 = (y_28576 or empty_slice_28589)
    index_ok_28591 = (ok_or_empty_28585 and ok_or_empty_28590)
    index_certs_28592 = True
    assert index_ok_28591, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:181:5-58\n   #2  bfastfinal.fut:176:1-182:37\n" % ("Index [:",
                                                                                                                                                                               i32_res_28487,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28477,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28493,
                                                                                                                                                                               "]."))
    empty_slice_28594 = (m_28478 == np.int64(0))
    m_28595 = (m_28478 - np.int64(1))
    zzero_leq_i_p_m_t_s_28596 = sle64(np.int64(0), m_28595)
    i_p_m_t_s_leq_w_28597 = slt64(m_28595, m_28478)
    i_lte_j_28598 = sle64(np.int64(0), m_28478)
    y_28599 = (zzero_leq_i_p_m_t_s_28596 and i_p_m_t_s_leq_w_28597)
    y_28600 = (i_lte_j_28598 and y_28599)
    ok_or_empty_28601 = (empty_slice_28594 or y_28600)
    index_ok_28602 = (ok_or_empty_28585 and ok_or_empty_28601)
    index_certs_28603 = True
    assert index_ok_28602, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:181:5-58\n   #2  bfastfinal.fut:176:1-182:37\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28487,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28478,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28477,
                                                                                                                                                                               "]."))
    suff_outer_par_34680 = (self.sizes["mainMagnitude.suff_outer_par_6"] <= m_28478)
    segmap_group_sizze_34706 = self.sizes["mainMagnitude.segmap_group_size_34684"]
    max_num_groups_45695 = self.sizes["mainMagnitude.segmap_num_groups_34686"]
    num_groups_34707 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28478,
                                                            segmap_group_sizze_34706),
                                                  sext_i32_i64(max_num_groups_45695))))
    nest_sizze_34882 = (m_28478 * i32_res_28493)
    segmap_group_sizze_34883 = self.sizes["mainMagnitude.segmap_group_size_34731"]
    max_num_groups_45696 = self.sizes["mainMagnitude.segmap_num_groups_34733"]
    num_groups_34884 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34882,
                                                            segmap_group_sizze_34883),
                                                  sext_i32_i64(max_num_groups_45696))))
    suff_outer_par_34888 = (self.sizes["mainMagnitude.suff_outer_par_7"] <= nest_sizze_34882)
    y_34912 = (i32_res_28493 * i32_res_28493)
    comparatee_34913 = (m_28478 * y_34912)
    suff_outer_par_34914 = (self.sizes["mainMagnitude.suff_outer_par_8"] <= comparatee_34913)
    nest_sizze_34934 = (i32_res_28487 * comparatee_34913)
    segred_group_sizze_34935 = self.sizes["mainMagnitude.segred_group_size_34791"]
    max_num_groups_45697 = self.sizes["mainMagnitude.segred_num_groups_34793"]
    num_groups_34936 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34934,
                                                            segred_group_sizze_34935),
                                                  sext_i32_i64(max_num_groups_45697))))
    Tx_42527 = self.sizes["mainMagnitude.Tx_42525"]
    Ty_42528 = self.sizes["mainMagnitude.Ty_42526"]
    Ty_42529 = smin64(i32_res_28493, Ty_42528)
    Tx_42530 = smin64(i32_res_28493, Tx_42527)
    gridDim_zz_42533 = sdiv_up64(m_28478, np.int64(30))
    group_sizze_tile3d_42536 = (Ty_42529 * Tx_42530)
    binop_x_44399 = (N_28477 * m_28478)
    bytes_44398 = (np.int64(4) * binop_x_44399)
    bytes_44443 = (np.int64(4) * comparatee_34913)
    bytes_44402 = (np.int64(4) * y_34912)
    binop_x_44546 = (i32_res_28493 * nest_sizze_34882)
    bytes_44544 = (np.int64(4) * binop_x_44546)
    bytes_44448 = (np.int64(4) * i32_res_28493)
    binop_x_44477 = (np.int64(30) * group_sizze_tile3d_42536)
    bytes_44475 = (np.int64(4) * binop_x_44477)
    binop_x_45447 = (np.int64(4) * Ty_42529)
    binop_x_45448 = (Tx_42530 * binop_x_45447)
    sizze_45449 = (np.int64(30) * binop_x_45448)
    num_threads_45583 = (segmap_group_sizze_34706 * num_groups_34707)
    total_sizze_45584 = (bytes_44402 * num_threads_45583)
    num_threads_45585 = (segmap_group_sizze_34883 * num_groups_34884)
    total_sizze_45586 = (bytes_44448 * num_threads_45585)
    local_memory_capacity_45819 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45819)) and suff_outer_par_34680):
      mem_44400 = opencl_alloc(self, bytes_44398, "mem_44400")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44400, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_28477, m_28478)
      mem_44446 = opencl_alloc(self, bytes_44443, "mem_44446")
      mem_44404 = opencl_alloc(self, total_sizze_45584, "mem_44404")
      if ((1 * (np.long(num_groups_34707) * np.long(segmap_group_sizze_34706))) != 0):
        self.mainMagnitudezisegmap_34682_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.int64(m_28478),
                                                      np.int32(n_28481),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_34707),
                                                      binop_p_mem_44390,
                                                      mem_44397, mem_44400,
                                                      mem_44404, mem_44446)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34682_var,
                                   ((np.long(num_groups_34707) * np.long(segmap_group_sizze_34706)),),
                                   (np.long(segmap_group_sizze_34706),))
        if synchronous:
          sync(self)
      mem_44400 = None
      mem_44404 = None
      mem_44547 = opencl_alloc(self, bytes_44544, "mem_44547")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44547, np.int64(0),
                                                  mem_44446, np.int64(0),
                                                  np.int64(1), m_28478,
                                                  (i32_res_28493 * i32_res_28493))
      mem_44446 = None
      defunc_3_map_res_mem_44549 = mem_44547
    else:
      local_memory_capacity_45818 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_45818)) and suff_outer_par_34888):
        mem_44465 = opencl_alloc(self, bytes_44544, "mem_44465")
        mem_44449 = opencl_alloc(self, total_sizze_45586, "mem_44449")
        if ((1 * (np.long(num_groups_34884) * np.long(segmap_group_sizze_34883))) != 0):
          self.mainMagnitudezisegmap_34728_var.set_args(self.global_failure,
                                                        np.int64(N_28477),
                                                        np.int64(m_28478),
                                                        np.int32(n_28481),
                                                        np.int32(k2p2zq_28491),
                                                        np.int64(i32_res_28493),
                                                        np.int64(num_groups_34884),
                                                        images_mem_44381,
                                                        mem_44393, mem_44397,
                                                        mem_44449, mem_44465)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_34728_var,
                                     ((np.long(num_groups_34884) * np.long(segmap_group_sizze_34883)),),
                                     (np.long(segmap_group_sizze_34883),))
          if synchronous:
            sync(self)
        mem_44449 = None
        mem_44541 = opencl_alloc(self, bytes_44544, "mem_44541")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44541, np.int64(0),
                                                    mem_44465, np.int64(0),
                                                    np.int64(1),
                                                    (m_28478 * i32_res_28493),
                                                    i32_res_28493)
        mem_44465 = None
        defunc_3_map_res_mem_44543 = mem_44541
      else:
        local_memory_capacity_45817 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_45817)) and suff_outer_par_34914):
          mem_44468 = opencl_alloc(self, bytes_44398, "mem_44468")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_44468, np.int64(0),
                                                      images_mem_44381,
                                                      np.int64(0), np.int64(1),
                                                      N_28477, m_28478)
          gridDim_x_42531 = sdiv_up64(i32_res_28493, Tx_42530)
          gridDim_y_42532 = sdiv_up64(i32_res_28493, Ty_42529)
          binop_x_42534 = (gridDim_y_42532 * gridDim_zz_42533)
          grid_sizze_tile3d_42535 = (gridDim_x_42531 * binop_x_42534)
          count_shmem_42537 = sdiv_up64(np.int64(30), group_sizze_tile3d_42536)
          mem_44528 = opencl_alloc(self, bytes_44544, "mem_44528")
          if ((1 * (np.long(grid_sizze_tile3d_42535) * np.long(group_sizze_tile3d_42536))) != 0):
            self.mainMagnitudezisegmap_intragroup_42541_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(np.int64(120))),
                                                                     np.int64(m_28478),
                                                                     np.int32(n_28481),
                                                                     np.int64(i32_res_28493),
                                                                     np.int64(Ty_42529),
                                                                     np.int64(Tx_42530),
                                                                     np.int64(gridDim_x_42531),
                                                                     np.int64(gridDim_y_42532),
                                                                     np.int64(group_sizze_tile3d_42536),
                                                                     np.int64(count_shmem_42537),
                                                                     mem_44393,
                                                                     mem_44397,
                                                                     mem_44468,
                                                                     mem_44528)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_42541_var,
                                       ((np.long(grid_sizze_tile3d_42535) * np.long(group_sizze_tile3d_42536)),),
                                       (np.long(group_sizze_tile3d_42536),))
            if synchronous:
              sync(self)
          mem_44468 = None
          defunc_3_map_res_mem_44537 = mem_44528
        else:
          mem_44531 = opencl_alloc(self, bytes_44383, "mem_44531")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_44531, np.int64(0),
                                                      mem_44397, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28493, N_28477)
          mem_44536 = opencl_alloc(self, bytes_44544, "mem_44536")
          if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_34935):
            segment_sizze_nonzzero_45757 = smax64(np.int64(1), i32_res_28487)
            num_threads_45758 = (num_groups_34936 * segred_group_sizze_34935)
            if ((1 * (np.long(num_groups_34936) * np.long(segred_group_sizze_34935))) != 0):
              self.mainMagnitudezisegred_small_34797_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34935))),
                                                                  np.int64(N_28477),
                                                                  np.int64(m_28478),
                                                                  np.int64(i32_res_28487),
                                                                  np.int64(i32_res_28493),
                                                                  np.int64(num_groups_34936),
                                                                  np.int64(segment_sizze_nonzzero_45757),
                                                                  images_mem_44381,
                                                                  binop_p_mem_44390,
                                                                  mem_44531,
                                                                  mem_44536)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_small_34797_var,
                                         ((np.long(num_groups_34936) * np.long(segred_group_sizze_34935)),),
                                         (np.long(segred_group_sizze_34935),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_45778 = sdiv_up64(num_groups_34936,
                                                 smax64(np.int64(1),
                                                        ((m_28478 * i32_res_28493) * i32_res_28493)))
            elements_per_thread_45779 = sdiv_up64(i32_res_28487,
                                                  (segred_group_sizze_34935 * groups_per_segment_45778))
            virt_num_groups_45780 = (groups_per_segment_45778 * ((m_28478 * i32_res_28493) * i32_res_28493))
            num_threads_45781 = (num_groups_34936 * segred_group_sizze_34935)
            threads_per_segment_45782 = (groups_per_segment_45778 * segred_group_sizze_34935)
            group_res_arr_mem_45783 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_34935 * virt_num_groups_45780)),
                                                   "group_res_arr_mem_45783")
            mainMagnitudezicounter_mem_45785 = self.mainMagnitudezicounter_mem_45785
            if ((1 * (np.long(num_groups_34936) * np.long(segred_group_sizze_34935))) != 0):
              self.mainMagnitudezisegred_large_34797_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34935))),
                                                                  np.int64(N_28477),
                                                                  np.int64(i32_res_28487),
                                                                  np.int64(i32_res_28493),
                                                                  np.int64(num_groups_34936),
                                                                  np.int64(groups_per_segment_45778),
                                                                  np.int64(elements_per_thread_45779),
                                                                  np.int64(virt_num_groups_45780),
                                                                  np.int64(threads_per_segment_45782),
                                                                  images_mem_44381,
                                                                  binop_p_mem_44390,
                                                                  mem_44531,
                                                                  mem_44536,
                                                                  group_res_arr_mem_45783,
                                                                  mainMagnitudezicounter_mem_45785)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_large_34797_var,
                                         ((np.long(num_groups_34936) * np.long(segred_group_sizze_34935)),),
                                         (np.long(segred_group_sizze_34935),))
              if synchronous:
                sync(self)
          mem_44531 = None
          defunc_3_map_res_mem_44537 = mem_44536
        defunc_3_map_res_mem_44543 = defunc_3_map_res_mem_44537
      defunc_3_map_res_mem_44549 = defunc_3_map_res_mem_44543
    m_28624 = (np.int32(2) * k2p2zq_28491)
    x_28625 = (np.int64(2) * i32_res_28493)
    nm_28626 = (i32_res_28493 * x_28625)
    bounds_invalid_upwards_28627 = slt64(nm_28626, np.int64(0))
    valid_28628 = not(bounds_invalid_upwards_28627)
    range_valid_c_28629 = True
    assert valid_28628, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:79:21-29\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                  nm_28626,
                                                                                                                                                                                                                                                                  " is invalid."))
    zzero_28634 = (m_28624 == np.int32(0))
    nonzzero_28635 = not(zzero_28634)
    nonzzero_cert_28636 = True
    assert nonzzero_28635, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:74:41-47\n   #1  helpers.fut:74:14-79:30\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n" % ("division by zero",))
    loop_nonempty_28637 = slt32(np.int32(0), k2p2zq_28491)
    loop_not_taken_28638 = not(loop_nonempty_28637)
    protect_assert_disj_28639 = (nonzzero_28635 or loop_not_taken_28638)
    nonzzero_cert_28640 = True
    assert protect_assert_disj_28639, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:60:43-49\n   #1  helpers.fut:60:16-66:44\n   #2  helpers.fut:80:16-34\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:181:5-58\n   #5  bfastfinal.fut:176:1-182:37\n" % ("division by zero",))
    i32_res_28641 = sext_i32_i64(m_28624)
    x_28642 = (i32_res_28493 * i32_res_28641)
    dim_ok_28643 = (x_28642 == nm_28626)
    dim_ok_cert_28644 = True
    assert dim_ok_28643, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:16-43\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28645 = (x_28625 - i32_res_28493)
    empty_slice_28646 = (j_m_i_28645 == np.int64(0))
    m_28647 = (j_m_i_28645 - np.int64(1))
    i_p_m_t_s_28648 = (i32_res_28493 + m_28647)
    zzero_leq_i_p_m_t_s_28649 = sle64(np.int64(0), i_p_m_t_s_28648)
    i_p_m_t_s_leq_w_28650 = slt64(i_p_m_t_s_28648, i32_res_28641)
    i_lte_j_28651 = sle64(i32_res_28493, x_28625)
    y_28652 = (i_lte_j_28574 and i_p_m_t_s_leq_w_28650)
    y_28653 = (zzero_leq_i_p_m_t_s_28649 and y_28652)
    y_28654 = (i_lte_j_28651 and y_28653)
    forwards_ok_28655 = (i_lte_j_28574 and y_28654)
    ok_or_empty_28656 = (empty_slice_28646 or forwards_ok_28655)
    index_ok_28657 = (ok_or_empty_28590 and ok_or_empty_28656)
    index_certs_28658 = True
    assert index_ok_28657, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:83:8-30\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:181:5-58\n   #3  bfastfinal.fut:176:1-182:37\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28493,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28493,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   x_28625,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28493,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28641,
                                                                                                                                                                                                                   "]."))
    dim_match_28659 = (i32_res_28493 == j_m_i_28645)
    empty_or_match_cert_28660 = True
    assert dim_match_28659, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:83:8-45\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:181:5-58\n   #3  bfastfinal.fut:176:1-182:37\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                            i32_res_28493,
                                                                                                                                                                                                            ", ",
                                                                                                                                                                                                            j_m_i_28645,
                                                                                                                                                                                                            ") cannot match shape of type `[",
                                                                                                                                                                                                            i32_res_28493,
                                                                                                                                                                                                            "][",
                                                                                                                                                                                                            i32_res_28493,
                                                                                                                                                                                                            "]f32`."))
    max_group_sizze_35230 = self.max_group_size
    fits_35231 = sle64(nm_28626, max_group_sizze_35230)
    suff_intra_par_35229 = (self.sizes["mainMagnitude.suff_intra_par_11"] <= nm_28626)
    intra_suff_and_fits_35232 = (suff_intra_par_35229 and fits_35231)
    nest_sizze_35896 = (m_28478 * nm_28626)
    segmap_group_sizze_35897 = self.sizes["mainMagnitude.segmap_group_size_35840"]
    suff_intra_par_35936 = (self.sizes["mainMagnitude.suff_intra_par_13"] <= nm_28626)
    intra_suff_and_fits_35937 = (fits_35231 and suff_intra_par_35936)
    segmap_group_sizze_35989 = self.sizes["mainMagnitude.segmap_group_size_35722"]
    segmap_group_sizze_36005 = self.sizes["mainMagnitude.segmap_group_size_35623"]
    segmap_group_sizze_36055 = self.sizes["mainMagnitude.segmap_group_size_35553"]
    y_36065 = (i32_res_28493 * j_m_i_28645)
    nest_sizze_36066 = (m_28478 * y_36065)
    segmap_group_sizze_36067 = self.sizes["mainMagnitude.segmap_group_size_35324"]
    segmap_usable_groups_35990 = sdiv_up_safe64(m_28478,
                                                segmap_group_sizze_35989)
    segmap_usable_groups_36006 = sdiv_up_safe64(nest_sizze_35896,
                                                segmap_group_sizze_36005)
    segmap_usable_groups_36056 = sdiv_up_safe64(nest_sizze_35896,
                                                segmap_group_sizze_36055)
    bytes_44552 = (np.int64(4) * nm_28626)
    bytes_44575 = (np.int64(4) * nest_sizze_35896)
    binop_x_44626 = (j_m_i_28645 * nest_sizze_34882)
    bytes_44624 = (np.int64(4) * binop_x_44626)
    local_memory_capacity_45820 = self.max_local_memory
    if intra_suff_and_fits_35232:
      defunc_3_map_res_ixfn_44628 = i32_res_28493
    else:
      defunc_3_map_res_ixfn_44628 = j_m_i_28645
    local_memory_capacity_45883 = self.max_local_memory
    if (sle64(((bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_45883)) and intra_suff_and_fits_35232):
      mem_44573 = opencl_alloc(self, bytes_44544, "mem_44573")
      if ((1 * (np.long(m_28478) * np.long(nm_28626))) != 0):
        self.mainMagnitudezisegmap_intragroup_35056_var.set_args(self.global_failure,
                                                                 self.failure_is_an_option,
                                                                 self.global_failure_args,
                                                                 cl.LocalMemory(np.long(bytes_44552)),
                                                                 cl.LocalMemory(np.long(bytes_44552)),
                                                                 np.int32(k2p2zq_28491),
                                                                 np.int64(i32_res_28493),
                                                                 np.int32(m_28624),
                                                                 np.int64(nm_28626),
                                                                 np.int64(i32_res_28641),
                                                                 defunc_3_map_res_mem_44549,
                                                                 mem_44573)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_35056_var,
                                   ((np.long(m_28478) * np.long(nm_28626)),),
                                   (np.long(nm_28626),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_44629 = mem_44573
    else:
      segmap_usable_groups_35898 = sdiv_up64(nest_sizze_35896,
                                             segmap_group_sizze_35897)
      mem_44577 = opencl_alloc(self, bytes_44575, "mem_44577")
      if ((1 * (np.long(segmap_usable_groups_35898) * np.long(segmap_group_sizze_35897))) != 0):
        self.mainMagnitudezisegmap_35837_var.set_args(self.global_failure,
                                                      self.failure_is_an_option,
                                                      self.global_failure_args,
                                                      np.int64(m_28478),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int32(m_28624),
                                                      np.int64(nm_28626),
                                                      defunc_3_map_res_mem_44549,
                                                      mem_44577)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35837_var,
                                   ((np.long(segmap_usable_groups_35898) * np.long(segmap_group_sizze_35897)),),
                                   (np.long(segmap_group_sizze_35897),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      ctx_param_ext_44578 = m_28478
      ctx_param_ext_44579 = nm_28626
      ctx_param_ext_44580 = np.int64(0)
      ctx_param_ext_44581 = nm_28626
      ctx_param_ext_44582 = m_28478
      ctx_param_ext_44583 = np.int64(1)
      ctx_param_ext_44584 = nm_28626
      mem_param_44585 = mem_44577
      i_35922 = np.int32(0)
      one_46888 = np.int32(1)
      for counter_46887 in range(k2p2zq_28491):
        i32_res_35924 = sext_i32_i64(i_35922)
        x_35925 = sle64(np.int64(0), i32_res_35924)
        y_35926 = slt64(i32_res_35924, nm_28626)
        bounds_check_35927 = (x_35925 and y_35926)
        index_certs_35928 = True
        assert bounds_check_35927, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:59:16-27\n   #1  helpers.fut:80:16-34\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n" % ("Index [",
                                                                                                                                                                                                                                         i32_res_35924,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_28626,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_45843 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44607 = m_28478
        else:
          gauss_jordan_res_ixfn_44607 = ctx_param_ext_44582
        local_memory_capacity_45844 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44608 = nm_28626
        else:
          gauss_jordan_res_ixfn_44608 = ctx_param_ext_44584
        local_memory_capacity_45845 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44609 = m_28478
        else:
          gauss_jordan_res_ixfn_44609 = ctx_param_ext_44578
        local_memory_capacity_45846 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44610 = nm_28626
        else:
          gauss_jordan_res_ixfn_44610 = ctx_param_ext_44579
        local_memory_capacity_45847 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44611 = nm_28626
        else:
          gauss_jordan_res_ixfn_44611 = ctx_param_ext_44581
        local_memory_capacity_45848 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44612 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_44612 = ctx_param_ext_44583
        local_memory_capacity_45849 = self.max_local_memory
        if intra_suff_and_fits_35937:
          gauss_jordan_res_ixfn_44613 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_44613 = ctx_param_ext_44580
        local_memory_capacity_45877 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_45877)) and sle64((bytes_44552 + srem64((np.int64(8) - srem64(bytes_44552,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_45877))) and intra_suff_and_fits_35937):
          mem_44590 = opencl_alloc(self, bytes_44575, "mem_44590")
          group_sizze_45853 = self.sizes["mainMagnitude.group_size_45853"]
          num_groups_45854 = sdiv_up64((m_28478 * nm_28626), group_sizze_45853)
          if ((1 * (np.long(num_groups_45854) * np.long(group_sizze_45853))) != 0):
            self.mainMagnitudezicopy_45850_var.set_args(np.int64(m_28478),
                                                        np.int64(nm_28626),
                                                        np.int64(ctx_param_ext_44580),
                                                        np.int64(ctx_param_ext_44581),
                                                        np.int64(ctx_param_ext_44583),
                                                        mem_param_44585,
                                                        mem_44590)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezicopy_45850_var,
                                       ((np.long(num_groups_45854) * np.long(group_sizze_45853)),),
                                       (np.long(group_sizze_45853),))
            if synchronous:
              sync(self)
          mem_44598 = opencl_alloc(self, bytes_44575, "mem_44598")
          if ((1 * (np.long(m_28478) * np.long(nm_28626))) != 0):
            self.mainMagnitudezisegmap_intragroup_35383_var.set_args(self.global_failure,
                                                                     self.failure_is_an_option,
                                                                     self.global_failure_args,
                                                                     cl.LocalMemory(np.long(bytes_44552)),
                                                                     np.int64(m_28478),
                                                                     np.int32(k2p2zq_28491),
                                                                     np.int32(m_28624),
                                                                     np.int64(nm_28626),
                                                                     np.int32(i_35922),
                                                                     np.int64(i32_res_35924),
                                                                     np.int64(ctx_param_ext_44580),
                                                                     np.int64(ctx_param_ext_44581),
                                                                     np.int64(ctx_param_ext_44583),
                                                                     mem_param_44585,
                                                                     mem_44590,
                                                                     mem_44598)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_35383_var,
                                       ((np.long(m_28478) * np.long(nm_28626)),),
                                       (np.long(nm_28626),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          mem_44590 = None
          gauss_jordan_res_mem_44614 = mem_44598
        else:
          mem_44601 = opencl_alloc(self, m_28478, "mem_44601")
          if ((1 * (np.long(segmap_usable_groups_35990) * np.long(segmap_group_sizze_35989))) != 0):
            self.mainMagnitudezisegmap_35720_var.set_args(self.global_failure,
                                                          np.int64(m_28478),
                                                          np.int64(i32_res_35924),
                                                          np.int64(ctx_param_ext_44580),
                                                          np.int64(ctx_param_ext_44581),
                                                          np.int64(ctx_param_ext_44583),
                                                          mem_param_44585,
                                                          mem_44601)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35720_var,
                                       ((np.long(segmap_usable_groups_35990) * np.long(segmap_group_sizze_35989)),),
                                       (np.long(segmap_group_sizze_35989),))
            if synchronous:
              sync(self)
          mem_44605 = opencl_alloc(self, bytes_44575, "mem_44605")
          if ((1 * (np.long(segmap_usable_groups_36006) * np.long(segmap_group_sizze_36005))) != 0):
            self.mainMagnitudezisegmap_35620_var.set_args(self.global_failure,
                                                          self.failure_is_an_option,
                                                          self.global_failure_args,
                                                          np.int64(m_28478),
                                                          np.int32(k2p2zq_28491),
                                                          np.int32(m_28624),
                                                          np.int64(nm_28626),
                                                          np.int32(i_35922),
                                                          np.int64(i32_res_35924),
                                                          np.int64(ctx_param_ext_44580),
                                                          np.int64(ctx_param_ext_44581),
                                                          np.int64(ctx_param_ext_44583),
                                                          mem_param_44585,
                                                          mem_44601, mem_44605)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35620_var,
                                       ((np.long(segmap_usable_groups_36006) * np.long(segmap_group_sizze_36005)),),
                                       (np.long(segmap_group_sizze_36005),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
          mem_44601 = None
          if ((1 * (np.long(segmap_usable_groups_36056) * np.long(segmap_group_sizze_36055))) != 0):
            self.mainMagnitudezisegmap_35550_var.set_args(self.global_failure,
                                                          np.int64(m_28478),
                                                          np.int64(nm_28626),
                                                          np.int64(ctx_param_ext_44580),
                                                          np.int64(ctx_param_ext_44581),
                                                          np.int64(ctx_param_ext_44583),
                                                          mem_param_44585,
                                                          mem_44605)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35550_var,
                                       ((np.long(segmap_usable_groups_36056) * np.long(segmap_group_sizze_36055)),),
                                       (np.long(segmap_group_sizze_36055),))
            if synchronous:
              sync(self)
          mem_44605 = None
          gauss_jordan_res_mem_44614 = mem_param_44585
        ctx_param_ext_tmp_45834 = gauss_jordan_res_ixfn_44609
        ctx_param_ext_tmp_45835 = gauss_jordan_res_ixfn_44610
        ctx_param_ext_tmp_45836 = gauss_jordan_res_ixfn_44613
        ctx_param_ext_tmp_45837 = gauss_jordan_res_ixfn_44611
        ctx_param_ext_tmp_45838 = gauss_jordan_res_ixfn_44607
        ctx_param_ext_tmp_45839 = gauss_jordan_res_ixfn_44612
        ctx_param_ext_tmp_45840 = gauss_jordan_res_ixfn_44608
        mem_param_tmp_45841 = gauss_jordan_res_mem_44614
        ctx_param_ext_44578 = ctx_param_ext_tmp_45834
        ctx_param_ext_44579 = ctx_param_ext_tmp_45835
        ctx_param_ext_44580 = ctx_param_ext_tmp_45836
        ctx_param_ext_44581 = ctx_param_ext_tmp_45837
        ctx_param_ext_44582 = ctx_param_ext_tmp_45838
        ctx_param_ext_44583 = ctx_param_ext_tmp_45839
        ctx_param_ext_44584 = ctx_param_ext_tmp_45840
        mem_param_44585 = mem_param_tmp_45841
        i_35922 += one_46888
      gauss_jordan_res_r_ixfn_44615 = ctx_param_ext_44578
      gauss_jordan_res_r_ixfn_44616 = ctx_param_ext_44579
      gauss_jordan_res_r_ixfn_44617 = ctx_param_ext_44580
      gauss_jordan_res_r_ixfn_44618 = ctx_param_ext_44581
      gauss_jordan_res_r_ixfn_44619 = ctx_param_ext_44582
      gauss_jordan_res_r_ixfn_44620 = ctx_param_ext_44583
      gauss_jordan_res_r_ixfn_44621 = ctx_param_ext_44584
      gauss_jordan_res_r_mem_44622 = mem_param_44585
      mem_44577 = None
      segmap_usable_groups_36068 = sdiv_up64(nest_sizze_36066,
                                             segmap_group_sizze_36067)
      mem_44627 = opencl_alloc(self, bytes_44624, "mem_44627")
      if ((1 * (np.long(segmap_usable_groups_36068) * np.long(segmap_group_sizze_36067))) != 0):
        self.mainMagnitudezisegmap_35320_var.set_args(self.global_failure,
                                                      np.int64(m_28478),
                                                      np.int64(i32_res_28493),
                                                      np.int64(nm_28626),
                                                      np.int64(i32_res_28641),
                                                      np.int64(x_28642),
                                                      np.int64(j_m_i_28645),
                                                      np.int64(gauss_jordan_res_r_ixfn_44617),
                                                      np.int64(gauss_jordan_res_r_ixfn_44618),
                                                      np.int64(gauss_jordan_res_r_ixfn_44620),
                                                      gauss_jordan_res_r_mem_44622,
                                                      mem_44627)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35320_var,
                                   ((np.long(segmap_usable_groups_36068) * np.long(segmap_group_sizze_36067)),),
                                   (np.long(segmap_group_sizze_36067),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_44622 = None
      defunc_3_map_res_mem_44629 = mem_44627
    defunc_3_map_res_mem_44549 = None
    suff_outer_par_36076 = (self.sizes["mainMagnitude.suff_outer_par_16"] <= m_28478)
    segmap_group_sizze_36098 = self.sizes["mainMagnitude.segmap_group_size_36080"]
    max_num_groups_45884 = self.sizes["mainMagnitude.segmap_num_groups_36082"]
    num_groups_36099 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28478,
                                                            segmap_group_sizze_36098),
                                                  sext_i32_i64(max_num_groups_45884))))
    suff_outer_par_36183 = (self.sizes["mainMagnitude.suff_outer_par_17"] <= nest_sizze_34882)
    nest_sizze_36199 = (i32_res_28487 * nest_sizze_34882)
    segred_group_sizze_36200 = self.sizes["mainMagnitude.segred_group_size_36142"]
    max_num_groups_45885 = self.sizes["mainMagnitude.segred_num_groups_36144"]
    num_groups_36201 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36199,
                                                            segred_group_sizze_36200),
                                                  sext_i32_i64(max_num_groups_45885))))
    Ty_42675 = self.sizes["mainMagnitude.Ty_42672"]
    Ry_42676 = self.sizes["mainMagnitude.Ry_42674"]
    Tx_42677 = self.sizes["mainMagnitude.Tx_42671"]
    Rx_42678 = self.sizes["mainMagnitude.Rx_42673"]
    Tk_42679 = self.sizes["mainMagnitude.Tk_42670"]
    TxRx_42682 = (Tx_42677 * Rx_42678)
    TyRy_42683 = (Ty_42675 * Ry_42676)
    a_loc_szz_42685 = (Tk_42679 * TyRy_42683)
    binop_x_42686 = (Tx_42677 * Tk_42679)
    b_loc_szz_42687 = (Rx_42678 * binop_x_42686)
    group_sizze_42691 = (Ty_42675 * Tx_42677)
    bytes_44648 = (np.int64(4) * nest_sizze_34882)
    binop_x_44662 = (Ry_42676 * group_sizze_42691)
    binop_x_44663 = (Rx_42678 * binop_x_44662)
    bytes_44660 = (np.int64(4) * binop_x_44663)
    binop_x_44654 = (Ry_42676 * Rx_42678)
    bytes_44653 = (np.int64(4) * binop_x_44654)
    bytes_44665 = (np.int64(4) * a_loc_szz_42685)
    bytes_44667 = (np.int64(4) * b_loc_szz_42687)
    bytes_44736 = (np.int64(4) * binop_x_44662)
    binop_x_44742 = (Rx_42678 * group_sizze_42691)
    bytes_44740 = (np.int64(4) * binop_x_44742)
    bytes_44728 = (np.int64(4) * Ry_42676)
    bytes_44730 = (np.int64(4) * Rx_42678)
    binop_x_45464 = (np.int64(4) * Ty_42675)
    binop_x_45465 = (Tx_42677 * binop_x_45464)
    binop_x_45466 = (Ry_42676 * binop_x_45465)
    sizze_45467 = (Rx_42678 * binop_x_45466)
    num_threads_45596 = (segmap_group_sizze_36098 * num_groups_36099)
    total_sizze_45597 = (bytes_44448 * num_threads_45596)
    local_memory_capacity_46015 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46015)) and suff_outer_par_36076):
      mem_44632 = opencl_alloc(self, bytes_44398, "mem_44632")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44632, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_28477, m_28478)
      mem_44650 = opencl_alloc(self, bytes_44648, "mem_44650")
      mem_44635 = opencl_alloc(self, total_sizze_45597, "mem_44635")
      if ((1 * (np.long(num_groups_36099) * np.long(segmap_group_sizze_36098))) != 0):
        self.mainMagnitudezisegmap_36078_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.int64(m_28478),
                                                      np.int32(n_28481),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_36099),
                                                      binop_p_mem_44390,
                                                      mem_44632, mem_44635,
                                                      mem_44650)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36078_var,
                                   ((np.long(num_groups_36099) * np.long(segmap_group_sizze_36098)),),
                                   (np.long(segmap_group_sizze_36098),))
        if synchronous:
          sync(self)
      mem_44632 = None
      mem_44635 = None
      mem_44848 = opencl_alloc(self, bytes_44648, "mem_44848")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44848, np.int64(0),
                                                  mem_44650, np.int64(0),
                                                  np.int64(1), m_28478,
                                                  i32_res_28493)
      mem_44650 = None
      defunc_3_map_res_mem_44850 = mem_44848
    else:
      local_memory_capacity_46014 = self.max_local_memory
      if (sle64(((bytes_44665 + srem64((np.int64(8) - srem64(bytes_44665,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44667 + srem64((np.int64(8) - srem64(bytes_44667,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46014)) and suff_outer_par_36183):
        tk_div_tx_42680 = sdiv_up64(Tk_42679, Tx_42677)
        tk_div_ty_42681 = sdiv_up64(Tk_42679, Ty_42675)
        gridDim_x_42688 = sdiv_up64(i32_res_28493, TxRx_42682)
        gridDim_y_42689 = sdiv_up64(m_28478, TyRy_42683)
        grid_sizze_42690 = (gridDim_x_42688 * gridDim_y_42689)
        full_tiles_42719 = squot64(i32_res_28487, Tk_42679)
        kk_42926 = (Tk_42679 * full_tiles_42719)
        mem_44840 = opencl_alloc(self, bytes_44648, "mem_44840")
        if ((1 * (np.long(grid_sizze_42690) * np.long(group_sizze_42691))) != 0):
          self.mainMagnitudezisegmap_intragroup_42694_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_44667)),
                                                                   cl.LocalMemory(np.long(bytes_44665)),
                                                                   np.int64(N_28477),
                                                                   np.int64(m_28478),
                                                                   np.int64(i32_res_28487),
                                                                   np.int64(i32_res_28493),
                                                                   np.int64(gridDim_x_42688),
                                                                   np.int64(full_tiles_42719),
                                                                   np.int64(kk_42926),
                                                                   images_mem_44381,
                                                                   mem_44393,
                                                                   mem_44840)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_42694_var,
                                     ((np.long(grid_sizze_42690) * np.long(group_sizze_42691)),),
                                     (np.long(group_sizze_42691),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44845 = mem_44840
      else:
        mem_44844 = opencl_alloc(self, bytes_44648, "mem_44844")
        if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_36200):
          segment_sizze_nonzzero_45954 = smax64(np.int64(1), i32_res_28487)
          num_threads_45955 = (num_groups_36201 * segred_group_sizze_36200)
          if ((1 * (np.long(num_groups_36201) * np.long(segred_group_sizze_36200))) != 0):
            self.mainMagnitudezisegred_small_36148_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36200))),
                                                                np.int64(N_28477),
                                                                np.int64(m_28478),
                                                                np.int64(i32_res_28487),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_36201),
                                                                np.int64(segment_sizze_nonzzero_45954),
                                                                images_mem_44381,
                                                                binop_p_mem_44390,
                                                                mem_44844)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36148_var,
                                       ((np.long(num_groups_36201) * np.long(segred_group_sizze_36200)),),
                                       (np.long(segred_group_sizze_36200),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45975 = sdiv_up64(num_groups_36201,
                                               smax64(np.int64(1),
                                                      (m_28478 * i32_res_28493)))
          elements_per_thread_45976 = sdiv_up64(i32_res_28487,
                                                (segred_group_sizze_36200 * groups_per_segment_45975))
          virt_num_groups_45977 = (groups_per_segment_45975 * (m_28478 * i32_res_28493))
          num_threads_45978 = (num_groups_36201 * segred_group_sizze_36200)
          threads_per_segment_45979 = (groups_per_segment_45975 * segred_group_sizze_36200)
          group_res_arr_mem_45980 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36200 * virt_num_groups_45977)),
                                                 "group_res_arr_mem_45980")
          mainMagnitudezicounter_mem_45982 = self.mainMagnitudezicounter_mem_45982
          if ((1 * (np.long(num_groups_36201) * np.long(segred_group_sizze_36200))) != 0):
            self.mainMagnitudezisegred_large_36148_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36200))),
                                                                np.int64(N_28477),
                                                                np.int64(i32_res_28487),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_36201),
                                                                np.int64(groups_per_segment_45975),
                                                                np.int64(elements_per_thread_45976),
                                                                np.int64(virt_num_groups_45977),
                                                                np.int64(threads_per_segment_45979),
                                                                images_mem_44381,
                                                                binop_p_mem_44390,
                                                                mem_44844,
                                                                group_res_arr_mem_45980,
                                                                mainMagnitudezicounter_mem_45982)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36148_var,
                                       ((np.long(num_groups_36201) * np.long(segred_group_sizze_36200)),),
                                       (np.long(segred_group_sizze_36200),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44845 = mem_44844
      defunc_3_map_res_mem_44850 = defunc_3_map_res_mem_44845
    binop_p_mem_44390 = None
    mem_44393 = None
    suff_outer_par_36217 = (self.sizes["mainMagnitude.suff_outer_par_18"] <= m_28478)
    segmap_group_sizze_36238 = self.sizes["mainMagnitude.segmap_group_size_36221"]
    max_num_groups_46016 = self.sizes["mainMagnitude.segmap_num_groups_36223"]
    num_groups_36239 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28478,
                                                            segmap_group_sizze_36238),
                                                  sext_i32_i64(max_num_groups_46016))))
    suff_outer_par_36318 = (self.sizes["mainMagnitude.suff_outer_par_19"] <= nest_sizze_34882)
    segred_group_sizze_36333 = self.sizes["mainMagnitude.segred_group_size_36279"]
    max_num_groups_46017 = self.sizes["mainMagnitude.segred_num_groups_36281"]
    num_groups_36334 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_44546,
                                                            segred_group_sizze_36333),
                                                  sext_i32_i64(max_num_groups_46017))))
    tile_sizze_43138 = self.sizes["mainMagnitude.tile_size_43137"]
    group_sizze_43139 = (tile_sizze_43138 * tile_sizze_43138)
    bytes_44882 = (np.int64(4) * group_sizze_43139)
    binop_x_45480 = (np.int64(4) * tile_sizze_43138)
    sizze_45481 = (tile_sizze_43138 * binop_x_45480)
    num_threads_45600 = (segmap_group_sizze_36238 * num_groups_36239)
    total_sizze_45601 = (bytes_44448 * num_threads_45600)
    local_memory_capacity_46103 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46103)) and suff_outer_par_36217):
      mem_44854 = opencl_alloc(self, bytes_44443, "mem_44854")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44854, np.int64(0),
                                                  defunc_3_map_res_mem_44629,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28493 * i32_res_28493),
                                                  m_28478)
      mem_44857 = opencl_alloc(self, bytes_44648, "mem_44857")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44857, np.int64(0),
                                                  defunc_3_map_res_mem_44850,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28493, m_28478)
      mem_44875 = opencl_alloc(self, bytes_44648, "mem_44875")
      mem_44860 = opencl_alloc(self, total_sizze_45601, "mem_44860")
      if ((1 * (np.long(num_groups_36239) * np.long(segmap_group_sizze_36238))) != 0):
        self.mainMagnitudezisegmap_36219_var.set_args(self.global_failure,
                                                      np.int64(m_28478),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_36239),
                                                      mem_44854, mem_44857,
                                                      mem_44860, mem_44875)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36219_var,
                                   ((np.long(num_groups_36239) * np.long(segmap_group_sizze_36238)),),
                                   (np.long(segmap_group_sizze_36238),))
        if synchronous:
          sync(self)
      mem_44854 = None
      mem_44857 = None
      mem_44860 = None
      mem_44914 = opencl_alloc(self, bytes_44648, "mem_44914")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44914, np.int64(0),
                                                  mem_44875, np.int64(0),
                                                  np.int64(1), m_28478,
                                                  i32_res_28493)
      mem_44875 = None
      defunc_4_map_res_mem_44916 = mem_44914
    else:
      local_memory_capacity_46102 = self.max_local_memory
      if (sle64(((bytes_44882 + srem64((np.int64(8) - srem64(bytes_44882,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44882 + srem64((np.int64(8) - srem64(bytes_44882,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46102)) and suff_outer_par_36318):
        mem_44879 = opencl_alloc(self, bytes_44544, "mem_44879")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44879, np.int64(0),
                                                    defunc_3_map_res_mem_44629,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28493,
                                                    (m_28478 * i32_res_28493))
        num_groups_x_43140 = sdiv_up64(m_28478, tile_sizze_43138)
        num_groups_y_43141 = sdiv_up64(i32_res_28493, tile_sizze_43138)
        num_groups_top_43142 = (num_groups_x_43140 * num_groups_y_43141)
        num_whole_tiles_43159 = squot64(i32_res_28493, tile_sizze_43138)
        residual_input_43286 = srem64(i32_res_28493, tile_sizze_43138)
        cond_43287 = (residual_input_43286 == np.int64(0))
        mem_44906 = opencl_alloc(self, bytes_44648, "mem_44906")
        if ((1 * (np.long(num_groups_top_43142) * np.long(group_sizze_43139))) != 0):
          self.mainMagnitudezisegmap_intragroup_43143_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_44882)),
                                                                   cl.LocalMemory(np.long(bytes_44882)),
                                                                   np.int64(m_28478),
                                                                   np.int64(i32_res_28493),
                                                                   np.int64(num_groups_y_43141),
                                                                   np.int64(num_whole_tiles_43159),
                                                                   np.int64(residual_input_43286),
                                                                   np.byte(cond_43287),
                                                                   defunc_3_map_res_mem_44850,
                                                                   mem_44879,
                                                                   mem_44906)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_43143_var,
                                     ((np.long(num_groups_top_43142) * np.long(group_sizze_43139)),),
                                     (np.long(group_sizze_43139),))
          if synchronous:
            sync(self)
        mem_44879 = None
        defunc_4_map_res_mem_44911 = mem_44906
      else:
        mem_44910 = opencl_alloc(self, bytes_44648, "mem_44910")
        if slt64((i32_res_28493 * np.int64(2)), segred_group_sizze_36333):
          segment_sizze_nonzzero_46042 = smax64(np.int64(1), i32_res_28493)
          num_threads_46043 = (num_groups_36334 * segred_group_sizze_36333)
          if ((1 * (np.long(num_groups_36334) * np.long(segred_group_sizze_36333))) != 0):
            self.mainMagnitudezisegred_small_36285_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36333))),
                                                                np.int64(m_28478),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_36334),
                                                                np.int64(segment_sizze_nonzzero_46042),
                                                                defunc_3_map_res_mem_44629,
                                                                defunc_3_map_res_mem_44850,
                                                                mem_44910)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36285_var,
                                       ((np.long(num_groups_36334) * np.long(segred_group_sizze_36333)),),
                                       (np.long(segred_group_sizze_36333),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46063 = sdiv_up64(num_groups_36334,
                                               smax64(np.int64(1),
                                                      (m_28478 * i32_res_28493)))
          elements_per_thread_46064 = sdiv_up64(i32_res_28493,
                                                (segred_group_sizze_36333 * groups_per_segment_46063))
          virt_num_groups_46065 = (groups_per_segment_46063 * (m_28478 * i32_res_28493))
          num_threads_46066 = (num_groups_36334 * segred_group_sizze_36333)
          threads_per_segment_46067 = (groups_per_segment_46063 * segred_group_sizze_36333)
          group_res_arr_mem_46068 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36333 * virt_num_groups_46065)),
                                                 "group_res_arr_mem_46068")
          mainMagnitudezicounter_mem_46070 = self.mainMagnitudezicounter_mem_46070
          if ((1 * (np.long(num_groups_36334) * np.long(segred_group_sizze_36333))) != 0):
            self.mainMagnitudezisegred_large_36285_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36333))),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_36334),
                                                                np.int64(groups_per_segment_46063),
                                                                np.int64(elements_per_thread_46064),
                                                                np.int64(virt_num_groups_46065),
                                                                np.int64(threads_per_segment_46067),
                                                                defunc_3_map_res_mem_44629,
                                                                defunc_3_map_res_mem_44850,
                                                                mem_44910,
                                                                group_res_arr_mem_46068,
                                                                mainMagnitudezicounter_mem_46070)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36285_var,
                                       ((np.long(num_groups_36334) * np.long(segred_group_sizze_36333)),),
                                       (np.long(segred_group_sizze_36333),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_44911 = mem_44910
      defunc_4_map_res_mem_44916 = defunc_4_map_res_mem_44911
    defunc_3_map_res_mem_44629 = None
    defunc_3_map_res_mem_44850 = None
    suff_outer_par_36349 = (self.sizes["mainMagnitude.suff_outer_par_20"] <= m_28478)
    segmap_group_sizze_36369 = self.sizes["mainMagnitude.segmap_group_size_36353"]
    max_num_groups_46104 = self.sizes["mainMagnitude.segmap_num_groups_36355"]
    num_groups_36370 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28478,
                                                            segmap_group_sizze_36369),
                                                  sext_i32_i64(max_num_groups_46104))))
    suff_outer_par_36446 = (self.sizes["mainMagnitude.suff_outer_par_21"] <= binop_x_44399)
    nest_sizze_36460 = (i32_res_28493 * binop_x_44399)
    segred_group_sizze_36461 = self.sizes["mainMagnitude.segred_group_size_36409"]
    max_num_groups_46105 = self.sizes["mainMagnitude.segred_num_groups_36411"]
    num_groups_36462 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36460,
                                                            segred_group_sizze_36461),
                                                  sext_i32_i64(max_num_groups_46105))))
    Ty_43416 = self.sizes["mainMagnitude.Ty_43413"]
    Ry_43417 = self.sizes["mainMagnitude.Ry_43415"]
    Tx_43418 = self.sizes["mainMagnitude.Tx_43412"]
    Rx_43419 = self.sizes["mainMagnitude.Rx_43414"]
    Tk_43420 = self.sizes["mainMagnitude.Tk_43411"]
    TxRx_43423 = (Tx_43418 * Rx_43419)
    TyRy_43424 = (Ty_43416 * Ry_43417)
    a_loc_szz_43426 = (Tk_43420 * TyRy_43424)
    binop_x_43427 = (Tx_43418 * Tk_43420)
    b_loc_szz_43428 = (Rx_43419 * binop_x_43427)
    group_sizze_43432 = (Ty_43416 * Tx_43418)
    bytes_44921 = (np.int64(4) * N_28477)
    binop_x_44952 = (Ry_43417 * group_sizze_43432)
    binop_x_44953 = (Rx_43419 * binop_x_44952)
    bytes_44950 = (np.int64(4) * binop_x_44953)
    binop_x_44944 = (Ry_43417 * Rx_43419)
    bytes_44943 = (np.int64(4) * binop_x_44944)
    bytes_44955 = (np.int64(4) * a_loc_szz_43426)
    bytes_44957 = (np.int64(4) * b_loc_szz_43428)
    bytes_45026 = (np.int64(4) * binop_x_44952)
    binop_x_45032 = (Rx_43419 * group_sizze_43432)
    bytes_45030 = (np.int64(4) * binop_x_45032)
    bytes_45018 = (np.int64(4) * Ry_43417)
    bytes_45020 = (np.int64(4) * Rx_43419)
    binop_x_45494 = (np.int64(4) * Ty_43416)
    binop_x_45495 = (Tx_43418 * binop_x_45494)
    binop_x_45496 = (Ry_43417 * binop_x_45495)
    sizze_45497 = (Rx_43419 * binop_x_45496)
    num_threads_45604 = (segmap_group_sizze_36369 * num_groups_36370)
    total_sizze_45605 = (bytes_44921 * num_threads_45604)
    local_memory_capacity_46235 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46235)) and suff_outer_par_36349):
      mem_44919 = opencl_alloc(self, bytes_44648, "mem_44919")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44919, np.int64(0),
                                                  defunc_4_map_res_mem_44916,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28493, m_28478)
      mem_44937 = opencl_alloc(self, bytes_44398, "mem_44937")
      mem_44922 = opencl_alloc(self, total_sizze_45605, "mem_44922")
      if ((1 * (np.long(num_groups_36370) * np.long(segmap_group_sizze_36369))) != 0):
        self.mainMagnitudezisegmap_36351_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.int64(m_28478),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_36370),
                                                      mem_44397, mem_44919,
                                                      mem_44922, mem_44937)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36351_var,
                                   ((np.long(num_groups_36370) * np.long(segmap_group_sizze_36369)),),
                                   (np.long(segmap_group_sizze_36369),))
        if synchronous:
          sync(self)
      mem_44919 = None
      mem_44922 = None
      mem_45138 = opencl_alloc(self, bytes_44398, "mem_45138")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45138, np.int64(0),
                                                  mem_44937, np.int64(0),
                                                  np.int64(1), m_28478, N_28477)
      mem_44937 = None
      defunc_3_map_res_mem_45140 = mem_45138
    else:
      local_memory_capacity_46234 = self.max_local_memory
      if (sle64(((bytes_44955 + srem64((np.int64(8) - srem64(bytes_44955,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44957 + srem64((np.int64(8) - srem64(bytes_44957,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46234)) and suff_outer_par_36446):
        mem_44940 = opencl_alloc(self, bytes_44383, "mem_44940")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44940, np.int64(0),
                                                    mem_44397, np.int64(0),
                                                    np.int64(1), i32_res_28493,
                                                    N_28477)
        tk_div_tx_43421 = sdiv_up64(Tk_43420, Tx_43418)
        tk_div_ty_43422 = sdiv_up64(Tk_43420, Ty_43416)
        gridDim_x_43429 = sdiv_up64(N_28477, TxRx_43423)
        gridDim_y_43430 = sdiv_up64(m_28478, TyRy_43424)
        grid_sizze_43431 = (gridDim_x_43429 * gridDim_y_43430)
        full_tiles_43460 = squot64(i32_res_28493, Tk_43420)
        kk_43663 = (Tk_43420 * full_tiles_43460)
        mem_45130 = opencl_alloc(self, bytes_44398, "mem_45130")
        if ((1 * (np.long(grid_sizze_43431) * np.long(group_sizze_43432))) != 0):
          self.mainMagnitudezisegmap_intragroup_43435_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_44957)),
                                                                   cl.LocalMemory(np.long(bytes_44955)),
                                                                   np.int64(N_28477),
                                                                   np.int64(m_28478),
                                                                   np.int64(i32_res_28493),
                                                                   np.int64(gridDim_x_43429),
                                                                   np.int64(full_tiles_43460),
                                                                   np.int64(kk_43663),
                                                                   defunc_4_map_res_mem_44916,
                                                                   mem_44940,
                                                                   mem_45130)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_43435_var,
                                     ((np.long(grid_sizze_43431) * np.long(group_sizze_43432)),),
                                     (np.long(group_sizze_43432),))
          if synchronous:
            sync(self)
        mem_44940 = None
        defunc_3_map_res_mem_45135 = mem_45130
      else:
        mem_45134 = opencl_alloc(self, bytes_44398, "mem_45134")
        if slt64((i32_res_28493 * np.int64(2)), segred_group_sizze_36461):
          segment_sizze_nonzzero_46174 = smax64(np.int64(1), i32_res_28493)
          num_threads_46175 = (num_groups_36462 * segred_group_sizze_36461)
          if ((1 * (np.long(num_groups_36462) * np.long(segred_group_sizze_36461))) != 0):
            self.mainMagnitudezisegred_small_36415_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36461))),
                                                                np.int64(N_28477),
                                                                np.int64(m_28478),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_36462),
                                                                np.int64(segment_sizze_nonzzero_46174),
                                                                mem_44397,
                                                                defunc_4_map_res_mem_44916,
                                                                mem_45134)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36415_var,
                                       ((np.long(num_groups_36462) * np.long(segred_group_sizze_36461)),),
                                       (np.long(segred_group_sizze_36461),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46195 = sdiv_up64(num_groups_36462,
                                               smax64(np.int64(1),
                                                      (m_28478 * N_28477)))
          elements_per_thread_46196 = sdiv_up64(i32_res_28493,
                                                (segred_group_sizze_36461 * groups_per_segment_46195))
          virt_num_groups_46197 = (groups_per_segment_46195 * (m_28478 * N_28477))
          num_threads_46198 = (num_groups_36462 * segred_group_sizze_36461)
          threads_per_segment_46199 = (groups_per_segment_46195 * segred_group_sizze_36461)
          group_res_arr_mem_46200 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36461 * virt_num_groups_46197)),
                                                 "group_res_arr_mem_46200")
          mainMagnitudezicounter_mem_46202 = self.mainMagnitudezicounter_mem_46202
          if ((1 * (np.long(num_groups_36462) * np.long(segred_group_sizze_36461))) != 0):
            self.mainMagnitudezisegred_large_36415_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36461))),
                                                                np.int64(N_28477),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_36462),
                                                                np.int64(groups_per_segment_46195),
                                                                np.int64(elements_per_thread_46196),
                                                                np.int64(virt_num_groups_46197),
                                                                np.int64(threads_per_segment_46199),
                                                                mem_44397,
                                                                defunc_4_map_res_mem_44916,
                                                                mem_45134,
                                                                group_res_arr_mem_46200,
                                                                mainMagnitudezicounter_mem_46202)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36415_var,
                                       ((np.long(num_groups_36462) * np.long(segred_group_sizze_36461)),),
                                       (np.long(segred_group_sizze_36461),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_45135 = mem_45134
      defunc_3_map_res_mem_45140 = defunc_3_map_res_mem_45135
    mem_44397 = None
    defunc_4_map_res_mem_44916 = None
    i_28781 = (N_28477 - np.int64(1))
    x_28782 = sle64(np.int64(0), i_28781)
    y_28783 = slt64(i_28781, N_28477)
    bounds_check_28784 = (x_28782 and y_28783)
    index_certs_28785 = True
    assert bounds_check_28784, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:16-75\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-77:25\n   #6  bfastfinal.fut:181:5-58\n   #7  bfastfinal.fut:176:1-182:37\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28781,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28477,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_36591 = sle64(N_28477, max_group_sizze_35230)
    suff_intra_par_36589 = (self.sizes["mainMagnitude.suff_intra_par_24"] <= N_28477)
    intra_suff_and_fits_36592 = (suff_intra_par_36589 and fits_36591)
    segscan_group_sizze_36741 = self.sizes["mainMagnitude.segscan_group_size_36718"]
    max_num_groups_46236 = self.sizes["mainMagnitude.segscan_num_groups_36720"]
    num_groups_36742 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_44399,
                                                            segscan_group_sizze_36741),
                                                  sext_i32_i64(max_num_groups_46236))))
    segmap_group_sizze_36761 = self.sizes["mainMagnitude.segmap_group_size_36709"]
    segmap_group_sizze_36797 = self.sizes["mainMagnitude.segmap_group_size_36634"]
    bytes_45152 = (np.int64(4) * m_28478)
    bytes_45143 = (np.int64(8) * N_28477)
    bytes_45161 = (np.int64(8) * binop_x_44399)
    local_memory_capacity_46338 = self.max_local_memory
    if (sle64(((((bytes_45143 + srem64((np.int64(8) - srem64(bytes_45143,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_44921 + srem64((np.int64(8) - srem64(bytes_44921,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46338)) and intra_suff_and_fits_36592):
      mem_45153 = opencl_alloc(self, bytes_45152, "mem_45153")
      mem_45156 = opencl_alloc(self, bytes_44398, "mem_45156")
      mem_45159 = opencl_alloc(self, bytes_44398, "mem_45159")
      if ((1 * (np.long(m_28478) * np.long(N_28477))) != 0):
        self.mainMagnitudezisegmap_intragroup_36514_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_44921)),
                                                                 cl.LocalMemory(np.long(bytes_44921)),
                                                                 cl.LocalMemory(np.long(bytes_44921)),
                                                                 cl.LocalMemory(np.long(bytes_45143)),
                                                                 np.int64(N_28477),
                                                                 np.int64(i_28781),
                                                                 images_mem_44381,
                                                                 defunc_3_map_res_mem_45140,
                                                                 mem_45153,
                                                                 mem_45156,
                                                                 mem_45159)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_36514_var,
                                   ((np.long(m_28478) * np.long(N_28477)),),
                                   (np.long(N_28477),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_45177 = mem_45153
      defunc_4_map_res_mem_45178 = mem_45156
      defunc_4_map_res_mem_45179 = mem_45159
    else:
      mem_45163 = opencl_alloc(self, bytes_45161, "mem_45163")
      mem_45166 = opencl_alloc(self, bytes_44398, "mem_45166")
      if slt64(np.int64(0), (m_28478 * N_28477)):
        stage1_max_num_groups_46254 = self.max_group_size
        stage1_num_groups_46255 = smin64(stage1_max_num_groups_46254,
                                         num_groups_36742)
        num_threads_46256 = sext_i64_i32((stage1_num_groups_46255 * segscan_group_sizze_36741))
        if ((1 * (np.long(stage1_num_groups_46255) * np.long(segscan_group_sizze_36741))) != 0):
          self.mainMagnitudeziscan_stage1_36724_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * segscan_group_sizze_36741)))),
                                                             np.int64(N_28477),
                                                             np.int64(m_28478),
                                                             np.int32(num_threads_46256),
                                                             images_mem_44381,
                                                             defunc_3_map_res_mem_45140,
                                                             mem_45163,
                                                             mem_45166)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_36724_var,
                                     ((np.long(stage1_num_groups_46255) * np.long(segscan_group_sizze_36741)),),
                                     (np.long(segscan_group_sizze_36741),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46255))) != 0):
          self.mainMagnitudeziscan_stage2_36724_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * stage1_num_groups_46255)))),
                                                             np.int64(N_28477),
                                                             np.int64(m_28478),
                                                             np.int64(stage1_num_groups_46255),
                                                             np.int32(num_threads_46256),
                                                             mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_36724_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_46255)),),
                                     (np.long(stage1_num_groups_46255),))
          if synchronous:
            sync(self)
        required_groups_46298 = sext_i64_i32(sdiv_up64((m_28478 * N_28477),
                                                       segscan_group_sizze_36741))
        if ((1 * (np.long(num_groups_36742) * np.long(segscan_group_sizze_36741))) != 0):
          self.mainMagnitudeziscan_stage3_36724_var.set_args(self.global_failure,
                                                             np.int64(N_28477),
                                                             np.int64(m_28478),
                                                             np.int64(num_groups_36742),
                                                             np.int32(num_threads_46256),
                                                             np.int32(required_groups_46298),
                                                             mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_36724_var,
                                     ((np.long(num_groups_36742) * np.long(segscan_group_sizze_36741)),),
                                     (np.long(segscan_group_sizze_36741),))
          if synchronous:
            sync(self)
      segmap_usable_groups_36762 = sdiv_up64(m_28478, segmap_group_sizze_36761)
      mem_45169 = opencl_alloc(self, bytes_45152, "mem_45169")
      if ((1 * (np.long(segmap_usable_groups_36762) * np.long(segmap_group_sizze_36761))) != 0):
        self.mainMagnitudezisegmap_36707_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.int64(m_28478),
                                                      np.int64(i_28781),
                                                      mem_45163, mem_45169)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36707_var,
                                   ((np.long(segmap_usable_groups_36762) * np.long(segmap_group_sizze_36761)),),
                                   (np.long(segmap_group_sizze_36761),))
        if synchronous:
          sync(self)
      mem_45172 = opencl_alloc(self, bytes_44398, "mem_45172")
      self.futhark_builtinzhreplicate_f32(mem_45172, (m_28478 * N_28477),
                                          np.nan)
      mem_45175 = opencl_alloc(self, bytes_44398, "mem_45175")
      self.futhark_builtinzhreplicate_i32(mem_45175, (m_28478 * N_28477),
                                          np.int32(0))
      segmap_usable_groups_36798 = sdiv_up64(binop_x_44399,
                                             segmap_group_sizze_36797)
      if ((1 * (np.long(segmap_usable_groups_36798) * np.long(segmap_group_sizze_36797))) != 0):
        self.mainMagnitudezisegmap_36631_var.set_args(self.global_failure,
                                                      np.int64(N_28477),
                                                      np.int64(m_28478),
                                                      mem_45163, mem_45166,
                                                      mem_45172, mem_45175)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36631_var,
                                   ((np.long(segmap_usable_groups_36798) * np.long(segmap_group_sizze_36797)),),
                                   (np.long(segmap_group_sizze_36797),))
        if synchronous:
          sync(self)
      mem_45163 = None
      mem_45166 = None
      defunc_4_map_res_mem_45177 = mem_45169
      defunc_4_map_res_mem_45178 = mem_45172
      defunc_4_map_res_mem_45179 = mem_45175
    defunc_3_map_res_mem_45140 = None
    suff_outer_par_36846 = (self.sizes["mainMagnitude.suff_outer_par_28"] <= m_28478)
    fits_36932 = sle64(i32_res_28487, max_group_sizze_35230)
    suff_intra_par_36930 = (self.sizes["mainMagnitude.suff_intra_par_29"] <= i32_res_28487)
    intra_suff_and_fits_36933 = (suff_intra_par_36930 and fits_36932)
    segmap_group_sizze_36893 = self.sizes["mainMagnitude.segmap_group_size_36858"]
    nest_sizze_37028 = (m_28478 * i32_res_28487)
    segred_group_sizze_37029 = self.sizes["mainMagnitude.segred_group_size_37012"]
    max_num_groups_46339 = self.sizes["mainMagnitude.segred_num_groups_37014"]
    num_groups_37030 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37028,
                                                            segred_group_sizze_37029),
                                                  sext_i32_i64(max_num_groups_46339))))
    segred_group_sizze_37043 = self.sizes["mainMagnitude.segred_group_size_36987"]
    max_num_groups_46340 = self.sizes["mainMagnitude.segred_num_groups_36989"]
    num_groups_37044 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37028,
                                                            segred_group_sizze_37043),
                                                  sext_i32_i64(max_num_groups_46340))))
    segmap_group_sizze_37063 = self.sizes["mainMagnitude.segmap_group_size_36972"]
    bytes_45188 = (np.int64(4) * segmap_group_sizze_36893)
    local_memory_capacity_46492 = self.max_local_memory
    if (sle64(((bytes_45188 + srem64((np.int64(8) - srem64(bytes_45188,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_45188 + srem64((np.int64(8) - srem64(bytes_45188,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46492)) and suff_outer_par_36846):
      segmap_usable_groups_36894 = sdiv_up64(m_28478, segmap_group_sizze_36893)
      mem_45182 = opencl_alloc(self, bytes_44398, "mem_45182")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45182, np.int64(0),
                                                  images_mem_44381, np.int64(0),
                                                  np.int64(1), N_28477, m_28478)
      mem_45185 = opencl_alloc(self, bytes_44398, "mem_45185")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_45185, np.int64(0),
                                                  defunc_4_map_res_mem_45178,
                                                  np.int64(0), np.int64(1),
                                                  N_28477, m_28478)
      num_whole_tiles_43891 = squot64(i32_res_28487, segmap_group_sizze_36893)
      residual_input_43992 = srem64(i32_res_28487, segmap_group_sizze_36893)
      cond_43993 = (residual_input_43992 == np.int64(0))
      mem_45216 = opencl_alloc(self, bytes_45152, "mem_45216")
      mem_45218 = opencl_alloc(self, bytes_45152, "mem_45218")
      mem_45220 = opencl_alloc(self, bytes_45152, "mem_45220")
      if ((1 * (np.long(segmap_usable_groups_36894) * np.long(segmap_group_sizze_36893))) != 0):
        self.mainMagnitudezisegmap_intragroup_43869_var.set_args(self.global_failure,
                                                                 self.failure_is_an_option,
                                                                 self.global_failure_args,
                                                                 cl.LocalMemory(np.long(bytes_45188)),
                                                                 cl.LocalMemory(np.long(bytes_45188)),
                                                                 np.int64(N_28477),
                                                                 np.int64(m_28478),
                                                                 np.int32(n_28481),
                                                                 np.float32(hfrac_28483),
                                                                 np.int64(i32_res_28487),
                                                                 np.int32(k2p2_28489),
                                                                 np.int64(num_whole_tiles_43891),
                                                                 np.int64(residual_input_43992),
                                                                 np.byte(cond_43993),
                                                                 mem_45182,
                                                                 mem_45185,
                                                                 mem_45216,
                                                                 mem_45218,
                                                                 mem_45220)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_43869_var,
                                   ((np.long(segmap_usable_groups_36894) * np.long(segmap_group_sizze_36893)),),
                                   (np.long(segmap_group_sizze_36893),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_45182 = None
      mem_45185 = None
      defunc_3_map_res_mem_45244 = mem_45216
      defunc_3_map_res_mem_45245 = mem_45218
      defunc_3_map_res_mem_45246 = mem_45220
    else:
      local_memory_capacity_46491 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28487) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28487),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28487) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28487),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_46491)) and intra_suff_and_fits_36933):
        mem_45225 = opencl_alloc(self, bytes_45152, "mem_45225")
        mem_45227 = opencl_alloc(self, bytes_45152, "mem_45227")
        mem_45229 = opencl_alloc(self, bytes_45152, "mem_45229")
        if ((1 * (np.long(m_28478) * np.long(i32_res_28487))) != 0):
          self.mainMagnitudezisegmap_intragroup_36854_var.set_args(self.global_failure,
                                                                   self.failure_is_an_option,
                                                                   self.global_failure_args,
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28487))),
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28487))),
                                                                   np.int64(N_28477),
                                                                   np.float32(hfrac_28483),
                                                                   np.int64(i32_res_28487),
                                                                   np.int32(k2p2_28489),
                                                                   images_mem_44381,
                                                                   defunc_4_map_res_mem_45178,
                                                                   mem_45225,
                                                                   mem_45227,
                                                                   mem_45229)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_36854_var,
                                     ((np.long(m_28478) * np.long(i32_res_28487)),),
                                     (np.long(i32_res_28487),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_3_map_res_mem_45241 = mem_45225
        defunc_3_map_res_mem_45242 = mem_45227
        defunc_3_map_res_mem_45243 = mem_45229
      else:
        mem_45232 = opencl_alloc(self, bytes_45152, "mem_45232")
        if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_37029):
          segment_sizze_nonzzero_46366 = smax64(np.int64(1), i32_res_28487)
          num_threads_46367 = (num_groups_37030 * segred_group_sizze_37029)
          if ((1 * (np.long(num_groups_37030) * np.long(segred_group_sizze_37029))) != 0):
            self.mainMagnitudezisegred_small_37018_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37029))),
                                                                np.int64(N_28477),
                                                                np.int64(m_28478),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_37030),
                                                                np.int64(segment_sizze_nonzzero_46366),
                                                                images_mem_44381,
                                                                mem_45232)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_37018_var,
                                       ((np.long(num_groups_37030) * np.long(segred_group_sizze_37029)),),
                                       (np.long(segred_group_sizze_37029),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46387 = sdiv_up64(num_groups_37030,
                                               smax64(np.int64(1), m_28478))
          elements_per_thread_46388 = sdiv_up64(i32_res_28487,
                                                (segred_group_sizze_37029 * groups_per_segment_46387))
          virt_num_groups_46389 = (groups_per_segment_46387 * m_28478)
          num_threads_46390 = (num_groups_37030 * segred_group_sizze_37029)
          threads_per_segment_46391 = (groups_per_segment_46387 * segred_group_sizze_37029)
          group_res_arr_mem_46392 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_37029 * virt_num_groups_46389)),
                                                 "group_res_arr_mem_46392")
          mainMagnitudezicounter_mem_46394 = self.mainMagnitudezicounter_mem_46394
          if ((1 * (np.long(num_groups_37030) * np.long(segred_group_sizze_37029))) != 0):
            self.mainMagnitudezisegred_large_37018_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37029))),
                                                                np.int64(N_28477),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_37030),
                                                                np.int64(groups_per_segment_46387),
                                                                np.int64(elements_per_thread_46388),
                                                                np.int64(virt_num_groups_46389),
                                                                np.int64(threads_per_segment_46391),
                                                                images_mem_44381,
                                                                mem_45232,
                                                                group_res_arr_mem_46392,
                                                                mainMagnitudezicounter_mem_46394)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_37018_var,
                                       ((np.long(num_groups_37030) * np.long(segred_group_sizze_37029)),),
                                       (np.long(segred_group_sizze_37029),))
            if synchronous:
              sync(self)
        mem_45235 = opencl_alloc(self, bytes_45152, "mem_45235")
        if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_37043):
          segment_sizze_nonzzero_46426 = smax64(np.int64(1), i32_res_28487)
          num_threads_46427 = (num_groups_37044 * segred_group_sizze_37043)
          if ((1 * (np.long(num_groups_37044) * np.long(segred_group_sizze_37043))) != 0):
            self.mainMagnitudezisegred_small_36993_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37043))),
                                                                np.int64(N_28477),
                                                                np.int64(m_28478),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_37044),
                                                                np.int64(segment_sizze_nonzzero_46426),
                                                                defunc_4_map_res_mem_45178,
                                                                mem_45232,
                                                                mem_45235)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36993_var,
                                       ((np.long(num_groups_37044) * np.long(segred_group_sizze_37043)),),
                                       (np.long(segred_group_sizze_37043),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
        else:
          groups_per_segment_46447 = sdiv_up64(num_groups_37044,
                                               smax64(np.int64(1), m_28478))
          elements_per_thread_46448 = sdiv_up64(i32_res_28487,
                                                (segred_group_sizze_37043 * groups_per_segment_46447))
          virt_num_groups_46449 = (groups_per_segment_46447 * m_28478)
          num_threads_46450 = (num_groups_37044 * segred_group_sizze_37043)
          threads_per_segment_46451 = (groups_per_segment_46447 * segred_group_sizze_37043)
          group_res_arr_mem_46452 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_37043 * virt_num_groups_46449)),
                                                 "group_res_arr_mem_46452")
          mainMagnitudezicounter_mem_46454 = self.mainMagnitudezicounter_mem_46454
          if ((1 * (np.long(num_groups_37044) * np.long(segred_group_sizze_37043))) != 0):
            self.mainMagnitudezisegred_large_36993_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37043))),
                                                                np.int64(N_28477),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_37044),
                                                                np.int64(groups_per_segment_46447),
                                                                np.int64(elements_per_thread_46448),
                                                                np.int64(virt_num_groups_46449),
                                                                np.int64(threads_per_segment_46451),
                                                                defunc_4_map_res_mem_45178,
                                                                mem_45232,
                                                                mem_45235,
                                                                group_res_arr_mem_46452,
                                                                mainMagnitudezicounter_mem_46454)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36993_var,
                                       ((np.long(num_groups_37044) * np.long(segred_group_sizze_37043)),),
                                       (np.long(segred_group_sizze_37043),))
            if synchronous:
              sync(self)
          self.failure_is_an_option = np.int32(1)
        segmap_usable_groups_37064 = sdiv_up64(m_28478,
                                               segmap_group_sizze_37063)
        mem_45238 = opencl_alloc(self, bytes_45152, "mem_45238")
        mem_45240 = opencl_alloc(self, bytes_45152, "mem_45240")
        if ((1 * (np.long(segmap_usable_groups_37064) * np.long(segmap_group_sizze_37063))) != 0):
          self.mainMagnitudezisegmap_36970_var.set_args(self.global_failure,
                                                        np.int64(m_28478),
                                                        np.float32(hfrac_28483),
                                                        np.int32(k2p2_28489),
                                                        mem_45232, mem_45235,
                                                        mem_45238, mem_45240)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_36970_var,
                                     ((np.long(segmap_usable_groups_37064) * np.long(segmap_group_sizze_37063)),),
                                     (np.long(segmap_group_sizze_37063),))
          if synchronous:
            sync(self)
        mem_45235 = None
        defunc_3_map_res_mem_45241 = mem_45238
        defunc_3_map_res_mem_45242 = mem_45232
        defunc_3_map_res_mem_45243 = mem_45240
      defunc_3_map_res_mem_45244 = defunc_3_map_res_mem_45241
      defunc_3_map_res_mem_45245 = defunc_3_map_res_mem_45242
      defunc_3_map_res_mem_45246 = defunc_3_map_res_mem_45243
    segred_group_sizze_37084 = self.sizes["mainMagnitude.segred_group_size_37083"]
    max_num_groups_46493 = self.sizes["mainMagnitude.segred_num_groups_37085"]
    num_groups_37086 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28478,
                                                            segred_group_sizze_37084),
                                                  sext_i32_i64(max_num_groups_46493))))
    mem_45249 = opencl_alloc(self, np.int64(4), "mem_45249")
    mainMagnitudezicounter_mem_46494 = self.mainMagnitudezicounter_mem_46494
    group_res_arr_mem_46496 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_37084 * num_groups_37086)),
                                           "group_res_arr_mem_46496")
    num_threads_46498 = (num_groups_37086 * segred_group_sizze_37084)
    if ((1 * (np.long(num_groups_37086) * np.long(segred_group_sizze_37084))) != 0):
      self.mainMagnitudezisegred_nonseg_37091_var.set_args(self.global_failure,
                                                           cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37084))),
                                                           cl.LocalMemory(np.long(np.int32(1))),
                                                           np.int64(m_28478),
                                                           np.int64(num_groups_37086),
                                                           np.int64(num_threads_46498),
                                                           defunc_3_map_res_mem_45244,
                                                           mem_45249,
                                                           mainMagnitudezicounter_mem_46494,
                                                           group_res_arr_mem_46496)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegred_nonseg_37091_var,
                                 ((np.long(num_groups_37086) * np.long(segred_group_sizze_37084)),),
                                 (np.long(segred_group_sizze_37084),))
      if synchronous:
        sync(self)
    read_res_46895 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46895, mem_45249,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28875 = read_res_46895[0]
    mem_45249 = None
    i32_res_28880 = sext_i32_i64(defunc_2_reduce_comm_res_28875)
    bounds_invalid_upwards_28881 = slt64(i32_res_28880, np.int64(0))
    valid_28882 = not(bounds_invalid_upwards_28881)
    range_valid_c_28883 = True
    assert valid_28882, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:102:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:97:17-104:24\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_28880,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_37123 = (self.sizes["mainMagnitude.suff_outer_par_31"] <= m_28478)
    segmap_group_sizze_37150 = self.sizes["mainMagnitude.segmap_group_size_37127"]
    nest_sizze_37201 = (m_28478 * i32_res_28880)
    segred_group_sizze_37202 = self.sizes["mainMagnitude.segred_group_size_37175"]
    max_num_groups_46524 = self.sizes["mainMagnitude.segred_num_groups_37177"]
    num_groups_37203 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37201,
                                                            segred_group_sizze_37202),
                                                  sext_i32_i64(max_num_groups_46524))))
    bytes_45252 = (np.int64(4) * segmap_group_sizze_37150)
    local_memory_capacity_46595 = self.max_local_memory
    if (sle64(((bytes_45252 + srem64((np.int64(8) - srem64(bytes_45252,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_45252 + srem64((np.int64(8) - srem64(bytes_45252,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46595)) and suff_outer_par_37123):
      segmap_usable_groups_37151 = sdiv_up64(m_28478, segmap_group_sizze_37150)
      num_whole_tiles_44095 = squot64(i32_res_28880, segmap_group_sizze_37150)
      residual_input_44206 = srem64(i32_res_28880, segmap_group_sizze_37150)
      cond_44207 = (residual_input_44206 == np.int64(0))
      mem_45275 = opencl_alloc(self, bytes_45152, "mem_45275")
      if ((1 * (np.long(segmap_usable_groups_37151) * np.long(segmap_group_sizze_37150))) != 0):
        self.mainMagnitudezisegmap_intragroup_44075_var.set_args(self.global_failure,
                                                                 self.failure_is_an_option,
                                                                 self.global_failure_args,
                                                                 cl.LocalMemory(np.long(bytes_45252)),
                                                                 cl.LocalMemory(np.long(bytes_45252)),
                                                                 np.int64(N_28477),
                                                                 np.int64(m_28478),
                                                                 np.int64(i32_res_28880),
                                                                 np.int64(num_whole_tiles_44095),
                                                                 np.int64(residual_input_44206),
                                                                 np.byte(cond_44207),
                                                                 defunc_4_map_res_mem_45178,
                                                                 defunc_3_map_res_mem_45244,
                                                                 defunc_3_map_res_mem_45245,
                                                                 mem_45275)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_44075_var,
                                   ((np.long(segmap_usable_groups_37151) * np.long(segmap_group_sizze_37150)),),
                                   (np.long(segmap_group_sizze_37150),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45279 = mem_45275
    else:
      mem_45278 = opencl_alloc(self, bytes_45152, "mem_45278")
      if slt64((i32_res_28880 * np.int64(2)), segred_group_sizze_37202):
        segment_sizze_nonzzero_46535 = smax64(np.int64(1), i32_res_28880)
        num_threads_46536 = (num_groups_37203 * segred_group_sizze_37202)
        if ((1 * (np.long(num_groups_37203) * np.long(segred_group_sizze_37202))) != 0):
          self.mainMagnitudezisegred_small_37181_var.set_args(self.global_failure,
                                                              self.failure_is_an_option,
                                                              self.global_failure_args,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37202))),
                                                              np.int64(N_28477),
                                                              np.int64(m_28478),
                                                              np.int64(i32_res_28880),
                                                              np.int64(num_groups_37203),
                                                              np.int64(segment_sizze_nonzzero_46535),
                                                              defunc_4_map_res_mem_45178,
                                                              defunc_3_map_res_mem_45244,
                                                              defunc_3_map_res_mem_45245,
                                                              mem_45278)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_37181_var,
                                     ((np.long(num_groups_37203) * np.long(segred_group_sizze_37202)),),
                                     (np.long(segred_group_sizze_37202),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
      else:
        groups_per_segment_46556 = sdiv_up64(num_groups_37203,
                                             smax64(np.int64(1), m_28478))
        elements_per_thread_46557 = sdiv_up64(i32_res_28880,
                                              (segred_group_sizze_37202 * groups_per_segment_46556))
        virt_num_groups_46558 = (groups_per_segment_46556 * m_28478)
        num_threads_46559 = (num_groups_37203 * segred_group_sizze_37202)
        threads_per_segment_46560 = (groups_per_segment_46556 * segred_group_sizze_37202)
        group_res_arr_mem_46561 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37202 * virt_num_groups_46558)),
                                               "group_res_arr_mem_46561")
        mainMagnitudezicounter_mem_46563 = self.mainMagnitudezicounter_mem_46563
        if ((1 * (np.long(num_groups_37203) * np.long(segred_group_sizze_37202))) != 0):
          self.mainMagnitudezisegred_large_37181_var.set_args(self.global_failure,
                                                              self.failure_is_an_option,
                                                              self.global_failure_args,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37202))),
                                                              np.int64(N_28477),
                                                              np.int64(i32_res_28880),
                                                              np.int64(num_groups_37203),
                                                              np.int64(groups_per_segment_46556),
                                                              np.int64(elements_per_thread_46557),
                                                              np.int64(virt_num_groups_46558),
                                                              np.int64(threads_per_segment_46560),
                                                              defunc_4_map_res_mem_45178,
                                                              defunc_3_map_res_mem_45244,
                                                              defunc_3_map_res_mem_45245,
                                                              mem_45278,
                                                              group_res_arr_mem_46561,
                                                              mainMagnitudezicounter_mem_46563)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_37181_var,
                                     ((np.long(num_groups_37203) * np.long(segred_group_sizze_37202)),),
                                     (np.long(segred_group_sizze_37202),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45279 = mem_45278
    iota32_arg_28909 = (N_28477 - i32_res_28487)
    bounds_invalid_upwards_28910 = slt64(iota32_arg_28909, np.int64(0))
    valid_28911 = not(bounds_invalid_upwards_28910)
    range_valid_c_28912 = True
    assert valid_28911, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:109:22-35\n   #3  bfastfinal.fut:181:5-58\n   #4  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28909,
                                                                                                                                                                                                                                      " is invalid."))
    i_28914 = (n_28481 - np.int32(1))
    i_28915 = sext_i32_i64(i_28914)
    x_28916 = sle64(np.int64(0), i_28915)
    y_28917 = slt64(i_28915, N_28477)
    bounds_check_28918 = (x_28916 and y_28917)
    index_certs_28919 = True
    assert bounds_check_28918, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:107:64-84\n   #1  bfastfinal.fut:106:15-109:36\n   #2  bfastfinal.fut:181:5-58\n   #3  bfastfinal.fut:176:1-182:37\n" % ("Index [",
                                                                                                                                                                                                                 i_28915,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28477,
                                                                                                                                                                                                                 "]."))
    read_res_46897 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46897, mappingindices_mem_44380,
                    device_offset=(np.long(i_28915) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28920 = read_res_46897[0]
    i32_res_28921 = sitofp_i32_f32(r32_arg_28920)
    range_valid_c_28922 = True
    assert valid_28911, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28909,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_37293 = self.sizes["mainMagnitude.segmap_group_size_37273"]
    segmap_usable_groups_37294 = sdiv_up64(iota32_arg_28909,
                                           segmap_group_sizze_37293)
    bytes_45281 = (np.int64(4) * iota32_arg_28909)
    mem_45282 = opencl_alloc(self, bytes_45281, "mem_45282")
    mem_45284 = opencl_alloc(self, bytes_45281, "mem_45284")
    if ((1 * (np.long(segmap_usable_groups_37294) * np.long(segmap_group_sizze_37293))) != 0):
      self.mainMagnitudezisegmap_37271_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(N_28477),
                                                    np.int32(n_28481),
                                                    np.float32(lam_28484),
                                                    np.int64(iota32_arg_28909),
                                                    np.float32(i32_res_28921),
                                                    mappingindices_mem_44380,
                                                    mem_45282, mem_45284)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_37271_var,
                                 ((np.long(segmap_usable_groups_37294) * np.long(segmap_group_sizze_37293)),),
                                 (np.long(segmap_group_sizze_37293),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_45282 = None
    max_res_28941 = smax64(np.int64(1), iota32_arg_28909)
    bounds_invalid_upwards_28942 = slt64(max_res_28941, np.int64(1))
    distance_28943 = (max_res_28941 - np.int64(1))
    valid_28944 = not(bounds_invalid_upwards_28942)
    range_valid_c_28945 = True
    assert valid_28944, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:116:13-121:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:114:20-131:9\n   #5  bfastfinal.fut:181:5-58\n   #6  bfastfinal.fut:176:1-182:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28941,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_37716 = self.sizes["mainMagnitude.segmap_group_size_37709"]
    segmap_usable_groups_37717 = sdiv_up64(m_28478, segmap_group_sizze_37716)
    mem_45287 = opencl_alloc(self, bytes_45152, "mem_45287")
    if ((1 * (np.long(segmap_usable_groups_37717) * np.long(segmap_group_sizze_37716))) != 0):
      self.mainMagnitudezisegmap_37707_var.set_args(self.global_failure,
                                                    np.int64(m_28478),
                                                    defunc_4_map_res_mem_45177,
                                                    defunc_3_map_res_mem_45245,
                                                    mem_45287)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_37707_var,
                                 ((np.long(segmap_usable_groups_37717) * np.long(segmap_group_sizze_37716)),),
                                 (np.long(segmap_group_sizze_37716),))
      if synchronous:
        sync(self)
    nest_sizze_37730 = (m_28478 * iota32_arg_28909)
    segmap_group_sizze_37731 = self.sizes["mainMagnitude.segmap_group_size_37652"]
    segmap_usable_groups_37732 = sdiv_up64(nest_sizze_37730,
                                           segmap_group_sizze_37731)
    bytes_45289 = (np.int64(4) * nest_sizze_37730)
    mem_45291 = opencl_alloc(self, bytes_45289, "mem_45291")
    if ((1 * (np.long(segmap_usable_groups_37732) * np.long(segmap_group_sizze_37731))) != 0):
      self.mainMagnitudezisegmap_37649_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(N_28477),
                                                    np.int64(m_28478),
                                                    np.int64(iota32_arg_28909),
                                                    defunc_4_map_res_mem_45178,
                                                    defunc_3_map_res_mem_45245,
                                                    mem_45287, mem_45291)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_37649_var,
                                 ((np.long(segmap_usable_groups_37732) * np.long(segmap_group_sizze_37731)),),
                                 (np.long(segmap_group_sizze_37731),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_37760 = self.sizes["mainMagnitude.segmap_group_size_37530"]
    segmap_usable_groups_37761 = sdiv_up64(m_28478, segmap_group_sizze_37760)
    mem_45294 = opencl_alloc(self, bytes_45289, "mem_45294")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_45294, np.int64(0),
                                                mem_45291, np.int64(0),
                                                np.int64(1), iota32_arg_28909,
                                                m_28478)
    mem_45291 = None
    mem_45325 = opencl_alloc(self, bytes_45152, "mem_45325")
    num_threads_45623 = (segmap_group_sizze_37760 * segmap_usable_groups_37761)
    total_sizze_45624 = (bytes_45281 * num_threads_45623)
    mem_45305 = opencl_alloc(self, total_sizze_45624, "mem_45305")
    if ((1 * (np.long(segmap_usable_groups_37761) * np.long(segmap_group_sizze_37760))) != 0):
      self.mainMagnitudezisegmap_37528_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(m_28478),
                                                    np.int64(iota32_arg_28909),
                                                    np.int64(distance_28943),
                                                    np.int64(segmap_usable_groups_37761),
                                                    defunc_4_map_res_mem_45177,
                                                    defunc_3_map_res_mem_45245,
                                                    mem_45287, mem_45294,
                                                    mem_45305, mem_45325)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_37528_var,
                                 ((np.long(segmap_usable_groups_37761) * np.long(segmap_group_sizze_37760)),),
                                 (np.long(segmap_group_sizze_37760),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_45287 = None
    mem_45294 = None
    mem_45305 = None
    fits_38119 = sle64(iota32_arg_28909, max_group_sizze_35230)
    suff_intra_par_38117 = (self.sizes["mainMagnitude.suff_intra_par_37"] <= iota32_arg_28909)
    intra_suff_and_fits_38120 = (suff_intra_par_38117 and fits_38119)
    segmap_group_sizze_38417 = self.sizes["mainMagnitude.segmap_group_size_38397"]
    max_num_groups_46621 = self.sizes["mainMagnitude.segmap_num_groups_38399"]
    num_groups_38418 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28478,
                                                            segmap_group_sizze_38417),
                                                  sext_i32_i64(max_num_groups_46621))))
    segscan_group_sizze_38440 = self.sizes["mainMagnitude.segscan_group_size_38348"]
    max_num_groups_46622 = self.sizes["mainMagnitude.segscan_num_groups_38350"]
    num_groups_38441 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37730,
                                                            segscan_group_sizze_38440),
                                                  sext_i32_i64(max_num_groups_46622))))
    segred_group_sizze_38486 = self.sizes["mainMagnitude.segred_group_size_38294"]
    max_num_groups_46623 = self.sizes["mainMagnitude.segred_num_groups_38296"]
    num_groups_38487 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37730,
                                                            segred_group_sizze_38486),
                                                  sext_i32_i64(max_num_groups_46623))))
    segmap_group_sizze_38525 = self.sizes["mainMagnitude.segmap_group_size_38243"]
    local_memory_capacity_46816 = self.max_local_memory
    if (sle64(((((bytes_45281 + srem64((np.int64(8) - srem64(bytes_45281,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_28909) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_28909),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_28909) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28909),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_28909) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28909),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_46816)) and intra_suff_and_fits_38120):
      mem_45332 = opencl_alloc(self, bytes_45152, "mem_45332")
      mem_45334 = opencl_alloc(self, bytes_45152, "mem_45334")
      if ((1 * (np.long(m_28478) * np.long(iota32_arg_28909))) != 0):
        self.mainMagnitudezisegmap_intragroup_37880_var.set_args(self.global_failure,
                                                                 self.failure_is_an_option,
                                                                 self.global_failure_args,
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28909))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28909))),
                                                                 cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28909))),
                                                                 cl.LocalMemory(np.long(bytes_45281)),
                                                                 np.int64(N_28477),
                                                                 np.int32(n_28481),
                                                                 np.int64(iota32_arg_28909),
                                                                 defunc_4_map_res_mem_45177,
                                                                 defunc_4_map_res_mem_45178,
                                                                 defunc_4_map_res_mem_45179,
                                                                 defunc_3_map_res_mem_45244,
                                                                 defunc_3_map_res_mem_45245,
                                                                 defunc_3_map_res_mem_45246,
                                                                 defunc_0_f_res_mem_45279,
                                                                 mem_45284,
                                                                 mem_45332,
                                                                 mem_45334)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_37880_var,
                                   ((np.long(m_28478) * np.long(iota32_arg_28909)),),
                                   (np.long(iota32_arg_28909),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_45356 = mem_45332
      defunc_0_f_res_mem_45357 = mem_45334
    else:
      mem_45337 = opencl_alloc(self, bytes_45152, "mem_45337")
      mem_45339 = opencl_alloc(self, bytes_45152, "mem_45339")
      if ((1 * (np.long(num_groups_38418) * np.long(segmap_group_sizze_38417))) != 0):
        self.mainMagnitudezisegmap_38395_var.set_args(self.global_failure,
                                                      np.int64(m_28478),
                                                      np.int64(num_groups_38418),
                                                      defunc_4_map_res_mem_45177,
                                                      defunc_3_map_res_mem_45245,
                                                      defunc_3_map_res_mem_45246,
                                                      mem_45337, mem_45339)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_38395_var,
                                   ((np.long(num_groups_38418) * np.long(segmap_group_sizze_38417)),),
                                   (np.long(segmap_group_sizze_38417),))
        if synchronous:
          sync(self)
      mem_45343 = opencl_alloc(self, bytes_45289, "mem_45343")
      if slt64(np.int64(0), (m_28478 * iota32_arg_28909)):
        stage1_max_num_groups_46657 = self.max_group_size
        stage1_num_groups_46658 = smin64(stage1_max_num_groups_46657,
                                         num_groups_38441)
        num_threads_46659 = sext_i64_i32((stage1_num_groups_46658 * segscan_group_sizze_38440))
        if ((1 * (np.long(stage1_num_groups_46658) * np.long(segscan_group_sizze_38440))) != 0):
          self.mainMagnitudeziscan_stage1_38354_var.set_args(self.global_failure,
                                                             self.failure_is_an_option,
                                                             self.global_failure_args,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * segscan_group_sizze_38440)))),
                                                             np.int64(N_28477),
                                                             np.int64(m_28478),
                                                             np.int64(iota32_arg_28909),
                                                             np.int32(num_threads_46659),
                                                             defunc_4_map_res_mem_45178,
                                                             defunc_3_map_res_mem_45244,
                                                             defunc_3_map_res_mem_45245,
                                                             defunc_0_f_res_mem_45279,
                                                             mem_45339,
                                                             mem_45343)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_38354_var,
                                     ((np.long(stage1_num_groups_46658) * np.long(segscan_group_sizze_38440)),),
                                     (np.long(segscan_group_sizze_38440),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46658))) != 0):
          self.mainMagnitudeziscan_stage2_38354_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * stage1_num_groups_46658)))),
                                                             np.int64(m_28478),
                                                             np.int64(iota32_arg_28909),
                                                             np.int64(stage1_num_groups_46658),
                                                             np.int32(num_threads_46659),
                                                             mem_45343)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_38354_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_46658)),),
                                     (np.long(stage1_num_groups_46658),))
          if synchronous:
            sync(self)
        required_groups_46701 = sext_i64_i32(sdiv_up64((m_28478 * iota32_arg_28909),
                                                       segscan_group_sizze_38440))
        if ((1 * (np.long(num_groups_38441) * np.long(segscan_group_sizze_38440))) != 0):
          self.mainMagnitudeziscan_stage3_38354_var.set_args(self.global_failure,
                                                             np.int64(m_28478),
                                                             np.int64(iota32_arg_28909),
                                                             np.int64(num_groups_38441),
                                                             np.int32(num_threads_46659),
                                                             np.int32(required_groups_46701),
                                                             mem_45343)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_38354_var,
                                     ((np.long(num_groups_38441) * np.long(segscan_group_sizze_38440)),),
                                     (np.long(segscan_group_sizze_38440),))
          if synchronous:
            sync(self)
      mem_45346 = opencl_alloc(self, m_28478, "mem_45346")
      mem_45348 = opencl_alloc(self, bytes_45152, "mem_45348")
      mem_45350 = opencl_alloc(self, bytes_45152, "mem_45350")
      if slt64((iota32_arg_28909 * np.int64(2)), segred_group_sizze_38486):
        segment_sizze_nonzzero_46713 = smax64(np.int64(1), iota32_arg_28909)
        num_threads_46714 = (num_groups_38487 * segred_group_sizze_38486)
        if ((1 * (np.long(num_groups_38487) * np.long(segred_group_sizze_38486))) != 0):
          self.mainMagnitudezisegred_small_38300_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38486))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38486))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_38486))),
                                                              np.int64(m_28478),
                                                              np.int64(iota32_arg_28909),
                                                              np.int64(num_groups_38487),
                                                              np.int64(segment_sizze_nonzzero_46713),
                                                              mem_45284,
                                                              mem_45337,
                                                              mem_45339,
                                                              mem_45343,
                                                              mem_45346,
                                                              mem_45348,
                                                              mem_45350)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_38300_var,
                                     ((np.long(num_groups_38487) * np.long(segred_group_sizze_38486)),),
                                     (np.long(segred_group_sizze_38486),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_46749 = sdiv_up64(num_groups_38487,
                                             smax64(np.int64(1), m_28478))
        elements_per_thread_46750 = sdiv_up64(iota32_arg_28909,
                                              (segred_group_sizze_38486 * groups_per_segment_46749))
        virt_num_groups_46751 = (groups_per_segment_46749 * m_28478)
        num_threads_46752 = (num_groups_38487 * segred_group_sizze_38486)
        threads_per_segment_46753 = (groups_per_segment_46749 * segred_group_sizze_38486)
        group_res_arr_mem_46754 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_38486 * virt_num_groups_46751)),
                                               "group_res_arr_mem_46754")
        group_res_arr_mem_46756 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_38486 * virt_num_groups_46751)),
                                               "group_res_arr_mem_46756")
        group_res_arr_mem_46758 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_38486 * virt_num_groups_46751)),
                                               "group_res_arr_mem_46758")
        mainMagnitudezicounter_mem_46760 = self.mainMagnitudezicounter_mem_46760
        if ((1 * (np.long(num_groups_38487) * np.long(segred_group_sizze_38486))) != 0):
          self.mainMagnitudezisegred_large_38300_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38486))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38486))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_38486))),
                                                              np.int64(iota32_arg_28909),
                                                              np.int64(num_groups_38487),
                                                              np.int64(groups_per_segment_46749),
                                                              np.int64(elements_per_thread_46750),
                                                              np.int64(virt_num_groups_46751),
                                                              mem_45284,
                                                              mem_45337,
                                                              mem_45339,
                                                              mem_45343,
                                                              mem_45346,
                                                              mem_45348,
                                                              mem_45350,
                                                              group_res_arr_mem_46754,
                                                              group_res_arr_mem_46756,
                                                              group_res_arr_mem_46758,
                                                              mainMagnitudezicounter_mem_46760)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_38300_var,
                                     ((np.long(num_groups_38487) * np.long(segred_group_sizze_38486)),),
                                     (np.long(segred_group_sizze_38486),))
          if synchronous:
            sync(self)
      mem_45337 = None
      mem_45343 = None
      segmap_usable_groups_38526 = sdiv_up64(m_28478, segmap_group_sizze_38525)
      mem_45353 = opencl_alloc(self, bytes_45152, "mem_45353")
      mem_45355 = opencl_alloc(self, bytes_45152, "mem_45355")
      if ((1 * (np.long(segmap_usable_groups_38526) * np.long(segmap_group_sizze_38525))) != 0):
        self.mainMagnitudezisegmap_38241_var.set_args(self.global_failure,
                                                      self.failure_is_an_option,
                                                      self.global_failure_args,
                                                      np.int64(N_28477),
                                                      np.int64(m_28478),
                                                      np.int32(n_28481),
                                                      defunc_4_map_res_mem_45179,
                                                      defunc_3_map_res_mem_45245,
                                                      mem_45339, mem_45346,
                                                      mem_45348, mem_45350,
                                                      mem_45353, mem_45355)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_38241_var,
                                   ((np.long(segmap_usable_groups_38526) * np.long(segmap_group_sizze_38525)),),
                                   (np.long(segmap_group_sizze_38525),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_45339 = None
      mem_45346 = None
      mem_45348 = None
      mem_45350 = None
      defunc_0_f_res_mem_45356 = mem_45353
      defunc_0_f_res_mem_45357 = mem_45355
    defunc_4_map_res_mem_45178 = None
    defunc_4_map_res_mem_45179 = None
    defunc_3_map_res_mem_45244 = None
    defunc_3_map_res_mem_45245 = None
    defunc_3_map_res_mem_45246 = None
    defunc_0_f_res_mem_45279 = None
    mem_45284 = None
    out_mem_45676 = defunc_4_map_res_mem_45177
    out_mem_45677 = defunc_0_f_res_mem_45356
    out_mem_45678 = defunc_0_f_res_mem_45357
    out_mem_45679 = mem_45325
    return (out_mem_45676, out_mem_45677, out_mem_45678, out_mem_45679)
  def futhark_reshapeTransp(self, images_mem_44380, m_27747, n_27748, p_27749):
    flatten_to_arg_27751 = (n_27748 * p_27749)
    flat_dim_27752 = (n_27748 * p_27749)
    dim_match_27753 = (flatten_to_arg_27751 == flat_dim_27752)
    empty_or_match_cert_27754 = True
    assert dim_match_27753, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:127:3-20\n   #1  bfastfinal.fut:200:17-47\n   #2  bfastfinal.fut:199:1-201:23\n" % ("Value of (core language) shape (",
                                                                                                                                                                             flat_dim_27752,
                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                             flatten_to_arg_27751,
                                                                                                                                                                             "]t`."))
    binop_x_44382 = (m_27747 * flatten_to_arg_27751)
    bytes_44381 = (np.int64(4) * binop_x_44382)
    mem_44383 = opencl_alloc(self, bytes_44381, "mem_44383")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_44383, np.int64(0),
                                                images_mem_44380, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27751, m_27747)
    out_arrsizze_45677 = flatten_to_arg_27751
    out_mem_45676 = mem_44383
    return (out_mem_45676, out_arrsizze_45677)
  def convertToFloat(self, nan_value_27760_ext, images_mem_44380_ext):
    m_27757 = None
    n_27758 = None
    p_27759 = None
    try:
      nan_value_27760 = np.int16(ct.c_int16(nan_value_27760_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27760_ext),
                                                                                                                            nan_value_27760_ext))
    try:
      assert ((type(images_mem_44380_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_44380_ext.dtype == np.int16)), "Parameter has unexpected type"
      if (m_27757 == None):
        m_27757 = np.int64(images_mem_44380_ext.shape[0])
      else:
        assert (m_27757 == images_mem_44380_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27758 == None):
        n_27758 = np.int64(images_mem_44380_ext.shape[1])
      else:
        assert (n_27758 == images_mem_44380_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27759 == None):
        p_27759 = np.int64(images_mem_44380_ext.shape[2])
      else:
        assert (p_27759 == images_mem_44380_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_44380_ext) == cl.array.Array):
        images_mem_44380 = images_mem_44380_ext.data
      else:
        images_mem_44380 = opencl_alloc(self,
                                        np.int64(images_mem_44380_ext.nbytes),
                                        "images_mem_44380")
        if (np.int64(images_mem_44380_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_44380,
                          normaliseArray(images_mem_44380_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_44380_ext),
                                                                                                                            images_mem_44380_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      out_mem_45676 = self.futhark_convertToFloat(images_mem_44380, m_27757,
                                                  n_27758, p_27759,
                                                  nan_value_27760)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (m_27757, n_27758, p_27759), ct.c_float,
                          data=out_mem_45676)
  def main(self, trend_29167_ext, k_29168_ext, n_29169_ext, freq_29170_ext,
           hfrac_29171_ext, lam_29172_ext, mappingindices_mem_44380_ext,
           images_mem_44381_ext):
    N_29165 = None
    m_29166 = None
    N_29165 = None
    try:
      trend_29167 = np.int32(ct.c_int32(trend_29167_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_29167_ext),
                                                                                                                            trend_29167_ext))
    try:
      k_29168 = np.int32(ct.c_int32(k_29168_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_29168_ext),
                                                                                                                            k_29168_ext))
    try:
      n_29169 = np.int32(ct.c_int32(n_29169_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_29169_ext),
                                                                                                                            n_29169_ext))
    try:
      freq_29170 = np.float32(ct.c_float(freq_29170_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_29170_ext),
                                                                                                                            freq_29170_ext))
    try:
      hfrac_29171 = np.float32(ct.c_float(hfrac_29171_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_29171_ext),
                                                                                                                            hfrac_29171_ext))
    try:
      lam_29172 = np.float32(ct.c_float(lam_29172_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_29172_ext),
                                                                                                                            lam_29172_ext))
    try:
      assert ((type(mappingindices_mem_44380_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_44380_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_29165 == None):
        N_29165 = np.int64(mappingindices_mem_44380_ext.shape[0])
      else:
        assert (N_29165 == mappingindices_mem_44380_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_44380_ext) == cl.array.Array):
        mappingindices_mem_44380 = mappingindices_mem_44380_ext.data
      else:
        mappingindices_mem_44380 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_44380_ext.nbytes),
                                                "mappingindices_mem_44380")
        if (np.int64(mappingindices_mem_44380_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_44380,
                          normaliseArray(mappingindices_mem_44380_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_44380_ext),
                                                                                                                            mappingindices_mem_44380_ext))
    try:
      assert ((type(images_mem_44381_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_44381_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_29166 == None):
        m_29166 = np.int64(images_mem_44381_ext.shape[0])
      else:
        assert (m_29166 == images_mem_44381_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_29165 == None):
        N_29165 = np.int64(images_mem_44381_ext.shape[1])
      else:
        assert (N_29165 == images_mem_44381_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_44381_ext) == cl.array.Array):
        images_mem_44381 = images_mem_44381_ext.data
      else:
        images_mem_44381 = opencl_alloc(self,
                                        np.int64(images_mem_44381_ext.nbytes),
                                        "images_mem_44381")
        if (np.int64(images_mem_44381_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_44381,
                          normaliseArray(images_mem_44381_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_44381_ext),
                                                                                                                            images_mem_44381_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_45676, out_mem_45677,
       out_mem_45678) = self.futhark_main(mappingindices_mem_44380,
                                          images_mem_44381, N_29165, m_29166,
                                          trend_29167, k_29168, n_29169,
                                          freq_29170, hfrac_29171, lam_29172)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_29166,), ct.c_int32,
                           data=out_mem_45676), cl.array.Array(self.queue,
                                                               (m_29166,),
                                                               ct.c_int32,
                                                               data=out_mem_45677),
            cl.array.Array(self.queue, (m_29166,), ct.c_float,
                           data=out_mem_45678))
  def mainDetailed(self, trend_27773_ext, k_27774_ext, n_27775_ext,
                   freq_27776_ext, hfrac_27777_ext, lam_27778_ext,
                   mappingindices_mem_44380_ext, images_mem_44381_ext):
    N_27771 = None
    m_27772 = None
    N_27771 = None
    try:
      trend_27773 = np.int32(ct.c_int32(trend_27773_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27773_ext),
                                                                                                                            trend_27773_ext))
    try:
      k_27774 = np.int32(ct.c_int32(k_27774_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27774_ext),
                                                                                                                            k_27774_ext))
    try:
      n_27775 = np.int32(ct.c_int32(n_27775_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27775_ext),
                                                                                                                            n_27775_ext))
    try:
      freq_27776 = np.float32(ct.c_float(freq_27776_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27776_ext),
                                                                                                                            freq_27776_ext))
    try:
      hfrac_27777 = np.float32(ct.c_float(hfrac_27777_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27777_ext),
                                                                                                                            hfrac_27777_ext))
    try:
      lam_27778 = np.float32(ct.c_float(lam_27778_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27778_ext),
                                                                                                                            lam_27778_ext))
    try:
      assert ((type(mappingindices_mem_44380_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_44380_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_27771 == None):
        N_27771 = np.int64(mappingindices_mem_44380_ext.shape[0])
      else:
        assert (N_27771 == mappingindices_mem_44380_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_44380_ext) == cl.array.Array):
        mappingindices_mem_44380 = mappingindices_mem_44380_ext.data
      else:
        mappingindices_mem_44380 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_44380_ext.nbytes),
                                                "mappingindices_mem_44380")
        if (np.int64(mappingindices_mem_44380_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_44380,
                          normaliseArray(mappingindices_mem_44380_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_44380_ext),
                                                                                                                            mappingindices_mem_44380_ext))
    try:
      assert ((type(images_mem_44381_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_44381_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27772 == None):
        m_27772 = np.int64(images_mem_44381_ext.shape[0])
      else:
        assert (m_27772 == images_mem_44381_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_27771 == None):
        N_27771 = np.int64(images_mem_44381_ext.shape[1])
      else:
        assert (N_27771 == images_mem_44381_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_44381_ext) == cl.array.Array):
        images_mem_44381 = images_mem_44381_ext.data
      else:
        images_mem_44381 = opencl_alloc(self,
                                        np.int64(images_mem_44381_ext.nbytes),
                                        "images_mem_44381")
        if (np.int64(images_mem_44381_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_44381,
                          normaliseArray(images_mem_44381_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_44381_ext),
                                                                                                                            images_mem_44381_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_45676, out_mem_45677, out_mem_45678, out_mem_45679,
       out_mem_45680, out_arrsizze_45681, out_mem_45682, out_arrsizze_45683,
       out_mem_45684, out_arrsizze_45685, out_mem_45686, out_mem_45687,
       out_mem_45688, out_mem_45689,
       out_mem_45690) = self.futhark_mainDetailed(mappingindices_mem_44380,
                                                  images_mem_44381, N_27771,
                                                  m_27772, trend_27773, k_27774,
                                                  n_27775, freq_27776,
                                                  hfrac_27777, lam_27778)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_27772,), ct.c_float,
                           data=out_mem_45676), cl.array.Array(self.queue,
                                                               (m_27772,),
                                                               ct.c_int32,
                                                               data=out_mem_45677),
            cl.array.Array(self.queue, (m_27772,), ct.c_int32,
                           data=out_mem_45678), cl.array.Array(self.queue,
                                                               (m_27772,),
                                                               ct.c_float,
                                                               data=out_mem_45679),
            cl.array.Array(self.queue, (m_27772, out_arrsizze_45681),
                           ct.c_float, data=out_mem_45680),
            cl.array.Array(self.queue, (m_27772, out_arrsizze_45683),
                           ct.c_float, data=out_mem_45682),
            cl.array.Array(self.queue, (out_arrsizze_45685,), ct.c_float,
                           data=out_mem_45684), cl.array.Array(self.queue,
                                                               (m_27772,),
                                                               ct.c_int32,
                                                               data=out_mem_45686),
            cl.array.Array(self.queue, (m_27772,), ct.c_float,
                           data=out_mem_45687), cl.array.Array(self.queue,
                                                               (m_27772,),
                                                               ct.c_float,
                                                               data=out_mem_45688),
            cl.array.Array(self.queue, (m_27772, N_27771), ct.c_float,
                           data=out_mem_45689), cl.array.Array(self.queue,
                                                               (m_27772,
                                                                N_27771),
                                                               ct.c_float,
                                                               data=out_mem_45690))
  def mainMagnitude(self, trend_28479_ext, k_28480_ext, n_28481_ext,
                    freq_28482_ext, hfrac_28483_ext, lam_28484_ext,
                    mappingindices_mem_44380_ext, images_mem_44381_ext):
    N_28477 = None
    m_28478 = None
    N_28477 = None
    try:
      trend_28479 = np.int32(ct.c_int32(trend_28479_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28479_ext),
                                                                                                                            trend_28479_ext))
    try:
      k_28480 = np.int32(ct.c_int32(k_28480_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28480_ext),
                                                                                                                            k_28480_ext))
    try:
      n_28481 = np.int32(ct.c_int32(n_28481_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28481_ext),
                                                                                                                            n_28481_ext))
    try:
      freq_28482 = np.float32(ct.c_float(freq_28482_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28482_ext),
                                                                                                                            freq_28482_ext))
    try:
      hfrac_28483 = np.float32(ct.c_float(hfrac_28483_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28483_ext),
                                                                                                                            hfrac_28483_ext))
    try:
      lam_28484 = np.float32(ct.c_float(lam_28484_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28484_ext),
                                                                                                                            lam_28484_ext))
    try:
      assert ((type(mappingindices_mem_44380_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_44380_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28477 == None):
        N_28477 = np.int64(mappingindices_mem_44380_ext.shape[0])
      else:
        assert (N_28477 == mappingindices_mem_44380_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_44380_ext) == cl.array.Array):
        mappingindices_mem_44380 = mappingindices_mem_44380_ext.data
      else:
        mappingindices_mem_44380 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_44380_ext.nbytes),
                                                "mappingindices_mem_44380")
        if (np.int64(mappingindices_mem_44380_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_44380,
                          normaliseArray(mappingindices_mem_44380_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_44380_ext),
                                                                                                                            mappingindices_mem_44380_ext))
    try:
      assert ((type(images_mem_44381_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_44381_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28478 == None):
        m_28478 = np.int64(images_mem_44381_ext.shape[0])
      else:
        assert (m_28478 == images_mem_44381_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28477 == None):
        N_28477 = np.int64(images_mem_44381_ext.shape[1])
      else:
        assert (N_28477 == images_mem_44381_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_44381_ext) == cl.array.Array):
        images_mem_44381 = images_mem_44381_ext.data
      else:
        images_mem_44381 = opencl_alloc(self,
                                        np.int64(images_mem_44381_ext.nbytes),
                                        "images_mem_44381")
        if (np.int64(images_mem_44381_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_44381,
                          normaliseArray(images_mem_44381_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_44381_ext),
                                                                                                                            images_mem_44381_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_45676, out_mem_45677, out_mem_45678,
       out_mem_45679) = self.futhark_mainMagnitude(mappingindices_mem_44380,
                                                   images_mem_44381, N_28477,
                                                   m_28478, trend_28479,
                                                   k_28480, n_28481, freq_28482,
                                                   hfrac_28483, lam_28484)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28478,), ct.c_int32,
                           data=out_mem_45676), cl.array.Array(self.queue,
                                                               (m_28478,),
                                                               ct.c_int32,
                                                               data=out_mem_45677),
            cl.array.Array(self.queue, (m_28478,), ct.c_float,
                           data=out_mem_45678), cl.array.Array(self.queue,
                                                               (m_28478,),
                                                               ct.c_float,
                                                               data=out_mem_45679))
  def reshapeTransp(self, images_mem_44380_ext):
    m_27747 = None
    n_27748 = None
    p_27749 = None
    try:
      assert ((type(images_mem_44380_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_44380_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27747 == None):
        m_27747 = np.int64(images_mem_44380_ext.shape[0])
      else:
        assert (m_27747 == images_mem_44380_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27748 == None):
        n_27748 = np.int64(images_mem_44380_ext.shape[1])
      else:
        assert (n_27748 == images_mem_44380_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27749 == None):
        p_27749 = np.int64(images_mem_44380_ext.shape[2])
      else:
        assert (p_27749 == images_mem_44380_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_44380_ext) == cl.array.Array):
        images_mem_44380 = images_mem_44380_ext.data
      else:
        images_mem_44380 = opencl_alloc(self,
                                        np.int64(images_mem_44380_ext.nbytes),
                                        "images_mem_44380")
        if (np.int64(images_mem_44380_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_44380,
                          normaliseArray(images_mem_44380_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_44380_ext),
                                                                                                                            images_mem_44380_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_45676,
       out_arrsizze_45677) = self.futhark_reshapeTransp(images_mem_44380,
                                                        m_27747, n_27748,
                                                        p_27749)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_45677, m_27747), ct.c_float,
                          data=out_mem_45676)