# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.04.28
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.connector_diagnostic_stats import ConnectorDiagnosticStats  # noqa: E501
from agilicus_api.rest import ApiException

class TestConnectorDiagnosticStats(unittest.TestCase):
    """ConnectorDiagnosticStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ConnectorDiagnosticStats
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.connector_diagnostic_stats.ConnectorDiagnosticStats()  # noqa: E501
        if include_optional :
            return ConnectorDiagnosticStats(
                generic_int_metrics = [
                    agilicus_api.models.generic_int_metric.GenericIntMetric(
                        name = 'gc_pauses_histogram_1.0', 
                        value = 678382, )
                    ], 
                generic_float_metrics = [
                    agilicus_api.models.generic_float_metric.GenericFloatMetric(
                        name = 'gc_pauses_histogram_1.0', 
                        value = 1.5, )
                    ]
            )
        else :
            return ConnectorDiagnosticStats(
                generic_int_metrics = [
                    agilicus_api.models.generic_int_metric.GenericIntMetric(
                        name = 'gc_pauses_histogram_1.0', 
                        value = 678382, )
                    ],
                generic_float_metrics = [
                    agilicus_api.models.generic_float_metric.GenericFloatMetric(
                        name = 'gc_pauses_histogram_1.0', 
                        value = 1.5, )
                    ],
        )

    def testConnectorDiagnosticStats(self):
        """Test ConnectorDiagnosticStats"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
