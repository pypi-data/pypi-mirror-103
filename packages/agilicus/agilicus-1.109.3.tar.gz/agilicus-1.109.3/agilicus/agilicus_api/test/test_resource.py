# coding: utf-8

"""
    Agilicus API

    Agilicus API endpoints  # noqa: E501

    The version of the OpenAPI document: 2021.04.28
    Contact: dev@agilicus.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import agilicus_api
from agilicus_api.models.resource import Resource  # noqa: E501
from agilicus_api.rest import ApiException

class TestResource(unittest.TestCase):
    """Resource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Resource
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = agilicus_api.models.resource.Resource()  # noqa: E501
        if include_optional :
            return Resource(
                metadata = {"id":"ac233asaksjfF","created":"2017-07-07T15:49:51.230+00:00","updated":"2020-01-27T12:19:46.430+00:00"}, 
                spec = agilicus_api.models.resource_spec.ResourceSpec(
                    name = 'my-application', 
                    resource_type = 'fileshare', 
                    org_id = 'S38d8dk3Xirt69', 
                    name_slug = 'a', 
                    not_assignable_perm = True, ), 
                status = agilicus_api.models.resource_status.ResourceStatus(
                    resource_stats = agilicus_api.models.resource_stats.ResourceStats(
                        resource_id = 'S38d8dk3Xirt69', 
                        metadata = agilicus_api.models.resource_stats_metadata.ResourceStatsMetadata(
                            creation_time = '2020-07-07T15:40:46.010Z', 
                            collection_time = '2020-07-07T15:49:51.230Z', 
                            receipt_time = '2020-07-07T15:49:51.530Z', ), 
                        overall_status = '0', 
                        last_warning_message = '0', 
                        session_stats = agilicus_api.models.resource_session_stats.ResourceSessionStats(
                            total = 56, 
                            allowed = 56, 
                            denied = 56, 
                            failed = 56, ), ), )
            )
        else :
            return Resource(
                spec = agilicus_api.models.resource_spec.ResourceSpec(
                    name = 'my-application', 
                    resource_type = 'fileshare', 
                    org_id = 'S38d8dk3Xirt69', 
                    name_slug = 'a', 
                    not_assignable_perm = True, ),
        )

    def testResource(self):
        """Test Resource"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
