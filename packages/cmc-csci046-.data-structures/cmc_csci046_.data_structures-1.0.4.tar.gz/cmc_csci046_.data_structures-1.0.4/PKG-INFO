Metadata-Version: 2.1
Name: cmc_csci046_.data_structures
Version: 1.0.4
Summary: Implement efficent data structures
Home-page: https://github.com/michaelhess17/containers-oop/tree/master
Author: Michael Hess
Author-email: mhess21@cmc.edu
License: MIT
Description: 
        Build status:
        
        [![tests-Fibonacci](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-fibonacci.yml/badge.svg)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-fibonacci.yml)
        [![tests-Range](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-range.yml/badge.svg?branch=main)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-range.yml)
        [![tests-Unicode](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-unicode.yml/badge.svg?branch=unicode)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-unicode.yml)
        [![tests-BinaryTree](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-binarytree.yml/badge.svg)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-binarytree.yml)
        [![tests-BST](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-BST.yml/badge.svg?branch=bst)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-BST.yml)
        [![tests-AVLTree](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-avltree.yml/badge.svg?branch=avltree)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-avltree.yml)
        [![tests-HeapTree](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-HeapTree.yml/badge.svg?branch=heap)](https://github.com/Michaelhess17/containers-oop/actions/workflows/tests-HeapTree.yml)
        
        This package was written as part of a homework assignment for CMC CSCI046: Data Structures and Algorithms. Use at your own risk!  
        
        The package implements multiple types of data structures, including the following:   
        
        - Generator objects (implemented with range and fibonacci)   
        - Binary Trees    
        - Binary Search Trees    
        - AVL Trees    
        - Heap Binary Trees   
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
