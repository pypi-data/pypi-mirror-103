Metadata-Version: 2.1
Name: collective.base64imagepatch
Version: 0.13
Summary: Turn inline images in rich text into actual image objects
Home-page: https://github.com/collective/collective.base64imagepatch
Author: Alexander Loechel
Author-email: Alexander.Loechel@lmu.de
License: GPL
Keywords: zope plone base64 image patcher
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Plone
Classifier: Framework :: Plone :: 4.3
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Requires-Dist: setuptools
Requires-Dist: beautifulsoup4
Provides-Extra: test
Requires-Dist: Products.PloneTestCase ; extra == 'test'
Requires-Dist: plone.app.testing[robot] ; extra == 'test'
Requires-Dist: plone.app.robotframework ; extra == 'test'
Requires-Dist: Products.ATContentTypes ; extra == 'test'
Requires-Dist: Products.contentmigration ; extra == 'test'
Requires-Dist: plone.app.contenttypes ; extra == 'test'

collective.base64imagepatch
===========================

The current package ``collective.base64imagepatch`` is an add on for the CMS Plone.
It injects eventhandlers for Contenttype creation and modification to assure
that no inline base64 encoded image is stored in an RichTextField.

.. contents:

collective.base64imagepatch Installation
----------------------------------------

Dependencies
------------

There are two soft dependencies on the underlaying Content-Types-Frameworks of Plone:

* Archetypes
* Dexterity

None of those must be included seperately in the buildout, as they are already
part of Plone.


Installation via zc.buildout
----------------------------
If you are using zc.buildout to manage your Zope/Plone Instances, you can do
this:

* Add ``collective.base64imagepatch`` to the list of eggs to install, e.g.:

::

    [buildout]
    ...
    eggs =
        ...
        collective.base64imagepatch
        ...

* Re-run buildout, e.g. with:

::

    $ ./bin/buildout


The patch is installed and works directly on next startup.

Note: The patch will not show up in any install listing.

To run the patch on existing content call patch_all view on any Plone object for
just this Plone Site Instance or any Zope Root Object for all Plone Sites.
``cmf.ManagePortal`` Permissions required.


Credits
=======

* Contributers:

 * Alexander Loechel

 * Maurits van Rees

Changelog
=========


0.13 (2021-04-28)
-----------------

- When adding image fails, try the parent container once.  [maurits]

- Fixed patch_all to run patch on objects, not brains.  [maurits]

- BeautifulSoup: always use lxml.  [maurits]

- Fixed for Dexterity on Plone 4.3.  [maurits]


0.12 (2013-11-05)
-----------------

- update patch_all to fix errors on patch_all view where String Formating has failed due to syntax errors

0.11 (2013-07-04)
-----------------

- updated setup.py for Homepage and fixed History
- updated setup.py so that beautifulsoup4 is a dependency that is installed
- remove soft dependency for BeautifulSoup 3 and usage as beautifulsoup4 could
  be used in parallel
- refactor beautifulsoup calls so that it works with all versions of
  beautifulsoup4 (checked with 4.0.1 4.1.0 4.1.3 4.2.0 4.2.1)

0.10 (2013-07-02)
-----------------

- Fixed getSite import and interface for zcml dependency on Plone 4.3


0.9 (2013-06-25)
----------------

- Initial release


