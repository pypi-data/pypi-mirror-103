# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from cit_fl_participation.coordinator_interface import coordinator_pb2 as coordinator_dot_coordinator__pb2


class CoordinatorServiceStub(object):
    """////// Services ////////
    coordinator
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Rendezvous = channel.unary_unary(
                '/cit_fl_proto.coordinator.CoordinatorService/Rendezvous',
                request_serializer=coordinator_dot_coordinator__pb2.RendezvousRequest.SerializeToString,
                response_deserializer=coordinator_dot_coordinator__pb2.RendezvousResponse.FromString,
                )
        self.Heartbeat = channel.unary_unary(
                '/cit_fl_proto.coordinator.CoordinatorService/Heartbeat',
                request_serializer=coordinator_dot_coordinator__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=coordinator_dot_coordinator__pb2.HeartbeatResponse.FromString,
                )
        self.StartRound = channel.unary_unary(
                '/cit_fl_proto.coordinator.CoordinatorService/StartRound',
                request_serializer=coordinator_dot_coordinator__pb2.StartTrainingRoundRequest.SerializeToString,
                response_deserializer=coordinator_dot_coordinator__pb2.StartTrainingRoundResponse.FromString,
                )
        self.EndRound = channel.unary_unary(
                '/cit_fl_proto.coordinator.CoordinatorService/EndRound',
                request_serializer=coordinator_dot_coordinator__pb2.EndTrainingRoundRequest.SerializeToString,
                response_deserializer=coordinator_dot_coordinator__pb2.EndTrainingRoundResponse.FromString,
                )


class CoordinatorServiceServicer(object):
    """////// Services ////////
    coordinator
    """

    def Rendezvous(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartRound(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndRound(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoordinatorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Rendezvous': grpc.unary_unary_rpc_method_handler(
                    servicer.Rendezvous,
                    request_deserializer=coordinator_dot_coordinator__pb2.RendezvousRequest.FromString,
                    response_serializer=coordinator_dot_coordinator__pb2.RendezvousResponse.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=coordinator_dot_coordinator__pb2.HeartbeatRequest.FromString,
                    response_serializer=coordinator_dot_coordinator__pb2.HeartbeatResponse.SerializeToString,
            ),
            'StartRound': grpc.unary_unary_rpc_method_handler(
                    servicer.StartRound,
                    request_deserializer=coordinator_dot_coordinator__pb2.StartTrainingRoundRequest.FromString,
                    response_serializer=coordinator_dot_coordinator__pb2.StartTrainingRoundResponse.SerializeToString,
            ),
            'EndRound': grpc.unary_unary_rpc_method_handler(
                    servicer.EndRound,
                    request_deserializer=coordinator_dot_coordinator__pb2.EndTrainingRoundRequest.FromString,
                    response_serializer=coordinator_dot_coordinator__pb2.EndTrainingRoundResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cit_fl_proto.coordinator.CoordinatorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoordinatorService(object):
    """////// Services ////////
    coordinator
    """

    @staticmethod
    def Rendezvous(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cit_fl_proto.coordinator.CoordinatorService/Rendezvous',
            coordinator_dot_coordinator__pb2.RendezvousRequest.SerializeToString,
            coordinator_dot_coordinator__pb2.RendezvousResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cit_fl_proto.coordinator.CoordinatorService/Heartbeat',
            coordinator_dot_coordinator__pb2.HeartbeatRequest.SerializeToString,
            coordinator_dot_coordinator__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartRound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cit_fl_proto.coordinator.CoordinatorService/StartRound',
            coordinator_dot_coordinator__pb2.StartTrainingRoundRequest.SerializeToString,
            coordinator_dot_coordinator__pb2.StartTrainingRoundResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndRound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cit_fl_proto.coordinator.CoordinatorService/EndRound',
            coordinator_dot_coordinator__pb2.EndTrainingRoundRequest.SerializeToString,
            coordinator_dot_coordinator__pb2.EndTrainingRoundResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
