# Generated by Django 3.2 on 2021-04-24 06:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContextClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Context Class',
                'verbose_name_plural': 'Context Classes',
            },
        ),
        migrations.CreateModel(
            name='ContextItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, default=None, null=True)),
                ('context_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='template_email_manager.contextclass')),
            ],
            options={
                'verbose_name': 'Context Item',
                'verbose_name_plural': 'Context Items',
            },
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name': 'E-mail Address',
                'verbose_name_plural': 'E-mail Addresses',
            },
        ),
        migrations.CreateModel(
            name='ImageAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='uploads/email-images/')),
            ],
            options={
                'verbose_name': 'Image Attachment',
                'verbose_name_plural': 'Image Attachments',
            },
        ),
        migrations.CreateModel(
            name='HTMLTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shortname', models.CharField(default='new_template', max_length=45, unique=True)),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('text_alternate', models.TextField(blank=True, null=True)),
                ('images', models.ManyToManyField(to='template_email_manager.ImageAttachment')),
                ('requested_context_classes', models.ManyToManyField(to='template_email_manager.ContextClass')),
            ],
            options={
                'verbose_name': 'HTML Template',
                'verbose_name_plural': 'HTML Templates',
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('CRE', 'Creating'), ('REA', 'Ready'), ('INP', 'In Progress'), ('SEN', 'Sent'), ('FAI', 'Send Failed'), ('USC', 'User Canceled'), ('MAC', 'Canceled for Maximum number of sending attempts')], default='CRE', max_length=255)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_on', models.DateTimeField(blank=True, null=True)),
                ('error_log', models.TextField(blank=True)),
                ('send_attempts', models.IntegerField(default=0)),
                ('retry_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_operation', models.DateTimeField(default=django.utils.timezone.now)),
                ('bcc', models.ManyToManyField(blank=True, related_name='related_queue_bcc', to='template_email_manager.EmailAddress')),
                ('context_items', models.ManyToManyField(to='template_email_manager.ContextItem')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_queue_sender', to='template_email_manager.emailaddress')),
                ('template_html', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='template_email_manager.htmltemplate')),
                ('to', models.ManyToManyField(related_name='related_queue_to', to='template_email_manager.EmailAddress')),
            ],
            options={
                'verbose_name': 'E-mail Queue',
                'verbose_name_plural': 'E-mail Queues',
            },
        ),
        migrations.CreateModel(
            name='EmailPrototype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('subject', models.CharField(max_length=255)),
                ('bcc', models.ManyToManyField(blank=True, related_name='related_prototype_bcc', to='template_email_manager.EmailAddress')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='related_prototype_sender', to='template_email_manager.emailaddress')),
                ('template_html', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='template_email_manager.htmltemplate')),
                ('to', models.ManyToManyField(related_name='related_prototype_to', to='template_email_manager.EmailAddress')),
            ],
            options={
                'verbose_name': 'E-mail Prototype',
                'verbose_name_plural': 'E-mail Prototypes',
            },
        ),
    ]
