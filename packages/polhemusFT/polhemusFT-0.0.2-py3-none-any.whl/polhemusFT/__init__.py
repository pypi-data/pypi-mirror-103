# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
import sys
if not(hasattr(sys,"frozen")):
    if sys.platform == 'win32':
        import site, os
        trk_path = site.getsitepackages()[1]+"\\polhemusFT"
        os.environ["PATH"] += os.pathsep + trk_path 
        sys.path.append(trk_path)

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_polhemusFT')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_polhemusFT')
    _polhemusFT = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_polhemusFT', [dirname(__file__)])
        except ImportError:
            import _polhemusFT
            return _polhemusFT
        try:
            _mod = imp.load_module('_polhemusFT', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _polhemusFT = swig_import_helper()
    del swig_import_helper
else:
    import _polhemusFT
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class polhemusFT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, polhemusFT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, polhemusFT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["PositionTooltipX1"] = _polhemusFT.polhemusFT_PositionTooltipX1_set
    __swig_getmethods__["PositionTooltipX1"] = _polhemusFT.polhemusFT_PositionTooltipX1_get
    if _newclass:
        PositionTooltipX1 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipX1_get, _polhemusFT.polhemusFT_PositionTooltipX1_set)
    __swig_setmethods__["PositionTooltipY1"] = _polhemusFT.polhemusFT_PositionTooltipY1_set
    __swig_getmethods__["PositionTooltipY1"] = _polhemusFT.polhemusFT_PositionTooltipY1_get
    if _newclass:
        PositionTooltipY1 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipY1_get, _polhemusFT.polhemusFT_PositionTooltipY1_set)
    __swig_setmethods__["PositionTooltipZ1"] = _polhemusFT.polhemusFT_PositionTooltipZ1_set
    __swig_getmethods__["PositionTooltipZ1"] = _polhemusFT.polhemusFT_PositionTooltipZ1_get
    if _newclass:
        PositionTooltipZ1 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipZ1_get, _polhemusFT.polhemusFT_PositionTooltipZ1_set)
    __swig_setmethods__["AngleX1"] = _polhemusFT.polhemusFT_AngleX1_set
    __swig_getmethods__["AngleX1"] = _polhemusFT.polhemusFT_AngleX1_get
    if _newclass:
        AngleX1 = _swig_property(_polhemusFT.polhemusFT_AngleX1_get, _polhemusFT.polhemusFT_AngleX1_set)
    __swig_setmethods__["AngleY1"] = _polhemusFT.polhemusFT_AngleY1_set
    __swig_getmethods__["AngleY1"] = _polhemusFT.polhemusFT_AngleY1_get
    if _newclass:
        AngleY1 = _swig_property(_polhemusFT.polhemusFT_AngleY1_get, _polhemusFT.polhemusFT_AngleY1_set)
    __swig_setmethods__["AngleZ1"] = _polhemusFT.polhemusFT_AngleZ1_set
    __swig_getmethods__["AngleZ1"] = _polhemusFT.polhemusFT_AngleZ1_get
    if _newclass:
        AngleZ1 = _swig_property(_polhemusFT.polhemusFT_AngleZ1_get, _polhemusFT.polhemusFT_AngleZ1_set)
    __swig_setmethods__["PositionTooltipX2"] = _polhemusFT.polhemusFT_PositionTooltipX2_set
    __swig_getmethods__["PositionTooltipX2"] = _polhemusFT.polhemusFT_PositionTooltipX2_get
    if _newclass:
        PositionTooltipX2 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipX2_get, _polhemusFT.polhemusFT_PositionTooltipX2_set)
    __swig_setmethods__["PositionTooltipY2"] = _polhemusFT.polhemusFT_PositionTooltipY2_set
    __swig_getmethods__["PositionTooltipY2"] = _polhemusFT.polhemusFT_PositionTooltipY2_get
    if _newclass:
        PositionTooltipY2 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipY2_get, _polhemusFT.polhemusFT_PositionTooltipY2_set)
    __swig_setmethods__["PositionTooltipZ2"] = _polhemusFT.polhemusFT_PositionTooltipZ2_set
    __swig_getmethods__["PositionTooltipZ2"] = _polhemusFT.polhemusFT_PositionTooltipZ2_get
    if _newclass:
        PositionTooltipZ2 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipZ2_get, _polhemusFT.polhemusFT_PositionTooltipZ2_set)
    __swig_setmethods__["AngleX2"] = _polhemusFT.polhemusFT_AngleX2_set
    __swig_getmethods__["AngleX2"] = _polhemusFT.polhemusFT_AngleX2_get
    if _newclass:
        AngleX2 = _swig_property(_polhemusFT.polhemusFT_AngleX2_get, _polhemusFT.polhemusFT_AngleX2_set)
    __swig_setmethods__["AngleY2"] = _polhemusFT.polhemusFT_AngleY2_set
    __swig_getmethods__["AngleY2"] = _polhemusFT.polhemusFT_AngleY2_get
    if _newclass:
        AngleY2 = _swig_property(_polhemusFT.polhemusFT_AngleY2_get, _polhemusFT.polhemusFT_AngleY2_set)
    __swig_setmethods__["AngleZ2"] = _polhemusFT.polhemusFT_AngleZ2_set
    __swig_getmethods__["AngleZ2"] = _polhemusFT.polhemusFT_AngleZ2_get
    if _newclass:
        AngleZ2 = _swig_property(_polhemusFT.polhemusFT_AngleZ2_get, _polhemusFT.polhemusFT_AngleZ2_set)
    __swig_setmethods__["PositionTooltipX3"] = _polhemusFT.polhemusFT_PositionTooltipX3_set
    __swig_getmethods__["PositionTooltipX3"] = _polhemusFT.polhemusFT_PositionTooltipX3_get
    if _newclass:
        PositionTooltipX3 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipX3_get, _polhemusFT.polhemusFT_PositionTooltipX3_set)
    __swig_setmethods__["PositionTooltipY3"] = _polhemusFT.polhemusFT_PositionTooltipY3_set
    __swig_getmethods__["PositionTooltipY3"] = _polhemusFT.polhemusFT_PositionTooltipY3_get
    if _newclass:
        PositionTooltipY3 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipY3_get, _polhemusFT.polhemusFT_PositionTooltipY3_set)
    __swig_setmethods__["PositionTooltipZ3"] = _polhemusFT.polhemusFT_PositionTooltipZ3_set
    __swig_getmethods__["PositionTooltipZ3"] = _polhemusFT.polhemusFT_PositionTooltipZ3_get
    if _newclass:
        PositionTooltipZ3 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipZ3_get, _polhemusFT.polhemusFT_PositionTooltipZ3_set)
    __swig_setmethods__["AngleX3"] = _polhemusFT.polhemusFT_AngleX3_set
    __swig_getmethods__["AngleX3"] = _polhemusFT.polhemusFT_AngleX3_get
    if _newclass:
        AngleX3 = _swig_property(_polhemusFT.polhemusFT_AngleX3_get, _polhemusFT.polhemusFT_AngleX3_set)
    __swig_setmethods__["AngleY3"] = _polhemusFT.polhemusFT_AngleY3_set
    __swig_getmethods__["AngleY3"] = _polhemusFT.polhemusFT_AngleY3_get
    if _newclass:
        AngleY3 = _swig_property(_polhemusFT.polhemusFT_AngleY3_get, _polhemusFT.polhemusFT_AngleY3_set)
    __swig_setmethods__["AngleZ3"] = _polhemusFT.polhemusFT_AngleZ3_set
    __swig_getmethods__["AngleZ3"] = _polhemusFT.polhemusFT_AngleZ3_get
    if _newclass:
        AngleZ3 = _swig_property(_polhemusFT.polhemusFT_AngleZ3_get, _polhemusFT.polhemusFT_AngleZ3_set)
    __swig_setmethods__["PositionTooltipX4"] = _polhemusFT.polhemusFT_PositionTooltipX4_set
    __swig_getmethods__["PositionTooltipX4"] = _polhemusFT.polhemusFT_PositionTooltipX4_get
    if _newclass:
        PositionTooltipX4 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipX4_get, _polhemusFT.polhemusFT_PositionTooltipX4_set)
    __swig_setmethods__["PositionTooltipY4"] = _polhemusFT.polhemusFT_PositionTooltipY4_set
    __swig_getmethods__["PositionTooltipY4"] = _polhemusFT.polhemusFT_PositionTooltipY4_get
    if _newclass:
        PositionTooltipY4 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipY4_get, _polhemusFT.polhemusFT_PositionTooltipY4_set)
    __swig_setmethods__["PositionTooltipZ4"] = _polhemusFT.polhemusFT_PositionTooltipZ4_set
    __swig_getmethods__["PositionTooltipZ4"] = _polhemusFT.polhemusFT_PositionTooltipZ4_get
    if _newclass:
        PositionTooltipZ4 = _swig_property(_polhemusFT.polhemusFT_PositionTooltipZ4_get, _polhemusFT.polhemusFT_PositionTooltipZ4_set)
    __swig_setmethods__["AngleX4"] = _polhemusFT.polhemusFT_AngleX4_set
    __swig_getmethods__["AngleX4"] = _polhemusFT.polhemusFT_AngleX4_get
    if _newclass:
        AngleX4 = _swig_property(_polhemusFT.polhemusFT_AngleX4_get, _polhemusFT.polhemusFT_AngleX4_set)
    __swig_setmethods__["AngleY4"] = _polhemusFT.polhemusFT_AngleY4_set
    __swig_getmethods__["AngleY4"] = _polhemusFT.polhemusFT_AngleY4_get
    if _newclass:
        AngleY4 = _swig_property(_polhemusFT.polhemusFT_AngleY4_get, _polhemusFT.polhemusFT_AngleY4_set)
    __swig_setmethods__["AngleZ4"] = _polhemusFT.polhemusFT_AngleZ4_set
    __swig_getmethods__["AngleZ4"] = _polhemusFT.polhemusFT_AngleZ4_get
    if _newclass:
        AngleZ4 = _swig_property(_polhemusFT.polhemusFT_AngleZ4_get, _polhemusFT.polhemusFT_AngleZ4_set)
    __swig_setmethods__["StylusButton"] = _polhemusFT.polhemusFT_StylusButton_set
    __swig_getmethods__["StylusButton"] = _polhemusFT.polhemusFT_StylusButton_get
    if _newclass:
        StylusButton = _swig_property(_polhemusFT.polhemusFT_StylusButton_get, _polhemusFT.polhemusFT_StylusButton_set)

    def Initialize(self) -> "bool":
        return _polhemusFT.polhemusFT_Initialize(self)

    def Close(self) -> "void":
        return _polhemusFT.polhemusFT_Close(self)

    def Run(self) -> "int":
        return _polhemusFT.polhemusFT_Run(self)

    def __init__(self):
        this = _polhemusFT.new_polhemusFT()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _polhemusFT.delete_polhemusFT
    __del__ = lambda self: None
polhemusFT_swigregister = _polhemusFT.polhemusFT_swigregister
polhemusFT_swigregister(polhemusFT)


def new_intp() -> "int *":
    return _polhemusFT.new_intp()
new_intp = _polhemusFT.new_intp

def copy_intp(value: 'int') -> "int *":
    return _polhemusFT.copy_intp(value)
copy_intp = _polhemusFT.copy_intp

def delete_intp(obj: 'int *') -> "void":
    return _polhemusFT.delete_intp(obj)
delete_intp = _polhemusFT.delete_intp

def intp_assign(obj: 'int *', value: 'int') -> "void":
    return _polhemusFT.intp_assign(obj, value)
intp_assign = _polhemusFT.intp_assign

def intp_value(obj: 'int *') -> "int":
    return _polhemusFT.intp_value(obj)
intp_value = _polhemusFT.intp_value

def new_floatp() -> "float *":
    return _polhemusFT.new_floatp()
new_floatp = _polhemusFT.new_floatp

def copy_floatp(value: 'float') -> "float *":
    return _polhemusFT.copy_floatp(value)
copy_floatp = _polhemusFT.copy_floatp

def delete_floatp(obj: 'float *') -> "void":
    return _polhemusFT.delete_floatp(obj)
delete_floatp = _polhemusFT.delete_floatp

def floatp_assign(obj: 'float *', value: 'float') -> "void":
    return _polhemusFT.floatp_assign(obj, value)
floatp_assign = _polhemusFT.floatp_assign

def floatp_value(obj: 'float *') -> "float":
    return _polhemusFT.floatp_value(obj)
floatp_value = _polhemusFT.floatp_value

def new_doublep() -> "double *":
    return _polhemusFT.new_doublep()
new_doublep = _polhemusFT.new_doublep

def copy_doublep(value: 'double') -> "double *":
    return _polhemusFT.copy_doublep(value)
copy_doublep = _polhemusFT.copy_doublep

def delete_doublep(obj: 'double *') -> "void":
    return _polhemusFT.delete_doublep(obj)
delete_doublep = _polhemusFT.delete_doublep

def doublep_assign(obj: 'double *', value: 'double') -> "void":
    return _polhemusFT.doublep_assign(obj, value)
doublep_assign = _polhemusFT.doublep_assign

def doublep_value(obj: 'double *') -> "double":
    return _polhemusFT.doublep_value(obj)
doublep_value = _polhemusFT.doublep_value

def new_boolp() -> "bool *":
    return _polhemusFT.new_boolp()
new_boolp = _polhemusFT.new_boolp

def copy_boolp(value: 'bool') -> "bool *":
    return _polhemusFT.copy_boolp(value)
copy_boolp = _polhemusFT.copy_boolp

def delete_boolp(obj: 'bool *') -> "void":
    return _polhemusFT.delete_boolp(obj)
delete_boolp = _polhemusFT.delete_boolp

def boolp_assign(obj: 'bool *', value: 'bool') -> "void":
    return _polhemusFT.boolp_assign(obj, value)
boolp_assign = _polhemusFT.boolp_assign

def boolp_value(obj: 'bool *') -> "bool":
    return _polhemusFT.boolp_value(obj)
boolp_value = _polhemusFT.boolp_value
# This file is compatible with both classic and new-style classes.


