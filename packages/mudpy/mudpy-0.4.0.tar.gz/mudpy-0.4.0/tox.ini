# Copyright (c) 2016-2021 mudpy authors. Permission to use, copy,
# modify, and distribute this software is granted under terms
# provided in the LICENSE file distributed with this software.

[tox]
minversion = 3.18
envlist = bandit, codespell, dist, docs, flake8, yamllint, selftest_config, py3
skipsdist = True
ignore_basepython_conflict = True

[testenv]
description = run the functional selftest with optimized configuration
basepython = python3
usedevelop = True
# TODO(fungi) Switch this to "error" once the following are solved
#
# py310... importlib._bootstrap raises ImportWarning:
#   _SixMetaPathImporter.find_spec() not found; falling back to find_module()
# all... pip._vendor.packaging.version raises DeprecationWarning: Creating a
#   LegacyVersion has been deprecated and will be removed in the next major
#   release
# yamllint... pip._vendor.packaging.specifiers raises DeprecationWarning:
#   Creating a LegacyVersion has been deprecated and will be removed in the
#   next major release
# py310... pip._vendor.packaging.tags and setuptools both raise
#   DeprecationWarning: The distutils package is deprecated and slated for
#   removal in Python 3.12. Use setuptools or check PEP 632 for potential
#   alternatives
setenv =
    PYTHONWARNINGS = error, ignore:::importlib._bootstrap, ignore:::pip._vendor.packaging.version, ignore:::pip._vendor.packaging.specifiers, ignore:::pip._vendor.packaging.tags, ignore:::setuptools
    VIRTUALENV_CREATOR = venv
commands = mudpy_selftest mudpy/tests/fixtures/test_daemon.yaml

[testenv:bandit]
description = check for potential security risks in source code
deps = bandit
commands = bandit -r mudpy -x mudpy/tests {posargs}
usedevelop = False

[testenv:codespell]
description = find common spelling mistakes in code and documentation
deps = codespell
commands = codespell {posargs}
usedevelop = False

[testenv:demo]
description = start an interactive demo with the sample config
commands = mudpy {posargs}

[testenv:dist]
description = build release artifacts and check for conformance
allowlist_externals = rm
deps =
    pbr
    twine
    wheel
commands =
    rm -fr {toxinidir}/dist
    python setup.py bdist_wheel sdist
    twine check --strict {toxinidir}/dist/*
usedevelop = False

[testenv:docs]
description = generate hypertext documentation
allowlist_externals = rm
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/doc/requirements.txt
commands =
    rm -fr doc/build
    python setup.py sdist
    sphinx-build -W -d doc/build/doctrees -b html doc/source/ doc/build/html
usedevelop = False

[testenv:flake8]
description = style checks and static analysis of source code
deps =
    flake8
    flake8-bugbear
commands = flake8 {posargs}
usedevelop = False

[testenv:selftest_config]
description = run the selftest with the included sample config
commands = mudpy_selftest etc/mudpy.yaml

[testenv:yamllint]
description = test data files for correct syntax and formatting
deps = yamllint
commands =
    mudpy_selftest mudpy/tests/fixtures/test_daemon.yaml
    yamllint --strict {posargs} .

[flake8]
show-source = True
exclude = .git, .tox, *lib/python*, *egg, build
