name: CI/CD

on: push

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.6
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test/requirements.txt

      - name: Test with pytest
        run: |
          pytest --cov --cov-report=xml
        env:
          PYTHONPATH: "."

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1.0.1
        if: always()
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python 3.6
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.6

      - name: Install pypa/build
        run:
          python -m pip install build

      - name: Build binary wheel and source tarball
        run:
          python -m build --sdist --wheel --outdir dist/ .

      - name: Upload binaries artifact
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
        with:
          name: dist
          path: dist/

  deploy-test:
    name: Deploy to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2

      - name: Download binaries artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Deploy to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN_TEST }}
          repository_url: https://test.pypi.org/legacy/

      - name: Delete binaries artifact
        uses: geekyeggo/delete-artifact@v1
        if: always()
        with:
          name: dist

  deploy:
    name: Deploy to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2

      - name: Download binaries artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Delete binaries artifact
        uses: geekyeggo/delete-artifact@v1
        if: always()
        with:
          name: dist
  
